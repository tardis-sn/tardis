[1;37mINFO[0m:tardis.plasma.standard_plasmas:Reading Atomic Data from kurucz_cd23_chianti_H_He.h5
[1;37mINFO[0m:tardis.io.atom_data.util:Atom Data kurucz_cd23_chianti_H_He.h5 not found in local path. Exists in TARDIS Data repo /home/dhruvs/Downloads/tardis-data/kurucz_cd23_chianti_H_He.h5
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3427: PerformanceWarning: indexing past lexsort depth may impact performance.
  exec(code_obj, self.user_global_ns, self.user_ns)

[1;37mINFO[0m:tardis.io.atom_data.base:Read Atom Data with UUID=6f7b09e887a311e7a06b246e96350010 and MD5=864f1753714343c41f99cb065710cace.
[1;37mINFO[0m:tardis.io.atom_data.base:Non provided atomic data: synpp_refs, photoionization_data, yg_data, two_photon_data
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=215)
           2	SETUP_LOOP(arg=116, lineno=215)
           4	LOAD_GLOBAL(arg=0, lineno=215)
           6	LOAD_GLOBAL(arg=1, lineno=215)
           8	LOAD_FAST(arg=0, lineno=215)
          10	CALL_FUNCTION(arg=1, lineno=215)
          12	CALL_FUNCTION(arg=1, lineno=215)
          14	GET_ITER(arg=None, lineno=215)
>         16	FOR_ITER(arg=100, lineno=215)
          18	STORE_FAST(arg=2, lineno=215)
          20	LOAD_FAST(arg=0, lineno=216)
          22	LOAD_FAST(arg=2, lineno=216)
          24	BINARY_SUBSCR(arg=None, lineno=216)
          26	LOAD_CONST(arg=1, lineno=216)
          28	COMPARE_OP(arg=4, lineno=216)
          30	POP_JUMP_IF_FALSE(arg=50, lineno=216)
          32	LOAD_FAST(arg=0, lineno=217)
          34	LOAD_FAST(arg=2, lineno=217)
          36	BINARY_SUBSCR(arg=None, lineno=217)
          38	LOAD_CONST(arg=2, lineno=217)
          40	BINARY_POWER(arg=None, lineno=217)
          42	LOAD_FAST(arg=1, lineno=217)
          44	LOAD_FAST(arg=2, lineno=217)
          46	STORE_SUBSCR(arg=None, lineno=217)
          48	JUMP_ABSOLUTE(arg=16, lineno=217)
>         50	LOAD_FAST(arg=0, lineno=218)
          52	LOAD_FAST(arg=2, lineno=218)
          54	BINARY_SUBSCR(arg=None, lineno=218)
          56	LOAD_CONST(arg=3, lineno=218)
          58	COMPARE_OP(arg=0, lineno=218)
          60	POP_JUMP_IF_FALSE(arg=84, lineno=218)
          62	LOAD_CONST(arg=4, lineno=219)
          64	LOAD_CONST(arg=5, lineno=219)
          66	LOAD_FAST(arg=0, lineno=219)
          68	LOAD_FAST(arg=2, lineno=219)
          70	BINARY_SUBSCR(arg=None, lineno=219)
          72	BINARY_MULTIPLY(arg=None, lineno=219)
          74	BINARY_SUBTRACT(arg=None, lineno=219)
          76	LOAD_FAST(arg=1, lineno=219)
          78	LOAD_FAST(arg=2, lineno=219)
          80	STORE_SUBSCR(arg=None, lineno=219)
          82	JUMP_ABSOLUTE(arg=16, lineno=219)
>         84	LOAD_CONST(arg=4, lineno=221)
          86	LOAD_GLOBAL(arg=2, lineno=221)
          88	LOAD_METHOD(arg=3, lineno=221)
          90	LOAD_FAST(arg=0, lineno=221)
          92	LOAD_FAST(arg=2, lineno=221)
          94	BINARY_SUBSCR(arg=None, lineno=221)
          96	UNARY_NEGATIVE(arg=None, lineno=221)
          98	CALL_METHOD(arg=1, lineno=221)
         100	BINARY_SUBTRACT(arg=None, lineno=221)
         102	LOAD_FAST(arg=0, lineno=222)
         104	LOAD_FAST(arg=2, lineno=222)
         106	BINARY_SUBSCR(arg=None, lineno=222)
         108	BINARY_TRUE_DIVIDE(arg=None, lineno=222)
         110	LOAD_FAST(arg=1, lineno=222)
         112	LOAD_FAST(arg=2, lineno=222)
         114	STORE_SUBSCR(arg=None, lineno=222)
         116	JUMP_ABSOLUTE(arg=16, lineno=222)
>        118	POP_BLOCK(arg=None, lineno=222)
>        120	LOAD_FAST(arg=1, lineno=224)
         122	RETURN_VALUE(arg=None, lineno=224)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=215)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=2, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=2 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=SETUP_LOOP(arg=116, lineno=215)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=215)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_GLOBAL(arg=1, lineno=215)
DEBUG:numba.core.byteflow:stack ['$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=215)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$6load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_FUNCTION(arg=1, lineno=215)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$6load_global.1', '$tau_sobolevs8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_FUNCTION(arg=1, lineno=215)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10call_function.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=GET_ITER(arg=None, lineno=215)
DEBUG:numba.core.byteflow:stack ['$12call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi16.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=FOR_ITER(arg=100, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi16.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=118, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=118, inst=POP_BLOCK(arg=None, lineno=222)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=2), State(pc_initial=120 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi18.0', '$phi18.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=2, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$phi18.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi18.0']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$tau_sobolevs20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_SUBSCR(arg=None, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$tau_sobolevs20.2', '$i22.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$24binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=COMPARE_OP(arg=4, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$24binary_subscr.4', '$const26.5']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=POP_JUMP_IF_FALSE(arg=50, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi18.0', '$28compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi18.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=50, stack=('$phi18.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=32 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=122, inst=RETURN_VALUE(arg=None, lineno=224)
DEBUG:numba.core.byteflow:stack ['$beta_sobolevs120.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$tau_sobolevs32.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$tau_sobolevs32.1', '$i34.2']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$36binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_POWER(arg=None, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$36binary_subscr.3', '$const38.4']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$40binary_power.5']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=2, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$40binary_power.5', '$beta_sobolevs42.6']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi32.0', '$40binary_power.5', '$beta_sobolevs42.6', '$i44.7']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=JUMP_ABSOLUTE(arg=16, lineno=217)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$phi32.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi50.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=0, lineno=218)
DEBUG:numba.core.byteflow:stack ['$phi50.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=218)
DEBUG:numba.core.byteflow:stack ['$phi50.0', '$tau_sobolevs50.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=BINARY_SUBSCR(arg=None, lineno=218)
DEBUG:numba.core.byteflow:stack ['$phi50.0', '$tau_sobolevs50.1', '$i52.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=3, lineno=218)
DEBUG:numba.core.byteflow:stack ['$phi50.0', '$54binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=COMPARE_OP(arg=0, lineno=218)
DEBUG:numba.core.byteflow:stack ['$phi50.0', '$54binary_subscr.3', '$const56.4']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=84, lineno=218)
DEBUG:numba.core.byteflow:stack ['$phi50.0', '$58compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=62, stack=('$phi50.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=84, stack=('$phi50.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1), State(pc_initial=62 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi62.0']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_CONST(arg=4, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi62.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=5, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$const62.1']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$const62.1', '$const64.2']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$const62.1', '$const64.2', '$tau_sobolevs66.3']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BINARY_SUBSCR(arg=None, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$const62.1', '$const64.2', '$tau_sobolevs66.3', '$i68.4']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_MULTIPLY(arg=None, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$const62.1', '$const64.2', '$70binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$const62.1', '$72binary_multiply.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=1, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$74binary_subtract.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$74binary_subtract.7', '$beta_sobolevs76.8']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=STORE_SUBSCR(arg=None, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$74binary_subtract.7', '$beta_sobolevs76.8', '$i78.9']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=JUMP_ABSOLUTE(arg=16, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi62.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$phi62.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi84.0']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=4, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_GLOBAL(arg=2, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_METHOD(arg=3, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$86load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=0, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$88load_method.3']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$88load_method.3', '$tau_sobolevs90.4']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=BINARY_SUBSCR(arg=None, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$88load_method.3', '$tau_sobolevs90.4', '$i92.5']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=UNARY_NEGATIVE(arg=None, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$88load_method.3', '$94binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=CALL_METHOD(arg=1, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$88load_method.3', '$96unary_negative.7']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=BINARY_SUBTRACT(arg=None, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$const84.1', '$98call_method.8']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$100binary_subtract.9']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$100binary_subtract.9', '$tau_sobolevs102.10']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=BINARY_SUBSCR(arg=None, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$100binary_subtract.9', '$tau_sobolevs102.10', '$i104.11']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$100binary_subtract.9', '$106binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$108binary_true_divide.13']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$108binary_true_divide.13', '$beta_sobolevs110.14']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=STORE_SUBSCR(arg=None, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi84.0', '$108binary_true_divide.13', '$beta_sobolevs110.14', '$i112.15']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=JUMP_ABSOLUTE(arg=16, lineno=222)
DEBUG:numba.core.byteflow:stack ['$phi84.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=('$phi84.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1), State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=2 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=62 nstack_initial=1): set(),
             State(pc_initial=84 nstack_initial=1): set(),
             State(pc_initial=118 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi16.0': State(pc_initial=2 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=1)),
                          ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))},
             '$phi32.0': {('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi50.0': {('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi62.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi84.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))},
             '$phi32.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi50.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi62.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi84.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))},
             '$phi32.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi50.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi62.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi84.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))},
             '$phi32.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi50.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi62.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi84.0': {('$14get_iter.5',
                           State(pc_initial=2 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=2 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=2 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={2: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=2 nstack_initial=0):
AdaptBlockInfo(insts=((4, {'res': '$4load_global.0'}), (6, {'res': '$6load_global.1'}), (8, {'res': '$tau_sobolevs8.2'}), (10, {'func': '$6load_global.1', 'args': ['$tau_sobolevs8.2'], 'res': '$10call_function.3'}), (12, {'func': '$4load_global.0', 'args': ['$10call_function.3'], 'res': '$12call_function.4'}), (14, {'value': '$12call_function.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={118: (), 18: ('$phi16.0', '$16for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$tau_sobolevs20.2'}), (22, {'res': '$i22.3'}), (24, {'index': '$i22.3', 'target': '$tau_sobolevs20.2', 'res': '$24binary_subscr.4'}), (26, {'res': '$const26.5'}), (28, {'lhs': '$24binary_subscr.4', 'rhs': '$const26.5', 'res': '$28compare_op.6'}), (30, {'pred': '$28compare_op.6'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={32: ('$phi18.0',), 50: ('$phi18.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'res': '$tau_sobolevs32.1'}), (34, {'res': '$i34.2'}), (36, {'index': '$i34.2', 'target': '$tau_sobolevs32.1', 'res': '$36binary_subscr.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$36binary_subscr.3', 'rhs': '$const38.4', 'res': '$40binary_power.5'}), (42, {'res': '$beta_sobolevs42.6'}), (44, {'res': '$i44.7'}), (46, {'target': '$beta_sobolevs42.6', 'index': '$i44.7', 'value': '$40binary_power.5'}), (48, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={16: ('$phi32.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'res': '$tau_sobolevs50.1'}), (52, {'res': '$i52.2'}), (54, {'index': '$i52.2', 'target': '$tau_sobolevs50.1', 'res': '$54binary_subscr.3'}), (56, {'res': '$const56.4'}), (58, {'lhs': '$54binary_subscr.3', 'rhs': '$const56.4', 'res': '$58compare_op.5'}), (60, {'pred': '$58compare_op.5'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={62: ('$phi50.0',), 84: ('$phi50.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$const62.1'}), (64, {'res': '$const64.2'}), (66, {'res': '$tau_sobolevs66.3'}), (68, {'res': '$i68.4'}), (70, {'index': '$i68.4', 'target': '$tau_sobolevs66.3', 'res': '$70binary_subscr.5'}), (72, {'lhs': '$const64.2', 'rhs': '$70binary_subscr.5', 'res': '$72binary_multiply.6'}), (74, {'lhs': '$const62.1', 'rhs': '$72binary_multiply.6', 'res': '$74binary_subtract.7'}), (76, {'res': '$beta_sobolevs76.8'}), (78, {'res': '$i78.9'}), (80, {'target': '$beta_sobolevs76.8', 'index': '$i78.9', 'value': '$74binary_subtract.7'}), (82, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={16: ('$phi62.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=84 nstack_initial=1):
AdaptBlockInfo(insts=((84, {'res': '$const84.1'}), (86, {'res': '$86load_global.2'}), (88, {'item': '$86load_global.2', 'res': '$88load_method.3'}), (90, {'res': '$tau_sobolevs90.4'}), (92, {'res': '$i92.5'}), (94, {'index': '$i92.5', 'target': '$tau_sobolevs90.4', 'res': '$94binary_subscr.6'}), (96, {'value': '$94binary_subscr.6', 'res': '$96unary_negative.7'}), (98, {'func': '$88load_method.3', 'args': ['$96unary_negative.7'], 'res': '$98call_method.8'}), (100, {'lhs': '$const84.1', 'rhs': '$98call_method.8', 'res': '$100binary_subtract.9'}), (102, {'res': '$tau_sobolevs102.10'}), (104, {'res': '$i104.11'}), (106, {'index': '$i104.11', 'target': '$tau_sobolevs102.10', 'res': '$106binary_subscr.12'}), (108, {'lhs': '$100binary_subtract.9', 'rhs': '$106binary_subscr.12', 'res': '$108binary_true_divide.13'}), (110, {'res': '$beta_sobolevs110.14'}), (112, {'res': '$i112.15'}), (114, {'target': '$beta_sobolevs110.14', 'index': '$i112.15', 'value': '$108binary_true_divide.13'}), (116, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={16: ('$phi84.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 120, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={120: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$beta_sobolevs120.0'}), (122, {'retval': '$beta_sobolevs120.0', 'castval': '$122return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    tau_sobolevs = arg(0, name=tau_sobolevs) ['tau_sobolevs']
    beta_sobolevs = arg(1, name=beta_sobolevs) ['beta_sobolevs']
    jump 2                                   []
label 2:
    $4load_global.0 = global(prange: <class 'numba.misc.special.prange'>) ['$4load_global.0']
    $6load_global.1 = global(len: <built-in function len>) ['$6load_global.1']
    $10call_function.3 = call $6load_global.1(tau_sobolevs, func=$6load_global.1, args=[Var(tau_sobolevs, radiative_properties.py:215)], kws=(), vararg=None) ['$10call_function.3', '$6load_global.1', 'tau_sobolevs']
    $12call_function.4 = call $4load_global.0($10call_function.3, func=$4load_global.0, args=[Var($10call_function.3, radiative_properties.py:215)], kws=(), vararg=None) ['$10call_function.3', '$12call_function.4', '$4load_global.0']
    $14get_iter.5 = getiter(value=$12call_function.4) ['$12call_function.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 118            ['$16for_iter.3']
label 18:
    i = $phi18.1                             ['$phi18.1', 'i']
    $24binary_subscr.4 = getitem(value=tau_sobolevs, index=i) ['$24binary_subscr.4', 'i', 'tau_sobolevs']
    $const26.5 = const(float, 1000.0)        ['$const26.5']
    $28compare_op.6 = $24binary_subscr.4 > $const26.5 ['$24binary_subscr.4', '$28compare_op.6', '$const26.5']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($28compare_op.6, func=bool30, args=(Var($28compare_op.6, radiative_properties.py:216),), kws=(), vararg=None) ['$28compare_op.6', '$30pred', 'bool30']
    branch $30pred, 32, 50                   ['$30pred']
label 32:
    $36binary_subscr.3 = getitem(value=tau_sobolevs, index=i) ['$36binary_subscr.3', 'i', 'tau_sobolevs']
    $const38.4 = const(int, -1)              ['$const38.4']
    $40binary_power.5 = $36binary_subscr.3 ** $const38.4 ['$36binary_subscr.3', '$40binary_power.5', '$const38.4']
    beta_sobolevs[i] = $40binary_power.5     ['$40binary_power.5', 'beta_sobolevs', 'i']
    jump 16                                  []
label 50:
    $54binary_subscr.3 = getitem(value=tau_sobolevs, index=i) ['$54binary_subscr.3', 'i', 'tau_sobolevs']
    $const56.4 = const(float, 0.0001)        ['$const56.4']
    $58compare_op.5 = $54binary_subscr.3 < $const56.4 ['$54binary_subscr.3', '$58compare_op.5', '$const56.4']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.5, func=bool60, args=(Var($58compare_op.5, radiative_properties.py:218),), kws=(), vararg=None) ['$58compare_op.5', '$60pred', 'bool60']
    branch $60pred, 62, 84                   ['$60pred']
label 62:
    $const62.1 = const(int, 1)               ['$const62.1']
    $const64.2 = const(float, 0.5)           ['$const64.2']
    $70binary_subscr.5 = getitem(value=tau_sobolevs, index=i) ['$70binary_subscr.5', 'i', 'tau_sobolevs']
    $72binary_multiply.6 = $const64.2 * $70binary_subscr.5 ['$70binary_subscr.5', '$72binary_multiply.6', '$const64.2']
    $74binary_subtract.7 = $const62.1 - $72binary_multiply.6 ['$72binary_multiply.6', '$74binary_subtract.7', '$const62.1']
    beta_sobolevs[i] = $74binary_subtract.7  ['$74binary_subtract.7', 'beta_sobolevs', 'i']
    jump 16                                  []
label 84:
    $const84.1 = const(int, 1)               ['$const84.1']
    $86load_global.2 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$86load_global.2']
    $88load_method.3 = getattr(value=$86load_global.2, attr=exp) ['$86load_global.2', '$88load_method.3']
    $94binary_subscr.6 = getitem(value=tau_sobolevs, index=i) ['$94binary_subscr.6', 'i', 'tau_sobolevs']
    $96unary_negative.7 = unary(fn=<built-in function neg>, value=$94binary_subscr.6) ['$94binary_subscr.6', '$96unary_negative.7']
    $98call_method.8 = call $88load_method.3($96unary_negative.7, func=$88load_method.3, args=[Var($96unary_negative.7, radiative_properties.py:221)], kws=(), vararg=None) ['$88load_method.3', '$96unary_negative.7', '$98call_method.8']
    $100binary_subtract.9 = $const84.1 - $98call_method.8 ['$100binary_subtract.9', '$98call_method.8', '$const84.1']
    $106binary_subscr.12 = getitem(value=tau_sobolevs, index=i) ['$106binary_subscr.12', 'i', 'tau_sobolevs']
    $108binary_true_divide.13 = $100binary_subtract.9 / $106binary_subscr.12 ['$100binary_subtract.9', '$106binary_subscr.12', '$108binary_true_divide.13']
    beta_sobolevs[i] = $108binary_true_divide.13 ['$108binary_true_divide.13', 'beta_sobolevs', 'i']
    jump 16                                  []
label 118:
    jump 120                                 []
label 120:
    $122return_value.1 = cast(value=beta_sobolevs) ['$122return_value.1', 'beta_sobolevs']
    return $122return_value.1                ['$122return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e469f2e90>
DEBUG:numba.core.ssa:on stmt: tau_sobolevs = arg(0, name=tau_sobolevs)
DEBUG:numba.core.ssa:on stmt: beta_sobolevs = arg(1, name=beta_sobolevs)
DEBUG:numba.core.ssa:on stmt: jump 2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 2
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e469f2e90>
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $10call_function.3 = call $6load_global.1(tau_sobolevs, func=$6load_global.1, args=[Var(tau_sobolevs, radiative_properties.py:215)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $12call_function.4 = call $4load_global.0($10call_function.3, func=$4load_global.0, args=[Var($10call_function.3, radiative_properties.py:215)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $14get_iter.5 = getiter(value=$12call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi16.0 = $14get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e469f2e90>
DEBUG:numba.core.ssa:on stmt: $16for_iter.1 = iternext(value=$phi16.0)
DEBUG:numba.core.ssa:on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi18.1 = $16for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $16for_iter.3, 18, 118
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e469f2e90>
DEBUG:numba.core.ssa:on stmt: i = $phi18.1
DEBUG:numba.core.ssa:on stmt: $24binary_subscr.4 = getitem(value=tau_sobolevs, index=i)
DEBUG:numba.core.ssa:on stmt: $const26.5 = const(float, 1000.0)
DEBUG:numba.core.ssa:on stmt: $28compare_op.6 = $24binary_subscr.4 > $const26.5
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($28compare_op.6, func=bool30, args=(Var($28compare_op.6, radiative_properties.py:216),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 32, 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e469f2e90>
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.3 = getitem(value=tau_sobolevs, index=i)
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $40binary_power.5 = $36binary_subscr.3 ** $const38.4
DEBUG:numba.core.ssa:on stmt: beta_sobolevs[i] = $40binary_power.5
DEBUG:numba.core.ssa:on stmt: jump 121
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e469f2e90>
DEBUG:numba.core.ssa:on stmt: $54binary_subscr.3 = getitem(value=tau_sobolevs, index=i)
DEBUG:numba.core.ssa:on stmt: $const56.4 = const(float, 0.0001)
DEBUG:numba.core.ssa:on stmt: $58compare_op.5 = $54binary_subscr.3 < $const56.4
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($58compare_op.5, func=bool60, args=(Var($58compare_op.5, radiative_properties.py:218),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 84
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e469f2e90>
DEBUG:numba.core.ssa:on stmt: $const62.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const64.2 = const(float, 0.5)
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.5 = getitem(value=tau_sobolevs, index=i)
DEBUG:numba.core.ssa:on stmt: $72binary_multiply.6 = $const64.2 * $70binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $74binary_subtract.7 = $const62.1 - $72binary_multiply.6
DEBUG:numba.core.ssa:on stmt: beta_sobolevs[i] = $74binary_subtract.7
DEBUG:numba.core.ssa:on stmt: jump 121
DEBUG:numba.core.ssa:==== SSA block analysis pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e469f2e90>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $86load_global.2 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $88load_method.3 = getattr(value=$86load_global.2, attr=exp)
DEBUG:numba.core.ssa:on stmt: $94binary_subscr.6 = getitem(value=tau_sobolevs, index=i)
DEBUG:numba.core.ssa:on stmt: $96unary_negative.7 = unary(fn=<built-in function neg>, value=$94binary_subscr.6)
DEBUG:numba.core.ssa:on stmt: $98call_method.8 = call $88load_method.3($96unary_negative.7, func=$88load_method.3, args=[Var($96unary_negative.7, radiative_properties.py:221)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $100binary_subtract.9 = $const84.1 - $98call_method.8
DEBUG:numba.core.ssa:on stmt: $106binary_subscr.12 = getitem(value=tau_sobolevs, index=i)
DEBUG:numba.core.ssa:on stmt: $108binary_true_divide.13 = $100binary_subtract.9 / $106binary_subscr.12
DEBUG:numba.core.ssa:on stmt: beta_sobolevs[i] = $108binary_true_divide.13
DEBUG:numba.core.ssa:on stmt: jump 121
DEBUG:numba.core.ssa:==== SSA block analysis pass on 118
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e469f2e90>
DEBUG:numba.core.ssa:on stmt: jump 120
DEBUG:numba.core.ssa:==== SSA block analysis pass on 120
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e469f2e90>
DEBUG:numba.core.ssa:on stmt: $122return_value.1 = cast(value=beta_sobolevs)
DEBUG:numba.core.ssa:on stmt: return $122return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 121
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e469f2e90>
DEBUG:numba.core.ssa:on stmt: jump 16
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100binary_subtract.9': [<numba.core.ir.Assign object at 0x7f6e469f22d0>],
             '$106binary_subscr.12': [<numba.core.ir.Assign object at 0x7f6e469f2510>],
             '$108binary_true_divide.13': [<numba.core.ir.Assign object at 0x7f6e469f2610>],
             '$10call_function.3': [<numba.core.ir.Assign object at 0x7f6e469e0250>],
             '$122return_value.1': [<numba.core.ir.Assign object at 0x7f6e469f2a50>],
             '$12call_function.4': [<numba.core.ir.Assign object at 0x7f6e469e0290>],
             '$14get_iter.5': [<numba.core.ir.Assign object at 0x7f6e469e0410>],
             '$16for_iter.1': [<numba.core.ir.Assign object at 0x7f6e469e0650>],
             '$16for_iter.2': [<numba.core.ir.Assign object at 0x7f6e469e0710>],
             '$16for_iter.3': [<numba.core.ir.Assign object at 0x7f6e469e07d0>],
             '$24binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e469e0cd0>],
             '$28compare_op.6': [<numba.core.ir.Assign object at 0x7f6e469e0f90>],
             '$30pred': [<numba.core.ir.Assign object at 0x7f6e469e9210>],
             '$36binary_subscr.3': [<numba.core.ir.Assign object at 0x7f6e469e94d0>],
             '$40binary_power.5': [<numba.core.ir.Assign object at 0x7f6e469e9710>],
             '$4load_global.0': [<numba.core.ir.Assign object at 0x7f6e46ab4e90>],
             '$54binary_subscr.3': [<numba.core.ir.Assign object at 0x7f6e469e9bd0>],
             '$58compare_op.5': [<numba.core.ir.Assign object at 0x7f6e469e9dd0>],
             '$60pred': [<numba.core.ir.Assign object at 0x7f6e469ec090>],
             '$6load_global.1': [<numba.core.ir.Assign object at 0x7f6e46ab4ed0>],
             '$70binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e469ec550>],
             '$72binary_multiply.6': [<numba.core.ir.Assign object at 0x7f6e469ec690>],
             '$74binary_subtract.7': [<numba.core.ir.Assign object at 0x7f6e469ec790>],
             '$86load_global.2': [<numba.core.ir.Assign object at 0x7f6e469ecb90>],
             '$88load_method.3': [<numba.core.ir.Assign object at 0x7f6e469eccd0>],
             '$94binary_subscr.6': [<numba.core.ir.Assign object at 0x7f6e469ecf90>],
             '$96unary_negative.7': [<numba.core.ir.Assign object at 0x7f6e469f20d0>],
             '$98call_method.8': [<numba.core.ir.Assign object at 0x7f6e469f2250>],
             '$const26.5': [<numba.core.ir.Assign object at 0x7f6e469e0e10>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f6e469e95d0>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7f6e469e9cd0>],
             '$const62.1': [<numba.core.ir.Assign object at 0x7f6e469ec1d0>],
             '$const64.2': [<numba.core.ir.Assign object at 0x7f6e469ec2d0>],
             '$const84.1': [<numba.core.ir.Assign object at 0x7f6e469eca90>],
             '$phi16.0': [<numba.core.ir.Assign object at 0x7f6e469e0310>],
             '$phi18.1': [<numba.core.ir.Assign object at 0x7f6e469e0850>],
             'beta_sobolevs': [<numba.core.ir.Assign object at 0x7f6e46ab4390>],
             'bool30': [<numba.core.ir.Assign object at 0x7f6e469e9110>],
             'bool60': [<numba.core.ir.Assign object at 0x7f6e469e9f50>],
             'i': [<numba.core.ir.Assign object at 0x7f6e469e0a50>],
             'tau_sobolevs': [<numba.core.ir.Assign object at 0x7f6e46f3b750>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	SETUP_LOOP(arg=40, lineno=2)
           4	LOAD_GLOBAL(arg=0, lineno=2)
           6	LOAD_FAST(arg=0, lineno=2)
           8	LOAD_CONST(arg=1, lineno=2)
          10	BINARY_SUBSCR(arg=None, lineno=2)
          12	LOAD_FAST(arg=0, lineno=2)
          14	LOAD_CONST(arg=2, lineno=2)
          16	BINARY_SUBSCR(arg=None, lineno=2)
          18	LOAD_GLOBAL(arg=1, lineno=2)
          20	LOAD_METHOD(arg=2, lineno=2)
          22	LOAD_CONST(arg=2, lineno=2)
          24	CALL_METHOD(arg=1, lineno=2)
          26	BINARY_ADD(arg=None, lineno=2)
          28	CALL_FUNCTION(arg=2, lineno=2)
          30	GET_ITER(arg=None, lineno=2)
>         32	FOR_ITER(arg=8, lineno=2)
          34	STORE_FAST(arg=3, lineno=2)
          36	LOAD_CONST(arg=1, lineno=3)
          38	STORE_FAST(arg=4, lineno=3)
          40	JUMP_ABSOLUTE(arg=32, lineno=3)
>         42	POP_BLOCK(arg=None, lineno=3)
>         44	LOAD_CONST(arg=0, lineno=4)
          46	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=2, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=2 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=SETUP_LOOP(arg=40, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1', '$const8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4', '$const14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$18load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8', '$const22.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$24call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$26binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$28call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.13',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=8, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_BLOCK(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=44 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=3, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=4, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$const36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=JUMP_ABSOLUTE(arg=32, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=2 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=2 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.13', State(pc_initial=2 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=2 nstack_initial=0): {'$phi32.0': '$30get_iter.13'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={2: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=2 nstack_initial=0):
AdaptBlockInfo(insts=((4, {'res': '$4load_global.0'}), (6, {'res': '$sched6.1'}), (8, {'res': '$const8.2'}), (10, {'index': '$const8.2', 'target': '$sched6.1', 'res': '$10binary_subscr.3'}), (12, {'res': '$sched12.4'}), (14, {'res': '$const14.5'}), (16, {'index': '$const14.5', 'target': '$sched12.4', 'res': '$16binary_subscr.6'}), (18, {'res': '$18load_global.7'}), (20, {'item': '$18load_global.7', 'res': '$20load_method.8'}), (22, {'res': '$const22.9'}), (24, {'func': '$20load_method.8', 'args': ['$const22.9'], 'res': '$24call_method.10'}), (26, {'lhs': '$16binary_subscr.6', 'rhs': '$24call_method.10', 'res': '$26binary_add.11'}), (28, {'func': '$4load_global.0', 'args': ['$10binary_subscr.3', '$26binary_add.11'], 'res': '$28call_function.12'}), (30, {'value': '$28call_function.12', 'res': '$30get_iter.13'})), outgoing_phis={'$phi32.0': '$30get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={42: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$const36.2'}), (38, {'value': '$const36.2'}), (40, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={44: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0'}), (46, {'retval': '$const44.0', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    tau__sobolevs = arg(1, name=tau__sobolevs) ['tau__sobolevs']
    beta__sobolevs = arg(2, name=beta__sobolevs) ['beta__sobolevs']
    jump 2                                   []
label 2:
    $4load_global.0 = global(range: <class 'range'>) ['$4load_global.0']
    $const8.2 = const(int, 0)                ['$const8.2']
    $10binary_subscr.3 = getitem(value=sched, index=$const8.2) ['$10binary_subscr.3', '$const8.2', 'sched']
    $const14.5 = const(int, 1)               ['$const14.5']
    $16binary_subscr.6 = getitem(value=sched, index=$const14.5) ['$16binary_subscr.6', '$const14.5', 'sched']
    $18load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$18load_global.7']
    $20load_method.8 = getattr(value=$18load_global.7, attr=uint8) ['$18load_global.7', '$20load_method.8']
    $const22.9 = const(int, 1)               ['$const22.9']
    $24call_method.10 = call $20load_method.8($const22.9, func=$20load_method.8, args=[Var($const22.9, <string>:2)], kws=(), vararg=None) ['$20load_method.8', '$24call_method.10', '$const22.9']
    $26binary_add.11 = $16binary_subscr.6 + $24call_method.10 ['$16binary_subscr.6', '$24call_method.10', '$26binary_add.11']
    $28call_function.12 = call $4load_global.0($10binary_subscr.3, $26binary_add.11, func=$4load_global.0, args=[Var($10binary_subscr.3, <string>:2), Var($26binary_add.11, <string>:2)], kws=(), vararg=None) ['$10binary_subscr.3', '$26binary_add.11', '$28call_function.12', '$4load_global.0']
    $30get_iter.13 = getiter(value=$28call_function.12) ['$28call_function.12', '$30get_iter.13']
    $phi32.0 = $30get_iter.13                ['$30get_iter.13', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 42             ['$32for_iter.3']
label 34:
    parfor__index_4 = $phi34.1               ['$phi34.1', 'parfor__index_4']
    $const36.2 = const(int, 0)               ['$const36.2']
    __sentinel__0 = $const36.2               ['$const36.2', '__sentinel__0']
    jump 32                                  []
label 42:
    jump 44                                  []
label 44:
    $const44.0 = const(NoneType, None)       ['$const44.0']
    $46return_value.1 = cast(value=$const44.0) ['$46return_value.1', '$const44.0']
    return $46return_value.1                 ['$46return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: sched.28 = arg(0, name=sched)
DEBUG:numba.core.ssa:on stmt: tau__sobolevs = arg(1, name=tau__sobolevs)
DEBUG:numba.core.ssa:on stmt: beta__sobolevs = arg(2, name=beta__sobolevs)
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $const56.4 = const(float, 0.0001)
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $const26.5 = const(float, 1000.0)
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const62.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const64.2 = const(float, 0.5)
DEBUG:numba.core.ssa:on stmt: jump 2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 2
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: $4load_global.0.29 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const8.2.30 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.3.31 = getitem(value=sched.28, index=$const8.2.30)
DEBUG:numba.core.ssa:on stmt: $const14.5.32 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $16binary_subscr.6.33 = getitem(value=sched.28, index=$const14.5.32)
DEBUG:numba.core.ssa:on stmt: $18load_global.7.34 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_method.8.35 = getattr(value=$18load_global.7.34, attr=uint8)
DEBUG:numba.core.ssa:on stmt: $const22.9.36 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $24call_method.10.37 = call $20load_method.8.35($const22.9.36, func=$20load_method.8.35, args=[Var($const22.9.36, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $26binary_add.11.38 = $16binary_subscr.6.33 + $24call_method.10.37
DEBUG:numba.core.ssa:on stmt: $28call_function.12.39 = call $4load_global.0.29($10binary_subscr.3.31, $26binary_add.11.38, func=$4load_global.0.29, args=[Var($10binary_subscr.3.31, <string>:2), Var($26binary_add.11.38, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.13.40 = getiter(value=$28call_function.12.39)
DEBUG:numba.core.ssa:on stmt: $phi32.0.41 = $30get_iter.13.40
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1.42 = iternext(value=$phi32.0.41)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2.43 = pair_first(value=$32for_iter.1.42)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3.44 = pair_second(value=$32for_iter.1.42)
DEBUG:numba.core.ssa:on stmt: $phi34.1.45 = $32for_iter.2.43
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3.44, 34, 163
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: parfor__index_4 = $phi34.1.45
DEBUG:numba.core.ssa:on stmt: $const36.2.46 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 163
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block analysis pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: $const44.0.47 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1.48 = cast(value=$const44.0.47)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1.48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.3 = getitem(value=tau__sobolevs, index=parfor__index_4)
DEBUG:numba.core.ssa:on stmt: $40binary_power.5 = $36binary_subscr.3 ** $const38.4
DEBUG:numba.core.ssa:on stmt: beta__sobolevs[parfor__index_4] = $40binary_power.5
DEBUG:numba.core.ssa:on stmt: jump 107
DEBUG:numba.core.ssa:==== SSA block analysis pass on 63
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: $54binary_subscr.3 = getitem(value=tau__sobolevs, index=parfor__index_4)
DEBUG:numba.core.ssa:on stmt: $58compare_op.5 = $54binary_subscr.3 < $const56.4
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($58compare_op.5, func=bool60, args=(Var($58compare_op.5, radiative_properties.py:218),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 77, 95
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: $24binary_subscr.4 = getitem(value=tau__sobolevs, index=parfor__index_4)
DEBUG:numba.core.ssa:on stmt: $28compare_op.6 = $24binary_subscr.4 > $const26.5
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($28compare_op.6, func=bool30, args=(Var($28compare_op.6, radiative_properties.py:216),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 44, 63
DEBUG:numba.core.ssa:==== SSA block analysis pass on 95
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: $86load_global.2 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $88load_method.3 = getattr(value=$86load_global.2, attr=exp)
DEBUG:numba.core.ssa:on stmt: $94binary_subscr.6 = getitem(value=tau__sobolevs, index=parfor__index_4)
DEBUG:numba.core.ssa:on stmt: $96unary_negative.7 = unary(fn=<built-in function neg>, value=$94binary_subscr.6)
DEBUG:numba.core.ssa:on stmt: $98call_method.8 = call $88load_method.3($96unary_negative.7, func=$88load_method.3, args=[Var($96unary_negative.7, radiative_properties.py:221)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $100binary_subtract.9 = $const84.1 - $98call_method.8
DEBUG:numba.core.ssa:on stmt: $106binary_subscr.12 = getitem(value=tau__sobolevs, index=parfor__index_4)
DEBUG:numba.core.ssa:on stmt: $108binary_true_divide.13 = $100binary_subtract.9 / $106binary_subscr.12
DEBUG:numba.core.ssa:on stmt: beta__sobolevs[parfor__index_4] = $108binary_true_divide.13
DEBUG:numba.core.ssa:on stmt: jump 107
DEBUG:numba.core.ssa:==== SSA block analysis pass on 107
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: jump 129
DEBUG:numba.core.ssa:==== SSA block analysis pass on 77
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.5 = getitem(value=tau__sobolevs, index=parfor__index_4)
DEBUG:numba.core.ssa:on stmt: $72binary_multiply.6 = $const64.2 * $70binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $74binary_subtract.7 = $const62.1 - $72binary_multiply.6
DEBUG:numba.core.ssa:on stmt: beta__sobolevs[parfor__index_4] = $74binary_subtract.7
DEBUG:numba.core.ssa:on stmt: jump 107
DEBUG:numba.core.ssa:==== SSA block analysis pass on 129
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4684a990>
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100binary_subtract.9': [<numba.core.ir.Assign object at 0x7f6e469f22d0>],
             '$106binary_subscr.12': [<numba.core.ir.Assign object at 0x7f6e469f2510>],
             '$108binary_true_divide.13': [<numba.core.ir.Assign object at 0x7f6e469f2610>],
             '$10binary_subscr.3.31': [<numba.core.ir.Assign object at 0x7f6e468bbcd0>],
             '$16binary_subscr.6.33': [<numba.core.ir.Assign object at 0x7f6e468bbfd0>],
             '$18load_global.7.34': [<numba.core.ir.Assign object at 0x7f6e468c4110>],
             '$20load_method.8.35': [<numba.core.ir.Assign object at 0x7f6e468c4250>],
             '$24binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e469e0cd0>],
             '$24call_method.10.37': [<numba.core.ir.Assign object at 0x7f6e468bb390>],
             '$26binary_add.11.38': [<numba.core.ir.Assign object at 0x7f6e468bb490>],
             '$28call_function.12.39': [<numba.core.ir.Assign object at 0x7f6e468bb290>],
             '$28compare_op.6': [<numba.core.ir.Assign object at 0x7f6e469e0f90>],
             '$30get_iter.13.40': [<numba.core.ir.Assign object at 0x7f6e468ff9d0>],
             '$30pred': [<numba.core.ir.Assign object at 0x7f6e469e9210>],
             '$32for_iter.1.42': [<numba.core.ir.Assign object at 0x7f6e4688afd0>],
             '$32for_iter.2.43': [<numba.core.ir.Assign object at 0x7f6e4688ad90>],
             '$32for_iter.3.44': [<numba.core.ir.Assign object at 0x7f6e4688ae10>],
             '$36binary_subscr.3': [<numba.core.ir.Assign object at 0x7f6e469e94d0>],
             '$40binary_power.5': [<numba.core.ir.Assign object at 0x7f6e469e9710>],
             '$46return_value.1.48': [<numba.core.ir.Assign object at 0x7f6e468c4690>],
             '$4load_global.0.29': [<numba.core.ir.Assign object at 0x7f6e468bba50>],
             '$54binary_subscr.3': [<numba.core.ir.Assign object at 0x7f6e469e9bd0>],
             '$58compare_op.5': [<numba.core.ir.Assign object at 0x7f6e469e9dd0>],
             '$60pred': [<numba.core.ir.Assign object at 0x7f6e469ec090>],
             '$70binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e469ec550>],
             '$72binary_multiply.6': [<numba.core.ir.Assign object at 0x7f6e469ec690>],
             '$74binary_subtract.7': [<numba.core.ir.Assign object at 0x7f6e469ec790>],
             '$86load_global.2': [<numba.core.ir.Assign object at 0x7f6e469ecb90>],
             '$88load_method.3': [<numba.core.ir.Assign object at 0x7f6e469eccd0>],
             '$94binary_subscr.6': [<numba.core.ir.Assign object at 0x7f6e469ecf90>],
             '$96unary_negative.7': [<numba.core.ir.Assign object at 0x7f6e469f20d0>],
             '$98call_method.8': [<numba.core.ir.Assign object at 0x7f6e469f2250>],
             '$const14.5.32': [<numba.core.ir.Assign object at 0x7f6e468bbed0>],
             '$const22.9.36': [<numba.core.ir.Assign object at 0x7f6e468c4310>],
             '$const26.5': [<numba.core.ir.Assign object at 0x7f6e469e0e10>],
             '$const36.2.46': [<numba.core.ir.Assign object at 0x7f6e4688a850>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f6e469e95d0>],
             '$const44.0.47': [<numba.core.ir.Assign object at 0x7f6e468c4550>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7f6e469e9cd0>],
             '$const62.1': [<numba.core.ir.Assign object at 0x7f6e469ec1d0>],
             '$const64.2': [<numba.core.ir.Assign object at 0x7f6e469ec2d0>],
             '$const8.2.30': [<numba.core.ir.Assign object at 0x7f6e468bbbd0>],
             '$const84.1': [<numba.core.ir.Assign object at 0x7f6e469eca90>],
             '$phi32.0.41': [<numba.core.ir.Assign object at 0x7f6e468bb610>],
             '$phi34.1.45': [<numba.core.ir.Assign object at 0x7f6e4688abd0>],
             'beta__sobolevs': [<numba.core.ir.Assign object at 0x7f6e468bb710>],
             'bool30': [<numba.core.ir.Assign object at 0x7f6e469e9110>],
             'bool60': [<numba.core.ir.Assign object at 0x7f6e469e9f50>],
             'parfor__index_4': [<numba.core.ir.Assign object at 0x7f6e4688a610>],
             'sched.28': [<numba.core.ir.Assign object at 0x7f6e468bb910>],
             'tau__sobolevs': [<numba.core.ir.Assign object at 0x7f6e468bb6d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	SETUP_LOOP(arg=44, lineno=238)
>        132	LOAD_FAST(arg=4, lineno=238)
         134	LOAD_CONST(arg=2, lineno=238)
         136	COMPARE_OP(arg=3, lineno=238)
         138	POP_JUMP_IF_FALSE(arg=174, lineno=238)
         140	LOAD_FAST(arg=4, lineno=239)
         142	LOAD_CONST(arg=1, lineno=239)
         144	BINARY_AND(arg=None, lineno=239)
         146	POP_JUMP_IF_FALSE(arg=156, lineno=239)
         148	LOAD_FAST(arg=2, lineno=240)
         150	LOAD_FAST(arg=0, lineno=240)
         152	INPLACE_MULTIPLY(arg=None, lineno=240)
         154	STORE_FAST(arg=2, lineno=240)
>        156	LOAD_FAST(arg=4, lineno=241)
         158	LOAD_CONST(arg=1, lineno=241)
         160	INPLACE_RSHIFT(arg=None, lineno=241)
         162	STORE_FAST(arg=4, lineno=241)
         164	LOAD_FAST(arg=0, lineno=242)
         166	LOAD_FAST(arg=0, lineno=242)
         168	INPLACE_MULTIPLY(arg=None, lineno=242)
         170	STORE_FAST(arg=0, lineno=242)
         172	JUMP_ABSOLUTE(arg=132, lineno=242)
>        174	POP_BLOCK(arg=None, lineno=242)
>        176	LOAD_FAST(arg=3, lineno=244)
         178	POP_JUMP_IF_FALSE(arg=188, lineno=244)
         180	LOAD_CONST(arg=8, lineno=244)
         182	LOAD_FAST(arg=2, lineno=244)
         184	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
>        188	LOAD_FAST(arg=2, lineno=244)
         190	RETURN_VALUE(arg=None, lineno=244)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=217)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
DEBUG:numba.core.byteflow:stack ['$10load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
DEBUG:numba.core.byteflow:stack ['$10load_deref.3', '$a12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
DEBUG:numba.core.byteflow:stack ['$14call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
DEBUG:numba.core.byteflow:stack ['$b18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
DEBUG:numba.core.byteflow:stack ['$b18.6', '$const20.7']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
DEBUG:numba.core.byteflow:stack ['$22compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
DEBUG:numba.core.byteflow:stack ['$const26.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
DEBUG:numba.core.byteflow:stack ['$b30.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
DEBUG:numba.core.byteflow:stack ['$32unary_negative.2']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
DEBUG:numba.core.byteflow:stack ['$exp36.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
DEBUG:numba.core.byteflow:stack ['$exp36.3', '$const38.4']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
DEBUG:numba.core.byteflow:stack ['$40compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
DEBUG:numba.core.byteflow:stack ['$const98.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
DEBUG:numba.core.byteflow:stack ['$b102.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
DEBUG:numba.core.byteflow:stack ['$44load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
DEBUG:numba.core.byteflow:stack ['$48load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
DEBUG:numba.core.byteflow:stack ['$exp106.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
DEBUG:numba.core.byteflow:stack ['$exp106.0', '$const108.1']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
DEBUG:numba.core.byteflow:stack ['$110compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
DEBUG:numba.core.byteflow:stack ['$a52.0']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
DEBUG:numba.core.byteflow:stack ['$a52.0', '$const54.1']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
DEBUG:numba.core.byteflow:stack ['$56compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
DEBUG:numba.core.byteflow:stack ['$114load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
DEBUG:numba.core.byteflow:stack ['$116load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
DEBUG:numba.core.byteflow:stack ['$116load_method.1', '$a118.2']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
DEBUG:numba.core.byteflow:stack ['$116load_method.1', '$a118.2', '$120load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
DEBUG:numba.core.byteflow:stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
DEBUG:numba.core.byteflow:stack ['$116load_method.1', '$a118.2', '$124call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
DEBUG:numba.core.byteflow:stack ['$126call_method.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=130, inst=SETUP_LOOP(arg=44, lineno=238)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=132, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 176, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=132 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
DEBUG:numba.core.byteflow:stack ['$60load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=132 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
DEBUG:numba.core.byteflow:stack ['$a76.0']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
DEBUG:numba.core.byteflow:stack ['$a76.0', '$const78.1']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
DEBUG:numba.core.byteflow:stack ['$80compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=132 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_FAST(arg=4, lineno=238)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_CONST(arg=2, lineno=238)
DEBUG:numba.core.byteflow:stack ['$exp132.0']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=COMPARE_OP(arg=3, lineno=238)
DEBUG:numba.core.byteflow:stack ['$exp132.0', '$const134.1']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=POP_JUMP_IF_FALSE(arg=174, lineno=238)
DEBUG:numba.core.byteflow:stack ['$136compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=140, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 176, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=174, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 176, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=174 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
DEBUG:numba.core.byteflow:stack ['$64load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=174 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
DEBUG:numba.core.byteflow:stack ['$68load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
DEBUG:numba.core.byteflow:stack ['$68load_global.0', '$const70.1']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
DEBUG:numba.core.byteflow:stack ['$72call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=174 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
DEBUG:numba.core.byteflow:stack ['$a84.0']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
DEBUG:numba.core.byteflow:stack ['$a84.0', '$const86.1']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
DEBUG:numba.core.byteflow:stack ['$88compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=174 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=140 nstack_initial=0), State(pc_initial=174 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=4, lineno=239)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_CONST(arg=1, lineno=239)
DEBUG:numba.core.byteflow:stack ['$exp140.0']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=BINARY_AND(arg=None, lineno=239)
DEBUG:numba.core.byteflow:stack ['$exp140.0', '$const142.1']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=POP_JUMP_IF_FALSE(arg=156, lineno=239)
DEBUG:numba.core.byteflow:stack ['$144binary_and.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=148, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 176, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=156, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 176, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=174 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=148 nstack_initial=0), State(pc_initial=156 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=174, inst=POP_BLOCK(arg=None, lineno=242)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=148 nstack_initial=0), State(pc_initial=156 nstack_initial=0), State(pc_initial=176 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
DEBUG:numba.core.byteflow:stack ['$const92.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=148 nstack_initial=0), State(pc_initial=156 nstack_initial=0), State(pc_initial=176 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=148 nstack_initial=0), State(pc_initial=156 nstack_initial=0), State(pc_initial=176 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=2, lineno=240)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_FAST(arg=0, lineno=240)
DEBUG:numba.core.byteflow:stack ['$r148.0']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
DEBUG:numba.core.byteflow:stack ['$r148.0', '$a150.1']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=STORE_FAST(arg=2, lineno=240)
DEBUG:numba.core.byteflow:stack ['$152inplace_multiply.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=156, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 176, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=156 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=156 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=4, lineno=241)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_CONST(arg=1, lineno=241)
DEBUG:numba.core.byteflow:stack ['$exp156.0']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=INPLACE_RSHIFT(arg=None, lineno=241)
DEBUG:numba.core.byteflow:stack ['$exp156.0', '$const158.1']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=STORE_FAST(arg=4, lineno=241)
DEBUG:numba.core.byteflow:stack ['$160inplace_rshift.2']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=0, lineno=242)
DEBUG:numba.core.byteflow:stack ['$a164.3']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
DEBUG:numba.core.byteflow:stack ['$a164.3', '$a166.4']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=STORE_FAST(arg=0, lineno=242)
DEBUG:numba.core.byteflow:stack ['$168inplace_multiply.5']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=JUMP_ABSOLUTE(arg=132, lineno=242)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=132, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 176, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=156 nstack_initial=0), State(pc_initial=132 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=3, lineno=244)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=178, inst=POP_JUMP_IF_FALSE(arg=188, lineno=244)
DEBUG:numba.core.byteflow:stack ['$invert176.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=180, stack=(), blockstack=(), npush=0), Edge(pc=188, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=156 nstack_initial=0), State(pc_initial=132 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=188 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=132 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=188 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=188 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_CONST(arg=8, lineno=244)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_FAST(arg=2, lineno=244)
DEBUG:numba.core.byteflow:stack ['$const180.0']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
DEBUG:numba.core.byteflow:stack ['$const180.0', '$r182.1']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
DEBUG:numba.core.byteflow:stack ['$184binary_true_divide.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=188 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=244)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=244)
DEBUG:numba.core.byteflow:stack ['$r188.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=132 nstack_initial=0): set(),
             State(pc_initial=140 nstack_initial=0): set(),
             State(pc_initial=148 nstack_initial=0): set(),
             State(pc_initial=156 nstack_initial=0): set(),
             State(pc_initial=174 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={132: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=132 nstack_initial=0):
AdaptBlockInfo(insts=((132, {'res': '$exp132.0'}), (134, {'res': '$const134.1'}), (136, {'lhs': '$exp132.0', 'rhs': '$const134.1', 'res': '$136compare_op.2'}), (138, {'pred': '$136compare_op.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 176, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={140: (), 174: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=140 nstack_initial=0):
AdaptBlockInfo(insts=((140, {'res': '$exp140.0'}), (142, {'res': '$const142.1'}), (144, {'lhs': '$exp140.0', 'rhs': '$const142.1', 'res': '$144binary_and.2'}), (146, {'pred': '$144binary_and.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 176, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={148: (), 156: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=148 nstack_initial=0):
AdaptBlockInfo(insts=((148, {'res': '$r148.0'}), (150, {'res': '$a150.1'}), (152, {'lhs': '$r148.0', 'rhs': '$a150.1', 'res': '$152inplace_multiply.2'}), (154, {'value': '$152inplace_multiply.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 176, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={156: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=156 nstack_initial=0):
AdaptBlockInfo(insts=((156, {'res': '$exp156.0'}), (158, {'res': '$const158.1'}), (160, {'lhs': '$exp156.0', 'rhs': '$const158.1', 'res': '$160inplace_rshift.2'}), (162, {'value': '$160inplace_rshift.2'}), (164, {'res': '$a164.3'}), (166, {'res': '$a166.4'}), (168, {'lhs': '$a164.3', 'rhs': '$a166.4', 'res': '$168inplace_multiply.5'}), (170, {'value': '$168inplace_multiply.5'}), (172, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 176, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={132: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=174 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 176, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={176: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$invert176.0'}), (178, {'pred': '$invert176.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={180: (), 188: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {'res': '$const180.0'}), (182, {'res': '$r182.1'}), (184, {'lhs': '$const180.0', 'rhs': '$r182.1', 'res': '$184binary_true_divide.2'}), (186, {'retval': '$184binary_true_divide.2', 'castval': '$186return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$r188.0'}), (190, {'retval': '$r188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6call_function.2 = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$6call_function.2', '$const4.1']
    r = $6call_function.2                    ['$6call_function.2', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    $14call_function.5 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', '$14call_function.5', 'a']
    a.1 = $14call_function.5                 ['$14call_function.5', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    $const26.0 = const(bool, True)           ['$const26.0']
    invert = $const26.0                      ['$const26.0', 'invert']
    $32unary_negative.2 = unary(fn=<built-in function neg>, value=b) ['$32unary_negative.2', 'b']
    exp = $32unary_negative.2                ['$32unary_negative.2', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    $const98.0 = const(bool, False)          ['$const98.0']
    invert = $const98.0                      ['$const98.0', 'invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    jump 132                                 []
label 132:
    $const134.1 = const(int, 0)              ['$const134.1']
    $136compare_op.2 = exp != $const134.1    ['$136compare_op.2', '$const134.1', 'exp']
    bool138 = global(bool: <class 'bool'>)   ['bool138']
    $138pred = call bool138($136compare_op.2, func=bool138, args=(Var($136compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$136compare_op.2', '$138pred', 'bool138']
    branch $138pred, 140, 174                ['$138pred']
label 140:
    $const142.1 = const(int, 1)              ['$const142.1']
    $144binary_and.2 = exp & $const142.1     ['$144binary_and.2', '$const142.1', 'exp']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144binary_and.2, func=bool146, args=(Var($144binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$144binary_and.2', '$146pred', 'bool146']
    branch $146pred, 148, 156                ['$146pred']
label 148:
    $152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$152inplace_multiply.2', 'a.1', 'r']
    r = $152inplace_multiply.2               ['$152inplace_multiply.2', 'r']
    jump 156                                 []
label 156:
    $const158.1 = const(int, 1)              ['$const158.1']
    $160inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const158.1, static_lhs=Undefined, static_rhs=Undefined) ['$160inplace_rshift.2', '$const158.1', 'exp']
    exp = $160inplace_rshift.2               ['$160inplace_rshift.2', 'exp']
    $168inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$168inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $168inplace_multiply.5             ['$168inplace_multiply.5', 'a.1']
    jump 132                                 []
label 174:
    jump 176                                 []
label 176:
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$178pred', 'bool178', 'invert']
    branch $178pred, 180, 188                ['$178pred']
label 180:
    $const180.0 = const(float, 1.0)          ['$const180.0']
    $184binary_true_divide.2 = $const180.0 / r ['$184binary_true_divide.2', '$const180.0', 'r']
    $186return_value.3 = cast(value=$184binary_true_divide.2) ['$184binary_true_divide.2', '$186return_value.3']
    return $186return_value.3                ['$186return_value.3']
label 188:
    $190return_value.1 = cast(value=r)       ['$190return_value.1', 'r']
    return $190return_value.1                ['$190return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: a.1 = $14call_function.5
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: invert = $const26.0
DEBUG:numba.core.ssa:on stmt: $32unary_negative.2 = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: exp = $32unary_negative.2
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block analysis pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: $const98.0 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: invert = $const98.0
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block analysis pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block analysis pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block analysis pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block analysis pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: $const134.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $136compare_op.2 = exp != $const134.1
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138($136compare_op.2, func=bool138, args=(Var($136compare_op.2, numbers.py:238),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 140, 174
DEBUG:numba.core.ssa:==== SSA block analysis pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $144binary_and.2 = exp & $const142.1
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144binary_and.2, func=bool146, args=(Var($144binary_and.2, numbers.py:239),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 156
DEBUG:numba.core.ssa:==== SSA block analysis pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: $152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $152inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 156
DEBUG:numba.core.ssa:==== SSA block analysis pass on 156
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: $const158.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $160inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const158.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $160inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $168inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $168inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block analysis pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block analysis pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 188
DEBUG:numba.core.ssa:==== SSA block analysis pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: $const180.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $184binary_true_divide.2 = $const180.0 / r
DEBUG:numba.core.ssa:on stmt: $186return_value.3 = cast(value=$184binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $186return_value.3
DEBUG:numba.core.ssa:==== SSA block analysis pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4677ab50>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7f6e4677ad10>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7f6e467761d0>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f6e46770f10>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f6e467b15d0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7f6e4687af10>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7f6e46879550>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f6e46740a90>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7f6e46740bd0>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7f6e46740c50>],
             '$136compare_op.2': [<numba.core.ir.Assign object at 0x7f6e46743050>],
             '$138pred': [<numba.core.ir.Assign object at 0x7f6e46743290>],
             '$144binary_and.2': [<numba.core.ir.Assign object at 0x7f6e46743650>],
             '$146pred': [<numba.core.ir.Assign object at 0x7f6e46743890>],
             '$14call_function.5': [<numba.core.ir.Assign object at 0x7f6e46726510>],
             '$152inplace_multiply.2': [<numba.core.ir.Assign object at 0x7f6e46743bd0>],
             '$160inplace_rshift.2': [<numba.core.ir.Assign object at 0x7f6e46743f50>],
             '$168inplace_multiply.5': [<numba.core.ir.Assign object at 0x7f6e467482d0>],
             '$178pred': [<numba.core.ir.Assign object at 0x7f6e46748750>],
             '$184binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f6e46748a90>],
             '$186return_value.3': [<numba.core.ir.Assign object at 0x7f6e46748b90>],
             '$190return_value.1': [<numba.core.ir.Assign object at 0x7f6e46748dd0>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7f6e46726410>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f6e46726750>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f6e46719310>],
             '$32unary_negative.2': [<numba.core.ir.Assign object at 0x7f6e46726b10>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7f6e46726ed0>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f6e46739110>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7f6e46739250>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7f6e46739450>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f6e46739690>],
             '$6call_function.2': [<numba.core.ir.Assign object at 0x7f6e46719f50>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7f6e4670fe50>],
             '$const134.1': [<numba.core.ir.Assign object at 0x7f6e46740f10>],
             '$const142.1': [<numba.core.ir.Assign object at 0x7f6e46743510>],
             '$const158.1': [<numba.core.ir.Assign object at 0x7f6e46743e50>],
             '$const180.0': [<numba.core.ir.Assign object at 0x7f6e467488d0>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7f6e467261d0>],
             '$const26.0': [<numba.core.ir.Assign object at 0x7f6e46726890>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f6e46726dd0>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f6e46719390>],
             '$const98.0': [<numba.core.ir.Assign object at 0x7f6e467407d0>],
             'a': [<numba.core.ir.Assign object at 0x7f6e46719c10>],
             'a.1': [<numba.core.ir.Assign object at 0x7f6e46726290>,
                     <numba.core.ir.Assign object at 0x7f6e46743fd0>],
             'b': [<numba.core.ir.Assign object at 0x7f6e46719950>],
             'bool112': [<numba.core.ir.Assign object at 0x7f6e46776210>],
             'bool138': [<numba.core.ir.Assign object at 0x7f6e46743190>],
             'bool146': [<numba.core.ir.Assign object at 0x7f6e46743790>],
             'bool178': [<numba.core.ir.Assign object at 0x7f6e46748650>],
             'bool24': [<numba.core.ir.Assign object at 0x7f6e46726650>],
             'bool42': [<numba.core.ir.Assign object at 0x7f6e46739050>],
             'bool50': [<numba.core.ir.Assign object at 0x7f6e46739590>],
             'exp': [<numba.core.ir.Assign object at 0x7f6e46726bd0>,
                     <numba.core.ir.Assign object at 0x7f6e46740850>,
                     <numba.core.ir.Assign object at 0x7f6e46743c50>],
             'invert': [<numba.core.ir.Assign object at 0x7f6e46726950>,
                        <numba.core.ir.Assign object at 0x7f6e46726b90>],
             'r': [<numba.core.ir.Assign object at 0x7f6e4677add0>,
                   <numba.core.ir.Assign object at 0x7f6e46740990>]})
DEBUG:numba.core.ssa:SSA violators {'exp', 'a.1', 'invert', 'r'}
DEBUG:numba.core.ssa:Fix SSA violator on var exp
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: a.1 = $14call_function.5
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: invert = $const26.0
DEBUG:numba.core.ssa:on stmt: $32unary_negative.2 = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: exp = $32unary_negative.2
DEBUG:numba.core.ssa:first assign: exp
DEBUG:numba.core.ssa:replaced with: exp = $32unary_negative.2
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: $const98.0 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: invert = $const98.0
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:replaced with: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: $const134.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $136compare_op.2 = exp != $const134.1
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138($136compare_op.2, func=bool138, args=(Var($136compare_op.2, numbers.py:238),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 140, 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $144binary_and.2 = exp & $const142.1
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144binary_and.2, func=bool146, args=(Var($144binary_and.2, numbers.py:239),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: $152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $152inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 156
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: $const158.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $160inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const158.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $160inplace_rshift.2
DEBUG:numba.core.ssa:replaced with: exp.2 = $160inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $168inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $168inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: $const180.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $184binary_true_divide.2 = $const180.0 / r
DEBUG:numba.core.ssa:on stmt: $186return_value.3 = cast(value=$184binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $186return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4670be50>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f6e469e0350>],
             98: [<numba.core.ir.Assign object at 0x7f6e46ab4050>],
             156: [<numba.core.ir.Assign object at 0x7f6e46aae090>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: a.1 = $14call_function.5
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: invert = $const26.0
DEBUG:numba.core.ssa:on stmt: $32unary_negative.2 = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: exp = $32unary_negative.2
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: $const98.0 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: invert = $const98.0
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
DEBUG:numba.core.ssa:find_def_from_bottom label 48
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 26 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:incoming_def exp = $32unary_negative.2
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:incoming_def exp.1 = b
DEBUG:numba.core.ssa:replaced with: $110compare_op.2 = exp.3 > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: $const134.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $136compare_op.2 = exp != $const134.1
DEBUG:numba.core.ssa:find_def var='exp' stmt=$136compare_op.2 = exp != $const134.1
DEBUG:numba.core.ssa:find_def_from_top label 132
DEBUG:numba.core.ssa:insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 132
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:idom 106 from label 130
DEBUG:numba.core.ssa:find_def_from_bottom label 106
DEBUG:numba.core.ssa:incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
DEBUG:numba.core.ssa:find_def_from_bottom label 156
DEBUG:numba.core.ssa:incoming_def exp.2 = $160inplace_rshift.2
DEBUG:numba.core.ssa:replaced with: $136compare_op.2 = exp.4 != $const134.1
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138($136compare_op.2, func=bool138, args=(Var($136compare_op.2, numbers.py:238),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 140, 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $144binary_and.2 = exp & $const142.1
DEBUG:numba.core.ssa:find_def var='exp' stmt=$144binary_and.2 = exp & $const142.1
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 132 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:replaced with: $144binary_and.2 = exp.4 & $const142.1
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144binary_and.2, func=bool146, args=(Var($144binary_and.2, numbers.py:239),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: $152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $152inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 156
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: $const158.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $160inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const158.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='exp' stmt=$160inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const158.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 156
DEBUG:numba.core.ssa:idom 140 from label 156
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 132 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:replaced with: $160inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const158.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $160inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $168inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $168inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: $const180.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $184binary_true_divide.2 = $const180.0 / r
DEBUG:numba.core.ssa:on stmt: $186return_value.3 = cast(value=$184binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $186return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46aae110>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var a.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: a.1 = $14call_function.5
DEBUG:numba.core.ssa:first assign: a.1
DEBUG:numba.core.ssa:replaced with: a.1 = $14call_function.5
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: invert = $const26.0
DEBUG:numba.core.ssa:on stmt: $32unary_negative.2 = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: exp = $32unary_negative.2
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: $const98.0 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: invert = $const98.0
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp.3 > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
DEBUG:numba.core.ssa:on stmt: $const134.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $136compare_op.2 = exp.4 != $const134.1
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138($136compare_op.2, func=bool138, args=(Var($136compare_op.2, numbers.py:238),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 140, 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $144binary_and.2 = exp.4 & $const142.1
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144binary_and.2, func=bool146, args=(Var($144binary_and.2, numbers.py:239),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: $152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $152inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 156
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: $const158.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $160inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const158.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $160inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $168inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $168inplace_multiply.5
DEBUG:numba.core.ssa:replaced with: a.1.1 = $168inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: $const180.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $184binary_true_divide.2 = $const180.0 / r
DEBUG:numba.core.ssa:on stmt: $186return_value.3 = cast(value=$184binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $186return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4677ab10>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e46944890>],
             156: [<numba.core.ir.Assign object at 0x7f6e46aae550>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: a.1 = $14call_function.5
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: invert = $const26.0
DEBUG:numba.core.ssa:on stmt: $32unary_negative.2 = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: exp = $32unary_negative.2
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: $const98.0 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: invert = $const98.0
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp.3 > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def_from_top label 114
DEBUG:numba.core.ssa:idom 106 from label 114
DEBUG:numba.core.ssa:find_def_from_bottom label 106
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:idom 0 from label 106
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
DEBUG:numba.core.ssa:on stmt: $const134.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $136compare_op.2 = exp.4 != $const134.1
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138($136compare_op.2, func=bool138, args=(Var($136compare_op.2, numbers.py:238),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 140, 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $144binary_and.2 = exp.4 & $const142.1
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144binary_and.2, func=bool146, args=(Var($144binary_and.2, numbers.py:239),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: $152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='a.1' stmt=$152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 140 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 132 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:find_def_from_top label 132
DEBUG:numba.core.ssa:insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 132
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:idom 106 from label 130
DEBUG:numba.core.ssa:find_def_from_bottom label 106
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:idom 0 from label 106
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def a.1 = $14call_function.5
DEBUG:numba.core.ssa:find_def_from_bottom label 156
DEBUG:numba.core.ssa:incoming_def a.1.1 = $168inplace_multiply.5
DEBUG:numba.core.ssa:replaced with: $152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $152inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 156
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: $const158.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $160inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const158.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $160inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $168inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='a.1' stmt=$168inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 156
DEBUG:numba.core.ssa:idom 140 from label 156
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 132 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:replaced with: $168inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $168inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: $const180.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $184binary_true_divide.2 = $const180.0 / r
DEBUG:numba.core.ssa:on stmt: $186return_value.3 = cast(value=$184binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $186return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46ab4650>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var invert
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: a.1 = $14call_function.5
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: invert = $const26.0
DEBUG:numba.core.ssa:first assign: invert
DEBUG:numba.core.ssa:replaced with: invert = $const26.0
DEBUG:numba.core.ssa:on stmt: $32unary_negative.2 = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: exp = $32unary_negative.2
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: $const98.0 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: invert = $const98.0
DEBUG:numba.core.ssa:replaced with: invert.1 = $const98.0
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp.3 > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[130, 156])
DEBUG:numba.core.ssa:on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
DEBUG:numba.core.ssa:on stmt: $const134.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $136compare_op.2 = exp.4 != $const134.1
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138($136compare_op.2, func=bool138, args=(Var($136compare_op.2, numbers.py:238),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 140, 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $144binary_and.2 = exp.4 & $const142.1
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144binary_and.2, func=bool146, args=(Var($144binary_and.2, numbers.py:239),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: $152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $152inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 156
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: $const158.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $160inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const158.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $160inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $168inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $168inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: $const180.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $184binary_true_divide.2 = $const180.0 / r
DEBUG:numba.core.ssa:on stmt: $186return_value.3 = cast(value=$184binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $186return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46958ad0>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f6e46aaeed0>],
             98: [<numba.core.ir.Assign object at 0x7f6e46ab4150>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: a.1 = $14call_function.5
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: invert = $const26.0
DEBUG:numba.core.ssa:on stmt: $32unary_negative.2 = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: exp = $32unary_negative.2
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: $const98.0 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: invert.1 = $const98.0
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp.3 > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[130, 156])
DEBUG:numba.core.ssa:on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
DEBUG:numba.core.ssa:on stmt: $const134.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $136compare_op.2 = exp.4 != $const134.1
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138($136compare_op.2, func=bool138, args=(Var($136compare_op.2, numbers.py:238),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 140, 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $144binary_and.2 = exp.4 & $const142.1
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144binary_and.2, func=bool146, args=(Var($144binary_and.2, numbers.py:239),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: $152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $152inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 156
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: $const158.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $160inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const158.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $160inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $168inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $168inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='invert' stmt=$178pred = call bool178(invert, func=bool178, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def_from_top label 176
DEBUG:numba.core.ssa:idom 174 from label 176
DEBUG:numba.core.ssa:find_def_from_bottom label 174
DEBUG:numba.core.ssa:find_def_from_top label 174
DEBUG:numba.core.ssa:idom 132 from label 174
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:find_def_from_top label 132
DEBUG:numba.core.ssa:idom 130 from label 132
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:idom 106 from label 130
DEBUG:numba.core.ssa:find_def_from_bottom label 106
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
DEBUG:numba.core.ssa:find_def_from_bottom label 48
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 26 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:incoming_def invert = $const26.0
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:incoming_def invert.1 = $const98.0
DEBUG:numba.core.ssa:replaced with: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: $const180.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $184binary_true_divide.2 = $const180.0 / r
DEBUG:numba.core.ssa:on stmt: $186return_value.3 = cast(value=$184binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $186return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46958bd0>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var r
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r = $6call_function.2
DEBUG:numba.core.ssa:first assign: r
DEBUG:numba.core.ssa:replaced with: r = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: a.1 = $14call_function.5
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: invert = $const26.0
DEBUG:numba.core.ssa:on stmt: $32unary_negative.2 = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: exp = $32unary_negative.2
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: $const98.0 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: invert.1 = $const98.0
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
DEBUG:numba.core.ssa:on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp.3 > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[130, 156])
DEBUG:numba.core.ssa:on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
DEBUG:numba.core.ssa:on stmt: $const134.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $136compare_op.2 = exp.4 != $const134.1
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138($136compare_op.2, func=bool138, args=(Var($136compare_op.2, numbers.py:238),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 140, 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $144binary_and.2 = exp.4 & $const142.1
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144binary_and.2, func=bool146, args=(Var($144binary_and.2, numbers.py:239),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: $152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $152inplace_multiply.2
DEBUG:numba.core.ssa:replaced with: r.1 = $152inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 156
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: $const158.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $160inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const158.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $160inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $168inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $168inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: $const180.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $184binary_true_divide.2 = $const180.0 / r
DEBUG:numba.core.ssa:on stmt: $186return_value.3 = cast(value=$184binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $186return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e469ec110>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e4670be50>],
             148: [<numba.core.ir.Assign object at 0x7f6e4688bf90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_deref.3 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $14call_function.5 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: a.1 = $14call_function.5
DEBUG:numba.core.ssa:on stmt: $const20.7 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $22compare_op.8 = b < $const20.7
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: invert = $const26.0
DEBUG:numba.core.ssa:on stmt: $32unary_negative.2 = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: exp = $32unary_negative.2
DEBUG:numba.core.ssa:on stmt: $const38.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.5 = exp < $const38.4
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: $48load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: $const98.0 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: invert.1 = $const98.0
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
DEBUG:numba.core.ssa:on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
DEBUG:numba.core.ssa:on stmt: $const108.1 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $110compare_op.2 = exp.3 > $const108.1
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $120load_global.3 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128return_value.7 = cast(value=$126call_method.6)
DEBUG:numba.core.ssa:on stmt: return $128return_value.7
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[130, 156])
DEBUG:numba.core.ssa:on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[130, 156])
DEBUG:numba.core.ssa:on stmt: $const134.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $136compare_op.2 = exp.4 != $const134.1
DEBUG:numba.core.ssa:on stmt: bool138 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $138pred = call bool138($136compare_op.2, func=bool138, args=(Var($136compare_op.2, numbers.py:238),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $138pred, 140, 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $144binary_and.2 = exp.4 & $const142.1
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($144binary_and.2, func=bool146, args=(Var($144binary_and.2, numbers.py:239),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: $152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='r' stmt=$152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 140 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 132 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:find_def_from_top label 132
DEBUG:numba.core.ssa:insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 132
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:idom 106 from label 130
DEBUG:numba.core.ssa:find_def_from_bottom label 106
DEBUG:numba.core.ssa:find_def_from_top label 106
DEBUG:numba.core.ssa:idom 0 from label 106
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def r = $6call_function.2
DEBUG:numba.core.ssa:find_def_from_bottom label 156
DEBUG:numba.core.ssa:find_def_from_top label 156
DEBUG:numba.core.ssa:insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 156
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:incoming_def r.1 = $152inplace_multiply.2
DEBUG:numba.core.ssa:find_def_from_bottom label 140
DEBUG:numba.core.ssa:find_def_from_top label 140
DEBUG:numba.core.ssa:idom 132 from label 140
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[130])
DEBUG:numba.core.ssa:incoming_def r.3 = phi(incoming_values=[Var(r.1, numbers.py:240), Var(r.2, numbers.py:240)], incoming_blocks=[148, 140])
DEBUG:numba.core.ssa:replaced with: $152inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $152inplace_multiply.2
DEBUG:numba.core.ssa:on stmt: jump 156
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 156
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: $const158.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $160inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const158.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $160inplace_rshift.2
DEBUG:numba.core.ssa:on stmt: $168inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $168inplace_multiply.5
DEBUG:numba.core.ssa:on stmt: jump 132
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178(invert.2, func=bool178, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: $const180.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $184binary_true_divide.2 = $const180.0 / r
DEBUG:numba.core.ssa:find_def var='r' stmt=$184binary_true_divide.2 = $const180.0 / r
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 176 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 176
DEBUG:numba.core.ssa:find_def_from_top label 176
DEBUG:numba.core.ssa:idom 174 from label 176
DEBUG:numba.core.ssa:find_def_from_bottom label 174
DEBUG:numba.core.ssa:find_def_from_top label 174
DEBUG:numba.core.ssa:idom 132 from label 174
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:replaced with: $184binary_true_divide.2 = $const180.0 / r.2
DEBUG:numba.core.ssa:on stmt: $186return_value.3 = cast(value=$184binary_true_divide.2)
DEBUG:numba.core.ssa:on stmt: return $186return_value.3
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4688b210>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:find_def var='r' stmt=$190return_value.1 = cast(value=r)
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 176 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 176
DEBUG:numba.core.ssa:find_def_from_top label 176
DEBUG:numba.core.ssa:idom 174 from label 176
DEBUG:numba.core.ssa:find_def_from_bottom label 174
DEBUG:numba.core.ssa:find_def_from_top label 174
DEBUG:numba.core.ssa:idom 132 from label 174
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:replaced with: $190return_value.1 = cast(value=r.2)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=32)
           2	LOAD_GLOBAL(arg=0, lineno=32)
           4	LOAD_METHOD(arg=1, lineno=32)
           6	LOAD_FAST(arg=7, lineno=32)
           8	LOAD_ATTR(arg=2, lineno=32)
          10	LOAD_CONST(arg=1, lineno=32)
          12	BINARY_SUBSCR(arg=None, lineno=32)
          14	CALL_METHOD(arg=1, lineno=32)
          16	STORE_FAST(arg=9, lineno=32)
          18	SETUP_LOOP(arg=158, lineno=34)
          20	LOAD_GLOBAL(arg=3, lineno=34)
          22	LOAD_FAST(arg=7, lineno=34)
          24	LOAD_ATTR(arg=2, lineno=34)
          26	LOAD_CONST(arg=2, lineno=34)
          28	BINARY_SUBSCR(arg=None, lineno=34)
          30	CALL_FUNCTION(arg=1, lineno=34)
          32	GET_ITER(arg=None, lineno=34)
>         34	FOR_ITER(arg=140, lineno=34)
          36	STORE_FAST(arg=10, lineno=34)
          38	LOAD_FAST(arg=5, lineno=35)
          40	LOAD_FAST(arg=10, lineno=35)
          42	BINARY_SUBSCR(arg=None, lineno=35)
          44	STORE_FAST(arg=11, lineno=35)
          46	SETUP_LOOP(arg=50, lineno=36)
          48	LOAD_GLOBAL(arg=3, lineno=36)
          50	LOAD_FAST(arg=7, lineno=36)
          52	LOAD_ATTR(arg=2, lineno=36)
          54	LOAD_CONST(arg=1, lineno=36)
          56	BINARY_SUBSCR(arg=None, lineno=36)
          58	CALL_FUNCTION(arg=1, lineno=36)
          60	GET_ITER(arg=None, lineno=36)
>         62	FOR_ITER(arg=32, lineno=36)
          64	STORE_FAST(arg=12, lineno=36)
          66	LOAD_FAST(arg=0, lineno=38)
          68	LOAD_FAST(arg=10, lineno=38)
          70	BINARY_SUBSCR(arg=None, lineno=38)
          72	LOAD_FAST(arg=1, lineno=38)
          74	LOAD_FAST(arg=11, lineno=38)
          76	LOAD_FAST(arg=12, lineno=38)
          78	BUILD_TUPLE(arg=2, lineno=38)
          80	BINARY_SUBSCR(arg=None, lineno=38)
          82	BINARY_MULTIPLY(arg=None, lineno=38)
          84	LOAD_FAST(arg=7, lineno=38)
          86	LOAD_FAST(arg=10, lineno=38)
          88	LOAD_FAST(arg=12, lineno=38)
          90	BUILD_TUPLE(arg=2, lineno=38)
          92	STORE_SUBSCR(arg=None, lineno=38)
          94	JUMP_ABSOLUTE(arg=62, lineno=38)
>         96	POP_BLOCK(arg=None, lineno=38)
>         98	LOAD_FAST(arg=4, lineno=40)
         100	LOAD_FAST(arg=10, lineno=40)
         102	BINARY_SUBSCR(arg=None, lineno=40)
         104	LOAD_CONST(arg=1, lineno=40)
         106	COMPARE_OP(arg=2, lineno=40)
         108	POP_JUMP_IF_FALSE(arg=34, lineno=40)
         110	SETUP_LOOP(arg=62, lineno=41)
         112	LOAD_GLOBAL(arg=3, lineno=41)
         114	LOAD_FAST(arg=7, lineno=41)
         116	LOAD_ATTR(arg=2, lineno=41)
         118	LOAD_CONST(arg=1, lineno=41)
         120	BINARY_SUBSCR(arg=None, lineno=41)
         122	CALL_FUNCTION(arg=1, lineno=41)
         124	GET_ITER(arg=None, lineno=41)
>        126	FOR_ITER(arg=44, lineno=41)
         128	STORE_FAST(arg=12, lineno=41)
         130	LOAD_FAST(arg=7, lineno=42)
         132	LOAD_FAST(arg=10, lineno=42)
         134	LOAD_FAST(arg=12, lineno=42)
         136	BUILD_TUPLE(arg=2, lineno=42)
         138	DUP_TOP_TWO(arg=None, lineno=42)
         140	BINARY_SUBSCR(arg=None, lineno=42)
         142	LOAD_FAST(arg=3, lineno=43)
         144	LOAD_FAST(arg=11, lineno=43)
         146	LOAD_FAST(arg=12, lineno=43)
         148	BUILD_TUPLE(arg=2, lineno=43)
         150	BINARY_SUBSCR(arg=None, lineno=43)
         152	LOAD_FAST(arg=2, lineno=44)
         154	LOAD_FAST(arg=11, lineno=44)
         156	LOAD_FAST(arg=12, lineno=44)
         158	BUILD_TUPLE(arg=2, lineno=44)
         160	BINARY_SUBSCR(arg=None, lineno=44)
         162	BINARY_MULTIPLY(arg=None, lineno=44)
         164	INPLACE_MULTIPLY(arg=None, lineno=44)
         166	ROT_THREE(arg=None, lineno=44)
         168	STORE_SUBSCR(arg=None, lineno=44)
         170	JUMP_ABSOLUTE(arg=126, lineno=44)
>        172	POP_BLOCK(arg=None, lineno=44)
>        174	JUMP_ABSOLUTE(arg=34, lineno=44)
>        176	POP_BLOCK(arg=None, lineno=44)
>        178	LOAD_FAST(arg=8, lineno=47)
         180	POP_JUMP_IF_FALSE(arg=484, lineno=47)
         184	SETUP_LOOP(arg=296, lineno=48)
         188	LOAD_GLOBAL(arg=3, lineno=48)
         190	LOAD_FAST(arg=6, lineno=48)
         192	LOAD_ATTR(arg=2, lineno=48)
         194	LOAD_CONST(arg=2, lineno=48)
         196	BINARY_SUBSCR(arg=None, lineno=48)
         198	LOAD_CONST(arg=1, lineno=48)
         200	BINARY_SUBTRACT(arg=None, lineno=48)
         202	CALL_FUNCTION(arg=1, lineno=48)
         204	GET_ITER(arg=None, lineno=48)
>        206	FOR_ITER(arg=272, lineno=48)
         210	STORE_FAST(arg=10, lineno=48)
         212	SETUP_LOOP(arg=30, lineno=49)
         214	LOAD_GLOBAL(arg=3, lineno=49)
         216	LOAD_FAST(arg=7, lineno=49)
         218	LOAD_ATTR(arg=2, lineno=49)
         220	LOAD_CONST(arg=1, lineno=49)
         222	BINARY_SUBSCR(arg=None, lineno=49)
         224	CALL_FUNCTION(arg=1, lineno=49)
         226	GET_ITER(arg=None, lineno=49)
>        228	FOR_ITER(arg=12, lineno=49)
         230	STORE_FAST(arg=13, lineno=49)
         232	LOAD_CONST(arg=3, lineno=50)
         234	LOAD_FAST(arg=9, lineno=50)
         236	LOAD_FAST(arg=13, lineno=50)
         238	STORE_SUBSCR(arg=None, lineno=50)
         240	JUMP_ABSOLUTE(arg=228, lineno=50)
>        242	POP_BLOCK(arg=None, lineno=50)
>        244	SETUP_LOOP(arg=82, lineno=51)
         246	LOAD_GLOBAL(arg=3, lineno=51)
         248	LOAD_FAST(arg=6, lineno=51)
         250	LOAD_FAST(arg=10, lineno=51)
         252	BINARY_SUBSCR(arg=None, lineno=51)
         254	LOAD_FAST(arg=6, lineno=51)
         256	LOAD_FAST(arg=10, lineno=51)
         258	LOAD_CONST(arg=1, lineno=51)
         260	BINARY_ADD(arg=None, lineno=51)
         262	BINARY_SUBSCR(arg=None, lineno=51)
         264	CALL_FUNCTION(arg=2, lineno=51)
         266	GET_ITER(arg=None, lineno=51)
>        268	FOR_ITER(arg=56, lineno=51)
         270	STORE_FAST(arg=12, lineno=51)
         272	SETUP_LOOP(arg=48, lineno=52)
         274	LOAD_GLOBAL(arg=3, lineno=52)
         276	LOAD_FAST(arg=7, lineno=52)
         278	LOAD_ATTR(arg=2, lineno=52)
         280	LOAD_CONST(arg=1, lineno=52)
         282	BINARY_SUBSCR(arg=None, lineno=52)
         284	CALL_FUNCTION(arg=1, lineno=52)
         286	GET_ITER(arg=None, lineno=52)
>        288	FOR_ITER(arg=30, lineno=52)
         290	STORE_FAST(arg=13, lineno=52)
         292	LOAD_FAST(arg=9, lineno=53)
         294	LOAD_FAST(arg=13, lineno=53)
         296	DUP_TOP_TWO(arg=None, lineno=53)
         298	BINARY_SUBSCR(arg=None, lineno=53)
         300	LOAD_FAST(arg=7, lineno=53)
         302	LOAD_FAST(arg=12, lineno=53)
         304	LOAD_FAST(arg=13, lineno=53)
         306	BUILD_TUPLE(arg=2, lineno=53)
         308	BINARY_SUBSCR(arg=None, lineno=53)
         310	INPLACE_ADD(arg=None, lineno=53)
         312	ROT_THREE(arg=None, lineno=53)
         314	STORE_SUBSCR(arg=None, lineno=53)
         316	JUMP_ABSOLUTE(arg=288, lineno=53)
>        320	POP_BLOCK(arg=None, lineno=53)
>        322	JUMP_ABSOLUTE(arg=268, lineno=53)
>        326	POP_BLOCK(arg=None, lineno=53)
>        328	SETUP_LOOP(arg=64, lineno=54)
         330	LOAD_GLOBAL(arg=3, lineno=54)
         332	LOAD_FAST(arg=7, lineno=54)
         334	LOAD_ATTR(arg=2, lineno=54)
         336	LOAD_CONST(arg=1, lineno=54)
         338	BINARY_SUBSCR(arg=None, lineno=54)
         340	CALL_FUNCTION(arg=1, lineno=54)
         342	GET_ITER(arg=None, lineno=54)
>        344	FOR_ITER(arg=46, lineno=54)
         346	STORE_FAST(arg=13, lineno=54)
         348	LOAD_FAST(arg=9, lineno=55)
         350	LOAD_FAST(arg=13, lineno=55)
         352	BINARY_SUBSCR(arg=None, lineno=55)
         354	LOAD_CONST(arg=3, lineno=55)
         356	COMPARE_OP(arg=3, lineno=55)
         358	POP_JUMP_IF_FALSE(arg=380, lineno=55)
         362	LOAD_CONST(arg=1, lineno=56)
         364	LOAD_FAST(arg=9, lineno=56)
         366	LOAD_FAST(arg=13, lineno=56)
         368	BINARY_SUBSCR(arg=None, lineno=56)
         370	BINARY_TRUE_DIVIDE(arg=None, lineno=56)
         372	LOAD_FAST(arg=9, lineno=56)
         374	LOAD_FAST(arg=13, lineno=56)
         376	STORE_SUBSCR(arg=None, lineno=56)
         378	JUMP_FORWARD(arg=8, lineno=56)
>        380	LOAD_CONST(arg=4, lineno=58)
         382	LOAD_FAST(arg=9, lineno=58)
         384	LOAD_FAST(arg=13, lineno=58)
         386	STORE_SUBSCR(arg=None, lineno=58)
>        388	JUMP_ABSOLUTE(arg=344, lineno=58)
>        392	POP_BLOCK(arg=None, lineno=58)
>        394	SETUP_LOOP(arg=84, lineno=59)
         396	LOAD_GLOBAL(arg=3, lineno=59)
         398	LOAD_FAST(arg=6, lineno=59)
         400	LOAD_FAST(arg=10, lineno=59)
         402	BINARY_SUBSCR(arg=None, lineno=59)
         404	LOAD_FAST(arg=6, lineno=59)
         406	LOAD_FAST(arg=10, lineno=59)
         408	LOAD_CONST(arg=1, lineno=59)
         410	BINARY_ADD(arg=None, lineno=59)
         412	BINARY_SUBSCR(arg=None, lineno=59)
         414	CALL_FUNCTION(arg=2, lineno=59)
         416	GET_ITER(arg=None, lineno=59)
>        418	FOR_ITER(arg=58, lineno=59)
         420	STORE_FAST(arg=12, lineno=59)
         422	SETUP_LOOP(arg=50, lineno=60)
         424	LOAD_GLOBAL(arg=3, lineno=60)
         426	LOAD_CONST(arg=2, lineno=60)
         428	LOAD_FAST(arg=7, lineno=60)
         430	LOAD_ATTR(arg=2, lineno=60)
         432	LOAD_CONST(arg=1, lineno=60)
         434	BINARY_SUBSCR(arg=None, lineno=60)
         436	CALL_FUNCTION(arg=2, lineno=60)
         438	GET_ITER(arg=None, lineno=60)
>        440	FOR_ITER(arg=30, lineno=60)
         442	STORE_FAST(arg=13, lineno=60)
         444	LOAD_FAST(arg=7, lineno=61)
         446	LOAD_FAST(arg=12, lineno=61)
         448	LOAD_FAST(arg=13, lineno=61)
         450	BUILD_TUPLE(arg=2, lineno=61)
         452	DUP_TOP_TWO(arg=None, lineno=61)
         454	BINARY_SUBSCR(arg=None, lineno=61)
         456	LOAD_FAST(arg=9, lineno=61)
         458	LOAD_FAST(arg=13, lineno=61)
         460	BINARY_SUBSCR(arg=None, lineno=61)
         462	INPLACE_MULTIPLY(arg=None, lineno=61)
         464	ROT_THREE(arg=None, lineno=61)
         466	STORE_SUBSCR(arg=None, lineno=61)
         468	JUMP_ABSOLUTE(arg=440, lineno=61)
>        472	POP_BLOCK(arg=None, lineno=61)
>        474	JUMP_ABSOLUTE(arg=418, lineno=61)
>        478	POP_BLOCK(arg=None, lineno=61)
>        480	JUMP_ABSOLUTE(arg=206, lineno=61)
>        482	POP_BLOCK(arg=None, lineno=61)
>        484	LOAD_CONST(arg=5, lineno=61)
         486	RETURN_VALUE(arg=None, lineno=61)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=32)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=32)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=32)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=7, lineno=32)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=32)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$transition_probabilities6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=32)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=32)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$8load_attr.3', '$const10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_METHOD(arg=1, lineno=32)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$12binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=9, lineno=32)
DEBUG:numba.core.byteflow:stack ['$14call_method.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=18, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=SETUP_LOOP(arg=158, lineno=34)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=3, lineno=34)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=7, lineno=34)
DEBUG:numba.core.byteflow:stack ['$20load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_ATTR(arg=2, lineno=34)
DEBUG:numba.core.byteflow:stack ['$20load_global.0', '$transition_probabilities22.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=2, lineno=34)
DEBUG:numba.core.byteflow:stack ['$20load_global.0', '$24load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_SUBSCR(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$20load_global.0', '$24load_attr.2', '$const26.3']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=34)
DEBUG:numba.core.byteflow:stack ['$20load_global.0', '$28binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=GET_ITER(arg=None, lineno=34)
DEBUG:numba.core.byteflow:stack ['$30call_function.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=34, stack=('$32get_iter.6',), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=FOR_ITER(arg=140, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=176, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=36, stack=('$phi34.0', '$34for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=36 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=176, inst=POP_BLOCK(arg=None, lineno=44)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=2), State(pc_initial=178 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi36.0', '$phi36.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=10, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$phi36.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=5, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi36.0']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=10, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$lines_idx38.2']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$lines_idx38.2', '$i40.3']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_FAST(arg=11, lineno=35)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$42binary_subscr.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=46, stack=('$phi36.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=46 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=178, inst=LOAD_FAST(arg=8, lineno=47)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=180, inst=POP_JUMP_IF_FALSE(arg=484, lineno=47)
DEBUG:numba.core.byteflow:stack ['$normalize178.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=184, stack=(), blockstack=(), npush=0), Edge(pc=484, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=46 nstack_initial=1), State(pc_initial=184 nstack_initial=0), State(pc_initial=484 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi46.0']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=SETUP_LOOP(arg=50, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_GLOBAL(arg=3, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=7, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$48load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_ATTR(arg=2, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$48load_global.1', '$transition_probabilities50.2']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$48load_global.1', '$52load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$48load_global.1', '$52load_attr.3', '$const54.4']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=CALL_FUNCTION(arg=1, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$48load_global.1', '$56binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=GET_ITER(arg=None, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi46.0', '$58call_function.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=62, stack=('$phi46.0', '$60get_iter.7'), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=484 nstack_initial=0), State(pc_initial=62 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=184, inst=SETUP_LOOP(arg=296, lineno=48)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_GLOBAL(arg=3, lineno=48)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_FAST(arg=6, lineno=48)
DEBUG:numba.core.byteflow:stack ['$188load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_ATTR(arg=2, lineno=48)
DEBUG:numba.core.byteflow:stack ['$188load_global.0', '$block_references190.1']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=2, lineno=48)
DEBUG:numba.core.byteflow:stack ['$188load_global.0', '$192load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=BINARY_SUBSCR(arg=None, lineno=48)
DEBUG:numba.core.byteflow:stack ['$188load_global.0', '$192load_attr.2', '$const194.3']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_CONST(arg=1, lineno=48)
DEBUG:numba.core.byteflow:stack ['$188load_global.0', '$196binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=BINARY_SUBTRACT(arg=None, lineno=48)
DEBUG:numba.core.byteflow:stack ['$188load_global.0', '$196binary_subscr.4', '$const198.5']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=CALL_FUNCTION(arg=1, lineno=48)
DEBUG:numba.core.byteflow:stack ['$188load_global.0', '$200binary_subtract.6']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=GET_ITER(arg=None, lineno=48)
DEBUG:numba.core.byteflow:stack ['$202call_function.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=206, stack=('$204get_iter.8',), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=484 nstack_initial=0), State(pc_initial=62 nstack_initial=2), State(pc_initial=206 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=484, inst=LOAD_CONST(arg=5, lineno=61)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=486, inst=RETURN_VALUE(arg=None, lineno=61)
DEBUG:numba.core.byteflow:stack ['$const484.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=2), State(pc_initial=206 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi62.0', '$phi62.1']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=FOR_ITER(arg=32, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi62.0', '$phi62.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=96, stack=('$phi62.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=64, stack=('$phi62.0', '$phi62.1', '$62for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=206 nstack_initial=1), State(pc_initial=96 nstack_initial=1), State(pc_initial=64 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi206.0']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=FOR_ITER(arg=272, lineno=48)
DEBUG:numba.core.byteflow:stack ['$phi206.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=482, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=210, stack=('$phi206.0', '$206for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=1), State(pc_initial=64 nstack_initial=3), State(pc_initial=482 nstack_initial=0), State(pc_initial=210 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi96.0']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=POP_BLOCK(arg=None, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi96.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=98, stack=('$phi96.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=3), State(pc_initial=482 nstack_initial=0), State(pc_initial=210 nstack_initial=2), State(pc_initial=98 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi64.0', '$phi64.1', '$phi64.2']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=STORE_FAST(arg=12, lineno=36)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$phi64.2']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=10, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$transition_probability_coef66.3']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BINARY_SUBSCR(arg=None, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$transition_probability_coef66.3', '$i68.4']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=1, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$70binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=11, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$70binary_subscr.5', '$beta_sobolev72.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=12, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$70binary_subscr.5', '$beta_sobolev72.6', '$line_idx74.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=BUILD_TUPLE(arg=2, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$70binary_subscr.5', '$beta_sobolev72.6', '$line_idx74.7', '$j76.8']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=BINARY_SUBSCR(arg=None, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$70binary_subscr.5', '$beta_sobolev72.6', '$78build_tuple.9']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_MULTIPLY(arg=None, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$70binary_subscr.5', '$80binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=7, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$82binary_multiply.11']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=10, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$82binary_multiply.11', '$transition_probabilities84.12']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=12, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$82binary_multiply.11', '$transition_probabilities84.12', '$i86.13']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=BUILD_TUPLE(arg=2, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$82binary_multiply.11', '$transition_probabilities84.12', '$i86.13', '$j88.14']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_SUBSCR(arg=None, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1', '$82binary_multiply.11', '$transition_probabilities84.12', '$90build_tuple.15']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=JUMP_ABSOLUTE(arg=62, lineno=38)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$phi64.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=62, stack=('$phi64.0', '$phi64.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=482 nstack_initial=0), State(pc_initial=210 nstack_initial=2), State(pc_initial=98 nstack_initial=1), State(pc_initial=62 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=482, inst=POP_BLOCK(arg=None, lineno=61)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=484, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=210 nstack_initial=2), State(pc_initial=98 nstack_initial=1), State(pc_initial=62 nstack_initial=2), State(pc_initial=484 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi210.0', '$phi210.1']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=STORE_FAST(arg=10, lineno=48)
DEBUG:numba.core.byteflow:stack ['$phi210.0', '$phi210.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=212, stack=('$phi210.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=62 nstack_initial=2), State(pc_initial=484 nstack_initial=0), State(pc_initial=212 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi98.0']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi98.0']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=10, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi98.0', '$transition_type98.1']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi98.0', '$transition_type98.1', '$i100.2']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=1, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi98.0', '$102binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=COMPARE_OP(arg=2, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi98.0', '$102binary_subscr.3', '$const104.4']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=POP_JUMP_IF_FALSE(arg=34, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi98.0', '$106compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=110, stack=('$phi98.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi98.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=2), State(pc_initial=484 nstack_initial=0), State(pc_initial=212 nstack_initial=1), State(pc_initial=110 nstack_initial=1), State(pc_initial=34 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=484 nstack_initial=0), State(pc_initial=212 nstack_initial=1), State(pc_initial=110 nstack_initial=1), State(pc_initial=34 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=212 nstack_initial=1), State(pc_initial=110 nstack_initial=1), State(pc_initial=34 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi212.0']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=SETUP_LOOP(arg=30, lineno=49)
DEBUG:numba.core.byteflow:stack ['$phi212.0']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=LOAD_GLOBAL(arg=3, lineno=49)
DEBUG:numba.core.byteflow:stack ['$phi212.0']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=7, lineno=49)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$214load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=LOAD_ATTR(arg=2, lineno=49)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$214load_global.1', '$transition_probabilities216.2']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=49)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$214load_global.1', '$218load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=49)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$214load_global.1', '$218load_attr.3', '$const220.4']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=CALL_FUNCTION(arg=1, lineno=49)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$214load_global.1', '$222binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=GET_ITER(arg=None, lineno=49)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$224call_function.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=228, stack=('$phi212.0', '$226get_iter.7'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 244, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=110 nstack_initial=1), State(pc_initial=34 nstack_initial=1), State(pc_initial=228 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi110.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=SETUP_LOOP(arg=62, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi110.0']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_GLOBAL(arg=3, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi110.0']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=7, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi110.0', '$112load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_ATTR(arg=2, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi110.0', '$112load_global.1', '$transition_probabilities114.2']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_CONST(arg=1, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi110.0', '$112load_global.1', '$116load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=BINARY_SUBSCR(arg=None, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi110.0', '$112load_global.1', '$116load_attr.3', '$const118.4']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=CALL_FUNCTION(arg=1, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi110.0', '$112load_global.1', '$120binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=GET_ITER(arg=None, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi110.0', '$122call_function.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=126, stack=('$phi110.0', '$124get_iter.7'), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 174, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=1), State(pc_initial=228 nstack_initial=2), State(pc_initial=126 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=228 nstack_initial=2), State(pc_initial=126 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi228.0', '$phi228.1']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=FOR_ITER(arg=12, lineno=49)
DEBUG:numba.core.byteflow:stack ['$phi228.0', '$phi228.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=242, stack=('$phi228.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 244, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=230, stack=('$phi228.0', '$phi228.1', '$228for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 244, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=126 nstack_initial=2), State(pc_initial=242 nstack_initial=1), State(pc_initial=230 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi126.0', '$phi126.1']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=FOR_ITER(arg=44, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi126.0', '$phi126.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=172, stack=('$phi126.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 174, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=128, stack=('$phi126.0', '$phi126.1', '$126for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 174, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=242 nstack_initial=1), State(pc_initial=230 nstack_initial=3), State(pc_initial=172 nstack_initial=1), State(pc_initial=128 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi242.0']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=POP_BLOCK(arg=None, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi242.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=244, stack=('$phi242.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=3), State(pc_initial=172 nstack_initial=1), State(pc_initial=128 nstack_initial=3), State(pc_initial=244 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0', '$phi230.1', '$phi230.2']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=STORE_FAST(arg=13, lineno=49)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$phi230.1', '$phi230.2']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_CONST(arg=3, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$phi230.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_FAST(arg=9, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$phi230.1', '$const232.3']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=LOAD_FAST(arg=13, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$phi230.1', '$const232.3', '$norm_factor234.4']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=STORE_SUBSCR(arg=None, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$phi230.1', '$const232.3', '$norm_factor234.4', '$k236.5']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=JUMP_ABSOLUTE(arg=228, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$phi230.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=228, stack=('$phi230.0', '$phi230.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 244, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=128 nstack_initial=3), State(pc_initial=244 nstack_initial=1), State(pc_initial=228 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi172.0']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=POP_BLOCK(arg=None, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi172.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=174, stack=('$phi172.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=128 nstack_initial=3), State(pc_initial=244 nstack_initial=1), State(pc_initial=228 nstack_initial=2), State(pc_initial=174 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi128.0', '$phi128.1', '$phi128.2']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=STORE_FAST(arg=12, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$phi128.2']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=7, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_FAST(arg=10, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_FAST(arg=12, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$i132.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=BUILD_TUPLE(arg=2, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$i132.4', '$j134.5']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=DUP_TOP_TWO(arg=None, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=BINARY_SUBSCR(arg=None, lineno=42)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$138dup_top_two.7', '$138dup_top_two.8']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_FAST(arg=3, lineno=43)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$140binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=LOAD_FAST(arg=11, lineno=43)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$140binary_subscr.9', '$stimulated_emission_factor142.10']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_FAST(arg=12, lineno=43)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$140binary_subscr.9', '$stimulated_emission_factor142.10', '$line_idx144.11']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=BUILD_TUPLE(arg=2, lineno=43)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$140binary_subscr.9', '$stimulated_emission_factor142.10', '$line_idx144.11', '$j146.12']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=BINARY_SUBSCR(arg=None, lineno=43)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$140binary_subscr.9', '$stimulated_emission_factor142.10', '$148build_tuple.13']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=2, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$140binary_subscr.9', '$150binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=11, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$140binary_subscr.9', '$150binary_subscr.14', '$j_blues152.15']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=12, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$140binary_subscr.9', '$150binary_subscr.14', '$j_blues152.15', '$line_idx154.16']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=BUILD_TUPLE(arg=2, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$140binary_subscr.9', '$150binary_subscr.14', '$j_blues152.15', '$line_idx154.16', '$j156.17']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=BINARY_SUBSCR(arg=None, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$140binary_subscr.9', '$150binary_subscr.14', '$j_blues152.15', '$158build_tuple.18']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=BINARY_MULTIPLY(arg=None, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$140binary_subscr.9', '$150binary_subscr.14', '$160binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=INPLACE_MULTIPLY(arg=None, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$140binary_subscr.9', '$162binary_multiply.20']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=ROT_THREE(arg=None, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$transition_probabilities130.3', '$136build_tuple.6', '$164inplace_multiply.21']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=STORE_SUBSCR(arg=None, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1', '$164inplace_multiply.21', '$transition_probabilities130.3', '$136build_tuple.6']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=JUMP_ABSOLUTE(arg=126, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi128.0', '$phi128.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=126, stack=('$phi128.0', '$phi128.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 174, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=244 nstack_initial=1), State(pc_initial=228 nstack_initial=2), State(pc_initial=174 nstack_initial=1), State(pc_initial=126 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi244.0']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=SETUP_LOOP(arg=82, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi244.0']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=LOAD_GLOBAL(arg=3, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi244.0']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=6, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$246load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=10, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$246load_global.1', '$block_references248.2']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=BINARY_SUBSCR(arg=None, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$246load_global.1', '$block_references248.2', '$i250.3']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=LOAD_FAST(arg=6, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$246load_global.1', '$252binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_FAST(arg=10, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$246load_global.1', '$252binary_subscr.4', '$block_references254.5']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=LOAD_CONST(arg=1, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$246load_global.1', '$252binary_subscr.4', '$block_references254.5', '$i256.6']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=BINARY_ADD(arg=None, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$246load_global.1', '$252binary_subscr.4', '$block_references254.5', '$i256.6', '$const258.7']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=BINARY_SUBSCR(arg=None, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$246load_global.1', '$252binary_subscr.4', '$block_references254.5', '$260binary_add.8']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=CALL_FUNCTION(arg=2, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$246load_global.1', '$252binary_subscr.4', '$262binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=GET_ITER(arg=None, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi244.0', '$264call_function.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=268, stack=('$phi244.0', '$266get_iter.11'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=228 nstack_initial=2), State(pc_initial=174 nstack_initial=1), State(pc_initial=126 nstack_initial=2), State(pc_initial=268 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=174 nstack_initial=1), State(pc_initial=126 nstack_initial=2), State(pc_initial=268 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi174.0']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=JUMP_ABSOLUTE(arg=34, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi174.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=34, stack=('$phi174.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=126 nstack_initial=2), State(pc_initial=268 nstack_initial=2), State(pc_initial=34 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=268 nstack_initial=2), State(pc_initial=34 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi268.0', '$phi268.1']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=FOR_ITER(arg=56, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi268.0', '$phi268.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=326, stack=('$phi268.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=270, stack=('$phi268.0', '$phi268.1', '$268for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=1), State(pc_initial=326 nstack_initial=1), State(pc_initial=270 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=326 nstack_initial=1), State(pc_initial=270 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi326.0']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=POP_BLOCK(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi326.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=('$phi326.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=270 nstack_initial=3), State(pc_initial=328 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi270.0', '$phi270.1', '$phi270.2']
DEBUG:numba.core.byteflow:dispatch pc=270, inst=STORE_FAST(arg=12, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$phi270.1', '$phi270.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=272, stack=('$phi270.0', '$phi270.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=1), State(pc_initial=272 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi328.0']
DEBUG:numba.core.byteflow:dispatch pc=328, inst=SETUP_LOOP(arg=64, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi328.0']
DEBUG:numba.core.byteflow:dispatch pc=330, inst=LOAD_GLOBAL(arg=3, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi328.0']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=LOAD_FAST(arg=7, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi328.0', '$330load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=334, inst=LOAD_ATTR(arg=2, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi328.0', '$330load_global.1', '$transition_probabilities332.2']
DEBUG:numba.core.byteflow:dispatch pc=336, inst=LOAD_CONST(arg=1, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi328.0', '$330load_global.1', '$334load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=338, inst=BINARY_SUBSCR(arg=None, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi328.0', '$330load_global.1', '$334load_attr.3', '$const336.4']
DEBUG:numba.core.byteflow:dispatch pc=340, inst=CALL_FUNCTION(arg=1, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi328.0', '$330load_global.1', '$338binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=GET_ITER(arg=None, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi328.0', '$340call_function.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=344, stack=('$phi328.0', '$342get_iter.7'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=272 nstack_initial=2), State(pc_initial=344 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi272.0', '$phi272.1']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=SETUP_LOOP(arg=48, lineno=52)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$phi272.1']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_GLOBAL(arg=3, lineno=52)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$phi272.1']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=LOAD_FAST(arg=7, lineno=52)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$phi272.1', '$274load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=LOAD_ATTR(arg=2, lineno=52)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$phi272.1', '$274load_global.2', '$transition_probabilities276.3']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=LOAD_CONST(arg=1, lineno=52)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$phi272.1', '$274load_global.2', '$278load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=BINARY_SUBSCR(arg=None, lineno=52)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$phi272.1', '$274load_global.2', '$278load_attr.4', '$const280.5']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=CALL_FUNCTION(arg=1, lineno=52)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$phi272.1', '$274load_global.2', '$282binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=GET_ITER(arg=None, lineno=52)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$phi272.1', '$284call_function.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=288, stack=('$phi272.0', '$phi272.1', '$286get_iter.8'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=344 nstack_initial=2), State(pc_initial=288 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi344.0', '$phi344.1']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=FOR_ITER(arg=46, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi344.0', '$phi344.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=392, stack=('$phi344.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=346, stack=('$phi344.0', '$phi344.1', '$344for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=288 nstack_initial=3), State(pc_initial=392 nstack_initial=1), State(pc_initial=346 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi288.0', '$phi288.1', '$phi288.2']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=FOR_ITER(arg=30, lineno=52)
DEBUG:numba.core.byteflow:stack ['$phi288.0', '$phi288.1', '$phi288.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=320, stack=('$phi288.0', '$phi288.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=290, stack=('$phi288.0', '$phi288.1', '$phi288.2', '$288for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=392 nstack_initial=1), State(pc_initial=346 nstack_initial=3), State(pc_initial=320 nstack_initial=2), State(pc_initial=290 nstack_initial=4)])
DEBUG:numba.core.byteflow:stack: ['$phi392.0']
DEBUG:numba.core.byteflow:dispatch pc=392, inst=POP_BLOCK(arg=None, lineno=58)
DEBUG:numba.core.byteflow:stack ['$phi392.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=394, stack=('$phi392.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=346 nstack_initial=3), State(pc_initial=320 nstack_initial=2), State(pc_initial=290 nstack_initial=4), State(pc_initial=394 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi346.0', '$phi346.1', '$phi346.2']
DEBUG:numba.core.byteflow:dispatch pc=346, inst=STORE_FAST(arg=13, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi346.0', '$phi346.1', '$phi346.2']
DEBUG:numba.core.byteflow:dispatch pc=348, inst=LOAD_FAST(arg=9, lineno=55)
DEBUG:numba.core.byteflow:stack ['$phi346.0', '$phi346.1']
DEBUG:numba.core.byteflow:dispatch pc=350, inst=LOAD_FAST(arg=13, lineno=55)
DEBUG:numba.core.byteflow:stack ['$phi346.0', '$phi346.1', '$norm_factor348.3']
DEBUG:numba.core.byteflow:dispatch pc=352, inst=BINARY_SUBSCR(arg=None, lineno=55)
DEBUG:numba.core.byteflow:stack ['$phi346.0', '$phi346.1', '$norm_factor348.3', '$k350.4']
DEBUG:numba.core.byteflow:dispatch pc=354, inst=LOAD_CONST(arg=3, lineno=55)
DEBUG:numba.core.byteflow:stack ['$phi346.0', '$phi346.1', '$352binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=356, inst=COMPARE_OP(arg=3, lineno=55)
DEBUG:numba.core.byteflow:stack ['$phi346.0', '$phi346.1', '$352binary_subscr.5', '$const354.6']
DEBUG:numba.core.byteflow:dispatch pc=358, inst=POP_JUMP_IF_FALSE(arg=380, lineno=55)
DEBUG:numba.core.byteflow:stack ['$phi346.0', '$phi346.1', '$356compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=362, stack=('$phi346.0', '$phi346.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=380, stack=('$phi346.0', '$phi346.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=320 nstack_initial=2), State(pc_initial=290 nstack_initial=4), State(pc_initial=394 nstack_initial=1), State(pc_initial=362 nstack_initial=2), State(pc_initial=380 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi320.0', '$phi320.1']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=POP_BLOCK(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi320.0', '$phi320.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=322, stack=('$phi320.0', '$phi320.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=290 nstack_initial=4), State(pc_initial=394 nstack_initial=1), State(pc_initial=362 nstack_initial=2), State(pc_initial=380 nstack_initial=2), State(pc_initial=322 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi290.0', '$phi290.1', '$phi290.2', '$phi290.3']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=STORE_FAST(arg=13, lineno=52)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2', '$phi290.3']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=9, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=13, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2', '$norm_factor292.4']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=DUP_TOP_TWO(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2', '$norm_factor292.4', '$k294.5']
DEBUG:numba.core.byteflow:dispatch pc=298, inst=BINARY_SUBSCR(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2', '$norm_factor292.4', '$k294.5', '$296dup_top_two.6', '$296dup_top_two.7']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=7, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2', '$norm_factor292.4', '$k294.5', '$298binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=12, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2', '$norm_factor292.4', '$k294.5', '$298binary_subscr.8', '$transition_probabilities300.9']
DEBUG:numba.core.byteflow:dispatch pc=304, inst=LOAD_FAST(arg=13, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2', '$norm_factor292.4', '$k294.5', '$298binary_subscr.8', '$transition_probabilities300.9', '$j302.10']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=BUILD_TUPLE(arg=2, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2', '$norm_factor292.4', '$k294.5', '$298binary_subscr.8', '$transition_probabilities300.9', '$j302.10', '$k304.11']
DEBUG:numba.core.byteflow:dispatch pc=308, inst=BINARY_SUBSCR(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2', '$norm_factor292.4', '$k294.5', '$298binary_subscr.8', '$transition_probabilities300.9', '$306build_tuple.12']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=INPLACE_ADD(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2', '$norm_factor292.4', '$k294.5', '$298binary_subscr.8', '$308binary_subscr.13']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=ROT_THREE(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2', '$norm_factor292.4', '$k294.5', '$310inplace_add.14']
DEBUG:numba.core.byteflow:dispatch pc=314, inst=STORE_SUBSCR(arg=None, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2', '$310inplace_add.14', '$norm_factor292.4', '$k294.5']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=JUMP_ABSOLUTE(arg=288, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi290.0', '$phi290.1', '$phi290.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=288, stack=('$phi290.0', '$phi290.1', '$phi290.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=394 nstack_initial=1), State(pc_initial=362 nstack_initial=2), State(pc_initial=380 nstack_initial=2), State(pc_initial=322 nstack_initial=2), State(pc_initial=288 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi394.0']
DEBUG:numba.core.byteflow:dispatch pc=394, inst=SETUP_LOOP(arg=84, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi394.0']
DEBUG:numba.core.byteflow:dispatch pc=396, inst=LOAD_GLOBAL(arg=3, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi394.0']
DEBUG:numba.core.byteflow:dispatch pc=398, inst=LOAD_FAST(arg=6, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$396load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=LOAD_FAST(arg=10, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$396load_global.1', '$block_references398.2']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=BINARY_SUBSCR(arg=None, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$396load_global.1', '$block_references398.2', '$i400.3']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=6, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$396load_global.1', '$402binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=406, inst=LOAD_FAST(arg=10, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$396load_global.1', '$402binary_subscr.4', '$block_references404.5']
DEBUG:numba.core.byteflow:dispatch pc=408, inst=LOAD_CONST(arg=1, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$396load_global.1', '$402binary_subscr.4', '$block_references404.5', '$i406.6']
DEBUG:numba.core.byteflow:dispatch pc=410, inst=BINARY_ADD(arg=None, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$396load_global.1', '$402binary_subscr.4', '$block_references404.5', '$i406.6', '$const408.7']
DEBUG:numba.core.byteflow:dispatch pc=412, inst=BINARY_SUBSCR(arg=None, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$396load_global.1', '$402binary_subscr.4', '$block_references404.5', '$410binary_add.8']
DEBUG:numba.core.byteflow:dispatch pc=414, inst=CALL_FUNCTION(arg=2, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$396load_global.1', '$402binary_subscr.4', '$412binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=416, inst=GET_ITER(arg=None, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$414call_function.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=418, stack=('$phi394.0', '$416get_iter.11'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=362 nstack_initial=2), State(pc_initial=380 nstack_initial=2), State(pc_initial=322 nstack_initial=2), State(pc_initial=288 nstack_initial=3), State(pc_initial=418 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi362.0', '$phi362.1']
DEBUG:numba.core.byteflow:dispatch pc=362, inst=LOAD_CONST(arg=1, lineno=56)
DEBUG:numba.core.byteflow:stack ['$phi362.0', '$phi362.1']
DEBUG:numba.core.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=9, lineno=56)
DEBUG:numba.core.byteflow:stack ['$phi362.0', '$phi362.1', '$const362.2']
DEBUG:numba.core.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=13, lineno=56)
DEBUG:numba.core.byteflow:stack ['$phi362.0', '$phi362.1', '$const362.2', '$norm_factor364.3']
DEBUG:numba.core.byteflow:dispatch pc=368, inst=BINARY_SUBSCR(arg=None, lineno=56)
DEBUG:numba.core.byteflow:stack ['$phi362.0', '$phi362.1', '$const362.2', '$norm_factor364.3', '$k366.4']
DEBUG:numba.core.byteflow:dispatch pc=370, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=56)
DEBUG:numba.core.byteflow:stack ['$phi362.0', '$phi362.1', '$const362.2', '$368binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=372, inst=LOAD_FAST(arg=9, lineno=56)
DEBUG:numba.core.byteflow:stack ['$phi362.0', '$phi362.1', '$370binary_true_divide.6']
DEBUG:numba.core.byteflow:dispatch pc=374, inst=LOAD_FAST(arg=13, lineno=56)
DEBUG:numba.core.byteflow:stack ['$phi362.0', '$phi362.1', '$370binary_true_divide.6', '$norm_factor372.7']
DEBUG:numba.core.byteflow:dispatch pc=376, inst=STORE_SUBSCR(arg=None, lineno=56)
DEBUG:numba.core.byteflow:stack ['$phi362.0', '$phi362.1', '$370binary_true_divide.6', '$norm_factor372.7', '$k374.8']
DEBUG:numba.core.byteflow:dispatch pc=378, inst=JUMP_FORWARD(arg=8, lineno=56)
DEBUG:numba.core.byteflow:stack ['$phi362.0', '$phi362.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=388, stack=('$phi362.0', '$phi362.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=380 nstack_initial=2), State(pc_initial=322 nstack_initial=2), State(pc_initial=288 nstack_initial=3), State(pc_initial=418 nstack_initial=2), State(pc_initial=388 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi380.0', '$phi380.1']
DEBUG:numba.core.byteflow:dispatch pc=380, inst=LOAD_CONST(arg=4, lineno=58)
DEBUG:numba.core.byteflow:stack ['$phi380.0', '$phi380.1']
DEBUG:numba.core.byteflow:dispatch pc=382, inst=LOAD_FAST(arg=9, lineno=58)
DEBUG:numba.core.byteflow:stack ['$phi380.0', '$phi380.1', '$const380.2']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=13, lineno=58)
DEBUG:numba.core.byteflow:stack ['$phi380.0', '$phi380.1', '$const380.2', '$norm_factor382.3']
DEBUG:numba.core.byteflow:dispatch pc=386, inst=STORE_SUBSCR(arg=None, lineno=58)
DEBUG:numba.core.byteflow:stack ['$phi380.0', '$phi380.1', '$const380.2', '$norm_factor382.3', '$k384.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=388, stack=('$phi380.0', '$phi380.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=322 nstack_initial=2), State(pc_initial=288 nstack_initial=3), State(pc_initial=418 nstack_initial=2), State(pc_initial=388 nstack_initial=2), State(pc_initial=388 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi322.0', '$phi322.1']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=JUMP_ABSOLUTE(arg=268, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi322.0', '$phi322.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=268, stack=('$phi322.0', '$phi322.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=288 nstack_initial=3), State(pc_initial=418 nstack_initial=2), State(pc_initial=388 nstack_initial=2), State(pc_initial=388 nstack_initial=2), State(pc_initial=268 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=418 nstack_initial=2), State(pc_initial=388 nstack_initial=2), State(pc_initial=388 nstack_initial=2), State(pc_initial=268 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi418.0', '$phi418.1']
DEBUG:numba.core.byteflow:dispatch pc=418, inst=FOR_ITER(arg=58, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi418.0', '$phi418.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=478, stack=('$phi418.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=420, stack=('$phi418.0', '$phi418.1', '$418for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=388 nstack_initial=2), State(pc_initial=388 nstack_initial=2), State(pc_initial=268 nstack_initial=2), State(pc_initial=478 nstack_initial=1), State(pc_initial=420 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi388.0', '$phi388.1']
DEBUG:numba.core.byteflow:dispatch pc=388, inst=JUMP_ABSOLUTE(arg=344, lineno=58)
DEBUG:numba.core.byteflow:stack ['$phi388.0', '$phi388.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=344, stack=('$phi388.0', '$phi388.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=388 nstack_initial=2), State(pc_initial=268 nstack_initial=2), State(pc_initial=478 nstack_initial=1), State(pc_initial=420 nstack_initial=3), State(pc_initial=344 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=268 nstack_initial=2), State(pc_initial=478 nstack_initial=1), State(pc_initial=420 nstack_initial=3), State(pc_initial=344 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=478 nstack_initial=1), State(pc_initial=420 nstack_initial=3), State(pc_initial=344 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi478.0']
DEBUG:numba.core.byteflow:dispatch pc=478, inst=POP_BLOCK(arg=None, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi478.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=480, stack=('$phi478.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=420 nstack_initial=3), State(pc_initial=344 nstack_initial=2), State(pc_initial=480 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi420.0', '$phi420.1', '$phi420.2']
DEBUG:numba.core.byteflow:dispatch pc=420, inst=STORE_FAST(arg=12, lineno=59)
DEBUG:numba.core.byteflow:stack ['$phi420.0', '$phi420.1', '$phi420.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=422, stack=('$phi420.0', '$phi420.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=344 nstack_initial=2), State(pc_initial=480 nstack_initial=1), State(pc_initial=422 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=480 nstack_initial=1), State(pc_initial=422 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi480.0']
DEBUG:numba.core.byteflow:dispatch pc=480, inst=JUMP_ABSOLUTE(arg=206, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi480.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=206, stack=('$phi480.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=422 nstack_initial=2), State(pc_initial=206 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi422.0', '$phi422.1']
DEBUG:numba.core.byteflow:dispatch pc=422, inst=SETUP_LOOP(arg=50, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1']
DEBUG:numba.core.byteflow:dispatch pc=424, inst=LOAD_GLOBAL(arg=3, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1']
DEBUG:numba.core.byteflow:dispatch pc=426, inst=LOAD_CONST(arg=2, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=428, inst=LOAD_FAST(arg=7, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.2', '$const426.3']
DEBUG:numba.core.byteflow:dispatch pc=430, inst=LOAD_ATTR(arg=2, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.2', '$const426.3', '$transition_probabilities428.4']
DEBUG:numba.core.byteflow:dispatch pc=432, inst=LOAD_CONST(arg=1, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.2', '$const426.3', '$430load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=BINARY_SUBSCR(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.2', '$const426.3', '$430load_attr.5', '$const432.6']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=CALL_FUNCTION(arg=2, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$424load_global.2', '$const426.3', '$434binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=438, inst=GET_ITER(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi422.0', '$phi422.1', '$436call_function.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=440, stack=('$phi422.0', '$phi422.1', '$438get_iter.9'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 474, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=206 nstack_initial=1), State(pc_initial=440 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=440 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi440.0', '$phi440.1', '$phi440.2']
DEBUG:numba.core.byteflow:dispatch pc=440, inst=FOR_ITER(arg=30, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi440.0', '$phi440.1', '$phi440.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=472, stack=('$phi440.0', '$phi440.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 474, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=442, stack=('$phi440.0', '$phi440.1', '$phi440.2', '$440for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 474, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=472 nstack_initial=2), State(pc_initial=442 nstack_initial=4)])
DEBUG:numba.core.byteflow:stack: ['$phi472.0', '$phi472.1']
DEBUG:numba.core.byteflow:dispatch pc=472, inst=POP_BLOCK(arg=None, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi472.0', '$phi472.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=474, stack=('$phi472.0', '$phi472.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=442 nstack_initial=4), State(pc_initial=474 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi442.0', '$phi442.1', '$phi442.2', '$phi442.3']
DEBUG:numba.core.byteflow:dispatch pc=442, inst=STORE_FAST(arg=13, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2', '$phi442.3']
DEBUG:numba.core.byteflow:dispatch pc=444, inst=LOAD_FAST(arg=7, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2']
DEBUG:numba.core.byteflow:dispatch pc=446, inst=LOAD_FAST(arg=12, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2', '$transition_probabilities444.4']
DEBUG:numba.core.byteflow:dispatch pc=448, inst=LOAD_FAST(arg=13, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2', '$transition_probabilities444.4', '$j446.5']
DEBUG:numba.core.byteflow:dispatch pc=450, inst=BUILD_TUPLE(arg=2, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2', '$transition_probabilities444.4', '$j446.5', '$k448.6']
DEBUG:numba.core.byteflow:dispatch pc=452, inst=DUP_TOP_TWO(arg=None, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2', '$transition_probabilities444.4', '$450build_tuple.7']
DEBUG:numba.core.byteflow:dispatch pc=454, inst=BINARY_SUBSCR(arg=None, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2', '$transition_probabilities444.4', '$450build_tuple.7', '$452dup_top_two.8', '$452dup_top_two.9']
DEBUG:numba.core.byteflow:dispatch pc=456, inst=LOAD_FAST(arg=9, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2', '$transition_probabilities444.4', '$450build_tuple.7', '$454binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=458, inst=LOAD_FAST(arg=13, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2', '$transition_probabilities444.4', '$450build_tuple.7', '$454binary_subscr.10', '$norm_factor456.11']
DEBUG:numba.core.byteflow:dispatch pc=460, inst=BINARY_SUBSCR(arg=None, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2', '$transition_probabilities444.4', '$450build_tuple.7', '$454binary_subscr.10', '$norm_factor456.11', '$k458.12']
DEBUG:numba.core.byteflow:dispatch pc=462, inst=INPLACE_MULTIPLY(arg=None, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2', '$transition_probabilities444.4', '$450build_tuple.7', '$454binary_subscr.10', '$460binary_subscr.13']
DEBUG:numba.core.byteflow:dispatch pc=464, inst=ROT_THREE(arg=None, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2', '$transition_probabilities444.4', '$450build_tuple.7', '$462inplace_multiply.14']
DEBUG:numba.core.byteflow:dispatch pc=466, inst=STORE_SUBSCR(arg=None, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2', '$462inplace_multiply.14', '$transition_probabilities444.4', '$450build_tuple.7']
DEBUG:numba.core.byteflow:dispatch pc=468, inst=JUMP_ABSOLUTE(arg=440, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi442.0', '$phi442.1', '$phi442.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=440, stack=('$phi442.0', '$phi442.1', '$phi442.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 474, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=474 nstack_initial=2), State(pc_initial=440 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi474.0', '$phi474.1']
DEBUG:numba.core.byteflow:dispatch pc=474, inst=JUMP_ABSOLUTE(arg=418, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi474.0', '$phi474.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=418, stack=('$phi474.0', '$phi474.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=440 nstack_initial=3), State(pc_initial=418 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=418 nstack_initial=2)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=1): {'$phi34.0'},
             State(pc_initial=36 nstack_initial=2): {'$phi36.1'},
             State(pc_initial=46 nstack_initial=1): set(),
             State(pc_initial=62 nstack_initial=2): {'$phi62.1'},
             State(pc_initial=64 nstack_initial=3): {'$phi64.2'},
             State(pc_initial=96 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=110 nstack_initial=1): set(),
             State(pc_initial=126 nstack_initial=2): {'$phi126.1'},
             State(pc_initial=128 nstack_initial=3): {'$phi128.2'},
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=174 nstack_initial=1): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set(),
             State(pc_initial=206 nstack_initial=1): {'$phi206.0'},
             State(pc_initial=210 nstack_initial=2): {'$phi210.1'},
             State(pc_initial=212 nstack_initial=1): set(),
             State(pc_initial=228 nstack_initial=2): {'$phi228.1'},
             State(pc_initial=230 nstack_initial=3): {'$phi230.2'},
             State(pc_initial=242 nstack_initial=1): set(),
             State(pc_initial=244 nstack_initial=1): set(),
             State(pc_initial=268 nstack_initial=2): {'$phi268.1'},
             State(pc_initial=270 nstack_initial=3): {'$phi270.2'},
             State(pc_initial=272 nstack_initial=2): set(),
             State(pc_initial=288 nstack_initial=3): {'$phi288.2'},
             State(pc_initial=290 nstack_initial=4): {'$phi290.3'},
             State(pc_initial=320 nstack_initial=2): set(),
             State(pc_initial=322 nstack_initial=2): set(),
             State(pc_initial=326 nstack_initial=1): set(),
             State(pc_initial=328 nstack_initial=1): set(),
             State(pc_initial=344 nstack_initial=2): {'$phi344.1'},
             State(pc_initial=346 nstack_initial=3): {'$phi346.2'},
             State(pc_initial=362 nstack_initial=2): set(),
             State(pc_initial=380 nstack_initial=2): set(),
             State(pc_initial=388 nstack_initial=2): set(),
             State(pc_initial=392 nstack_initial=1): set(),
             State(pc_initial=394 nstack_initial=1): set(),
             State(pc_initial=418 nstack_initial=2): {'$phi418.1'},
             State(pc_initial=420 nstack_initial=3): {'$phi420.2'},
             State(pc_initial=422 nstack_initial=2): set(),
             State(pc_initial=440 nstack_initial=3): {'$phi440.2'},
             State(pc_initial=442 nstack_initial=4): {'$phi442.3'},
             State(pc_initial=472 nstack_initial=2): set(),
             State(pc_initial=474 nstack_initial=2): set(),
             State(pc_initial=478 nstack_initial=1): set(),
             State(pc_initial=480 nstack_initial=1): set(),
             State(pc_initial=482 nstack_initial=0): set(),
             State(pc_initial=484 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi126.1': State(pc_initial=110 nstack_initial=1),
 '$phi128.2': State(pc_initial=126 nstack_initial=2),
 '$phi206.0': State(pc_initial=184 nstack_initial=0),
 '$phi210.1': State(pc_initial=206 nstack_initial=1),
 '$phi228.1': State(pc_initial=212 nstack_initial=1),
 '$phi230.2': State(pc_initial=228 nstack_initial=2),
 '$phi268.1': State(pc_initial=244 nstack_initial=1),
 '$phi270.2': State(pc_initial=268 nstack_initial=2),
 '$phi288.2': State(pc_initial=272 nstack_initial=2),
 '$phi290.3': State(pc_initial=288 nstack_initial=3),
 '$phi34.0': State(pc_initial=18 nstack_initial=0),
 '$phi344.1': State(pc_initial=328 nstack_initial=1),
 '$phi346.2': State(pc_initial=344 nstack_initial=2),
 '$phi36.1': State(pc_initial=34 nstack_initial=1),
 '$phi418.1': State(pc_initial=394 nstack_initial=1),
 '$phi420.2': State(pc_initial=418 nstack_initial=2),
 '$phi440.2': State(pc_initial=422 nstack_initial=2),
 '$phi442.3': State(pc_initial=440 nstack_initial=3),
 '$phi62.1': State(pc_initial=46 nstack_initial=1),
 '$phi64.2': State(pc_initial=62 nstack_initial=2)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi110.0': {('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi126.0': {('$phi110.0',
                            State(pc_initial=110 nstack_initial=1)),
                           ('$phi128.0',
                            State(pc_initial=128 nstack_initial=3))},
             '$phi126.1': {('$124get_iter.7',
                            State(pc_initial=110 nstack_initial=1)),
                           ('$phi128.1',
                            State(pc_initial=128 nstack_initial=3))},
             '$phi128.0': {('$phi126.0',
                            State(pc_initial=126 nstack_initial=2))},
             '$phi128.1': {('$phi126.1',
                            State(pc_initial=126 nstack_initial=2))},
             '$phi128.2': {('$126for_iter.3',
                            State(pc_initial=126 nstack_initial=2))},
             '$phi172.0': {('$phi126.0',
                            State(pc_initial=126 nstack_initial=2))},
             '$phi174.0': {('$phi172.0',
                            State(pc_initial=172 nstack_initial=1))},
             '$phi206.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi480.0',
                            State(pc_initial=480 nstack_initial=1))},
             '$phi210.0': {('$phi206.0',
                            State(pc_initial=206 nstack_initial=1))},
             '$phi210.1': {('$206for_iter.2',
                            State(pc_initial=206 nstack_initial=1))},
             '$phi212.0': {('$phi210.0',
                            State(pc_initial=210 nstack_initial=2))},
             '$phi228.0': {('$phi212.0',
                            State(pc_initial=212 nstack_initial=1)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=3))},
             '$phi228.1': {('$226get_iter.7',
                            State(pc_initial=212 nstack_initial=1)),
                           ('$phi230.1',
                            State(pc_initial=230 nstack_initial=3))},
             '$phi230.0': {('$phi228.0',
                            State(pc_initial=228 nstack_initial=2))},
             '$phi230.1': {('$phi228.1',
                            State(pc_initial=228 nstack_initial=2))},
             '$phi230.2': {('$228for_iter.3',
                            State(pc_initial=228 nstack_initial=2))},
             '$phi242.0': {('$phi228.0',
                            State(pc_initial=228 nstack_initial=2))},
             '$phi244.0': {('$phi242.0',
                            State(pc_initial=242 nstack_initial=1))},
             '$phi268.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=1)),
                           ('$phi322.0',
                            State(pc_initial=322 nstack_initial=2))},
             '$phi268.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1)),
                           ('$phi322.1',
                            State(pc_initial=322 nstack_initial=2))},
             '$phi270.0': {('$phi268.0',
                            State(pc_initial=268 nstack_initial=2))},
             '$phi270.1': {('$phi268.1',
                            State(pc_initial=268 nstack_initial=2))},
             '$phi270.2': {('$268for_iter.3',
                            State(pc_initial=268 nstack_initial=2))},
             '$phi272.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=3))},
             '$phi272.1': {('$phi270.1',
                            State(pc_initial=270 nstack_initial=3))},
             '$phi288.0': {('$phi272.0',
                            State(pc_initial=272 nstack_initial=2)),
                           ('$phi290.0',
                            State(pc_initial=290 nstack_initial=4))},
             '$phi288.1': {('$phi272.1',
                            State(pc_initial=272 nstack_initial=2)),
                           ('$phi290.1',
                            State(pc_initial=290 nstack_initial=4))},
             '$phi288.2': {('$286get_iter.8',
                            State(pc_initial=272 nstack_initial=2)),
                           ('$phi290.2',
                            State(pc_initial=290 nstack_initial=4))},
             '$phi290.0': {('$phi288.0',
                            State(pc_initial=288 nstack_initial=3))},
             '$phi290.1': {('$phi288.1',
                            State(pc_initial=288 nstack_initial=3))},
             '$phi290.2': {('$phi288.2',
                            State(pc_initial=288 nstack_initial=3))},
             '$phi290.3': {('$288for_iter.4',
                            State(pc_initial=288 nstack_initial=3))},
             '$phi320.0': {('$phi288.0',
                            State(pc_initial=288 nstack_initial=3))},
             '$phi320.1': {('$phi288.1',
                            State(pc_initial=288 nstack_initial=3))},
             '$phi322.0': {('$phi320.0',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi322.1': {('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi326.0': {('$phi268.0',
                            State(pc_initial=268 nstack_initial=2))},
             '$phi328.0': {('$phi326.0',
                            State(pc_initial=326 nstack_initial=1))},
             '$phi34.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0)),
                          ('$phi174.0', State(pc_initial=174 nstack_initial=1)),
                          ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi344.0': {('$phi328.0',
                            State(pc_initial=328 nstack_initial=1)),
                           ('$phi388.0',
                            State(pc_initial=388 nstack_initial=2))},
             '$phi344.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1)),
                           ('$phi388.1',
                            State(pc_initial=388 nstack_initial=2))},
             '$phi346.0': {('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi346.1': {('$phi344.1',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi346.2': {('$344for_iter.3',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi36.0': {('$phi34.0', State(pc_initial=34 nstack_initial=1))},
             '$phi36.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi362.0': {('$phi346.0',
                            State(pc_initial=346 nstack_initial=3))},
             '$phi362.1': {('$phi346.1',
                            State(pc_initial=346 nstack_initial=3))},
             '$phi380.0': {('$phi346.0',
                            State(pc_initial=346 nstack_initial=3))},
             '$phi380.1': {('$phi346.1',
                            State(pc_initial=346 nstack_initial=3))},
             '$phi388.0': {('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2))},
             '$phi388.1': {('$phi362.1',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.1',
                            State(pc_initial=380 nstack_initial=2))},
             '$phi392.0': {('$phi344.0',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi394.0': {('$phi392.0',
                            State(pc_initial=392 nstack_initial=1))},
             '$phi418.0': {('$phi394.0',
                            State(pc_initial=394 nstack_initial=1)),
                           ('$phi474.0',
                            State(pc_initial=474 nstack_initial=2))},
             '$phi418.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1)),
                           ('$phi474.1',
                            State(pc_initial=474 nstack_initial=2))},
             '$phi420.0': {('$phi418.0',
                            State(pc_initial=418 nstack_initial=2))},
             '$phi420.1': {('$phi418.1',
                            State(pc_initial=418 nstack_initial=2))},
             '$phi420.2': {('$418for_iter.3',
                            State(pc_initial=418 nstack_initial=2))},
             '$phi422.0': {('$phi420.0',
                            State(pc_initial=420 nstack_initial=3))},
             '$phi422.1': {('$phi420.1',
                            State(pc_initial=420 nstack_initial=3))},
             '$phi440.0': {('$phi422.0',
                            State(pc_initial=422 nstack_initial=2)),
                           ('$phi442.0',
                            State(pc_initial=442 nstack_initial=4))},
             '$phi440.1': {('$phi422.1',
                            State(pc_initial=422 nstack_initial=2)),
                           ('$phi442.1',
                            State(pc_initial=442 nstack_initial=4))},
             '$phi440.2': {('$438get_iter.9',
                            State(pc_initial=422 nstack_initial=2)),
                           ('$phi442.2',
                            State(pc_initial=442 nstack_initial=4))},
             '$phi442.0': {('$phi440.0',
                            State(pc_initial=440 nstack_initial=3))},
             '$phi442.1': {('$phi440.1',
                            State(pc_initial=440 nstack_initial=3))},
             '$phi442.2': {('$phi440.2',
                            State(pc_initial=440 nstack_initial=3))},
             '$phi442.3': {('$440for_iter.4',
                            State(pc_initial=440 nstack_initial=3))},
             '$phi46.0': {('$phi36.0', State(pc_initial=36 nstack_initial=2))},
             '$phi472.0': {('$phi440.0',
                            State(pc_initial=440 nstack_initial=3))},
             '$phi472.1': {('$phi440.1',
                            State(pc_initial=440 nstack_initial=3))},
             '$phi474.0': {('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi474.1': {('$phi472.1',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi478.0': {('$phi418.0',
                            State(pc_initial=418 nstack_initial=2))},
             '$phi480.0': {('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi62.0': {('$phi46.0', State(pc_initial=46 nstack_initial=1)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=3))},
             '$phi62.1': {('$60get_iter.7',
                           State(pc_initial=46 nstack_initial=1)),
                          ('$phi64.1', State(pc_initial=64 nstack_initial=3))},
             '$phi64.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi64.1': {('$phi62.1', State(pc_initial=62 nstack_initial=2))},
             '$phi64.2': {('$62for_iter.3',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi96.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi98.0': {('$phi96.0', State(pc_initial=96 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi110.0': {('$phi96.0', State(pc_initial=96 nstack_initial=1))},
             '$phi126.0': {('$phi126.0',
                            State(pc_initial=126 nstack_initial=2)),
                           ('$phi96.0', State(pc_initial=96 nstack_initial=1))},
             '$phi126.1': {('$124get_iter.7',
                            State(pc_initial=110 nstack_initial=1)),
                           ('$phi126.1',
                            State(pc_initial=126 nstack_initial=2))},
             '$phi128.0': {('$phi96.0', State(pc_initial=96 nstack_initial=1))},
             '$phi128.1': {('$124get_iter.7',
                            State(pc_initial=110 nstack_initial=1))},
             '$phi128.2': {('$126for_iter.3',
                            State(pc_initial=126 nstack_initial=2))},
             '$phi172.0': {('$phi96.0', State(pc_initial=96 nstack_initial=1))},
             '$phi174.0': {('$phi96.0', State(pc_initial=96 nstack_initial=1))},
             '$phi206.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi210.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi210.1': {('$206for_iter.2',
                            State(pc_initial=206 nstack_initial=1))},
             '$phi212.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi228.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi228.0',
                            State(pc_initial=228 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi228.1': {('$226get_iter.7',
                            State(pc_initial=212 nstack_initial=1)),
                           ('$phi228.1',
                            State(pc_initial=228 nstack_initial=2))},
             '$phi230.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi230.1': {('$226get_iter.7',
                            State(pc_initial=212 nstack_initial=1))},
             '$phi230.2': {('$228for_iter.3',
                            State(pc_initial=228 nstack_initial=2))},
             '$phi242.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi244.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi268.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi268.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi270.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi270.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi270.2': {('$268for_iter.3',
                            State(pc_initial=268 nstack_initial=2))},
             '$phi272.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi272.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi288.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi288.0',
                            State(pc_initial=288 nstack_initial=3)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi288.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1)),
                           ('$phi288.1',
                            State(pc_initial=288 nstack_initial=3)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi288.2': {('$286get_iter.8',
                            State(pc_initial=272 nstack_initial=2)),
                           ('$phi288.2',
                            State(pc_initial=288 nstack_initial=3))},
             '$phi290.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi290.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi290.2': {('$286get_iter.8',
                            State(pc_initial=272 nstack_initial=2))},
             '$phi290.3': {('$288for_iter.4',
                            State(pc_initial=288 nstack_initial=3))},
             '$phi320.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi320.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1)),
                           ('$phi320.1',
                            State(pc_initial=320 nstack_initial=2))},
             '$phi322.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi322.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi326.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi328.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi34.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0)),
                          ('$phi96.0', State(pc_initial=96 nstack_initial=1))},
             '$phi344.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi344.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1)),
                           ('$phi362.1',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.1',
                            State(pc_initial=380 nstack_initial=2))},
             '$phi346.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi346.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1)),
                           ('$phi362.1',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.1',
                            State(pc_initial=380 nstack_initial=2))},
             '$phi346.2': {('$344for_iter.3',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi36.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0)),
                          ('$phi96.0', State(pc_initial=96 nstack_initial=1))},
             '$phi36.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi362.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi362.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1)),
                           ('$phi362.1',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.1',
                            State(pc_initial=380 nstack_initial=2))},
             '$phi380.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi380.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1)),
                           ('$phi362.1',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.1',
                            State(pc_initial=380 nstack_initial=2))},
             '$phi388.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi388.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi392.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi394.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi418.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi418.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1)),
                           ('$phi472.1',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi420.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi420.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1)),
                           ('$phi472.1',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi420.2': {('$418for_iter.3',
                            State(pc_initial=418 nstack_initial=2))},
             '$phi422.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi422.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1)),
                           ('$phi472.1',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi440.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi440.0',
                            State(pc_initial=440 nstack_initial=3)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi440.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1)),
                           ('$phi440.1',
                            State(pc_initial=440 nstack_initial=3)),
                           ('$phi472.1',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi440.2': {('$438get_iter.9',
                            State(pc_initial=422 nstack_initial=2)),
                           ('$phi440.2',
                            State(pc_initial=440 nstack_initial=3))},
             '$phi442.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi442.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1)),
                           ('$phi472.1',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi442.2': {('$438get_iter.9',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi442.3': {('$440for_iter.4',
                            State(pc_initial=440 nstack_initial=3))},
             '$phi46.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0)),
                          ('$phi96.0', State(pc_initial=96 nstack_initial=1))},
             '$phi472.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi472.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1)),
                           ('$phi472.1',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi474.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi474.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi478.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2)),
                           ('$phi478.0',
                            State(pc_initial=478 nstack_initial=1))},
             '$phi480.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi62.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2)),
                          ('$phi96.0', State(pc_initial=96 nstack_initial=1))},
             '$phi62.1': {('$60get_iter.7',
                           State(pc_initial=46 nstack_initial=1)),
                          ('$phi62.1', State(pc_initial=62 nstack_initial=2))},
             '$phi64.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0)),
                          ('$phi96.0', State(pc_initial=96 nstack_initial=1))},
             '$phi64.1': {('$60get_iter.7',
                           State(pc_initial=46 nstack_initial=1))},
             '$phi64.2': {('$62for_iter.3',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi96.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0)),
                          ('$phi96.0', State(pc_initial=96 nstack_initial=1))},
             '$phi98.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi110.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi126.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi126.1': {('$124get_iter.7',
                            State(pc_initial=110 nstack_initial=1))},
             '$phi128.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi128.1': {('$124get_iter.7',
                            State(pc_initial=110 nstack_initial=1))},
             '$phi128.2': {('$126for_iter.3',
                            State(pc_initial=126 nstack_initial=2))},
             '$phi172.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi174.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi206.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi210.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi210.1': {('$206for_iter.2',
                            State(pc_initial=206 nstack_initial=1))},
             '$phi212.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi228.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi228.1': {('$226get_iter.7',
                            State(pc_initial=212 nstack_initial=1))},
             '$phi230.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi230.1': {('$226get_iter.7',
                            State(pc_initial=212 nstack_initial=1))},
             '$phi230.2': {('$228for_iter.3',
                            State(pc_initial=228 nstack_initial=2))},
             '$phi242.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi244.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=2)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi268.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi268.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi270.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi270.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi270.2': {('$268for_iter.3',
                            State(pc_initial=268 nstack_initial=2))},
             '$phi272.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi272.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi288.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi288.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi288.2': {('$286get_iter.8',
                            State(pc_initial=272 nstack_initial=2))},
             '$phi290.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi290.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi290.2': {('$286get_iter.8',
                            State(pc_initial=272 nstack_initial=2))},
             '$phi290.3': {('$288for_iter.4',
                            State(pc_initial=288 nstack_initial=3))},
             '$phi320.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi320.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi322.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi322.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi326.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi328.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi362.0',
                            State(pc_initial=362 nstack_initial=2)),
                           ('$phi380.0',
                            State(pc_initial=380 nstack_initial=2)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi34.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi344.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi344.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi346.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi346.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi346.2': {('$344for_iter.3',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi36.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi36.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi362.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi362.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi380.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi380.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi388.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi388.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi392.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi394.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0)),
                           ('$phi472.0',
                            State(pc_initial=472 nstack_initial=2))},
             '$phi418.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi418.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi420.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi420.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi420.2': {('$418for_iter.3',
                            State(pc_initial=418 nstack_initial=2))},
             '$phi422.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi422.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi440.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi440.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi440.2': {('$438get_iter.9',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi442.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi442.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi442.2': {('$438get_iter.9',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi442.3': {('$440for_iter.4',
                            State(pc_initial=440 nstack_initial=3))},
             '$phi46.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi472.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi472.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi474.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi474.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi478.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi480.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi62.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi62.1': {('$60get_iter.7',
                           State(pc_initial=46 nstack_initial=1))},
             '$phi64.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi64.1': {('$60get_iter.7',
                           State(pc_initial=46 nstack_initial=1))},
             '$phi64.2': {('$62for_iter.3',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi96.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi98.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi110.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi126.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi126.1': {('$124get_iter.7',
                            State(pc_initial=110 nstack_initial=1))},
             '$phi128.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi128.1': {('$124get_iter.7',
                            State(pc_initial=110 nstack_initial=1))},
             '$phi128.2': {('$126for_iter.3',
                            State(pc_initial=126 nstack_initial=2))},
             '$phi172.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi174.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi206.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi210.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi210.1': {('$206for_iter.2',
                            State(pc_initial=206 nstack_initial=1))},
             '$phi212.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi228.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi228.1': {('$226get_iter.7',
                            State(pc_initial=212 nstack_initial=1))},
             '$phi230.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi230.1': {('$226get_iter.7',
                            State(pc_initial=212 nstack_initial=1))},
             '$phi230.2': {('$228for_iter.3',
                            State(pc_initial=228 nstack_initial=2))},
             '$phi242.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi244.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi268.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi268.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi270.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi270.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi270.2': {('$268for_iter.3',
                            State(pc_initial=268 nstack_initial=2))},
             '$phi272.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi272.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi288.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi288.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi288.2': {('$286get_iter.8',
                            State(pc_initial=272 nstack_initial=2))},
             '$phi290.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi290.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi290.2': {('$286get_iter.8',
                            State(pc_initial=272 nstack_initial=2))},
             '$phi290.3': {('$288for_iter.4',
                            State(pc_initial=288 nstack_initial=3))},
             '$phi320.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi320.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi322.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi322.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi326.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi328.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi34.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi344.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi344.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi346.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi346.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi346.2': {('$344for_iter.3',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi36.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi36.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi362.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi362.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi380.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi380.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi388.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi388.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi392.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi394.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi418.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi418.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi420.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi420.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi420.2': {('$418for_iter.3',
                            State(pc_initial=418 nstack_initial=2))},
             '$phi422.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi422.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi440.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi440.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi440.2': {('$438get_iter.9',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi442.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi442.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi442.2': {('$438get_iter.9',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi442.3': {('$440for_iter.4',
                            State(pc_initial=440 nstack_initial=3))},
             '$phi46.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi472.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi472.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi474.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi474.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi478.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi480.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi62.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi62.1': {('$60get_iter.7',
                           State(pc_initial=46 nstack_initial=1))},
             '$phi64.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi64.1': {('$60get_iter.7',
                           State(pc_initial=46 nstack_initial=1))},
             '$phi64.2': {('$62for_iter.3',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi96.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi98.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi110.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi126.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi126.1': {('$124get_iter.7',
                            State(pc_initial=110 nstack_initial=1))},
             '$phi128.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi128.1': {('$124get_iter.7',
                            State(pc_initial=110 nstack_initial=1))},
             '$phi128.2': {('$126for_iter.3',
                            State(pc_initial=126 nstack_initial=2))},
             '$phi172.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi174.0': {('$32get_iter.6',
                            State(pc_initial=18 nstack_initial=0))},
             '$phi206.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi210.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi210.1': {('$206for_iter.2',
                            State(pc_initial=206 nstack_initial=1))},
             '$phi212.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi228.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi228.1': {('$226get_iter.7',
                            State(pc_initial=212 nstack_initial=1))},
             '$phi230.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi230.1': {('$226get_iter.7',
                            State(pc_initial=212 nstack_initial=1))},
             '$phi230.2': {('$228for_iter.3',
                            State(pc_initial=228 nstack_initial=2))},
             '$phi242.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi244.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi268.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi268.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi270.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi270.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi270.2': {('$268for_iter.3',
                            State(pc_initial=268 nstack_initial=2))},
             '$phi272.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi272.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi288.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi288.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi288.2': {('$286get_iter.8',
                            State(pc_initial=272 nstack_initial=2))},
             '$phi290.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi290.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi290.2': {('$286get_iter.8',
                            State(pc_initial=272 nstack_initial=2))},
             '$phi290.3': {('$288for_iter.4',
                            State(pc_initial=288 nstack_initial=3))},
             '$phi320.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi320.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi322.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi322.1': {('$266get_iter.11',
                            State(pc_initial=244 nstack_initial=1))},
             '$phi326.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi328.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi34.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi344.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi344.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi346.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi346.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi346.2': {('$344for_iter.3',
                            State(pc_initial=344 nstack_initial=2))},
             '$phi36.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi36.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi362.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi362.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi380.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi380.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi388.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi388.1': {('$342get_iter.7',
                            State(pc_initial=328 nstack_initial=1))},
             '$phi392.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi394.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi418.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi418.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi420.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi420.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi420.2': {('$418for_iter.3',
                            State(pc_initial=418 nstack_initial=2))},
             '$phi422.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi422.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi440.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi440.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi440.2': {('$438get_iter.9',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi442.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi442.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi442.2': {('$438get_iter.9',
                            State(pc_initial=422 nstack_initial=2))},
             '$phi442.3': {('$440for_iter.4',
                            State(pc_initial=440 nstack_initial=3))},
             '$phi46.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi472.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi472.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi474.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi474.1': {('$416get_iter.11',
                            State(pc_initial=394 nstack_initial=1))},
             '$phi478.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi480.0': {('$204get_iter.8',
                            State(pc_initial=184 nstack_initial=0))},
             '$phi62.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi62.1': {('$60get_iter.7',
                           State(pc_initial=46 nstack_initial=1))},
             '$phi64.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi64.1': {('$60get_iter.7',
                           State(pc_initial=46 nstack_initial=1))},
             '$phi64.2': {('$62for_iter.3',
                           State(pc_initial=62 nstack_initial=2))},
             '$phi96.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi98.0': {('$32get_iter.6',
                           State(pc_initial=18 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi126.1': {('$124get_iter.7', State(pc_initial=110 nstack_initial=1))},
 '$phi128.2': {('$126for_iter.3', State(pc_initial=126 nstack_initial=2))},
 '$phi206.0': {('$204get_iter.8', State(pc_initial=184 nstack_initial=0))},
 '$phi210.1': {('$206for_iter.2', State(pc_initial=206 nstack_initial=1))},
 '$phi228.1': {('$226get_iter.7', State(pc_initial=212 nstack_initial=1))},
 '$phi230.2': {('$228for_iter.3', State(pc_initial=228 nstack_initial=2))},
 '$phi268.1': {('$266get_iter.11', State(pc_initial=244 nstack_initial=1))},
 '$phi270.2': {('$268for_iter.3', State(pc_initial=268 nstack_initial=2))},
 '$phi288.2': {('$286get_iter.8', State(pc_initial=272 nstack_initial=2))},
 '$phi290.3': {('$288for_iter.4', State(pc_initial=288 nstack_initial=3))},
 '$phi34.0': {('$32get_iter.6', State(pc_initial=18 nstack_initial=0))},
 '$phi344.1': {('$342get_iter.7', State(pc_initial=328 nstack_initial=1))},
 '$phi346.2': {('$344for_iter.3', State(pc_initial=344 nstack_initial=2))},
 '$phi36.1': {('$34for_iter.2', State(pc_initial=34 nstack_initial=1))},
 '$phi418.1': {('$416get_iter.11', State(pc_initial=394 nstack_initial=1))},
 '$phi420.2': {('$418for_iter.3', State(pc_initial=418 nstack_initial=2))},
 '$phi440.2': {('$438get_iter.9', State(pc_initial=422 nstack_initial=2))},
 '$phi442.3': {('$440for_iter.4', State(pc_initial=440 nstack_initial=3))},
 '$phi62.1': {('$60get_iter.7', State(pc_initial=46 nstack_initial=1))},
 '$phi64.2': {('$62for_iter.3', State(pc_initial=62 nstack_initial=2))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=18 nstack_initial=0): {'$phi34.0': '$32get_iter.6'},
             State(pc_initial=34 nstack_initial=1): {'$phi36.1': '$34for_iter.2'},
             State(pc_initial=46 nstack_initial=1): {'$phi62.1': '$60get_iter.7'},
             State(pc_initial=62 nstack_initial=2): {'$phi64.2': '$62for_iter.3'},
             State(pc_initial=110 nstack_initial=1): {'$phi126.1': '$124get_iter.7'},
             State(pc_initial=126 nstack_initial=2): {'$phi128.2': '$126for_iter.3'},
             State(pc_initial=184 nstack_initial=0): {'$phi206.0': '$204get_iter.8'},
             State(pc_initial=206 nstack_initial=1): {'$phi210.1': '$206for_iter.2'},
             State(pc_initial=212 nstack_initial=1): {'$phi228.1': '$226get_iter.7'},
             State(pc_initial=228 nstack_initial=2): {'$phi230.2': '$228for_iter.3'},
             State(pc_initial=244 nstack_initial=1): {'$phi268.1': '$266get_iter.11'},
             State(pc_initial=268 nstack_initial=2): {'$phi270.2': '$268for_iter.3'},
             State(pc_initial=272 nstack_initial=2): {'$phi288.2': '$286get_iter.8'},
             State(pc_initial=288 nstack_initial=3): {'$phi290.3': '$288for_iter.4'},
             State(pc_initial=328 nstack_initial=1): {'$phi344.1': '$342get_iter.7'},
             State(pc_initial=344 nstack_initial=2): {'$phi346.2': '$344for_iter.3'},
             State(pc_initial=394 nstack_initial=1): {'$phi418.1': '$416get_iter.11'},
             State(pc_initial=418 nstack_initial=2): {'$phi420.2': '$418for_iter.3'},
             State(pc_initial=422 nstack_initial=2): {'$phi440.2': '$438get_iter.9'},
             State(pc_initial=440 nstack_initial=3): {'$phi442.3': '$440for_iter.4'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$transition_probabilities6.2'}), (8, {'item': '$transition_probabilities6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'func': '$4load_method.1', 'args': ['$12binary_subscr.5'], 'res': '$14call_method.6'}), (16, {'value': '$14call_method.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'res': '$transition_probabilities22.1'}), (24, {'item': '$transition_probabilities22.1', 'res': '$24load_attr.2'}), (26, {'res': '$const26.3'}), (28, {'index': '$const26.3', 'target': '$24load_attr.2', 'res': '$28binary_subscr.4'}), (30, {'func': '$20load_global.0', 'args': ['$28binary_subscr.4'], 'res': '$30call_function.5'}), (32, {'value': '$30call_function.5', 'res': '$32get_iter.6'})), outgoing_phis={'$phi34.0': '$32get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: ('$32get_iter.6',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=1):
AdaptBlockInfo(insts=((34, {'iterator': '$phi34.0', 'pair': '$34for_iter.1', 'indval': '$34for_iter.2', 'pred': '$34for_iter.3'}),), outgoing_phis={'$phi36.1': '$34for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={176: (), 36: ('$phi34.0', '$34for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=36 nstack_initial=2):
AdaptBlockInfo(insts=((36, {'value': '$phi36.1'}), (38, {'res': '$lines_idx38.2'}), (40, {'res': '$i40.3'}), (42, {'index': '$i40.3', 'target': '$lines_idx38.2', 'res': '$42binary_subscr.4'}), (44, {'value': '$42binary_subscr.4'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={46: ('$phi36.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=46 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'res': '$48load_global.1'}), (50, {'res': '$transition_probabilities50.2'}), (52, {'item': '$transition_probabilities50.2', 'res': '$52load_attr.3'}), (54, {'res': '$const54.4'}), (56, {'index': '$const54.4', 'target': '$52load_attr.3', 'res': '$56binary_subscr.5'}), (58, {'func': '$48load_global.1', 'args': ['$56binary_subscr.5'], 'res': '$58call_function.6'}), (60, {'value': '$58call_function.6', 'res': '$60get_iter.7'})), outgoing_phis={'$phi62.1': '$60get_iter.7'}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={62: ('$phi46.0', '$60get_iter.7')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'iterator': '$phi62.1', 'pair': '$62for_iter.2', 'indval': '$62for_iter.3', 'pred': '$62for_iter.4'}),), outgoing_phis={'$phi64.2': '$62for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={96: ('$phi62.0',), 64: ('$phi62.0', '$phi62.1', '$62for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=64 nstack_initial=3):
AdaptBlockInfo(insts=((64, {'value': '$phi64.2'}), (66, {'res': '$transition_probability_coef66.3'}), (68, {'res': '$i68.4'}), (70, {'index': '$i68.4', 'target': '$transition_probability_coef66.3', 'res': '$70binary_subscr.5'}), (72, {'res': '$beta_sobolev72.6'}), (74, {'res': '$line_idx74.7'}), (76, {'res': '$j76.8'}), (78, {'items': ['$line_idx74.7', '$j76.8'], 'res': '$78build_tuple.9'}), (80, {'index': '$78build_tuple.9', 'target': '$beta_sobolev72.6', 'res': '$80binary_subscr.10'}), (82, {'lhs': '$70binary_subscr.5', 'rhs': '$80binary_subscr.10', 'res': '$82binary_multiply.11'}), (84, {'res': '$transition_probabilities84.12'}), (86, {'res': '$i86.13'}), (88, {'res': '$j88.14'}), (90, {'items': ['$i86.13', '$j88.14'], 'res': '$90build_tuple.15'}), (92, {'target': '$transition_probabilities84.12', 'index': '$90build_tuple.15', 'value': '$82binary_multiply.11'}), (94, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={62: ('$phi64.0', '$phi64.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=96 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={98: ('$phi96.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$transition_type98.1'}), (100, {'res': '$i100.2'}), (102, {'index': '$i100.2', 'target': '$transition_type98.1', 'res': '$102binary_subscr.3'}), (104, {'res': '$const104.4'}), (106, {'lhs': '$102binary_subscr.3', 'rhs': '$const104.4', 'res': '$106compare_op.5'}), (108, {'pred': '$106compare_op.5'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={110: ('$phi98.0',), 34: ('$phi98.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=110 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'res': '$112load_global.1'}), (114, {'res': '$transition_probabilities114.2'}), (116, {'item': '$transition_probabilities114.2', 'res': '$116load_attr.3'}), (118, {'res': '$const118.4'}), (120, {'index': '$const118.4', 'target': '$116load_attr.3', 'res': '$120binary_subscr.5'}), (122, {'func': '$112load_global.1', 'args': ['$120binary_subscr.5'], 'res': '$122call_function.6'}), (124, {'value': '$122call_function.6', 'res': '$124get_iter.7'})), outgoing_phis={'$phi126.1': '$124get_iter.7'}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={126: ('$phi110.0', '$124get_iter.7')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=126 nstack_initial=2):
AdaptBlockInfo(insts=((126, {'iterator': '$phi126.1', 'pair': '$126for_iter.2', 'indval': '$126for_iter.3', 'pred': '$126for_iter.4'}),), outgoing_phis={'$phi128.2': '$126for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 174, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={172: ('$phi126.0',), 128: ('$phi126.0', '$phi126.1', '$126for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=128 nstack_initial=3):
AdaptBlockInfo(insts=((128, {'value': '$phi128.2'}), (130, {'res': '$transition_probabilities130.3'}), (132, {'res': '$i132.4'}), (134, {'res': '$j134.5'}), (136, {'items': ['$i132.4', '$j134.5'], 'res': '$136build_tuple.6'}), (138, {'orig': ['$transition_probabilities130.3', '$136build_tuple.6'], 'duped': ['$138dup_top_two.7', '$138dup_top_two.8']}), (140, {'index': '$138dup_top_two.8', 'target': '$138dup_top_two.7', 'res': '$140binary_subscr.9'}), (142, {'res': '$stimulated_emission_factor142.10'}), (144, {'res': '$line_idx144.11'}), (146, {'res': '$j146.12'}), (148, {'items': ['$line_idx144.11', '$j146.12'], 'res': '$148build_tuple.13'}), (150, {'index': '$148build_tuple.13', 'target': '$stimulated_emission_factor142.10', 'res': '$150binary_subscr.14'}), (152, {'res': '$j_blues152.15'}), (154, {'res': '$line_idx154.16'}), (156, {'res': '$j156.17'}), (158, {'items': ['$line_idx154.16', '$j156.17'], 'res': '$158build_tuple.18'}), (160, {'index': '$158build_tuple.18', 'target': '$j_blues152.15', 'res': '$160binary_subscr.19'}), (162, {'lhs': '$150binary_subscr.14', 'rhs': '$160binary_subscr.19', 'res': '$162binary_multiply.20'}), (164, {'lhs': '$140binary_subscr.9', 'rhs': '$162binary_multiply.20', 'res': '$164inplace_multiply.21'}), (168, {'target': '$transition_probabilities130.3', 'index': '$136build_tuple.6', 'value': '$164inplace_multiply.21'}), (170, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 174, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={126: ('$phi128.0', '$phi128.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 174, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={174: ('$phi172.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=174 nstack_initial=1):
AdaptBlockInfo(insts=((174, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={34: ('$phi174.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 178, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={178: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((178, {'res': '$normalize178.0'}), (180, {'pred': '$normalize178.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={184: (), 484: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$188load_global.0'}), (190, {'res': '$block_references190.1'}), (192, {'item': '$block_references190.1', 'res': '$192load_attr.2'}), (194, {'res': '$const194.3'}), (196, {'index': '$const194.3', 'target': '$192load_attr.2', 'res': '$196binary_subscr.4'}), (198, {'res': '$const198.5'}), (200, {'lhs': '$196binary_subscr.4', 'rhs': '$const198.5', 'res': '$200binary_subtract.6'}), (202, {'func': '$188load_global.0', 'args': ['$200binary_subtract.6'], 'res': '$202call_function.7'}), (204, {'value': '$202call_function.7', 'res': '$204get_iter.8'})), outgoing_phis={'$phi206.0': '$204get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={206: ('$204get_iter.8',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=206 nstack_initial=1):
AdaptBlockInfo(insts=((206, {'iterator': '$phi206.0', 'pair': '$206for_iter.1', 'indval': '$206for_iter.2', 'pred': '$206for_iter.3'}),), outgoing_phis={'$phi210.1': '$206for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={482: (), 210: ('$phi206.0', '$206for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=210 nstack_initial=2):
AdaptBlockInfo(insts=((210, {'value': '$phi210.1'}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={212: ('$phi210.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=212 nstack_initial=1):
AdaptBlockInfo(insts=((214, {'res': '$214load_global.1'}), (216, {'res': '$transition_probabilities216.2'}), (218, {'item': '$transition_probabilities216.2', 'res': '$218load_attr.3'}), (220, {'res': '$const220.4'}), (222, {'index': '$const220.4', 'target': '$218load_attr.3', 'res': '$222binary_subscr.5'}), (224, {'func': '$214load_global.1', 'args': ['$222binary_subscr.5'], 'res': '$224call_function.6'}), (226, {'value': '$224call_function.6', 'res': '$226get_iter.7'})), outgoing_phis={'$phi228.1': '$226get_iter.7'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={228: ('$phi212.0', '$226get_iter.7')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=228 nstack_initial=2):
AdaptBlockInfo(insts=((228, {'iterator': '$phi228.1', 'pair': '$228for_iter.2', 'indval': '$228for_iter.3', 'pred': '$228for_iter.4'}),), outgoing_phis={'$phi230.2': '$228for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 244, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={242: ('$phi228.0',), 230: ('$phi228.0', '$phi228.1', '$228for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=3):
AdaptBlockInfo(insts=((230, {'value': '$phi230.2'}), (232, {'res': '$const232.3'}), (234, {'res': '$norm_factor234.4'}), (236, {'res': '$k236.5'}), (238, {'target': '$norm_factor234.4', 'index': '$k236.5', 'value': '$const232.3'}), (240, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 244, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={228: ('$phi230.0', '$phi230.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=242 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 244, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi242.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=244 nstack_initial=1):
AdaptBlockInfo(insts=((246, {'res': '$246load_global.1'}), (248, {'res': '$block_references248.2'}), (250, {'res': '$i250.3'}), (252, {'index': '$i250.3', 'target': '$block_references248.2', 'res': '$252binary_subscr.4'}), (254, {'res': '$block_references254.5'}), (256, {'res': '$i256.6'}), (258, {'res': '$const258.7'}), (260, {'lhs': '$i256.6', 'rhs': '$const258.7', 'res': '$260binary_add.8'}), (262, {'index': '$260binary_add.8', 'target': '$block_references254.5', 'res': '$262binary_subscr.9'}), (264, {'func': '$246load_global.1', 'args': ['$252binary_subscr.4', '$262binary_subscr.9'], 'res': '$264call_function.10'}), (266, {'value': '$264call_function.10', 'res': '$266get_iter.11'})), outgoing_phis={'$phi268.1': '$266get_iter.11'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={268: ('$phi244.0', '$266get_iter.11')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=268 nstack_initial=2):
AdaptBlockInfo(insts=((268, {'iterator': '$phi268.1', 'pair': '$268for_iter.2', 'indval': '$268for_iter.3', 'pred': '$268for_iter.4'}),), outgoing_phis={'$phi270.2': '$268for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={326: ('$phi268.0',), 270: ('$phi268.0', '$phi268.1', '$268for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=270 nstack_initial=3):
AdaptBlockInfo(insts=((270, {'value': '$phi270.2'}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={272: ('$phi270.0', '$phi270.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=272 nstack_initial=2):
AdaptBlockInfo(insts=((274, {'res': '$274load_global.2'}), (276, {'res': '$transition_probabilities276.3'}), (278, {'item': '$transition_probabilities276.3', 'res': '$278load_attr.4'}), (280, {'res': '$const280.5'}), (282, {'index': '$const280.5', 'target': '$278load_attr.4', 'res': '$282binary_subscr.6'}), (284, {'func': '$274load_global.2', 'args': ['$282binary_subscr.6'], 'res': '$284call_function.7'}), (286, {'value': '$284call_function.7', 'res': '$286get_iter.8'})), outgoing_phis={'$phi288.2': '$286get_iter.8'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={288: ('$phi272.0', '$phi272.1', '$286get_iter.8')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=288 nstack_initial=3):
AdaptBlockInfo(insts=((288, {'iterator': '$phi288.2', 'pair': '$288for_iter.3', 'indval': '$288for_iter.4', 'pred': '$288for_iter.5'}),), outgoing_phis={'$phi290.3': '$288for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={320: ('$phi288.0', '$phi288.1'), 290: ('$phi288.0', '$phi288.1', '$phi288.2', '$288for_iter.4')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=290 nstack_initial=4):
AdaptBlockInfo(insts=((290, {'value': '$phi290.3'}), (292, {'res': '$norm_factor292.4'}), (294, {'res': '$k294.5'}), (296, {'orig': ['$norm_factor292.4', '$k294.5'], 'duped': ['$296dup_top_two.6', '$296dup_top_two.7']}), (298, {'index': '$296dup_top_two.7', 'target': '$296dup_top_two.6', 'res': '$298binary_subscr.8'}), (300, {'res': '$transition_probabilities300.9'}), (302, {'res': '$j302.10'}), (304, {'res': '$k304.11'}), (306, {'items': ['$j302.10', '$k304.11'], 'res': '$306build_tuple.12'}), (308, {'index': '$306build_tuple.12', 'target': '$transition_probabilities300.9', 'res': '$308binary_subscr.13'}), (310, {'lhs': '$298binary_subscr.8', 'rhs': '$308binary_subscr.13', 'res': '$310inplace_add.14'}), (314, {'target': '$norm_factor292.4', 'index': '$k294.5', 'value': '$310inplace_add.14'}), (316, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={288: ('$phi290.0', '$phi290.1', '$phi290.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=320 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 322, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={322: ('$phi320.0', '$phi320.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=322 nstack_initial=2):
AdaptBlockInfo(insts=((322, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={268: ('$phi322.0', '$phi322.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=326 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 328, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={328: ('$phi326.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=328 nstack_initial=1):
AdaptBlockInfo(insts=((330, {'res': '$330load_global.1'}), (332, {'res': '$transition_probabilities332.2'}), (334, {'item': '$transition_probabilities332.2', 'res': '$334load_attr.3'}), (336, {'res': '$const336.4'}), (338, {'index': '$const336.4', 'target': '$334load_attr.3', 'res': '$338binary_subscr.5'}), (340, {'func': '$330load_global.1', 'args': ['$338binary_subscr.5'], 'res': '$340call_function.6'}), (342, {'value': '$340call_function.6', 'res': '$342get_iter.7'})), outgoing_phis={'$phi344.1': '$342get_iter.7'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={344: ('$phi328.0', '$342get_iter.7')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=344 nstack_initial=2):
AdaptBlockInfo(insts=((344, {'iterator': '$phi344.1', 'pair': '$344for_iter.2', 'indval': '$344for_iter.3', 'pred': '$344for_iter.4'}),), outgoing_phis={'$phi346.2': '$344for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={392: ('$phi344.0',), 346: ('$phi344.0', '$phi344.1', '$344for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=346 nstack_initial=3):
AdaptBlockInfo(insts=((346, {'value': '$phi346.2'}), (348, {'res': '$norm_factor348.3'}), (350, {'res': '$k350.4'}), (352, {'index': '$k350.4', 'target': '$norm_factor348.3', 'res': '$352binary_subscr.5'}), (354, {'res': '$const354.6'}), (356, {'lhs': '$352binary_subscr.5', 'rhs': '$const354.6', 'res': '$356compare_op.7'}), (358, {'pred': '$356compare_op.7'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={362: ('$phi346.0', '$phi346.1'), 380: ('$phi346.0', '$phi346.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=362 nstack_initial=2):
AdaptBlockInfo(insts=((362, {'res': '$const362.2'}), (364, {'res': '$norm_factor364.3'}), (366, {'res': '$k366.4'}), (368, {'index': '$k366.4', 'target': '$norm_factor364.3', 'res': '$368binary_subscr.5'}), (370, {'lhs': '$const362.2', 'rhs': '$368binary_subscr.5', 'res': '$370binary_true_divide.6'}), (372, {'res': '$norm_factor372.7'}), (374, {'res': '$k374.8'}), (376, {'target': '$norm_factor372.7', 'index': '$k374.8', 'value': '$370binary_true_divide.6'}), (378, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={388: ('$phi362.0', '$phi362.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=380 nstack_initial=2):
AdaptBlockInfo(insts=((380, {'res': '$const380.2'}), (382, {'res': '$norm_factor382.3'}), (384, {'res': '$k384.4'}), (386, {'target': '$norm_factor382.3', 'index': '$k384.4', 'value': '$const380.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={388: ('$phi380.0', '$phi380.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=388 nstack_initial=2):
AdaptBlockInfo(insts=((388, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={344: ('$phi388.0', '$phi388.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=392 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 394, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={394: ('$phi392.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=394 nstack_initial=1):
AdaptBlockInfo(insts=((396, {'res': '$396load_global.1'}), (398, {'res': '$block_references398.2'}), (400, {'res': '$i400.3'}), (402, {'index': '$i400.3', 'target': '$block_references398.2', 'res': '$402binary_subscr.4'}), (404, {'res': '$block_references404.5'}), (406, {'res': '$i406.6'}), (408, {'res': '$const408.7'}), (410, {'lhs': '$i406.6', 'rhs': '$const408.7', 'res': '$410binary_add.8'}), (412, {'index': '$410binary_add.8', 'target': '$block_references404.5', 'res': '$412binary_subscr.9'}), (414, {'func': '$396load_global.1', 'args': ['$402binary_subscr.4', '$412binary_subscr.9'], 'res': '$414call_function.10'}), (416, {'value': '$414call_function.10', 'res': '$416get_iter.11'})), outgoing_phis={'$phi418.1': '$416get_iter.11'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={418: ('$phi394.0', '$416get_iter.11')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=418 nstack_initial=2):
AdaptBlockInfo(insts=((418, {'iterator': '$phi418.1', 'pair': '$418for_iter.2', 'indval': '$418for_iter.3', 'pred': '$418for_iter.4'}),), outgoing_phis={'$phi420.2': '$418for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={478: ('$phi418.0',), 420: ('$phi418.0', '$phi418.1', '$418for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=420 nstack_initial=3):
AdaptBlockInfo(insts=((420, {'value': '$phi420.2'}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={422: ('$phi420.0', '$phi420.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=422 nstack_initial=2):
AdaptBlockInfo(insts=((424, {'res': '$424load_global.2'}), (426, {'res': '$const426.3'}), (428, {'res': '$transition_probabilities428.4'}), (430, {'item': '$transition_probabilities428.4', 'res': '$430load_attr.5'}), (432, {'res': '$const432.6'}), (434, {'index': '$const432.6', 'target': '$430load_attr.5', 'res': '$434binary_subscr.7'}), (436, {'func': '$424load_global.2', 'args': ['$const426.3', '$434binary_subscr.7'], 'res': '$436call_function.8'}), (438, {'value': '$436call_function.8', 'res': '$438get_iter.9'})), outgoing_phis={'$phi440.2': '$438get_iter.9'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={440: ('$phi422.0', '$phi422.1', '$438get_iter.9')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=440 nstack_initial=3):
AdaptBlockInfo(insts=((440, {'iterator': '$phi440.2', 'pair': '$440for_iter.3', 'indval': '$440for_iter.4', 'pred': '$440for_iter.5'}),), outgoing_phis={'$phi442.3': '$440for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 474, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={472: ('$phi440.0', '$phi440.1'), 442: ('$phi440.0', '$phi440.1', '$phi440.2', '$440for_iter.4')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=442 nstack_initial=4):
AdaptBlockInfo(insts=((442, {'value': '$phi442.3'}), (444, {'res': '$transition_probabilities444.4'}), (446, {'res': '$j446.5'}), (448, {'res': '$k448.6'}), (450, {'items': ['$j446.5', '$k448.6'], 'res': '$450build_tuple.7'}), (452, {'orig': ['$transition_probabilities444.4', '$450build_tuple.7'], 'duped': ['$452dup_top_two.8', '$452dup_top_two.9']}), (454, {'index': '$452dup_top_two.9', 'target': '$452dup_top_two.8', 'res': '$454binary_subscr.10'}), (456, {'res': '$norm_factor456.11'}), (458, {'res': '$k458.12'}), (460, {'index': '$k458.12', 'target': '$norm_factor456.11', 'res': '$460binary_subscr.13'}), (462, {'lhs': '$454binary_subscr.10', 'rhs': '$460binary_subscr.13', 'res': '$462inplace_multiply.14'}), (466, {'target': '$transition_probabilities444.4', 'index': '$450build_tuple.7', 'value': '$462inplace_multiply.14'}), (468, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 474, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={440: ('$phi442.0', '$phi442.1', '$phi442.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=472 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 474, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={474: ('$phi472.0', '$phi472.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=474 nstack_initial=2):
AdaptBlockInfo(insts=((474, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={418: ('$phi474.0', '$phi474.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=478 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 480, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={480: ('$phi478.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=480 nstack_initial=1):
AdaptBlockInfo(insts=((480, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={206: ('$phi480.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=482 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 484, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={484: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=484 nstack_initial=0):
AdaptBlockInfo(insts=((484, {'res': '$const484.0'}), (486, {'retval': '$const484.0', 'castval': '$486return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    transition_probability_coef = arg(0, name=transition_probability_coef) ['transition_probability_coef']
    beta_sobolev = arg(1, name=beta_sobolev) ['beta_sobolev']
    j_blues = arg(2, name=j_blues)           ['j_blues']
    stimulated_emission_factor = arg(3, name=stimulated_emission_factor) ['stimulated_emission_factor']
    transition_type = arg(4, name=transition_type) ['transition_type']
    lines_idx = arg(5, name=lines_idx)       ['lines_idx']
    block_references = arg(6, name=block_references) ['block_references']
    transition_probabilities = arg(7, name=transition_probabilities) ['transition_probabilities']
    normalize = arg(8, name=normalize)       ['normalize']
    $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=zeros) ['$2load_global.0', '$4load_method.1']
    $8load_attr.3 = getattr(value=transition_probabilities, attr=shape) ['$8load_attr.3', 'transition_probabilities']
    $const10.4 = const(int, 1)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, macro_atom.py:32)], kws=(), vararg=None) ['$12binary_subscr.5', '$14call_method.6', '$4load_method.1']
    norm_factor = $14call_method.6           ['$14call_method.6', 'norm_factor']
    jump 18                                  []
label 18:
    $20load_global.0 = global(range: <class 'range'>) ['$20load_global.0']
    $24load_attr.2 = getattr(value=transition_probabilities, attr=shape) ['$24load_attr.2', 'transition_probabilities']
    $const26.3 = const(int, 0)               ['$const26.3']
    $28binary_subscr.4 = getitem(value=$24load_attr.2, index=$const26.3) ['$24load_attr.2', '$28binary_subscr.4', '$const26.3']
    $30call_function.5 = call $20load_global.0($28binary_subscr.4, func=$20load_global.0, args=[Var($28binary_subscr.4, macro_atom.py:34)], kws=(), vararg=None) ['$20load_global.0', '$28binary_subscr.4', '$30call_function.5']
    $32get_iter.6 = getiter(value=$30call_function.5) ['$30call_function.5', '$32get_iter.6']
    $phi34.0 = $32get_iter.6                 ['$32get_iter.6', '$phi34.0']
    jump 34                                  []
label 34:
    $34for_iter.1 = iternext(value=$phi34.0) ['$34for_iter.1', '$phi34.0']
    $34for_iter.2 = pair_first(value=$34for_iter.1) ['$34for_iter.1', '$34for_iter.2']
    $34for_iter.3 = pair_second(value=$34for_iter.1) ['$34for_iter.1', '$34for_iter.3']
    $phi36.1 = $34for_iter.2                 ['$34for_iter.2', '$phi36.1']
    branch $34for_iter.3, 36, 176            ['$34for_iter.3']
label 36:
    i = $phi36.1                             ['$phi36.1', 'i']
    $42binary_subscr.4 = getitem(value=lines_idx, index=i) ['$42binary_subscr.4', 'i', 'lines_idx']
    line_idx = $42binary_subscr.4            ['$42binary_subscr.4', 'line_idx']
    jump 46                                  []
label 46:
    $48load_global.1 = global(range: <class 'range'>) ['$48load_global.1']
    $52load_attr.3 = getattr(value=transition_probabilities, attr=shape) ['$52load_attr.3', 'transition_probabilities']
    $const54.4 = const(int, 1)               ['$const54.4']
    $56binary_subscr.5 = getitem(value=$52load_attr.3, index=$const54.4) ['$52load_attr.3', '$56binary_subscr.5', '$const54.4']
    $58call_function.6 = call $48load_global.1($56binary_subscr.5, func=$48load_global.1, args=[Var($56binary_subscr.5, macro_atom.py:36)], kws=(), vararg=None) ['$48load_global.1', '$56binary_subscr.5', '$58call_function.6']
    $60get_iter.7 = getiter(value=$58call_function.6) ['$58call_function.6', '$60get_iter.7']
    $phi62.1 = $60get_iter.7                 ['$60get_iter.7', '$phi62.1']
    jump 62                                  []
label 62:
    $62for_iter.2 = iternext(value=$phi62.1) ['$62for_iter.2', '$phi62.1']
    $62for_iter.3 = pair_first(value=$62for_iter.2) ['$62for_iter.2', '$62for_iter.3']
    $62for_iter.4 = pair_second(value=$62for_iter.2) ['$62for_iter.2', '$62for_iter.4']
    $phi64.2 = $62for_iter.3                 ['$62for_iter.3', '$phi64.2']
    branch $62for_iter.4, 64, 96             ['$62for_iter.4']
label 64:
    j = $phi64.2                             ['$phi64.2', 'j']
    $70binary_subscr.5 = getitem(value=transition_probability_coef, index=i) ['$70binary_subscr.5', 'i', 'transition_probability_coef']
    $78build_tuple.9 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)]) ['$78build_tuple.9', 'j', 'line_idx']
    $80binary_subscr.10 = getitem(value=beta_sobolev, index=$78build_tuple.9) ['$78build_tuple.9', '$80binary_subscr.10', 'beta_sobolev']
    $82binary_multiply.11 = $70binary_subscr.5 * $80binary_subscr.10 ['$70binary_subscr.5', '$80binary_subscr.10', '$82binary_multiply.11']
    $90build_tuple.15 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)]) ['$90build_tuple.15', 'i', 'j']
    transition_probabilities[$90build_tuple.15] = $82binary_multiply.11 ['$82binary_multiply.11', '$90build_tuple.15', 'transition_probabilities']
    jump 62                                  []
label 96:
    jump 98                                  []
label 98:
    $102binary_subscr.3 = getitem(value=transition_type, index=i) ['$102binary_subscr.3', 'i', 'transition_type']
    $const104.4 = const(int, 1)              ['$const104.4']
    $106compare_op.5 = $102binary_subscr.3 == $const104.4 ['$102binary_subscr.3', '$106compare_op.5', '$const104.4']
    bool108 = global(bool: <class 'bool'>)   ['bool108']
    $108pred = call bool108($106compare_op.5, func=bool108, args=(Var($106compare_op.5, macro_atom.py:40),), kws=(), vararg=None) ['$106compare_op.5', '$108pred', 'bool108']
    branch $108pred, 110, 34                 ['$108pred']
label 110:
    $112load_global.1 = global(range: <class 'range'>) ['$112load_global.1']
    $116load_attr.3 = getattr(value=transition_probabilities, attr=shape) ['$116load_attr.3', 'transition_probabilities']
    $const118.4 = const(int, 1)              ['$const118.4']
    $120binary_subscr.5 = getitem(value=$116load_attr.3, index=$const118.4) ['$116load_attr.3', '$120binary_subscr.5', '$const118.4']
    $122call_function.6 = call $112load_global.1($120binary_subscr.5, func=$112load_global.1, args=[Var($120binary_subscr.5, macro_atom.py:41)], kws=(), vararg=None) ['$112load_global.1', '$120binary_subscr.5', '$122call_function.6']
    $124get_iter.7 = getiter(value=$122call_function.6) ['$122call_function.6', '$124get_iter.7']
    $phi126.1 = $124get_iter.7               ['$124get_iter.7', '$phi126.1']
    jump 126                                 []
label 126:
    $126for_iter.2 = iternext(value=$phi126.1) ['$126for_iter.2', '$phi126.1']
    $126for_iter.3 = pair_first(value=$126for_iter.2) ['$126for_iter.2', '$126for_iter.3']
    $126for_iter.4 = pair_second(value=$126for_iter.2) ['$126for_iter.2', '$126for_iter.4']
    $phi128.2 = $126for_iter.3               ['$126for_iter.3', '$phi128.2']
    branch $126for_iter.4, 128, 172          ['$126for_iter.4']
label 128:
    j = $phi128.2                            ['$phi128.2', 'j']
    $136build_tuple.6 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)]) ['$136build_tuple.6', 'i', 'j']
    $140binary_subscr.9 = getitem(value=transition_probabilities, index=$136build_tuple.6) ['$136build_tuple.6', '$140binary_subscr.9', 'transition_probabilities']
    $148build_tuple.13 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)]) ['$148build_tuple.13', 'j', 'line_idx']
    $150binary_subscr.14 = getitem(value=stimulated_emission_factor, index=$148build_tuple.13) ['$148build_tuple.13', '$150binary_subscr.14', 'stimulated_emission_factor']
    $158build_tuple.18 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)]) ['$158build_tuple.18', 'j', 'line_idx']
    $160binary_subscr.19 = getitem(value=j_blues, index=$158build_tuple.18) ['$158build_tuple.18', '$160binary_subscr.19', 'j_blues']
    $162binary_multiply.20 = $150binary_subscr.14 * $160binary_subscr.19 ['$150binary_subscr.14', '$160binary_subscr.19', '$162binary_multiply.20']
    $164inplace_multiply.21 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$140binary_subscr.9, rhs=$162binary_multiply.20, static_lhs=Undefined, static_rhs=Undefined) ['$140binary_subscr.9', '$162binary_multiply.20', '$164inplace_multiply.21']
    transition_probabilities[$136build_tuple.6] = $164inplace_multiply.21 ['$136build_tuple.6', '$164inplace_multiply.21', 'transition_probabilities']
    jump 126                                 []
label 172:
    jump 174                                 []
label 174:
    jump 34                                  []
label 176:
    jump 178                                 []
label 178:
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    $180pred = call bool180(normalize, func=bool180, args=(Var(normalize, macro_atom.py:32),), kws=(), vararg=None) ['$180pred', 'bool180', 'normalize']
    branch $180pred, 184, 484                ['$180pred']
label 184:
    $188load_global.0 = global(range: <class 'range'>) ['$188load_global.0']
    $192load_attr.2 = getattr(value=block_references, attr=shape) ['$192load_attr.2', 'block_references']
    $const194.3 = const(int, 0)              ['$const194.3']
    $196binary_subscr.4 = getitem(value=$192load_attr.2, index=$const194.3) ['$192load_attr.2', '$196binary_subscr.4', '$const194.3']
    $const198.5 = const(int, 1)              ['$const198.5']
    $200binary_subtract.6 = $196binary_subscr.4 - $const198.5 ['$196binary_subscr.4', '$200binary_subtract.6', '$const198.5']
    $202call_function.7 = call $188load_global.0($200binary_subtract.6, func=$188load_global.0, args=[Var($200binary_subtract.6, macro_atom.py:48)], kws=(), vararg=None) ['$188load_global.0', '$200binary_subtract.6', '$202call_function.7']
    $204get_iter.8 = getiter(value=$202call_function.7) ['$202call_function.7', '$204get_iter.8']
    $phi206.0 = $204get_iter.8               ['$204get_iter.8', '$phi206.0']
    jump 206                                 []
label 206:
    $206for_iter.1 = iternext(value=$phi206.0) ['$206for_iter.1', '$phi206.0']
    $206for_iter.2 = pair_first(value=$206for_iter.1) ['$206for_iter.1', '$206for_iter.2']
    $206for_iter.3 = pair_second(value=$206for_iter.1) ['$206for_iter.1', '$206for_iter.3']
    $phi210.1 = $206for_iter.2               ['$206for_iter.2', '$phi210.1']
    branch $206for_iter.3, 210, 482          ['$206for_iter.3']
label 210:
    i = $phi210.1                            ['$phi210.1', 'i']
    jump 212                                 []
label 212:
    $214load_global.1 = global(range: <class 'range'>) ['$214load_global.1']
    $218load_attr.3 = getattr(value=transition_probabilities, attr=shape) ['$218load_attr.3', 'transition_probabilities']
    $const220.4 = const(int, 1)              ['$const220.4']
    $222binary_subscr.5 = getitem(value=$218load_attr.3, index=$const220.4) ['$218load_attr.3', '$222binary_subscr.5', '$const220.4']
    $224call_function.6 = call $214load_global.1($222binary_subscr.5, func=$214load_global.1, args=[Var($222binary_subscr.5, macro_atom.py:49)], kws=(), vararg=None) ['$214load_global.1', '$222binary_subscr.5', '$224call_function.6']
    $226get_iter.7 = getiter(value=$224call_function.6) ['$224call_function.6', '$226get_iter.7']
    $phi228.1 = $226get_iter.7               ['$226get_iter.7', '$phi228.1']
    jump 228                                 []
label 228:
    $228for_iter.2 = iternext(value=$phi228.1) ['$228for_iter.2', '$phi228.1']
    $228for_iter.3 = pair_first(value=$228for_iter.2) ['$228for_iter.2', '$228for_iter.3']
    $228for_iter.4 = pair_second(value=$228for_iter.2) ['$228for_iter.2', '$228for_iter.4']
    $phi230.2 = $228for_iter.3               ['$228for_iter.3', '$phi230.2']
    branch $228for_iter.4, 230, 242          ['$228for_iter.4']
label 230:
    k = $phi230.2                            ['$phi230.2', 'k']
    $const232.3 = const(float, 0.0)          ['$const232.3']
    norm_factor[k] = $const232.3             ['$const232.3', 'k', 'norm_factor']
    jump 228                                 []
label 242:
    jump 244                                 []
label 244:
    $246load_global.1 = global(range: <class 'range'>) ['$246load_global.1']
    $252binary_subscr.4 = getitem(value=block_references, index=i) ['$252binary_subscr.4', 'block_references', 'i']
    $const258.7 = const(int, 1)              ['$const258.7']
    $260binary_add.8 = i + $const258.7       ['$260binary_add.8', '$const258.7', 'i']
    $262binary_subscr.9 = getitem(value=block_references, index=$260binary_add.8) ['$260binary_add.8', '$262binary_subscr.9', 'block_references']
    $264call_function.10 = call $246load_global.1($252binary_subscr.4, $262binary_subscr.9, func=$246load_global.1, args=[Var($252binary_subscr.4, macro_atom.py:51), Var($262binary_subscr.9, macro_atom.py:51)], kws=(), vararg=None) ['$246load_global.1', '$252binary_subscr.4', '$262binary_subscr.9', '$264call_function.10']
    $266get_iter.11 = getiter(value=$264call_function.10) ['$264call_function.10', '$266get_iter.11']
    $phi268.1 = $266get_iter.11              ['$266get_iter.11', '$phi268.1']
    jump 268                                 []
label 268:
    $268for_iter.2 = iternext(value=$phi268.1) ['$268for_iter.2', '$phi268.1']
    $268for_iter.3 = pair_first(value=$268for_iter.2) ['$268for_iter.2', '$268for_iter.3']
    $268for_iter.4 = pair_second(value=$268for_iter.2) ['$268for_iter.2', '$268for_iter.4']
    $phi270.2 = $268for_iter.3               ['$268for_iter.3', '$phi270.2']
    branch $268for_iter.4, 270, 326          ['$268for_iter.4']
label 270:
    j = $phi270.2                            ['$phi270.2', 'j']
    jump 272                                 []
label 272:
    $274load_global.2 = global(range: <class 'range'>) ['$274load_global.2']
    $278load_attr.4 = getattr(value=transition_probabilities, attr=shape) ['$278load_attr.4', 'transition_probabilities']
    $const280.5 = const(int, 1)              ['$const280.5']
    $282binary_subscr.6 = getitem(value=$278load_attr.4, index=$const280.5) ['$278load_attr.4', '$282binary_subscr.6', '$const280.5']
    $284call_function.7 = call $274load_global.2($282binary_subscr.6, func=$274load_global.2, args=[Var($282binary_subscr.6, macro_atom.py:52)], kws=(), vararg=None) ['$274load_global.2', '$282binary_subscr.6', '$284call_function.7']
    $286get_iter.8 = getiter(value=$284call_function.7) ['$284call_function.7', '$286get_iter.8']
    $phi288.2 = $286get_iter.8               ['$286get_iter.8', '$phi288.2']
    jump 288                                 []
label 288:
    $288for_iter.3 = iternext(value=$phi288.2) ['$288for_iter.3', '$phi288.2']
    $288for_iter.4 = pair_first(value=$288for_iter.3) ['$288for_iter.3', '$288for_iter.4']
    $288for_iter.5 = pair_second(value=$288for_iter.3) ['$288for_iter.3', '$288for_iter.5']
    $phi290.3 = $288for_iter.4               ['$288for_iter.4', '$phi290.3']
    branch $288for_iter.5, 290, 320          ['$288for_iter.5']
label 290:
    k = $phi290.3                            ['$phi290.3', 'k']
    $298binary_subscr.8 = getitem(value=norm_factor, index=k) ['$298binary_subscr.8', 'k', 'norm_factor']
    $306build_tuple.12 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)]) ['$306build_tuple.12', 'j', 'k']
    $308binary_subscr.13 = getitem(value=transition_probabilities, index=$306build_tuple.12) ['$306build_tuple.12', '$308binary_subscr.13', 'transition_probabilities']
    $310inplace_add.14 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$298binary_subscr.8, rhs=$308binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined) ['$298binary_subscr.8', '$308binary_subscr.13', '$310inplace_add.14']
    norm_factor[k] = $310inplace_add.14      ['$310inplace_add.14', 'k', 'norm_factor']
    jump 288                                 []
label 320:
    jump 322                                 []
label 322:
    jump 268                                 []
label 326:
    jump 328                                 []
label 328:
    $330load_global.1 = global(range: <class 'range'>) ['$330load_global.1']
    $334load_attr.3 = getattr(value=transition_probabilities, attr=shape) ['$334load_attr.3', 'transition_probabilities']
    $const336.4 = const(int, 1)              ['$const336.4']
    $338binary_subscr.5 = getitem(value=$334load_attr.3, index=$const336.4) ['$334load_attr.3', '$338binary_subscr.5', '$const336.4']
    $340call_function.6 = call $330load_global.1($338binary_subscr.5, func=$330load_global.1, args=[Var($338binary_subscr.5, macro_atom.py:54)], kws=(), vararg=None) ['$330load_global.1', '$338binary_subscr.5', '$340call_function.6']
    $342get_iter.7 = getiter(value=$340call_function.6) ['$340call_function.6', '$342get_iter.7']
    $phi344.1 = $342get_iter.7               ['$342get_iter.7', '$phi344.1']
    jump 344                                 []
label 344:
    $344for_iter.2 = iternext(value=$phi344.1) ['$344for_iter.2', '$phi344.1']
    $344for_iter.3 = pair_first(value=$344for_iter.2) ['$344for_iter.2', '$344for_iter.3']
    $344for_iter.4 = pair_second(value=$344for_iter.2) ['$344for_iter.2', '$344for_iter.4']
    $phi346.2 = $344for_iter.3               ['$344for_iter.3', '$phi346.2']
    branch $344for_iter.4, 346, 392          ['$344for_iter.4']
label 346:
    k = $phi346.2                            ['$phi346.2', 'k']
    $352binary_subscr.5 = getitem(value=norm_factor, index=k) ['$352binary_subscr.5', 'k', 'norm_factor']
    $const354.6 = const(float, 0.0)          ['$const354.6']
    $356compare_op.7 = $352binary_subscr.5 != $const354.6 ['$352binary_subscr.5', '$356compare_op.7', '$const354.6']
    bool358 = global(bool: <class 'bool'>)   ['bool358']
    $358pred = call bool358($356compare_op.7, func=bool358, args=(Var($356compare_op.7, macro_atom.py:55),), kws=(), vararg=None) ['$356compare_op.7', '$358pred', 'bool358']
    branch $358pred, 362, 380                ['$358pred']
label 362:
    $const362.2 = const(int, 1)              ['$const362.2']
    $368binary_subscr.5 = getitem(value=norm_factor, index=k) ['$368binary_subscr.5', 'k', 'norm_factor']
    $370binary_true_divide.6 = $const362.2 / $368binary_subscr.5 ['$368binary_subscr.5', '$370binary_true_divide.6', '$const362.2']
    norm_factor[k] = $370binary_true_divide.6 ['$370binary_true_divide.6', 'k', 'norm_factor']
    jump 388                                 []
label 380:
    $const380.2 = const(float, 1.0)          ['$const380.2']
    norm_factor[k] = $const380.2             ['$const380.2', 'k', 'norm_factor']
    jump 388                                 []
label 388:
    jump 344                                 []
label 392:
    jump 394                                 []
label 394:
    $396load_global.1 = global(range: <class 'range'>) ['$396load_global.1']
    $402binary_subscr.4 = getitem(value=block_references, index=i) ['$402binary_subscr.4', 'block_references', 'i']
    $const408.7 = const(int, 1)              ['$const408.7']
    $410binary_add.8 = i + $const408.7       ['$410binary_add.8', '$const408.7', 'i']
    $412binary_subscr.9 = getitem(value=block_references, index=$410binary_add.8) ['$410binary_add.8', '$412binary_subscr.9', 'block_references']
    $414call_function.10 = call $396load_global.1($402binary_subscr.4, $412binary_subscr.9, func=$396load_global.1, args=[Var($402binary_subscr.4, macro_atom.py:59), Var($412binary_subscr.9, macro_atom.py:59)], kws=(), vararg=None) ['$396load_global.1', '$402binary_subscr.4', '$412binary_subscr.9', '$414call_function.10']
    $416get_iter.11 = getiter(value=$414call_function.10) ['$414call_function.10', '$416get_iter.11']
    $phi418.1 = $416get_iter.11              ['$416get_iter.11', '$phi418.1']
    jump 418                                 []
label 418:
    $418for_iter.2 = iternext(value=$phi418.1) ['$418for_iter.2', '$phi418.1']
    $418for_iter.3 = pair_first(value=$418for_iter.2) ['$418for_iter.2', '$418for_iter.3']
    $418for_iter.4 = pair_second(value=$418for_iter.2) ['$418for_iter.2', '$418for_iter.4']
    $phi420.2 = $418for_iter.3               ['$418for_iter.3', '$phi420.2']
    branch $418for_iter.4, 420, 478          ['$418for_iter.4']
label 420:
    j = $phi420.2                            ['$phi420.2', 'j']
    jump 422                                 []
label 422:
    $424load_global.2 = global(range: <class 'range'>) ['$424load_global.2']
    $const426.3 = const(int, 0)              ['$const426.3']
    $430load_attr.5 = getattr(value=transition_probabilities, attr=shape) ['$430load_attr.5', 'transition_probabilities']
    $const432.6 = const(int, 1)              ['$const432.6']
    $434binary_subscr.7 = getitem(value=$430load_attr.5, index=$const432.6) ['$430load_attr.5', '$434binary_subscr.7', '$const432.6']
    $436call_function.8 = call $424load_global.2($const426.3, $434binary_subscr.7, func=$424load_global.2, args=[Var($const426.3, macro_atom.py:60), Var($434binary_subscr.7, macro_atom.py:60)], kws=(), vararg=None) ['$424load_global.2', '$434binary_subscr.7', '$436call_function.8', '$const426.3']
    $438get_iter.9 = getiter(value=$436call_function.8) ['$436call_function.8', '$438get_iter.9']
    $phi440.2 = $438get_iter.9               ['$438get_iter.9', '$phi440.2']
    jump 440                                 []
label 440:
    $440for_iter.3 = iternext(value=$phi440.2) ['$440for_iter.3', '$phi440.2']
    $440for_iter.4 = pair_first(value=$440for_iter.3) ['$440for_iter.3', '$440for_iter.4']
    $440for_iter.5 = pair_second(value=$440for_iter.3) ['$440for_iter.3', '$440for_iter.5']
    $phi442.3 = $440for_iter.4               ['$440for_iter.4', '$phi442.3']
    branch $440for_iter.5, 442, 472          ['$440for_iter.5']
label 442:
    k = $phi442.3                            ['$phi442.3', 'k']
    $450build_tuple.7 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)]) ['$450build_tuple.7', 'j', 'k']
    $454binary_subscr.10 = getitem(value=transition_probabilities, index=$450build_tuple.7) ['$450build_tuple.7', '$454binary_subscr.10', 'transition_probabilities']
    $460binary_subscr.13 = getitem(value=norm_factor, index=k) ['$460binary_subscr.13', 'k', 'norm_factor']
    $462inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$454binary_subscr.10, rhs=$460binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined) ['$454binary_subscr.10', '$460binary_subscr.13', '$462inplace_multiply.14']
    transition_probabilities[$450build_tuple.7] = $462inplace_multiply.14 ['$450build_tuple.7', '$462inplace_multiply.14', 'transition_probabilities']
    jump 440                                 []
label 472:
    jump 474                                 []
label 474:
    jump 418                                 []
label 478:
    jump 480                                 []
label 480:
    jump 206                                 []
label 482:
    jump 484                                 []
label 484:
    $const484.0 = const(NoneType, None)      ['$const484.0']
    $486return_value.1 = cast(value=$const484.0) ['$486return_value.1', '$const484.0']
    return $486return_value.1                ['$486return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: transition_probability_coef = arg(0, name=transition_probability_coef)
DEBUG:numba.core.ssa:on stmt: beta_sobolev = arg(1, name=beta_sobolev)
DEBUG:numba.core.ssa:on stmt: j_blues = arg(2, name=j_blues)
DEBUG:numba.core.ssa:on stmt: stimulated_emission_factor = arg(3, name=stimulated_emission_factor)
DEBUG:numba.core.ssa:on stmt: transition_type = arg(4, name=transition_type)
DEBUG:numba.core.ssa:on stmt: lines_idx = arg(5, name=lines_idx)
DEBUG:numba.core.ssa:on stmt: block_references = arg(6, name=block_references)
DEBUG:numba.core.ssa:on stmt: transition_probabilities = arg(7, name=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: normalize = arg(8, name=normalize)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=1, index_var=$const10.4)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, macro_atom.py:32)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: norm_factor = $14call_method.6
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.2 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const26.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = static_getitem(value=$24load_attr.2, index=0, index_var=$const26.3)
DEBUG:numba.core.ssa:on stmt: $30call_function.5 = call $20load_global.0($28binary_subscr.4, func=$20load_global.0, args=[Var($28binary_subscr.4, macro_atom.py:34)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $32get_iter.6 = getiter(value=$30call_function.5)
DEBUG:numba.core.ssa:on stmt: $phi34.0 = $32get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $34for_iter.1 = iternext(value=$phi34.0)
DEBUG:numba.core.ssa:on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi36.1 = $34for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $34for_iter.3, 36, 176
DEBUG:numba.core.ssa:==== SSA block analysis pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: i = $phi36.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.4 = getitem(value=lines_idx, index=i)
DEBUG:numba.core.ssa:on stmt: line_idx = $42binary_subscr.4
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block analysis pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $48load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const54.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.5 = static_getitem(value=$52load_attr.3, index=1, index_var=$const54.4)
DEBUG:numba.core.ssa:on stmt: $58call_function.6 = call $48load_global.1($56binary_subscr.5, func=$48load_global.1, args=[Var($56binary_subscr.5, macro_atom.py:36)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $60get_iter.7 = getiter(value=$58call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi62.1 = $60get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $62for_iter.2 = iternext(value=$phi62.1)
DEBUG:numba.core.ssa:on stmt: $62for_iter.3 = pair_first(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $62for_iter.4 = pair_second(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = $62for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $62for_iter.4, 64, 96
DEBUG:numba.core.ssa:==== SSA block analysis pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: j = $phi64.2
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.5 = getitem(value=transition_probability_coef, index=i)
DEBUG:numba.core.ssa:on stmt: $78build_tuple.9 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.10 = getitem(value=beta_sobolev, index=$78build_tuple.9)
DEBUG:numba.core.ssa:on stmt: $82binary_multiply.11 = $70binary_subscr.5 * $80binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $90build_tuple.15 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$90build_tuple.15] = $82binary_multiply.11
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block analysis pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 98
DEBUG:numba.core.ssa:==== SSA block analysis pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $102binary_subscr.3 = getitem(value=transition_type, index=i)
DEBUG:numba.core.ssa:on stmt: $const104.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106compare_op.5 = $102binary_subscr.3 == $const104.4
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106compare_op.5, func=bool108, args=(Var($106compare_op.5, macro_atom.py:40),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 485
DEBUG:numba.core.ssa:==== SSA block analysis pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $112load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const118.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.5 = static_getitem(value=$116load_attr.3, index=1, index_var=$const118.4)
DEBUG:numba.core.ssa:on stmt: $122call_function.6 = call $112load_global.1($120binary_subscr.5, func=$112load_global.1, args=[Var($120binary_subscr.5, macro_atom.py:41)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $124get_iter.7 = getiter(value=$122call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi126.1 = $124get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block analysis pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $126for_iter.2 = iternext(value=$phi126.1)
DEBUG:numba.core.ssa:on stmt: $126for_iter.3 = pair_first(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $126for_iter.4 = pair_second(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi128.2 = $126for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $126for_iter.4, 128, 172
DEBUG:numba.core.ssa:==== SSA block analysis pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: j = $phi128.2
DEBUG:numba.core.ssa:on stmt: $136build_tuple.6 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.9 = getitem(value=transition_probabilities, index=$136build_tuple.6)
DEBUG:numba.core.ssa:on stmt: $148build_tuple.13 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $150binary_subscr.14 = getitem(value=stimulated_emission_factor, index=$148build_tuple.13)
DEBUG:numba.core.ssa:on stmt: $158build_tuple.18 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.19 = getitem(value=j_blues, index=$158build_tuple.18)
DEBUG:numba.core.ssa:on stmt: $162binary_multiply.20 = $150binary_subscr.14 * $160binary_subscr.19
DEBUG:numba.core.ssa:on stmt: $164inplace_multiply.21 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$140binary_subscr.9, rhs=$162binary_multiply.20, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$136build_tuple.6] = $164inplace_multiply.21
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block analysis pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 174
DEBUG:numba.core.ssa:==== SSA block analysis pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 485
DEBUG:numba.core.ssa:==== SSA block analysis pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block analysis pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(normalize, func=bool180, args=(Var(normalize, macro_atom.py:32),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 184, 484
DEBUG:numba.core.ssa:==== SSA block analysis pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $188load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $192load_attr.2 = getattr(value=block_references, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const194.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $196binary_subscr.4 = static_getitem(value=$192load_attr.2, index=0, index_var=$const194.3)
DEBUG:numba.core.ssa:on stmt: $const198.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.6 = $196binary_subscr.4 - $const198.5
DEBUG:numba.core.ssa:on stmt: $202call_function.7 = call $188load_global.0($200binary_subtract.6, func=$188load_global.0, args=[Var($200binary_subtract.6, macro_atom.py:48)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $204get_iter.8 = getiter(value=$202call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi206.0 = $204get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block analysis pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $206for_iter.1 = iternext(value=$phi206.0)
DEBUG:numba.core.ssa:on stmt: $206for_iter.2 = pair_first(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $206for_iter.3 = pair_second(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi210.1 = $206for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $206for_iter.3, 210, 482
DEBUG:numba.core.ssa:==== SSA block analysis pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: i = $phi210.1
DEBUG:numba.core.ssa:on stmt: jump 212
DEBUG:numba.core.ssa:==== SSA block analysis pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $214load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $218load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.5 = static_getitem(value=$218load_attr.3, index=1, index_var=$const220.4)
DEBUG:numba.core.ssa:on stmt: $224call_function.6 = call $214load_global.1($222binary_subscr.5, func=$214load_global.1, args=[Var($222binary_subscr.5, macro_atom.py:49)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $226get_iter.7 = getiter(value=$224call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi228.1 = $226get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block analysis pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $228for_iter.2 = iternext(value=$phi228.1)
DEBUG:numba.core.ssa:on stmt: $228for_iter.3 = pair_first(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $228for_iter.4 = pair_second(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi230.2 = $228for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $228for_iter.4, 230, 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: k = $phi230.2
DEBUG:numba.core.ssa:on stmt: $const232.3 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const232.3
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block analysis pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 244
DEBUG:numba.core.ssa:==== SSA block analysis pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $246load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $252binary_subscr.4 = getitem(value=block_references, index=i)
DEBUG:numba.core.ssa:on stmt: $const258.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $260binary_add.8 = i + $const258.7
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.9 = getitem(value=block_references, index=$260binary_add.8)
DEBUG:numba.core.ssa:on stmt: $264call_function.10 = call $246load_global.1($252binary_subscr.4, $262binary_subscr.9, func=$246load_global.1, args=[Var($252binary_subscr.4, macro_atom.py:51), Var($262binary_subscr.9, macro_atom.py:51)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $266get_iter.11 = getiter(value=$264call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi268.1 = $266get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block analysis pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $268for_iter.2 = iternext(value=$phi268.1)
DEBUG:numba.core.ssa:on stmt: $268for_iter.3 = pair_first(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $268for_iter.4 = pair_second(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi270.2 = $268for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $268for_iter.4, 270, 326
DEBUG:numba.core.ssa:==== SSA block analysis pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: j = $phi270.2
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block analysis pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $274load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.4 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const280.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $282binary_subscr.6 = static_getitem(value=$278load_attr.4, index=1, index_var=$const280.5)
DEBUG:numba.core.ssa:on stmt: $284call_function.7 = call $274load_global.2($282binary_subscr.6, func=$274load_global.2, args=[Var($282binary_subscr.6, macro_atom.py:52)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $286get_iter.8 = getiter(value=$284call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi288.2 = $286get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block analysis pass on 288
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $288for_iter.3 = iternext(value=$phi288.2)
DEBUG:numba.core.ssa:on stmt: $288for_iter.4 = pair_first(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $288for_iter.5 = pair_second(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi290.3 = $288for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $288for_iter.5, 290, 320
DEBUG:numba.core.ssa:==== SSA block analysis pass on 290
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: k = $phi290.3
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.8 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $306build_tuple.12 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:on stmt: $308binary_subscr.13 = getitem(value=transition_probabilities, index=$306build_tuple.12)
DEBUG:numba.core.ssa:on stmt: $310inplace_add.14 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$298binary_subscr.8, rhs=$308binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $310inplace_add.14
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block analysis pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 322
DEBUG:numba.core.ssa:==== SSA block analysis pass on 322
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block analysis pass on 326
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block analysis pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $330load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $334load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const336.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $338binary_subscr.5 = static_getitem(value=$334load_attr.3, index=1, index_var=$const336.4)
DEBUG:numba.core.ssa:on stmt: $340call_function.6 = call $330load_global.1($338binary_subscr.5, func=$330load_global.1, args=[Var($338binary_subscr.5, macro_atom.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $342get_iter.7 = getiter(value=$340call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi344.1 = $342get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block analysis pass on 344
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $344for_iter.2 = iternext(value=$phi344.1)
DEBUG:numba.core.ssa:on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi346.2 = $344for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $344for_iter.4, 346, 392
DEBUG:numba.core.ssa:==== SSA block analysis pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: k = $phi346.2
DEBUG:numba.core.ssa:on stmt: $352binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $const354.6 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $356compare_op.7 = $352binary_subscr.5 != $const354.6
DEBUG:numba.core.ssa:on stmt: bool358 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $358pred = call bool358($356compare_op.7, func=bool358, args=(Var($356compare_op.7, macro_atom.py:55),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $358pred, 362, 380
DEBUG:numba.core.ssa:==== SSA block analysis pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $const362.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $368binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $370binary_true_divide.6 = $const362.2 / $368binary_subscr.5
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $370binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block analysis pass on 380
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $const380.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const380.2
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block analysis pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block analysis pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block analysis pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $396load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $402binary_subscr.4 = getitem(value=block_references, index=i)
DEBUG:numba.core.ssa:on stmt: $const408.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $410binary_add.8 = i + $const408.7
DEBUG:numba.core.ssa:on stmt: $412binary_subscr.9 = getitem(value=block_references, index=$410binary_add.8)
DEBUG:numba.core.ssa:on stmt: $414call_function.10 = call $396load_global.1($402binary_subscr.4, $412binary_subscr.9, func=$396load_global.1, args=[Var($402binary_subscr.4, macro_atom.py:59), Var($412binary_subscr.9, macro_atom.py:59)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $416get_iter.11 = getiter(value=$414call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi418.1 = $416get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block analysis pass on 418
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $418for_iter.2 = iternext(value=$phi418.1)
DEBUG:numba.core.ssa:on stmt: $418for_iter.3 = pair_first(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $418for_iter.4 = pair_second(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi420.2 = $418for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $418for_iter.4, 420, 478
DEBUG:numba.core.ssa:==== SSA block analysis pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: j = $phi420.2
DEBUG:numba.core.ssa:on stmt: jump 422
DEBUG:numba.core.ssa:==== SSA block analysis pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $424load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const426.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $430load_attr.5 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const432.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $434binary_subscr.7 = static_getitem(value=$430load_attr.5, index=1, index_var=$const432.6)
DEBUG:numba.core.ssa:on stmt: $436call_function.8 = call $424load_global.2($const426.3, $434binary_subscr.7, func=$424load_global.2, args=[Var($const426.3, macro_atom.py:60), Var($434binary_subscr.7, macro_atom.py:60)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $438get_iter.9 = getiter(value=$436call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi440.2 = $438get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block analysis pass on 440
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $440for_iter.3 = iternext(value=$phi440.2)
DEBUG:numba.core.ssa:on stmt: $440for_iter.4 = pair_first(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $440for_iter.5 = pair_second(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi442.3 = $440for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $440for_iter.5, 442, 472
DEBUG:numba.core.ssa:==== SSA block analysis pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: k = $phi442.3
DEBUG:numba.core.ssa:on stmt: $450build_tuple.7 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:on stmt: $454binary_subscr.10 = getitem(value=transition_probabilities, index=$450build_tuple.7)
DEBUG:numba.core.ssa:on stmt: $460binary_subscr.13 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $462inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$454binary_subscr.10, rhs=$460binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$450build_tuple.7] = $462inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block analysis pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 474
DEBUG:numba.core.ssa:==== SSA block analysis pass on 474
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block analysis pass on 478
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 480
DEBUG:numba.core.ssa:==== SSA block analysis pass on 480
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block analysis pass on 482
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block analysis pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: $const484.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $486return_value.1 = cast(value=$const484.0)
DEBUG:numba.core.ssa:on stmt: return $486return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 485
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46606290>
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102binary_subscr.3': [<numba.core.ir.Assign object at 0x7f6e465721d0>],
             '$106compare_op.5': [<numba.core.ir.Assign object at 0x7f6e46572410>],
             '$108pred': [<numba.core.ir.Assign object at 0x7f6e46572690>],
             '$112load_global.1': [<numba.core.ir.Assign object at 0x7f6e465727d0>],
             '$116load_attr.3': [<numba.core.ir.Assign object at 0x7f6e46572990>],
             '$120binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e4659ed90>],
             '$122call_function.6': [<numba.core.ir.Assign object at 0x7f6e46572d10>],
             '$124get_iter.7': [<numba.core.ir.Assign object at 0x7f6e46572dd0>],
             '$126for_iter.2': [<numba.core.ir.Assign object at 0x7f6e4655e050>],
             '$126for_iter.3': [<numba.core.ir.Assign object at 0x7f6e4655e110>],
             '$126for_iter.4': [<numba.core.ir.Assign object at 0x7f6e4655e1d0>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e465fb710>],
             '$136build_tuple.6': [<numba.core.ir.Assign object at 0x7f6e4655e750>],
             '$140binary_subscr.9': [<numba.core.ir.Assign object at 0x7f6e4655e9d0>],
             '$148build_tuple.13': [<numba.core.ir.Assign object at 0x7f6e4655ed10>],
             '$14call_method.6': [<numba.core.ir.Assign object at 0x7f6e4656e510>],
             '$150binary_subscr.14': [<numba.core.ir.Assign object at 0x7f6e4655edd0>],
             '$158build_tuple.18': [<numba.core.ir.Assign object at 0x7f6e46556190>],
             '$160binary_subscr.19': [<numba.core.ir.Assign object at 0x7f6e46556250>],
             '$162binary_multiply.20': [<numba.core.ir.Assign object at 0x7f6e46556350>],
             '$164inplace_multiply.21': [<numba.core.ir.Assign object at 0x7f6e46556450>],
             '$180pred': [<numba.core.ir.Assign object at 0x7f6e46556850>],
             '$188load_global.0': [<numba.core.ir.Assign object at 0x7f6e465569d0>],
             '$192load_attr.2': [<numba.core.ir.Assign object at 0x7f6e46556b90>],
             '$196binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e465e5a90>],
             '$200binary_subtract.6': [<numba.core.ir.Assign object at 0x7f6e46556fd0>],
             '$202call_function.7': [<numba.core.ir.Assign object at 0x7f6e46554150>],
             '$204get_iter.8': [<numba.core.ir.Assign object at 0x7f6e46554210>],
             '$206for_iter.1': [<numba.core.ir.Assign object at 0x7f6e46554410>],
             '$206for_iter.2': [<numba.core.ir.Assign object at 0x7f6e465544d0>],
             '$206for_iter.3': [<numba.core.ir.Assign object at 0x7f6e46554590>],
             '$20load_global.0': [<numba.core.ir.Assign object at 0x7f6e4656e650>],
             '$214load_global.1': [<numba.core.ir.Assign object at 0x7f6e46554950>],
             '$218load_attr.3': [<numba.core.ir.Assign object at 0x7f6e46554b10>],
             '$222binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e465e50d0>],
             '$224call_function.6': [<numba.core.ir.Assign object at 0x7f6e46554e90>],
             '$226get_iter.7': [<numba.core.ir.Assign object at 0x7f6e46554f50>],
             '$228for_iter.2': [<numba.core.ir.Assign object at 0x7f6e46566190>],
             '$228for_iter.3': [<numba.core.ir.Assign object at 0x7f6e46566250>],
             '$228for_iter.4': [<numba.core.ir.Assign object at 0x7f6e46566310>],
             '$246load_global.1': [<numba.core.ir.Assign object at 0x7f6e46566a50>],
             '$24load_attr.2': [<numba.core.ir.Assign object at 0x7f6e4656e810>],
             '$252binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e46566cd0>],
             '$260binary_add.8': [<numba.core.ir.Assign object at 0x7f6e4657c110>],
             '$262binary_subscr.9': [<numba.core.ir.Assign object at 0x7f6e4657c210>],
             '$264call_function.10': [<numba.core.ir.Assign object at 0x7f6e4657c310>],
             '$266get_iter.11': [<numba.core.ir.Assign object at 0x7f6e4657c3d0>],
             '$268for_iter.2': [<numba.core.ir.Assign object at 0x7f6e4657c550>],
             '$268for_iter.3': [<numba.core.ir.Assign object at 0x7f6e4657c610>],
             '$268for_iter.4': [<numba.core.ir.Assign object at 0x7f6e4657c6d0>],
             '$274load_global.2': [<numba.core.ir.Assign object at 0x7f6e4657ca90>],
             '$278load_attr.4': [<numba.core.ir.Assign object at 0x7f6e4657cc50>],
             '$282binary_subscr.6': [<numba.core.ir.Assign object at 0x7f6e46868750>],
             '$284call_function.7': [<numba.core.ir.Assign object at 0x7f6e4657cfd0>],
             '$286get_iter.8': [<numba.core.ir.Assign object at 0x7f6e465800d0>],
             '$288for_iter.3': [<numba.core.ir.Assign object at 0x7f6e465802d0>],
             '$288for_iter.4': [<numba.core.ir.Assign object at 0x7f6e46580390>],
             '$288for_iter.5': [<numba.core.ir.Assign object at 0x7f6e46580410>],
             '$28binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e46606dd0>],
             '$298binary_subscr.8': [<numba.core.ir.Assign object at 0x7f6e46580a50>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e46636f10>],
             '$306build_tuple.12': [<numba.core.ir.Assign object at 0x7f6e46580d90>],
             '$308binary_subscr.13': [<numba.core.ir.Assign object at 0x7f6e46580e50>],
             '$30call_function.5': [<numba.core.ir.Assign object at 0x7f6e4656eb90>],
             '$310inplace_add.14': [<numba.core.ir.Assign object at 0x7f6e46580f90>],
             '$32get_iter.6': [<numba.core.ir.Assign object at 0x7f6e4656ec90>],
             '$330load_global.1': [<numba.core.ir.Assign object at 0x7f6e46583310>],
             '$334load_attr.3': [<numba.core.ir.Assign object at 0x7f6e465834d0>],
             '$338binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e4659e3d0>],
             '$340call_function.6': [<numba.core.ir.Assign object at 0x7f6e46583850>],
             '$342get_iter.7': [<numba.core.ir.Assign object at 0x7f6e46583910>],
             '$344for_iter.2': [<numba.core.ir.Assign object at 0x7f6e46583b50>],
             '$344for_iter.3': [<numba.core.ir.Assign object at 0x7f6e46583c10>],
             '$344for_iter.4': [<numba.core.ir.Assign object at 0x7f6e46583cd0>],
             '$34for_iter.1': [<numba.core.ir.Assign object at 0x7f6e4656eed0>],
             '$34for_iter.2': [<numba.core.ir.Assign object at 0x7f6e4656ef90>],
             '$34for_iter.3': [<numba.core.ir.Assign object at 0x7f6e4656f090>],
             '$352binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e46586190>],
             '$356compare_op.7': [<numba.core.ir.Assign object at 0x7f6e465863d0>],
             '$358pred': [<numba.core.ir.Assign object at 0x7f6e46586610>],
             '$368binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e465869d0>],
             '$370binary_true_divide.6': [<numba.core.ir.Assign object at 0x7f6e46586ad0>],
             '$396load_global.1': [<numba.core.ir.Assign object at 0x7f6e4650a350>],
             '$402binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e4650a5d0>],
             '$410binary_add.8': [<numba.core.ir.Assign object at 0x7f6e4650a990>],
             '$412binary_subscr.9': [<numba.core.ir.Assign object at 0x7f6e4650aa90>],
             '$414call_function.10': [<numba.core.ir.Assign object at 0x7f6e4650ab90>],
             '$416get_iter.11': [<numba.core.ir.Assign object at 0x7f6e4650ac50>],
             '$418for_iter.2': [<numba.core.ir.Assign object at 0x7f6e4650add0>],
             '$418for_iter.3': [<numba.core.ir.Assign object at 0x7f6e4650ae90>],
             '$418for_iter.4': [<numba.core.ir.Assign object at 0x7f6e4650af50>],
             '$424load_global.2': [<numba.core.ir.Assign object at 0x7f6e4650d350>],
             '$42binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e4656f550>],
             '$430load_attr.5': [<numba.core.ir.Assign object at 0x7f6e4650d610>],
             '$434binary_subscr.7': [<numba.core.ir.Assign object at 0x7f6e46606a90>],
             '$436call_function.8': [<numba.core.ir.Assign object at 0x7f6e4650d990>],
             '$438get_iter.9': [<numba.core.ir.Assign object at 0x7f6e4650da50>],
             '$440for_iter.3': [<numba.core.ir.Assign object at 0x7f6e4650dc10>],
             '$440for_iter.4': [<numba.core.ir.Assign object at 0x7f6e4650dcd0>],
             '$440for_iter.5': [<numba.core.ir.Assign object at 0x7f6e4650dd90>],
             '$450build_tuple.7': [<numba.core.ir.Assign object at 0x7f6e46510350>],
             '$454binary_subscr.10': [<numba.core.ir.Assign object at 0x7f6e46510590>],
             '$460binary_subscr.13': [<numba.core.ir.Assign object at 0x7f6e465107d0>],
             '$462inplace_multiply.14': [<numba.core.ir.Assign object at 0x7f6e465108d0>],
             '$486return_value.1': [<numba.core.ir.Assign object at 0x7f6e46510f10>],
             '$48load_global.1': [<numba.core.ir.Assign object at 0x7f6e4656f750>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7f6e46636c10>],
             '$52load_attr.3': [<numba.core.ir.Assign object at 0x7f6e4656f910>],
             '$56binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e46606e10>],
             '$58call_function.6': [<numba.core.ir.Assign object at 0x7f6e4656fc90>],
             '$60get_iter.7': [<numba.core.ir.Assign object at 0x7f6e4656fd50>],
             '$62for_iter.2': [<numba.core.ir.Assign object at 0x7f6e4656ff50>],
             '$62for_iter.3': [<numba.core.ir.Assign object at 0x7f6e4655f050>],
             '$62for_iter.4': [<numba.core.ir.Assign object at 0x7f6e4655f110>],
             '$70binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e4655f5d0>],
             '$78build_tuple.9': [<numba.core.ir.Assign object at 0x7f6e4655f9d0>],
             '$80binary_subscr.10': [<numba.core.ir.Assign object at 0x7f6e4655fa90>],
             '$82binary_multiply.11': [<numba.core.ir.Assign object at 0x7f6e4655fb50>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f6e4656e150>],
             '$90build_tuple.15': [<numba.core.ir.Assign object at 0x7f6e4655fed0>],
             '$const10.4': [<numba.core.ir.Assign object at 0x7f6e4656e290>],
             '$const104.4': [<numba.core.ir.Assign object at 0x7f6e465722d0>],
             '$const118.4': [<numba.core.ir.Assign object at 0x7f6e46572a90>],
             '$const194.3': [<numba.core.ir.Assign object at 0x7f6e46556c90>],
             '$const198.5': [<numba.core.ir.Assign object at 0x7f6e46556ed0>],
             '$const220.4': [<numba.core.ir.Assign object at 0x7f6e46554c10>],
             '$const232.3': [<numba.core.ir.Assign object at 0x7f6e46566650>],
             '$const258.7': [<numba.core.ir.Assign object at 0x7f6e46566f90>],
             '$const26.3': [<numba.core.ir.Assign object at 0x7f6e4656e910>],
             '$const280.5': [<numba.core.ir.Assign object at 0x7f6e4657cd50>],
             '$const336.4': [<numba.core.ir.Assign object at 0x7f6e465835d0>],
             '$const354.6': [<numba.core.ir.Assign object at 0x7f6e46586290>],
             '$const362.2': [<numba.core.ir.Assign object at 0x7f6e46586750>],
             '$const380.2': [<numba.core.ir.Assign object at 0x7f6e46586e10>],
             '$const408.7': [<numba.core.ir.Assign object at 0x7f6e4650a890>],
             '$const426.3': [<numba.core.ir.Assign object at 0x7f6e4650d450>],
             '$const432.6': [<numba.core.ir.Assign object at 0x7f6e4650d710>],
             '$const484.0': [<numba.core.ir.Assign object at 0x7f6e46510dd0>],
             '$const54.4': [<numba.core.ir.Assign object at 0x7f6e4656fa10>],
             '$phi126.1': [<numba.core.ir.Assign object at 0x7f6e46572bd0>],
             '$phi128.2': [<numba.core.ir.Assign object at 0x7f6e4655e250>],
             '$phi206.0': [<numba.core.ir.Assign object at 0x7f6e46556050>],
             '$phi210.1': [<numba.core.ir.Assign object at 0x7f6e46554610>],
             '$phi228.1': [<numba.core.ir.Assign object at 0x7f6e46554a10>],
             '$phi230.2': [<numba.core.ir.Assign object at 0x7f6e46566390>],
             '$phi268.1': [<numba.core.ir.Assign object at 0x7f6e46566bd0>],
             '$phi270.2': [<numba.core.ir.Assign object at 0x7f6e4657c750>],
             '$phi288.2': [<numba.core.ir.Assign object at 0x7f6e4657cb50>],
             '$phi290.3': [<numba.core.ir.Assign object at 0x7f6e46580450>],
             '$phi34.0': [<numba.core.ir.Assign object at 0x7f6e4656ea50>],
             '$phi344.1': [<numba.core.ir.Assign object at 0x7f6e465833d0>],
             '$phi346.2': [<numba.core.ir.Assign object at 0x7f6e46583d50>],
             '$phi36.1': [<numba.core.ir.Assign object at 0x7f6e4656f110>],
             '$phi418.1': [<numba.core.ir.Assign object at 0x7f6e4650a4d0>],
             '$phi420.2': [<numba.core.ir.Assign object at 0x7f6e4650afd0>],
             '$phi440.2': [<numba.core.ir.Assign object at 0x7f6e4650d510>],
             '$phi442.3': [<numba.core.ir.Assign object at 0x7f6e4650de10>],
             '$phi62.1': [<numba.core.ir.Assign object at 0x7f6e4656f810>],
             '$phi64.2': [<numba.core.ir.Assign object at 0x7f6e4655f190>],
             'beta_sobolev': [<numba.core.ir.Assign object at 0x7f6e46636950>],
             'block_references': [<numba.core.ir.Assign object at 0x7f6e46636ad0>],
             'bool108': [<numba.core.ir.Assign object at 0x7f6e46572590>],
             'bool180': [<numba.core.ir.Assign object at 0x7f6e46556750>],
             'bool358': [<numba.core.ir.Assign object at 0x7f6e46586510>],
             'i': [<numba.core.ir.Assign object at 0x7f6e4656f2d0>,
                   <numba.core.ir.Assign object at 0x7f6e4655e3d0>],
             'j': [<numba.core.ir.Assign object at 0x7f6e4655f350>,
                   <numba.core.ir.Assign object at 0x7f6e4655f310>,
                   <numba.core.ir.Assign object at 0x7f6e46566510>,
                   <numba.core.ir.Assign object at 0x7f6e46583ed0>],
             'j_blues': [<numba.core.ir.Assign object at 0x7f6e46636b10>],
             'k': [<numba.core.ir.Assign object at 0x7f6e46566550>,
                   <numba.core.ir.Assign object at 0x7f6e4657c8d0>,
                   <numba.core.ir.Assign object at 0x7f6e465805d0>,
                   <numba.core.ir.Assign object at 0x7f6e4650d190>],
             'line_idx': [<numba.core.ir.Assign object at 0x7f6e4656f610>],
             'lines_idx': [<numba.core.ir.Assign object at 0x7f6e466361d0>],
             'norm_factor': [<numba.core.ir.Assign object at 0x7f6e4656e550>],
             'normalize': [<numba.core.ir.Assign object at 0x7f6e46636e10>],
             'stimulated_emission_factor': [<numba.core.ir.Assign object at 0x7f6e46636690>],
             'transition_probabilities': [<numba.core.ir.Assign object at 0x7f6e46636d50>],
             'transition_probability_coef': [<numba.core.ir.Assign object at 0x7f6e46646810>],
             'transition_type': [<numba.core.ir.Assign object at 0x7f6e46636450>]})
DEBUG:numba.core.ssa:SSA violators {'i', 'j', 'k'}
DEBUG:numba.core.ssa:Fix SSA violator on var i
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: transition_probability_coef = arg(0, name=transition_probability_coef)
DEBUG:numba.core.ssa:on stmt: beta_sobolev = arg(1, name=beta_sobolev)
DEBUG:numba.core.ssa:on stmt: j_blues = arg(2, name=j_blues)
DEBUG:numba.core.ssa:on stmt: stimulated_emission_factor = arg(3, name=stimulated_emission_factor)
DEBUG:numba.core.ssa:on stmt: transition_type = arg(4, name=transition_type)
DEBUG:numba.core.ssa:on stmt: lines_idx = arg(5, name=lines_idx)
DEBUG:numba.core.ssa:on stmt: block_references = arg(6, name=block_references)
DEBUG:numba.core.ssa:on stmt: transition_probabilities = arg(7, name=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: normalize = arg(8, name=normalize)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=1, index_var=$const10.4)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, macro_atom.py:32)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: norm_factor = $14call_method.6
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.2 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const26.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = static_getitem(value=$24load_attr.2, index=0, index_var=$const26.3)
DEBUG:numba.core.ssa:on stmt: $30call_function.5 = call $20load_global.0($28binary_subscr.4, func=$20load_global.0, args=[Var($28binary_subscr.4, macro_atom.py:34)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $32get_iter.6 = getiter(value=$30call_function.5)
DEBUG:numba.core.ssa:on stmt: $phi34.0 = $32get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $34for_iter.1 = iternext(value=$phi34.0)
DEBUG:numba.core.ssa:on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi36.1 = $34for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $34for_iter.3, 36, 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: i = $phi36.1
DEBUG:numba.core.ssa:first assign: i
DEBUG:numba.core.ssa:replaced with: i = $phi36.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.4 = getitem(value=lines_idx, index=i)
DEBUG:numba.core.ssa:on stmt: line_idx = $42binary_subscr.4
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $48load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const54.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.5 = static_getitem(value=$52load_attr.3, index=1, index_var=$const54.4)
DEBUG:numba.core.ssa:on stmt: $58call_function.6 = call $48load_global.1($56binary_subscr.5, func=$48load_global.1, args=[Var($56binary_subscr.5, macro_atom.py:36)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $60get_iter.7 = getiter(value=$58call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi62.1 = $60get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $62for_iter.2 = iternext(value=$phi62.1)
DEBUG:numba.core.ssa:on stmt: $62for_iter.3 = pair_first(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $62for_iter.4 = pair_second(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = $62for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $62for_iter.4, 64, 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: j = $phi64.2
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.5 = getitem(value=transition_probability_coef, index=i)
DEBUG:numba.core.ssa:on stmt: $78build_tuple.9 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.10 = getitem(value=beta_sobolev, index=$78build_tuple.9)
DEBUG:numba.core.ssa:on stmt: $82binary_multiply.11 = $70binary_subscr.5 * $80binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $90build_tuple.15 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$90build_tuple.15] = $82binary_multiply.11
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $102binary_subscr.3 = getitem(value=transition_type, index=i)
DEBUG:numba.core.ssa:on stmt: $const104.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106compare_op.5 = $102binary_subscr.3 == $const104.4
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106compare_op.5, func=bool108, args=(Var($106compare_op.5, macro_atom.py:40),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 485
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $112load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const118.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.5 = static_getitem(value=$116load_attr.3, index=1, index_var=$const118.4)
DEBUG:numba.core.ssa:on stmt: $122call_function.6 = call $112load_global.1($120binary_subscr.5, func=$112load_global.1, args=[Var($120binary_subscr.5, macro_atom.py:41)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $124get_iter.7 = getiter(value=$122call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi126.1 = $124get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $126for_iter.2 = iternext(value=$phi126.1)
DEBUG:numba.core.ssa:on stmt: $126for_iter.3 = pair_first(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $126for_iter.4 = pair_second(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi128.2 = $126for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $126for_iter.4, 128, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: j = $phi128.2
DEBUG:numba.core.ssa:on stmt: $136build_tuple.6 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.9 = getitem(value=transition_probabilities, index=$136build_tuple.6)
DEBUG:numba.core.ssa:on stmt: $148build_tuple.13 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $150binary_subscr.14 = getitem(value=stimulated_emission_factor, index=$148build_tuple.13)
DEBUG:numba.core.ssa:on stmt: $158build_tuple.18 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.19 = getitem(value=j_blues, index=$158build_tuple.18)
DEBUG:numba.core.ssa:on stmt: $162binary_multiply.20 = $150binary_subscr.14 * $160binary_subscr.19
DEBUG:numba.core.ssa:on stmt: $164inplace_multiply.21 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$140binary_subscr.9, rhs=$162binary_multiply.20, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$136build_tuple.6] = $164inplace_multiply.21
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 485
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(normalize, func=bool180, args=(Var(normalize, macro_atom.py:32),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 184, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $188load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $192load_attr.2 = getattr(value=block_references, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const194.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $196binary_subscr.4 = static_getitem(value=$192load_attr.2, index=0, index_var=$const194.3)
DEBUG:numba.core.ssa:on stmt: $const198.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.6 = $196binary_subscr.4 - $const198.5
DEBUG:numba.core.ssa:on stmt: $202call_function.7 = call $188load_global.0($200binary_subtract.6, func=$188load_global.0, args=[Var($200binary_subtract.6, macro_atom.py:48)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $204get_iter.8 = getiter(value=$202call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi206.0 = $204get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $206for_iter.1 = iternext(value=$phi206.0)
DEBUG:numba.core.ssa:on stmt: $206for_iter.2 = pair_first(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $206for_iter.3 = pair_second(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi210.1 = $206for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $206for_iter.3, 210, 482
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: i = $phi210.1
DEBUG:numba.core.ssa:replaced with: i.1 = $phi210.1
DEBUG:numba.core.ssa:on stmt: jump 212
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $214load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $218load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.5 = static_getitem(value=$218load_attr.3, index=1, index_var=$const220.4)
DEBUG:numba.core.ssa:on stmt: $224call_function.6 = call $214load_global.1($222binary_subscr.5, func=$214load_global.1, args=[Var($222binary_subscr.5, macro_atom.py:49)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $226get_iter.7 = getiter(value=$224call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi228.1 = $226get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $228for_iter.2 = iternext(value=$phi228.1)
DEBUG:numba.core.ssa:on stmt: $228for_iter.3 = pair_first(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $228for_iter.4 = pair_second(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi230.2 = $228for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $228for_iter.4, 230, 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: k = $phi230.2
DEBUG:numba.core.ssa:on stmt: $const232.3 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const232.3
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $246load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $252binary_subscr.4 = getitem(value=block_references, index=i)
DEBUG:numba.core.ssa:on stmt: $const258.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $260binary_add.8 = i + $const258.7
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.9 = getitem(value=block_references, index=$260binary_add.8)
DEBUG:numba.core.ssa:on stmt: $264call_function.10 = call $246load_global.1($252binary_subscr.4, $262binary_subscr.9, func=$246load_global.1, args=[Var($252binary_subscr.4, macro_atom.py:51), Var($262binary_subscr.9, macro_atom.py:51)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $266get_iter.11 = getiter(value=$264call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi268.1 = $266get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $268for_iter.2 = iternext(value=$phi268.1)
DEBUG:numba.core.ssa:on stmt: $268for_iter.3 = pair_first(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $268for_iter.4 = pair_second(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi270.2 = $268for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $268for_iter.4, 270, 326
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: j = $phi270.2
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $274load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.4 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const280.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $282binary_subscr.6 = static_getitem(value=$278load_attr.4, index=1, index_var=$const280.5)
DEBUG:numba.core.ssa:on stmt: $284call_function.7 = call $274load_global.2($282binary_subscr.6, func=$274load_global.2, args=[Var($282binary_subscr.6, macro_atom.py:52)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $286get_iter.8 = getiter(value=$284call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi288.2 = $286get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 288
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $288for_iter.3 = iternext(value=$phi288.2)
DEBUG:numba.core.ssa:on stmt: $288for_iter.4 = pair_first(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $288for_iter.5 = pair_second(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi290.3 = $288for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $288for_iter.5, 290, 320
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 290
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: k = $phi290.3
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.8 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $306build_tuple.12 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:on stmt: $308binary_subscr.13 = getitem(value=transition_probabilities, index=$306build_tuple.12)
DEBUG:numba.core.ssa:on stmt: $310inplace_add.14 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$298binary_subscr.8, rhs=$308binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $310inplace_add.14
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 322
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 322
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 326
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $330load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $334load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const336.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $338binary_subscr.5 = static_getitem(value=$334load_attr.3, index=1, index_var=$const336.4)
DEBUG:numba.core.ssa:on stmt: $340call_function.6 = call $330load_global.1($338binary_subscr.5, func=$330load_global.1, args=[Var($338binary_subscr.5, macro_atom.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $342get_iter.7 = getiter(value=$340call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi344.1 = $342get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 344
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $344for_iter.2 = iternext(value=$phi344.1)
DEBUG:numba.core.ssa:on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi346.2 = $344for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $344for_iter.4, 346, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: k = $phi346.2
DEBUG:numba.core.ssa:on stmt: $352binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $const354.6 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $356compare_op.7 = $352binary_subscr.5 != $const354.6
DEBUG:numba.core.ssa:on stmt: bool358 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $358pred = call bool358($356compare_op.7, func=bool358, args=(Var($356compare_op.7, macro_atom.py:55),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $358pred, 362, 380
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $const362.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $368binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $370binary_true_divide.6 = $const362.2 / $368binary_subscr.5
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $370binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 380
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $const380.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const380.2
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $396load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $402binary_subscr.4 = getitem(value=block_references, index=i)
DEBUG:numba.core.ssa:on stmt: $const408.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $410binary_add.8 = i + $const408.7
DEBUG:numba.core.ssa:on stmt: $412binary_subscr.9 = getitem(value=block_references, index=$410binary_add.8)
DEBUG:numba.core.ssa:on stmt: $414call_function.10 = call $396load_global.1($402binary_subscr.4, $412binary_subscr.9, func=$396load_global.1, args=[Var($402binary_subscr.4, macro_atom.py:59), Var($412binary_subscr.9, macro_atom.py:59)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $416get_iter.11 = getiter(value=$414call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi418.1 = $416get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 418
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $418for_iter.2 = iternext(value=$phi418.1)
DEBUG:numba.core.ssa:on stmt: $418for_iter.3 = pair_first(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $418for_iter.4 = pair_second(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi420.2 = $418for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $418for_iter.4, 420, 478
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: j = $phi420.2
DEBUG:numba.core.ssa:on stmt: jump 422
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $424load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const426.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $430load_attr.5 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const432.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $434binary_subscr.7 = static_getitem(value=$430load_attr.5, index=1, index_var=$const432.6)
DEBUG:numba.core.ssa:on stmt: $436call_function.8 = call $424load_global.2($const426.3, $434binary_subscr.7, func=$424load_global.2, args=[Var($const426.3, macro_atom.py:60), Var($434binary_subscr.7, macro_atom.py:60)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $438get_iter.9 = getiter(value=$436call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi440.2 = $438get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 440
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $440for_iter.3 = iternext(value=$phi440.2)
DEBUG:numba.core.ssa:on stmt: $440for_iter.4 = pair_first(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $440for_iter.5 = pair_second(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi442.3 = $440for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $440for_iter.5, 442, 472
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: k = $phi442.3
DEBUG:numba.core.ssa:on stmt: $450build_tuple.7 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:on stmt: $454binary_subscr.10 = getitem(value=transition_probabilities, index=$450build_tuple.7)
DEBUG:numba.core.ssa:on stmt: $460binary_subscr.13 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $462inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$454binary_subscr.10, rhs=$460binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$450build_tuple.7] = $462inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 474
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 474
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 478
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 480
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 480
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 482
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $const484.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $486return_value.1 = cast(value=$const484.0)
DEBUG:numba.core.ssa:on stmt: return $486return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 485
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {36: [<numba.core.ir.Assign object at 0x7f6e465fbc50>],
             210: [<numba.core.ir.Assign object at 0x7f6e4650d050>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: transition_probability_coef = arg(0, name=transition_probability_coef)
DEBUG:numba.core.ssa:on stmt: beta_sobolev = arg(1, name=beta_sobolev)
DEBUG:numba.core.ssa:on stmt: j_blues = arg(2, name=j_blues)
DEBUG:numba.core.ssa:on stmt: stimulated_emission_factor = arg(3, name=stimulated_emission_factor)
DEBUG:numba.core.ssa:on stmt: transition_type = arg(4, name=transition_type)
DEBUG:numba.core.ssa:on stmt: lines_idx = arg(5, name=lines_idx)
DEBUG:numba.core.ssa:on stmt: block_references = arg(6, name=block_references)
DEBUG:numba.core.ssa:on stmt: transition_probabilities = arg(7, name=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: normalize = arg(8, name=normalize)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=1, index_var=$const10.4)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, macro_atom.py:32)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: norm_factor = $14call_method.6
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.2 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const26.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = static_getitem(value=$24load_attr.2, index=0, index_var=$const26.3)
DEBUG:numba.core.ssa:on stmt: $30call_function.5 = call $20load_global.0($28binary_subscr.4, func=$20load_global.0, args=[Var($28binary_subscr.4, macro_atom.py:34)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $32get_iter.6 = getiter(value=$30call_function.5)
DEBUG:numba.core.ssa:on stmt: $phi34.0 = $32get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $34for_iter.1 = iternext(value=$phi34.0)
DEBUG:numba.core.ssa:on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi36.1 = $34for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $34for_iter.3, 36, 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: i = $phi36.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.4 = getitem(value=lines_idx, index=i)
DEBUG:numba.core.ssa:find_def var='i' stmt=$42binary_subscr.4 = getitem(value=lines_idx, index=i)
DEBUG:numba.core.ssa:on stmt: line_idx = $42binary_subscr.4
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $48load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const54.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.5 = static_getitem(value=$52load_attr.3, index=1, index_var=$const54.4)
DEBUG:numba.core.ssa:on stmt: $58call_function.6 = call $48load_global.1($56binary_subscr.5, func=$48load_global.1, args=[Var($56binary_subscr.5, macro_atom.py:36)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $60get_iter.7 = getiter(value=$58call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi62.1 = $60get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $62for_iter.2 = iternext(value=$phi62.1)
DEBUG:numba.core.ssa:on stmt: $62for_iter.3 = pair_first(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $62for_iter.4 = pair_second(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = $62for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $62for_iter.4, 64, 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: j = $phi64.2
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.5 = getitem(value=transition_probability_coef, index=i)
DEBUG:numba.core.ssa:find_def var='i' stmt=$70binary_subscr.5 = getitem(value=transition_probability_coef, index=i)
DEBUG:numba.core.ssa:find_def_from_top label 64
DEBUG:numba.core.ssa:idom 62 from label 64
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:find_def_from_top label 62
DEBUG:numba.core.ssa:idom 46 from label 62
DEBUG:numba.core.ssa:find_def_from_bottom label 46
DEBUG:numba.core.ssa:find_def_from_top label 46
DEBUG:numba.core.ssa:idom 36 from label 46
DEBUG:numba.core.ssa:find_def_from_bottom label 36
DEBUG:numba.core.ssa:on stmt: $78build_tuple.9 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.10 = getitem(value=beta_sobolev, index=$78build_tuple.9)
DEBUG:numba.core.ssa:on stmt: $82binary_multiply.11 = $70binary_subscr.5 * $80binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $90build_tuple.15 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:find_def var='i' stmt=$90build_tuple.15 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:find_def_from_top label 64
DEBUG:numba.core.ssa:idom 62 from label 64
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:find_def_from_top label 62
DEBUG:numba.core.ssa:idom 46 from label 62
DEBUG:numba.core.ssa:find_def_from_bottom label 46
DEBUG:numba.core.ssa:find_def_from_top label 46
DEBUG:numba.core.ssa:idom 36 from label 46
DEBUG:numba.core.ssa:find_def_from_bottom label 36
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$90build_tuple.15] = $82binary_multiply.11
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $102binary_subscr.3 = getitem(value=transition_type, index=i)
DEBUG:numba.core.ssa:find_def var='i' stmt=$102binary_subscr.3 = getitem(value=transition_type, index=i)
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 96 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 96
DEBUG:numba.core.ssa:find_def_from_top label 96
DEBUG:numba.core.ssa:idom 62 from label 96
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:find_def_from_top label 62
DEBUG:numba.core.ssa:idom 46 from label 62
DEBUG:numba.core.ssa:find_def_from_bottom label 46
DEBUG:numba.core.ssa:find_def_from_top label 46
DEBUG:numba.core.ssa:idom 36 from label 46
DEBUG:numba.core.ssa:find_def_from_bottom label 36
DEBUG:numba.core.ssa:on stmt: $const104.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106compare_op.5 = $102binary_subscr.3 == $const104.4
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106compare_op.5, func=bool108, args=(Var($106compare_op.5, macro_atom.py:40),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 485
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $112load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const118.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.5 = static_getitem(value=$116load_attr.3, index=1, index_var=$const118.4)
DEBUG:numba.core.ssa:on stmt: $122call_function.6 = call $112load_global.1($120binary_subscr.5, func=$112load_global.1, args=[Var($120binary_subscr.5, macro_atom.py:41)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $124get_iter.7 = getiter(value=$122call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi126.1 = $124get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $126for_iter.2 = iternext(value=$phi126.1)
DEBUG:numba.core.ssa:on stmt: $126for_iter.3 = pair_first(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $126for_iter.4 = pair_second(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi128.2 = $126for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $126for_iter.4, 128, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: j = $phi128.2
DEBUG:numba.core.ssa:on stmt: $136build_tuple.6 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:find_def var='i' stmt=$136build_tuple.6 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 126 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 126
DEBUG:numba.core.ssa:find_def_from_top label 126
DEBUG:numba.core.ssa:idom 110 from label 126
DEBUG:numba.core.ssa:find_def_from_bottom label 110
DEBUG:numba.core.ssa:find_def_from_top label 110
DEBUG:numba.core.ssa:idom 98 from label 110
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 96 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 96
DEBUG:numba.core.ssa:find_def_from_top label 96
DEBUG:numba.core.ssa:idom 62 from label 96
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:find_def_from_top label 62
DEBUG:numba.core.ssa:idom 46 from label 62
DEBUG:numba.core.ssa:find_def_from_bottom label 46
DEBUG:numba.core.ssa:find_def_from_top label 46
DEBUG:numba.core.ssa:idom 36 from label 46
DEBUG:numba.core.ssa:find_def_from_bottom label 36
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.9 = getitem(value=transition_probabilities, index=$136build_tuple.6)
DEBUG:numba.core.ssa:on stmt: $148build_tuple.13 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $150binary_subscr.14 = getitem(value=stimulated_emission_factor, index=$148build_tuple.13)
DEBUG:numba.core.ssa:on stmt: $158build_tuple.18 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.19 = getitem(value=j_blues, index=$158build_tuple.18)
DEBUG:numba.core.ssa:on stmt: $162binary_multiply.20 = $150binary_subscr.14 * $160binary_subscr.19
DEBUG:numba.core.ssa:on stmt: $164inplace_multiply.21 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$140binary_subscr.9, rhs=$162binary_multiply.20, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$136build_tuple.6] = $164inplace_multiply.21
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 485
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(normalize, func=bool180, args=(Var(normalize, macro_atom.py:32),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 184, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $188load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $192load_attr.2 = getattr(value=block_references, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const194.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $196binary_subscr.4 = static_getitem(value=$192load_attr.2, index=0, index_var=$const194.3)
DEBUG:numba.core.ssa:on stmt: $const198.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.6 = $196binary_subscr.4 - $const198.5
DEBUG:numba.core.ssa:on stmt: $202call_function.7 = call $188load_global.0($200binary_subtract.6, func=$188load_global.0, args=[Var($200binary_subtract.6, macro_atom.py:48)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $204get_iter.8 = getiter(value=$202call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi206.0 = $204get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $206for_iter.1 = iternext(value=$phi206.0)
DEBUG:numba.core.ssa:on stmt: $206for_iter.2 = pair_first(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $206for_iter.3 = pair_second(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi210.1 = $206for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $206for_iter.3, 210, 482
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: i.1 = $phi210.1
DEBUG:numba.core.ssa:on stmt: jump 212
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $214load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $218load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.5 = static_getitem(value=$218load_attr.3, index=1, index_var=$const220.4)
DEBUG:numba.core.ssa:on stmt: $224call_function.6 = call $214load_global.1($222binary_subscr.5, func=$214load_global.1, args=[Var($222binary_subscr.5, macro_atom.py:49)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $226get_iter.7 = getiter(value=$224call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi228.1 = $226get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $228for_iter.2 = iternext(value=$phi228.1)
DEBUG:numba.core.ssa:on stmt: $228for_iter.3 = pair_first(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $228for_iter.4 = pair_second(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi230.2 = $228for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $228for_iter.4, 230, 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: k = $phi230.2
DEBUG:numba.core.ssa:on stmt: $const232.3 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const232.3
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $246load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $252binary_subscr.4 = getitem(value=block_references, index=i)
DEBUG:numba.core.ssa:find_def var='i' stmt=$252binary_subscr.4 = getitem(value=block_references, index=i)
DEBUG:numba.core.ssa:find_def_from_top label 244
DEBUG:numba.core.ssa:idom 242 from label 244
DEBUG:numba.core.ssa:find_def_from_bottom label 242
DEBUG:numba.core.ssa:find_def_from_top label 242
DEBUG:numba.core.ssa:idom 228 from label 242
DEBUG:numba.core.ssa:find_def_from_bottom label 228
DEBUG:numba.core.ssa:find_def_from_top label 228
DEBUG:numba.core.ssa:idom 212 from label 228
DEBUG:numba.core.ssa:find_def_from_bottom label 212
DEBUG:numba.core.ssa:find_def_from_top label 212
DEBUG:numba.core.ssa:idom 210 from label 212
DEBUG:numba.core.ssa:find_def_from_bottom label 210
DEBUG:numba.core.ssa:replaced with: $252binary_subscr.4 = getitem(value=block_references, index=i.1)
DEBUG:numba.core.ssa:on stmt: $const258.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $260binary_add.8 = i + $const258.7
DEBUG:numba.core.ssa:find_def var='i' stmt=$260binary_add.8 = i + $const258.7
DEBUG:numba.core.ssa:find_def_from_top label 244
DEBUG:numba.core.ssa:idom 242 from label 244
DEBUG:numba.core.ssa:find_def_from_bottom label 242
DEBUG:numba.core.ssa:find_def_from_top label 242
DEBUG:numba.core.ssa:idom 228 from label 242
DEBUG:numba.core.ssa:find_def_from_bottom label 228
DEBUG:numba.core.ssa:find_def_from_top label 228
DEBUG:numba.core.ssa:idom 212 from label 228
DEBUG:numba.core.ssa:find_def_from_bottom label 212
DEBUG:numba.core.ssa:find_def_from_top label 212
DEBUG:numba.core.ssa:idom 210 from label 212
DEBUG:numba.core.ssa:find_def_from_bottom label 210
DEBUG:numba.core.ssa:replaced with: $260binary_add.8 = i.1 + $const258.7
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.9 = getitem(value=block_references, index=$260binary_add.8)
DEBUG:numba.core.ssa:on stmt: $264call_function.10 = call $246load_global.1($252binary_subscr.4, $262binary_subscr.9, func=$246load_global.1, args=[Var($252binary_subscr.4, macro_atom.py:51), Var($262binary_subscr.9, macro_atom.py:51)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $266get_iter.11 = getiter(value=$264call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi268.1 = $266get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $268for_iter.2 = iternext(value=$phi268.1)
DEBUG:numba.core.ssa:on stmt: $268for_iter.3 = pair_first(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $268for_iter.4 = pair_second(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi270.2 = $268for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $268for_iter.4, 270, 326
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: j = $phi270.2
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $274load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.4 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const280.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $282binary_subscr.6 = static_getitem(value=$278load_attr.4, index=1, index_var=$const280.5)
DEBUG:numba.core.ssa:on stmt: $284call_function.7 = call $274load_global.2($282binary_subscr.6, func=$274load_global.2, args=[Var($282binary_subscr.6, macro_atom.py:52)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $286get_iter.8 = getiter(value=$284call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi288.2 = $286get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 288
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $288for_iter.3 = iternext(value=$phi288.2)
DEBUG:numba.core.ssa:on stmt: $288for_iter.4 = pair_first(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $288for_iter.5 = pair_second(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi290.3 = $288for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $288for_iter.5, 290, 320
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 290
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: k = $phi290.3
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.8 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $306build_tuple.12 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:on stmt: $308binary_subscr.13 = getitem(value=transition_probabilities, index=$306build_tuple.12)
DEBUG:numba.core.ssa:on stmt: $310inplace_add.14 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$298binary_subscr.8, rhs=$308binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $310inplace_add.14
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 322
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 322
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 326
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $330load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $334load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const336.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $338binary_subscr.5 = static_getitem(value=$334load_attr.3, index=1, index_var=$const336.4)
DEBUG:numba.core.ssa:on stmt: $340call_function.6 = call $330load_global.1($338binary_subscr.5, func=$330load_global.1, args=[Var($338binary_subscr.5, macro_atom.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $342get_iter.7 = getiter(value=$340call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi344.1 = $342get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 344
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $344for_iter.2 = iternext(value=$phi344.1)
DEBUG:numba.core.ssa:on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi346.2 = $344for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $344for_iter.4, 346, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: k = $phi346.2
DEBUG:numba.core.ssa:on stmt: $352binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $const354.6 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $356compare_op.7 = $352binary_subscr.5 != $const354.6
DEBUG:numba.core.ssa:on stmt: bool358 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $358pred = call bool358($356compare_op.7, func=bool358, args=(Var($356compare_op.7, macro_atom.py:55),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $358pred, 362, 380
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $const362.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $368binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $370binary_true_divide.6 = $const362.2 / $368binary_subscr.5
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $370binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 380
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $const380.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const380.2
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $396load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $402binary_subscr.4 = getitem(value=block_references, index=i)
DEBUG:numba.core.ssa:find_def var='i' stmt=$402binary_subscr.4 = getitem(value=block_references, index=i)
DEBUG:numba.core.ssa:find_def_from_top label 394
DEBUG:numba.core.ssa:idom 392 from label 394
DEBUG:numba.core.ssa:find_def_from_bottom label 392
DEBUG:numba.core.ssa:find_def_from_top label 392
DEBUG:numba.core.ssa:idom 344 from label 392
DEBUG:numba.core.ssa:find_def_from_bottom label 344
DEBUG:numba.core.ssa:find_def_from_top label 344
DEBUG:numba.core.ssa:idom 328 from label 344
DEBUG:numba.core.ssa:find_def_from_bottom label 328
DEBUG:numba.core.ssa:find_def_from_top label 328
DEBUG:numba.core.ssa:idom 326 from label 328
DEBUG:numba.core.ssa:find_def_from_bottom label 326
DEBUG:numba.core.ssa:find_def_from_top label 326
DEBUG:numba.core.ssa:idom 268 from label 326
DEBUG:numba.core.ssa:find_def_from_bottom label 268
DEBUG:numba.core.ssa:find_def_from_top label 268
DEBUG:numba.core.ssa:idom 244 from label 268
DEBUG:numba.core.ssa:find_def_from_bottom label 244
DEBUG:numba.core.ssa:find_def_from_top label 244
DEBUG:numba.core.ssa:idom 242 from label 244
DEBUG:numba.core.ssa:find_def_from_bottom label 242
DEBUG:numba.core.ssa:find_def_from_top label 242
DEBUG:numba.core.ssa:idom 228 from label 242
DEBUG:numba.core.ssa:find_def_from_bottom label 228
DEBUG:numba.core.ssa:find_def_from_top label 228
DEBUG:numba.core.ssa:idom 212 from label 228
DEBUG:numba.core.ssa:find_def_from_bottom label 212
DEBUG:numba.core.ssa:find_def_from_top label 212
DEBUG:numba.core.ssa:idom 210 from label 212
DEBUG:numba.core.ssa:find_def_from_bottom label 210
DEBUG:numba.core.ssa:replaced with: $402binary_subscr.4 = getitem(value=block_references, index=i.1)
DEBUG:numba.core.ssa:on stmt: $const408.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $410binary_add.8 = i + $const408.7
DEBUG:numba.core.ssa:find_def var='i' stmt=$410binary_add.8 = i + $const408.7
DEBUG:numba.core.ssa:find_def_from_top label 394
DEBUG:numba.core.ssa:idom 392 from label 394
DEBUG:numba.core.ssa:find_def_from_bottom label 392
DEBUG:numba.core.ssa:find_def_from_top label 392
DEBUG:numba.core.ssa:idom 344 from label 392
DEBUG:numba.core.ssa:find_def_from_bottom label 344
DEBUG:numba.core.ssa:find_def_from_top label 344
DEBUG:numba.core.ssa:idom 328 from label 344
DEBUG:numba.core.ssa:find_def_from_bottom label 328
DEBUG:numba.core.ssa:find_def_from_top label 328
DEBUG:numba.core.ssa:idom 326 from label 328
DEBUG:numba.core.ssa:find_def_from_bottom label 326
DEBUG:numba.core.ssa:find_def_from_top label 326
DEBUG:numba.core.ssa:idom 268 from label 326
DEBUG:numba.core.ssa:find_def_from_bottom label 268
DEBUG:numba.core.ssa:find_def_from_top label 268
DEBUG:numba.core.ssa:idom 244 from label 268
DEBUG:numba.core.ssa:find_def_from_bottom label 244
DEBUG:numba.core.ssa:find_def_from_top label 244
DEBUG:numba.core.ssa:idom 242 from label 244
DEBUG:numba.core.ssa:find_def_from_bottom label 242
DEBUG:numba.core.ssa:find_def_from_top label 242
DEBUG:numba.core.ssa:idom 228 from label 242
DEBUG:numba.core.ssa:find_def_from_bottom label 228
DEBUG:numba.core.ssa:find_def_from_top label 228
DEBUG:numba.core.ssa:idom 212 from label 228
DEBUG:numba.core.ssa:find_def_from_bottom label 212
DEBUG:numba.core.ssa:find_def_from_top label 212
DEBUG:numba.core.ssa:idom 210 from label 212
DEBUG:numba.core.ssa:find_def_from_bottom label 210
DEBUG:numba.core.ssa:replaced with: $410binary_add.8 = i.1 + $const408.7
DEBUG:numba.core.ssa:on stmt: $412binary_subscr.9 = getitem(value=block_references, index=$410binary_add.8)
DEBUG:numba.core.ssa:on stmt: $414call_function.10 = call $396load_global.1($402binary_subscr.4, $412binary_subscr.9, func=$396load_global.1, args=[Var($402binary_subscr.4, macro_atom.py:59), Var($412binary_subscr.9, macro_atom.py:59)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $416get_iter.11 = getiter(value=$414call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi418.1 = $416get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 418
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $418for_iter.2 = iternext(value=$phi418.1)
DEBUG:numba.core.ssa:on stmt: $418for_iter.3 = pair_first(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $418for_iter.4 = pair_second(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi420.2 = $418for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $418for_iter.4, 420, 478
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: j = $phi420.2
DEBUG:numba.core.ssa:on stmt: jump 422
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $424load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const426.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $430load_attr.5 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const432.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $434binary_subscr.7 = static_getitem(value=$430load_attr.5, index=1, index_var=$const432.6)
DEBUG:numba.core.ssa:on stmt: $436call_function.8 = call $424load_global.2($const426.3, $434binary_subscr.7, func=$424load_global.2, args=[Var($const426.3, macro_atom.py:60), Var($434binary_subscr.7, macro_atom.py:60)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $438get_iter.9 = getiter(value=$436call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi440.2 = $438get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 440
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $440for_iter.3 = iternext(value=$phi440.2)
DEBUG:numba.core.ssa:on stmt: $440for_iter.4 = pair_first(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $440for_iter.5 = pair_second(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi442.3 = $440for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $440for_iter.5, 442, 472
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: k = $phi442.3
DEBUG:numba.core.ssa:on stmt: $450build_tuple.7 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:on stmt: $454binary_subscr.10 = getitem(value=transition_probabilities, index=$450build_tuple.7)
DEBUG:numba.core.ssa:on stmt: $460binary_subscr.13 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $462inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$454binary_subscr.10, rhs=$460binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$450build_tuple.7] = $462inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 474
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 474
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 478
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 480
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 480
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 482
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: $const484.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $486return_value.1 = cast(value=$const484.0)
DEBUG:numba.core.ssa:on stmt: return $486return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 485
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465cc610>
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:Fix SSA violator on var j
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: transition_probability_coef = arg(0, name=transition_probability_coef)
DEBUG:numba.core.ssa:on stmt: beta_sobolev = arg(1, name=beta_sobolev)
DEBUG:numba.core.ssa:on stmt: j_blues = arg(2, name=j_blues)
DEBUG:numba.core.ssa:on stmt: stimulated_emission_factor = arg(3, name=stimulated_emission_factor)
DEBUG:numba.core.ssa:on stmt: transition_type = arg(4, name=transition_type)
DEBUG:numba.core.ssa:on stmt: lines_idx = arg(5, name=lines_idx)
DEBUG:numba.core.ssa:on stmt: block_references = arg(6, name=block_references)
DEBUG:numba.core.ssa:on stmt: transition_probabilities = arg(7, name=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: normalize = arg(8, name=normalize)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=1, index_var=$const10.4)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, macro_atom.py:32)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: norm_factor = $14call_method.6
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.2 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const26.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = static_getitem(value=$24load_attr.2, index=0, index_var=$const26.3)
DEBUG:numba.core.ssa:on stmt: $30call_function.5 = call $20load_global.0($28binary_subscr.4, func=$20load_global.0, args=[Var($28binary_subscr.4, macro_atom.py:34)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $32get_iter.6 = getiter(value=$30call_function.5)
DEBUG:numba.core.ssa:on stmt: $phi34.0 = $32get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $34for_iter.1 = iternext(value=$phi34.0)
DEBUG:numba.core.ssa:on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi36.1 = $34for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $34for_iter.3, 36, 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: i = $phi36.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.4 = getitem(value=lines_idx, index=i)
DEBUG:numba.core.ssa:on stmt: line_idx = $42binary_subscr.4
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $48load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const54.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.5 = static_getitem(value=$52load_attr.3, index=1, index_var=$const54.4)
DEBUG:numba.core.ssa:on stmt: $58call_function.6 = call $48load_global.1($56binary_subscr.5, func=$48load_global.1, args=[Var($56binary_subscr.5, macro_atom.py:36)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $60get_iter.7 = getiter(value=$58call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi62.1 = $60get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $62for_iter.2 = iternext(value=$phi62.1)
DEBUG:numba.core.ssa:on stmt: $62for_iter.3 = pair_first(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $62for_iter.4 = pair_second(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = $62for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $62for_iter.4, 64, 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: j = $phi64.2
DEBUG:numba.core.ssa:first assign: j
DEBUG:numba.core.ssa:replaced with: j = $phi64.2
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.5 = getitem(value=transition_probability_coef, index=i)
DEBUG:numba.core.ssa:on stmt: $78build_tuple.9 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.10 = getitem(value=beta_sobolev, index=$78build_tuple.9)
DEBUG:numba.core.ssa:on stmt: $82binary_multiply.11 = $70binary_subscr.5 * $80binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $90build_tuple.15 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$90build_tuple.15] = $82binary_multiply.11
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $102binary_subscr.3 = getitem(value=transition_type, index=i)
DEBUG:numba.core.ssa:on stmt: $const104.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106compare_op.5 = $102binary_subscr.3 == $const104.4
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106compare_op.5, func=bool108, args=(Var($106compare_op.5, macro_atom.py:40),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 485
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $112load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const118.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.5 = static_getitem(value=$116load_attr.3, index=1, index_var=$const118.4)
DEBUG:numba.core.ssa:on stmt: $122call_function.6 = call $112load_global.1($120binary_subscr.5, func=$112load_global.1, args=[Var($120binary_subscr.5, macro_atom.py:41)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $124get_iter.7 = getiter(value=$122call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi126.1 = $124get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $126for_iter.2 = iternext(value=$phi126.1)
DEBUG:numba.core.ssa:on stmt: $126for_iter.3 = pair_first(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $126for_iter.4 = pair_second(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi128.2 = $126for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $126for_iter.4, 128, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: j = $phi128.2
DEBUG:numba.core.ssa:replaced with: j.1 = $phi128.2
DEBUG:numba.core.ssa:on stmt: $136build_tuple.6 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.9 = getitem(value=transition_probabilities, index=$136build_tuple.6)
DEBUG:numba.core.ssa:on stmt: $148build_tuple.13 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $150binary_subscr.14 = getitem(value=stimulated_emission_factor, index=$148build_tuple.13)
DEBUG:numba.core.ssa:on stmt: $158build_tuple.18 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.19 = getitem(value=j_blues, index=$158build_tuple.18)
DEBUG:numba.core.ssa:on stmt: $162binary_multiply.20 = $150binary_subscr.14 * $160binary_subscr.19
DEBUG:numba.core.ssa:on stmt: $164inplace_multiply.21 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$140binary_subscr.9, rhs=$162binary_multiply.20, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$136build_tuple.6] = $164inplace_multiply.21
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 485
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(normalize, func=bool180, args=(Var(normalize, macro_atom.py:32),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 184, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $188load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $192load_attr.2 = getattr(value=block_references, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const194.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $196binary_subscr.4 = static_getitem(value=$192load_attr.2, index=0, index_var=$const194.3)
DEBUG:numba.core.ssa:on stmt: $const198.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.6 = $196binary_subscr.4 - $const198.5
DEBUG:numba.core.ssa:on stmt: $202call_function.7 = call $188load_global.0($200binary_subtract.6, func=$188load_global.0, args=[Var($200binary_subtract.6, macro_atom.py:48)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $204get_iter.8 = getiter(value=$202call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi206.0 = $204get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $206for_iter.1 = iternext(value=$phi206.0)
DEBUG:numba.core.ssa:on stmt: $206for_iter.2 = pair_first(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $206for_iter.3 = pair_second(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi210.1 = $206for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $206for_iter.3, 210, 482
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: i.1 = $phi210.1
DEBUG:numba.core.ssa:on stmt: jump 212
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $214load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $218load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.5 = static_getitem(value=$218load_attr.3, index=1, index_var=$const220.4)
DEBUG:numba.core.ssa:on stmt: $224call_function.6 = call $214load_global.1($222binary_subscr.5, func=$214load_global.1, args=[Var($222binary_subscr.5, macro_atom.py:49)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $226get_iter.7 = getiter(value=$224call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi228.1 = $226get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $228for_iter.2 = iternext(value=$phi228.1)
DEBUG:numba.core.ssa:on stmt: $228for_iter.3 = pair_first(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $228for_iter.4 = pair_second(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi230.2 = $228for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $228for_iter.4, 230, 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: k = $phi230.2
DEBUG:numba.core.ssa:on stmt: $const232.3 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const232.3
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $246load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $252binary_subscr.4 = getitem(value=block_references, index=i.1)
DEBUG:numba.core.ssa:on stmt: $const258.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $260binary_add.8 = i.1 + $const258.7
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.9 = getitem(value=block_references, index=$260binary_add.8)
DEBUG:numba.core.ssa:on stmt: $264call_function.10 = call $246load_global.1($252binary_subscr.4, $262binary_subscr.9, func=$246load_global.1, args=[Var($252binary_subscr.4, macro_atom.py:51), Var($262binary_subscr.9, macro_atom.py:51)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $266get_iter.11 = getiter(value=$264call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi268.1 = $266get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $268for_iter.2 = iternext(value=$phi268.1)
DEBUG:numba.core.ssa:on stmt: $268for_iter.3 = pair_first(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $268for_iter.4 = pair_second(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi270.2 = $268for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $268for_iter.4, 270, 326
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: j = $phi270.2
DEBUG:numba.core.ssa:replaced with: j.2 = $phi270.2
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $274load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.4 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const280.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $282binary_subscr.6 = static_getitem(value=$278load_attr.4, index=1, index_var=$const280.5)
DEBUG:numba.core.ssa:on stmt: $284call_function.7 = call $274load_global.2($282binary_subscr.6, func=$274load_global.2, args=[Var($282binary_subscr.6, macro_atom.py:52)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $286get_iter.8 = getiter(value=$284call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi288.2 = $286get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 288
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $288for_iter.3 = iternext(value=$phi288.2)
DEBUG:numba.core.ssa:on stmt: $288for_iter.4 = pair_first(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $288for_iter.5 = pair_second(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi290.3 = $288for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $288for_iter.5, 290, 320
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 290
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: k = $phi290.3
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.8 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $306build_tuple.12 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:on stmt: $308binary_subscr.13 = getitem(value=transition_probabilities, index=$306build_tuple.12)
DEBUG:numba.core.ssa:on stmt: $310inplace_add.14 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$298binary_subscr.8, rhs=$308binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $310inplace_add.14
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 322
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 322
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 326
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $330load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $334load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const336.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $338binary_subscr.5 = static_getitem(value=$334load_attr.3, index=1, index_var=$const336.4)
DEBUG:numba.core.ssa:on stmt: $340call_function.6 = call $330load_global.1($338binary_subscr.5, func=$330load_global.1, args=[Var($338binary_subscr.5, macro_atom.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $342get_iter.7 = getiter(value=$340call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi344.1 = $342get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 344
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $344for_iter.2 = iternext(value=$phi344.1)
DEBUG:numba.core.ssa:on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi346.2 = $344for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $344for_iter.4, 346, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: k = $phi346.2
DEBUG:numba.core.ssa:on stmt: $352binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $const354.6 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $356compare_op.7 = $352binary_subscr.5 != $const354.6
DEBUG:numba.core.ssa:on stmt: bool358 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $358pred = call bool358($356compare_op.7, func=bool358, args=(Var($356compare_op.7, macro_atom.py:55),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $358pred, 362, 380
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $const362.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $368binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $370binary_true_divide.6 = $const362.2 / $368binary_subscr.5
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $370binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 380
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $const380.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const380.2
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $396load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $402binary_subscr.4 = getitem(value=block_references, index=i.1)
DEBUG:numba.core.ssa:on stmt: $const408.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $410binary_add.8 = i.1 + $const408.7
DEBUG:numba.core.ssa:on stmt: $412binary_subscr.9 = getitem(value=block_references, index=$410binary_add.8)
DEBUG:numba.core.ssa:on stmt: $414call_function.10 = call $396load_global.1($402binary_subscr.4, $412binary_subscr.9, func=$396load_global.1, args=[Var($402binary_subscr.4, macro_atom.py:59), Var($412binary_subscr.9, macro_atom.py:59)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $416get_iter.11 = getiter(value=$414call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi418.1 = $416get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 418
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $418for_iter.2 = iternext(value=$phi418.1)
DEBUG:numba.core.ssa:on stmt: $418for_iter.3 = pair_first(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $418for_iter.4 = pair_second(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi420.2 = $418for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $418for_iter.4, 420, 478
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: j = $phi420.2
DEBUG:numba.core.ssa:replaced with: j.3 = $phi420.2
DEBUG:numba.core.ssa:on stmt: jump 422
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $424load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const426.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $430load_attr.5 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const432.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $434binary_subscr.7 = static_getitem(value=$430load_attr.5, index=1, index_var=$const432.6)
DEBUG:numba.core.ssa:on stmt: $436call_function.8 = call $424load_global.2($const426.3, $434binary_subscr.7, func=$424load_global.2, args=[Var($const426.3, macro_atom.py:60), Var($434binary_subscr.7, macro_atom.py:60)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $438get_iter.9 = getiter(value=$436call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi440.2 = $438get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 440
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $440for_iter.3 = iternext(value=$phi440.2)
DEBUG:numba.core.ssa:on stmt: $440for_iter.4 = pair_first(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $440for_iter.5 = pair_second(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi442.3 = $440for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $440for_iter.5, 442, 472
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: k = $phi442.3
DEBUG:numba.core.ssa:on stmt: $450build_tuple.7 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:on stmt: $454binary_subscr.10 = getitem(value=transition_probabilities, index=$450build_tuple.7)
DEBUG:numba.core.ssa:on stmt: $460binary_subscr.13 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $462inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$454binary_subscr.10, rhs=$460binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$450build_tuple.7] = $462inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 474
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 474
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 478
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 480
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 480
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 482
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: $const484.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $486return_value.1 = cast(value=$const484.0)
DEBUG:numba.core.ssa:on stmt: return $486return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 485
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4650da90>
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {64: [<numba.core.ir.Assign object at 0x7f6e465cc110>],
             128: [<numba.core.ir.Assign object at 0x7f6e465cc650>],
             270: [<numba.core.ir.Assign object at 0x7f6e46675c10>],
             420: [<numba.core.ir.Assign object at 0x7f6e465fb8d0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: transition_probability_coef = arg(0, name=transition_probability_coef)
DEBUG:numba.core.ssa:on stmt: beta_sobolev = arg(1, name=beta_sobolev)
DEBUG:numba.core.ssa:on stmt: j_blues = arg(2, name=j_blues)
DEBUG:numba.core.ssa:on stmt: stimulated_emission_factor = arg(3, name=stimulated_emission_factor)
DEBUG:numba.core.ssa:on stmt: transition_type = arg(4, name=transition_type)
DEBUG:numba.core.ssa:on stmt: lines_idx = arg(5, name=lines_idx)
DEBUG:numba.core.ssa:on stmt: block_references = arg(6, name=block_references)
DEBUG:numba.core.ssa:on stmt: transition_probabilities = arg(7, name=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: normalize = arg(8, name=normalize)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=1, index_var=$const10.4)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, macro_atom.py:32)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: norm_factor = $14call_method.6
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.2 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const26.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = static_getitem(value=$24load_attr.2, index=0, index_var=$const26.3)
DEBUG:numba.core.ssa:on stmt: $30call_function.5 = call $20load_global.0($28binary_subscr.4, func=$20load_global.0, args=[Var($28binary_subscr.4, macro_atom.py:34)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $32get_iter.6 = getiter(value=$30call_function.5)
DEBUG:numba.core.ssa:on stmt: $phi34.0 = $32get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $34for_iter.1 = iternext(value=$phi34.0)
DEBUG:numba.core.ssa:on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi36.1 = $34for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $34for_iter.3, 36, 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: i = $phi36.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.4 = getitem(value=lines_idx, index=i)
DEBUG:numba.core.ssa:on stmt: line_idx = $42binary_subscr.4
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $48load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const54.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.5 = static_getitem(value=$52load_attr.3, index=1, index_var=$const54.4)
DEBUG:numba.core.ssa:on stmt: $58call_function.6 = call $48load_global.1($56binary_subscr.5, func=$48load_global.1, args=[Var($56binary_subscr.5, macro_atom.py:36)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $60get_iter.7 = getiter(value=$58call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi62.1 = $60get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $62for_iter.2 = iternext(value=$phi62.1)
DEBUG:numba.core.ssa:on stmt: $62for_iter.3 = pair_first(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $62for_iter.4 = pair_second(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = $62for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $62for_iter.4, 64, 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: j = $phi64.2
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.5 = getitem(value=transition_probability_coef, index=i)
DEBUG:numba.core.ssa:on stmt: $78build_tuple.9 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:find_def var='j' stmt=$78build_tuple.9 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.10 = getitem(value=beta_sobolev, index=$78build_tuple.9)
DEBUG:numba.core.ssa:on stmt: $82binary_multiply.11 = $70binary_subscr.5 * $80binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $90build_tuple.15 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:find_def var='j' stmt=$90build_tuple.15 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$90build_tuple.15] = $82binary_multiply.11
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $102binary_subscr.3 = getitem(value=transition_type, index=i)
DEBUG:numba.core.ssa:on stmt: $const104.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106compare_op.5 = $102binary_subscr.3 == $const104.4
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106compare_op.5, func=bool108, args=(Var($106compare_op.5, macro_atom.py:40),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 485
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $112load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const118.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.5 = static_getitem(value=$116load_attr.3, index=1, index_var=$const118.4)
DEBUG:numba.core.ssa:on stmt: $122call_function.6 = call $112load_global.1($120binary_subscr.5, func=$112load_global.1, args=[Var($120binary_subscr.5, macro_atom.py:41)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $124get_iter.7 = getiter(value=$122call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi126.1 = $124get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $126for_iter.2 = iternext(value=$phi126.1)
DEBUG:numba.core.ssa:on stmt: $126for_iter.3 = pair_first(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $126for_iter.4 = pair_second(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi128.2 = $126for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $126for_iter.4, 128, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi128.2
DEBUG:numba.core.ssa:on stmt: $136build_tuple.6 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:find_def var='j' stmt=$136build_tuple.6 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:replaced with: $136build_tuple.6 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j.1, macro_atom.py:41)])
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.9 = getitem(value=transition_probabilities, index=$136build_tuple.6)
DEBUG:numba.core.ssa:on stmt: $148build_tuple.13 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:find_def var='j' stmt=$148build_tuple.13 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:replaced with: $148build_tuple.13 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j.1, macro_atom.py:41)])
DEBUG:numba.core.ssa:on stmt: $150binary_subscr.14 = getitem(value=stimulated_emission_factor, index=$148build_tuple.13)
DEBUG:numba.core.ssa:on stmt: $158build_tuple.18 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:find_def var='j' stmt=$158build_tuple.18 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:replaced with: $158build_tuple.18 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j.1, macro_atom.py:41)])
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.19 = getitem(value=j_blues, index=$158build_tuple.18)
DEBUG:numba.core.ssa:on stmt: $162binary_multiply.20 = $150binary_subscr.14 * $160binary_subscr.19
DEBUG:numba.core.ssa:on stmt: $164inplace_multiply.21 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$140binary_subscr.9, rhs=$162binary_multiply.20, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$136build_tuple.6] = $164inplace_multiply.21
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 485
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(normalize, func=bool180, args=(Var(normalize, macro_atom.py:32),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 184, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $188load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $192load_attr.2 = getattr(value=block_references, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const194.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $196binary_subscr.4 = static_getitem(value=$192load_attr.2, index=0, index_var=$const194.3)
DEBUG:numba.core.ssa:on stmt: $const198.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.6 = $196binary_subscr.4 - $const198.5
DEBUG:numba.core.ssa:on stmt: $202call_function.7 = call $188load_global.0($200binary_subtract.6, func=$188load_global.0, args=[Var($200binary_subtract.6, macro_atom.py:48)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $204get_iter.8 = getiter(value=$202call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi206.0 = $204get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $206for_iter.1 = iternext(value=$phi206.0)
DEBUG:numba.core.ssa:on stmt: $206for_iter.2 = pair_first(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $206for_iter.3 = pair_second(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi210.1 = $206for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $206for_iter.3, 210, 482
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: i.1 = $phi210.1
DEBUG:numba.core.ssa:on stmt: jump 212
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $214load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $218load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.5 = static_getitem(value=$218load_attr.3, index=1, index_var=$const220.4)
DEBUG:numba.core.ssa:on stmt: $224call_function.6 = call $214load_global.1($222binary_subscr.5, func=$214load_global.1, args=[Var($222binary_subscr.5, macro_atom.py:49)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $226get_iter.7 = getiter(value=$224call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi228.1 = $226get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $228for_iter.2 = iternext(value=$phi228.1)
DEBUG:numba.core.ssa:on stmt: $228for_iter.3 = pair_first(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $228for_iter.4 = pair_second(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi230.2 = $228for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $228for_iter.4, 230, 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: k = $phi230.2
DEBUG:numba.core.ssa:on stmt: $const232.3 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const232.3
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $246load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $252binary_subscr.4 = getitem(value=block_references, index=i.1)
DEBUG:numba.core.ssa:on stmt: $const258.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $260binary_add.8 = i.1 + $const258.7
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.9 = getitem(value=block_references, index=$260binary_add.8)
DEBUG:numba.core.ssa:on stmt: $264call_function.10 = call $246load_global.1($252binary_subscr.4, $262binary_subscr.9, func=$246load_global.1, args=[Var($252binary_subscr.4, macro_atom.py:51), Var($262binary_subscr.9, macro_atom.py:51)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $266get_iter.11 = getiter(value=$264call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi268.1 = $266get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $268for_iter.2 = iternext(value=$phi268.1)
DEBUG:numba.core.ssa:on stmt: $268for_iter.3 = pair_first(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $268for_iter.4 = pair_second(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi270.2 = $268for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $268for_iter.4, 270, 326
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: j.2 = $phi270.2
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $274load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.4 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const280.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $282binary_subscr.6 = static_getitem(value=$278load_attr.4, index=1, index_var=$const280.5)
DEBUG:numba.core.ssa:on stmt: $284call_function.7 = call $274load_global.2($282binary_subscr.6, func=$274load_global.2, args=[Var($282binary_subscr.6, macro_atom.py:52)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $286get_iter.8 = getiter(value=$284call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi288.2 = $286get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 288
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $288for_iter.3 = iternext(value=$phi288.2)
DEBUG:numba.core.ssa:on stmt: $288for_iter.4 = pair_first(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $288for_iter.5 = pair_second(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi290.3 = $288for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $288for_iter.5, 290, 320
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 290
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: k = $phi290.3
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.8 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $306build_tuple.12 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:find_def var='j' stmt=$306build_tuple.12 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:find_def_from_top label 290
DEBUG:numba.core.ssa:idom 288 from label 290
DEBUG:numba.core.ssa:find_def_from_bottom label 288
DEBUG:numba.core.ssa:find_def_from_top label 288
DEBUG:numba.core.ssa:idom 272 from label 288
DEBUG:numba.core.ssa:find_def_from_bottom label 272
DEBUG:numba.core.ssa:find_def_from_top label 272
DEBUG:numba.core.ssa:idom 270 from label 272
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:replaced with: $306build_tuple.12 = build_tuple(items=[Var(j.2, macro_atom.py:51), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:on stmt: $308binary_subscr.13 = getitem(value=transition_probabilities, index=$306build_tuple.12)
DEBUG:numba.core.ssa:on stmt: $310inplace_add.14 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$298binary_subscr.8, rhs=$308binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $310inplace_add.14
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 322
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 322
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 326
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $330load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $334load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const336.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $338binary_subscr.5 = static_getitem(value=$334load_attr.3, index=1, index_var=$const336.4)
DEBUG:numba.core.ssa:on stmt: $340call_function.6 = call $330load_global.1($338binary_subscr.5, func=$330load_global.1, args=[Var($338binary_subscr.5, macro_atom.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $342get_iter.7 = getiter(value=$340call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi344.1 = $342get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 344
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $344for_iter.2 = iternext(value=$phi344.1)
DEBUG:numba.core.ssa:on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi346.2 = $344for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $344for_iter.4, 346, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: k = $phi346.2
DEBUG:numba.core.ssa:on stmt: $352binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $const354.6 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $356compare_op.7 = $352binary_subscr.5 != $const354.6
DEBUG:numba.core.ssa:on stmt: bool358 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $358pred = call bool358($356compare_op.7, func=bool358, args=(Var($356compare_op.7, macro_atom.py:55),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $358pred, 362, 380
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $const362.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $368binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $370binary_true_divide.6 = $const362.2 / $368binary_subscr.5
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $370binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 380
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $const380.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const380.2
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $396load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $402binary_subscr.4 = getitem(value=block_references, index=i.1)
DEBUG:numba.core.ssa:on stmt: $const408.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $410binary_add.8 = i.1 + $const408.7
DEBUG:numba.core.ssa:on stmt: $412binary_subscr.9 = getitem(value=block_references, index=$410binary_add.8)
DEBUG:numba.core.ssa:on stmt: $414call_function.10 = call $396load_global.1($402binary_subscr.4, $412binary_subscr.9, func=$396load_global.1, args=[Var($402binary_subscr.4, macro_atom.py:59), Var($412binary_subscr.9, macro_atom.py:59)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $416get_iter.11 = getiter(value=$414call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi418.1 = $416get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 418
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $418for_iter.2 = iternext(value=$phi418.1)
DEBUG:numba.core.ssa:on stmt: $418for_iter.3 = pair_first(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $418for_iter.4 = pair_second(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi420.2 = $418for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $418for_iter.4, 420, 478
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: j.3 = $phi420.2
DEBUG:numba.core.ssa:on stmt: jump 422
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $424load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const426.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $430load_attr.5 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const432.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $434binary_subscr.7 = static_getitem(value=$430load_attr.5, index=1, index_var=$const432.6)
DEBUG:numba.core.ssa:on stmt: $436call_function.8 = call $424load_global.2($const426.3, $434binary_subscr.7, func=$424load_global.2, args=[Var($const426.3, macro_atom.py:60), Var($434binary_subscr.7, macro_atom.py:60)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $438get_iter.9 = getiter(value=$436call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi440.2 = $438get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 440
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $440for_iter.3 = iternext(value=$phi440.2)
DEBUG:numba.core.ssa:on stmt: $440for_iter.4 = pair_first(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $440for_iter.5 = pair_second(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi442.3 = $440for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $440for_iter.5, 442, 472
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: k = $phi442.3
DEBUG:numba.core.ssa:on stmt: $450build_tuple.7 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:find_def var='j' stmt=$450build_tuple.7 = build_tuple(items=[Var(j, macro_atom.py:36), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:find_def_from_top label 442
DEBUG:numba.core.ssa:idom 440 from label 442
DEBUG:numba.core.ssa:find_def_from_bottom label 440
DEBUG:numba.core.ssa:find_def_from_top label 440
DEBUG:numba.core.ssa:idom 422 from label 440
DEBUG:numba.core.ssa:find_def_from_bottom label 422
DEBUG:numba.core.ssa:find_def_from_top label 422
DEBUG:numba.core.ssa:idom 420 from label 422
DEBUG:numba.core.ssa:find_def_from_bottom label 420
DEBUG:numba.core.ssa:replaced with: $450build_tuple.7 = build_tuple(items=[Var(j.3, macro_atom.py:59), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:on stmt: $454binary_subscr.10 = getitem(value=transition_probabilities, index=$450build_tuple.7)
DEBUG:numba.core.ssa:on stmt: $460binary_subscr.13 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $462inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$454binary_subscr.10, rhs=$460binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$450build_tuple.7] = $462inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 474
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 474
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 478
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 480
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 480
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 482
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: $const484.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $486return_value.1 = cast(value=$const484.0)
DEBUG:numba.core.ssa:on stmt: return $486return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 485
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465e51d0>
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:Fix SSA violator on var k
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: transition_probability_coef = arg(0, name=transition_probability_coef)
DEBUG:numba.core.ssa:on stmt: beta_sobolev = arg(1, name=beta_sobolev)
DEBUG:numba.core.ssa:on stmt: j_blues = arg(2, name=j_blues)
DEBUG:numba.core.ssa:on stmt: stimulated_emission_factor = arg(3, name=stimulated_emission_factor)
DEBUG:numba.core.ssa:on stmt: transition_type = arg(4, name=transition_type)
DEBUG:numba.core.ssa:on stmt: lines_idx = arg(5, name=lines_idx)
DEBUG:numba.core.ssa:on stmt: block_references = arg(6, name=block_references)
DEBUG:numba.core.ssa:on stmt: transition_probabilities = arg(7, name=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: normalize = arg(8, name=normalize)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=1, index_var=$const10.4)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, macro_atom.py:32)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: norm_factor = $14call_method.6
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.2 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const26.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = static_getitem(value=$24load_attr.2, index=0, index_var=$const26.3)
DEBUG:numba.core.ssa:on stmt: $30call_function.5 = call $20load_global.0($28binary_subscr.4, func=$20load_global.0, args=[Var($28binary_subscr.4, macro_atom.py:34)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $32get_iter.6 = getiter(value=$30call_function.5)
DEBUG:numba.core.ssa:on stmt: $phi34.0 = $32get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $34for_iter.1 = iternext(value=$phi34.0)
DEBUG:numba.core.ssa:on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi36.1 = $34for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $34for_iter.3, 36, 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: i = $phi36.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.4 = getitem(value=lines_idx, index=i)
DEBUG:numba.core.ssa:on stmt: line_idx = $42binary_subscr.4
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $48load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const54.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.5 = static_getitem(value=$52load_attr.3, index=1, index_var=$const54.4)
DEBUG:numba.core.ssa:on stmt: $58call_function.6 = call $48load_global.1($56binary_subscr.5, func=$48load_global.1, args=[Var($56binary_subscr.5, macro_atom.py:36)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $60get_iter.7 = getiter(value=$58call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi62.1 = $60get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $62for_iter.2 = iternext(value=$phi62.1)
DEBUG:numba.core.ssa:on stmt: $62for_iter.3 = pair_first(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $62for_iter.4 = pair_second(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = $62for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $62for_iter.4, 64, 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: j = $phi64.2
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.5 = getitem(value=transition_probability_coef, index=i)
DEBUG:numba.core.ssa:on stmt: $78build_tuple.9 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.10 = getitem(value=beta_sobolev, index=$78build_tuple.9)
DEBUG:numba.core.ssa:on stmt: $82binary_multiply.11 = $70binary_subscr.5 * $80binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $90build_tuple.15 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$90build_tuple.15] = $82binary_multiply.11
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $102binary_subscr.3 = getitem(value=transition_type, index=i)
DEBUG:numba.core.ssa:on stmt: $const104.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106compare_op.5 = $102binary_subscr.3 == $const104.4
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106compare_op.5, func=bool108, args=(Var($106compare_op.5, macro_atom.py:40),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 485
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $112load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const118.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.5 = static_getitem(value=$116load_attr.3, index=1, index_var=$const118.4)
DEBUG:numba.core.ssa:on stmt: $122call_function.6 = call $112load_global.1($120binary_subscr.5, func=$112load_global.1, args=[Var($120binary_subscr.5, macro_atom.py:41)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $124get_iter.7 = getiter(value=$122call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi126.1 = $124get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $126for_iter.2 = iternext(value=$phi126.1)
DEBUG:numba.core.ssa:on stmt: $126for_iter.3 = pair_first(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $126for_iter.4 = pair_second(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi128.2 = $126for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $126for_iter.4, 128, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi128.2
DEBUG:numba.core.ssa:on stmt: $136build_tuple.6 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j.1, macro_atom.py:41)])
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.9 = getitem(value=transition_probabilities, index=$136build_tuple.6)
DEBUG:numba.core.ssa:on stmt: $148build_tuple.13 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j.1, macro_atom.py:41)])
DEBUG:numba.core.ssa:on stmt: $150binary_subscr.14 = getitem(value=stimulated_emission_factor, index=$148build_tuple.13)
DEBUG:numba.core.ssa:on stmt: $158build_tuple.18 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j.1, macro_atom.py:41)])
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.19 = getitem(value=j_blues, index=$158build_tuple.18)
DEBUG:numba.core.ssa:on stmt: $162binary_multiply.20 = $150binary_subscr.14 * $160binary_subscr.19
DEBUG:numba.core.ssa:on stmt: $164inplace_multiply.21 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$140binary_subscr.9, rhs=$162binary_multiply.20, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$136build_tuple.6] = $164inplace_multiply.21
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 485
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(normalize, func=bool180, args=(Var(normalize, macro_atom.py:32),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 184, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $188load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $192load_attr.2 = getattr(value=block_references, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const194.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $196binary_subscr.4 = static_getitem(value=$192load_attr.2, index=0, index_var=$const194.3)
DEBUG:numba.core.ssa:on stmt: $const198.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.6 = $196binary_subscr.4 - $const198.5
DEBUG:numba.core.ssa:on stmt: $202call_function.7 = call $188load_global.0($200binary_subtract.6, func=$188load_global.0, args=[Var($200binary_subtract.6, macro_atom.py:48)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $204get_iter.8 = getiter(value=$202call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi206.0 = $204get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $206for_iter.1 = iternext(value=$phi206.0)
DEBUG:numba.core.ssa:on stmt: $206for_iter.2 = pair_first(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $206for_iter.3 = pair_second(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi210.1 = $206for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $206for_iter.3, 210, 482
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: i.1 = $phi210.1
DEBUG:numba.core.ssa:on stmt: jump 212
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $214load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $218load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.5 = static_getitem(value=$218load_attr.3, index=1, index_var=$const220.4)
DEBUG:numba.core.ssa:on stmt: $224call_function.6 = call $214load_global.1($222binary_subscr.5, func=$214load_global.1, args=[Var($222binary_subscr.5, macro_atom.py:49)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $226get_iter.7 = getiter(value=$224call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi228.1 = $226get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $228for_iter.2 = iternext(value=$phi228.1)
DEBUG:numba.core.ssa:on stmt: $228for_iter.3 = pair_first(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $228for_iter.4 = pair_second(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi230.2 = $228for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $228for_iter.4, 230, 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: k = $phi230.2
DEBUG:numba.core.ssa:first assign: k
DEBUG:numba.core.ssa:replaced with: k = $phi230.2
DEBUG:numba.core.ssa:on stmt: $const232.3 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const232.3
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $246load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $252binary_subscr.4 = getitem(value=block_references, index=i.1)
DEBUG:numba.core.ssa:on stmt: $const258.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $260binary_add.8 = i.1 + $const258.7
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.9 = getitem(value=block_references, index=$260binary_add.8)
DEBUG:numba.core.ssa:on stmt: $264call_function.10 = call $246load_global.1($252binary_subscr.4, $262binary_subscr.9, func=$246load_global.1, args=[Var($252binary_subscr.4, macro_atom.py:51), Var($262binary_subscr.9, macro_atom.py:51)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $266get_iter.11 = getiter(value=$264call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi268.1 = $266get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $268for_iter.2 = iternext(value=$phi268.1)
DEBUG:numba.core.ssa:on stmt: $268for_iter.3 = pair_first(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $268for_iter.4 = pair_second(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi270.2 = $268for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $268for_iter.4, 270, 326
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: j.2 = $phi270.2
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $274load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.4 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const280.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $282binary_subscr.6 = static_getitem(value=$278load_attr.4, index=1, index_var=$const280.5)
DEBUG:numba.core.ssa:on stmt: $284call_function.7 = call $274load_global.2($282binary_subscr.6, func=$274load_global.2, args=[Var($282binary_subscr.6, macro_atom.py:52)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $286get_iter.8 = getiter(value=$284call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi288.2 = $286get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 288
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $288for_iter.3 = iternext(value=$phi288.2)
DEBUG:numba.core.ssa:on stmt: $288for_iter.4 = pair_first(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $288for_iter.5 = pair_second(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi290.3 = $288for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $288for_iter.5, 290, 320
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 290
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: k = $phi290.3
DEBUG:numba.core.ssa:replaced with: k.1 = $phi290.3
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.8 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $306build_tuple.12 = build_tuple(items=[Var(j.2, macro_atom.py:51), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:on stmt: $308binary_subscr.13 = getitem(value=transition_probabilities, index=$306build_tuple.12)
DEBUG:numba.core.ssa:on stmt: $310inplace_add.14 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$298binary_subscr.8, rhs=$308binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $310inplace_add.14
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 322
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 322
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 326
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $330load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $334load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const336.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $338binary_subscr.5 = static_getitem(value=$334load_attr.3, index=1, index_var=$const336.4)
DEBUG:numba.core.ssa:on stmt: $340call_function.6 = call $330load_global.1($338binary_subscr.5, func=$330load_global.1, args=[Var($338binary_subscr.5, macro_atom.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $342get_iter.7 = getiter(value=$340call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi344.1 = $342get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 344
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $344for_iter.2 = iternext(value=$phi344.1)
DEBUG:numba.core.ssa:on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi346.2 = $344for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $344for_iter.4, 346, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: k = $phi346.2
DEBUG:numba.core.ssa:replaced with: k.2 = $phi346.2
DEBUG:numba.core.ssa:on stmt: $352binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $const354.6 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $356compare_op.7 = $352binary_subscr.5 != $const354.6
DEBUG:numba.core.ssa:on stmt: bool358 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $358pred = call bool358($356compare_op.7, func=bool358, args=(Var($356compare_op.7, macro_atom.py:55),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $358pred, 362, 380
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $const362.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $368binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $370binary_true_divide.6 = $const362.2 / $368binary_subscr.5
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $370binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 380
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $const380.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const380.2
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $396load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $402binary_subscr.4 = getitem(value=block_references, index=i.1)
DEBUG:numba.core.ssa:on stmt: $const408.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $410binary_add.8 = i.1 + $const408.7
DEBUG:numba.core.ssa:on stmt: $412binary_subscr.9 = getitem(value=block_references, index=$410binary_add.8)
DEBUG:numba.core.ssa:on stmt: $414call_function.10 = call $396load_global.1($402binary_subscr.4, $412binary_subscr.9, func=$396load_global.1, args=[Var($402binary_subscr.4, macro_atom.py:59), Var($412binary_subscr.9, macro_atom.py:59)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $416get_iter.11 = getiter(value=$414call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi418.1 = $416get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 418
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $418for_iter.2 = iternext(value=$phi418.1)
DEBUG:numba.core.ssa:on stmt: $418for_iter.3 = pair_first(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $418for_iter.4 = pair_second(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi420.2 = $418for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $418for_iter.4, 420, 478
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: j.3 = $phi420.2
DEBUG:numba.core.ssa:on stmt: jump 422
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $424load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const426.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $430load_attr.5 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const432.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $434binary_subscr.7 = static_getitem(value=$430load_attr.5, index=1, index_var=$const432.6)
DEBUG:numba.core.ssa:on stmt: $436call_function.8 = call $424load_global.2($const426.3, $434binary_subscr.7, func=$424load_global.2, args=[Var($const426.3, macro_atom.py:60), Var($434binary_subscr.7, macro_atom.py:60)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $438get_iter.9 = getiter(value=$436call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi440.2 = $438get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 440
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $440for_iter.3 = iternext(value=$phi440.2)
DEBUG:numba.core.ssa:on stmt: $440for_iter.4 = pair_first(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $440for_iter.5 = pair_second(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi442.3 = $440for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $440for_iter.5, 442, 472
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: k = $phi442.3
DEBUG:numba.core.ssa:replaced with: k.3 = $phi442.3
DEBUG:numba.core.ssa:on stmt: $450build_tuple.7 = build_tuple(items=[Var(j.3, macro_atom.py:59), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:on stmt: $454binary_subscr.10 = getitem(value=transition_probabilities, index=$450build_tuple.7)
DEBUG:numba.core.ssa:on stmt: $460binary_subscr.13 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:on stmt: $462inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$454binary_subscr.10, rhs=$460binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$450build_tuple.7] = $462inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 474
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 474
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 478
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 480
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 480
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 482
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: $const484.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $486return_value.1 = cast(value=$const484.0)
DEBUG:numba.core.ssa:on stmt: return $486return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 485
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4657c790>
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {230: [<numba.core.ir.Assign object at 0x7f6e465ccbd0>],
             290: [<numba.core.ir.Assign object at 0x7f6e465cc250>],
             346: [<numba.core.ir.Assign object at 0x7f6e465cc090>],
             442: [<numba.core.ir.Assign object at 0x7f6e46606c10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: transition_probability_coef = arg(0, name=transition_probability_coef)
DEBUG:numba.core.ssa:on stmt: beta_sobolev = arg(1, name=beta_sobolev)
DEBUG:numba.core.ssa:on stmt: j_blues = arg(2, name=j_blues)
DEBUG:numba.core.ssa:on stmt: stimulated_emission_factor = arg(3, name=stimulated_emission_factor)
DEBUG:numba.core.ssa:on stmt: transition_type = arg(4, name=transition_type)
DEBUG:numba.core.ssa:on stmt: lines_idx = arg(5, name=lines_idx)
DEBUG:numba.core.ssa:on stmt: block_references = arg(6, name=block_references)
DEBUG:numba.core.ssa:on stmt: transition_probabilities = arg(7, name=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: normalize = arg(8, name=normalize)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=1, index_var=$const10.4)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $4load_method.1($12binary_subscr.5, func=$4load_method.1, args=[Var($12binary_subscr.5, macro_atom.py:32)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: norm_factor = $14call_method.6
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.2 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const26.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $28binary_subscr.4 = static_getitem(value=$24load_attr.2, index=0, index_var=$const26.3)
DEBUG:numba.core.ssa:on stmt: $30call_function.5 = call $20load_global.0($28binary_subscr.4, func=$20load_global.0, args=[Var($28binary_subscr.4, macro_atom.py:34)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $32get_iter.6 = getiter(value=$30call_function.5)
DEBUG:numba.core.ssa:on stmt: $phi34.0 = $32get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $34for_iter.1 = iternext(value=$phi34.0)
DEBUG:numba.core.ssa:on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi36.1 = $34for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $34for_iter.3, 36, 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: i = $phi36.1
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.4 = getitem(value=lines_idx, index=i)
DEBUG:numba.core.ssa:on stmt: line_idx = $42binary_subscr.4
DEBUG:numba.core.ssa:on stmt: jump 46
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $48load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $52load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const54.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.5 = static_getitem(value=$52load_attr.3, index=1, index_var=$const54.4)
DEBUG:numba.core.ssa:on stmt: $58call_function.6 = call $48load_global.1($56binary_subscr.5, func=$48load_global.1, args=[Var($56binary_subscr.5, macro_atom.py:36)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $60get_iter.7 = getiter(value=$58call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi62.1 = $60get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $62for_iter.2 = iternext(value=$phi62.1)
DEBUG:numba.core.ssa:on stmt: $62for_iter.3 = pair_first(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $62for_iter.4 = pair_second(value=$62for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi64.2 = $62for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $62for_iter.4, 64, 96
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: j = $phi64.2
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.5 = getitem(value=transition_probability_coef, index=i)
DEBUG:numba.core.ssa:on stmt: $78build_tuple.9 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: $80binary_subscr.10 = getitem(value=beta_sobolev, index=$78build_tuple.9)
DEBUG:numba.core.ssa:on stmt: $82binary_multiply.11 = $70binary_subscr.5 * $80binary_subscr.10
DEBUG:numba.core.ssa:on stmt: $90build_tuple.15 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j, macro_atom.py:36)])
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$90build_tuple.15] = $82binary_multiply.11
DEBUG:numba.core.ssa:on stmt: jump 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $102binary_subscr.3 = getitem(value=transition_type, index=i)
DEBUG:numba.core.ssa:on stmt: $const104.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $106compare_op.5 = $102binary_subscr.3 == $const104.4
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106compare_op.5, func=bool108, args=(Var($106compare_op.5, macro_atom.py:40),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 485
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $112load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const118.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.5 = static_getitem(value=$116load_attr.3, index=1, index_var=$const118.4)
DEBUG:numba.core.ssa:on stmt: $122call_function.6 = call $112load_global.1($120binary_subscr.5, func=$112load_global.1, args=[Var($120binary_subscr.5, macro_atom.py:41)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $124get_iter.7 = getiter(value=$122call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi126.1 = $124get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $126for_iter.2 = iternext(value=$phi126.1)
DEBUG:numba.core.ssa:on stmt: $126for_iter.3 = pair_first(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $126for_iter.4 = pair_second(value=$126for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi128.2 = $126for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $126for_iter.4, 128, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: j.1 = $phi128.2
DEBUG:numba.core.ssa:on stmt: $136build_tuple.6 = build_tuple(items=[Var(i, macro_atom.py:34), Var(j.1, macro_atom.py:41)])
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.9 = getitem(value=transition_probabilities, index=$136build_tuple.6)
DEBUG:numba.core.ssa:on stmt: $148build_tuple.13 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j.1, macro_atom.py:41)])
DEBUG:numba.core.ssa:on stmt: $150binary_subscr.14 = getitem(value=stimulated_emission_factor, index=$148build_tuple.13)
DEBUG:numba.core.ssa:on stmt: $158build_tuple.18 = build_tuple(items=[Var(line_idx, macro_atom.py:35), Var(j.1, macro_atom.py:41)])
DEBUG:numba.core.ssa:on stmt: $160binary_subscr.19 = getitem(value=j_blues, index=$158build_tuple.18)
DEBUG:numba.core.ssa:on stmt: $162binary_multiply.20 = $150binary_subscr.14 * $160binary_subscr.19
DEBUG:numba.core.ssa:on stmt: $164inplace_multiply.21 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$140binary_subscr.9, rhs=$162binary_multiply.20, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$136build_tuple.6] = $164inplace_multiply.21
DEBUG:numba.core.ssa:on stmt: jump 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 174
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 485
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: bool180 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $180pred = call bool180(normalize, func=bool180, args=(Var(normalize, macro_atom.py:32),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $180pred, 184, 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $188load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $192load_attr.2 = getattr(value=block_references, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const194.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $196binary_subscr.4 = static_getitem(value=$192load_attr.2, index=0, index_var=$const194.3)
DEBUG:numba.core.ssa:on stmt: $const198.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.6 = $196binary_subscr.4 - $const198.5
DEBUG:numba.core.ssa:on stmt: $202call_function.7 = call $188load_global.0($200binary_subtract.6, func=$188load_global.0, args=[Var($200binary_subtract.6, macro_atom.py:48)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $204get_iter.8 = getiter(value=$202call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi206.0 = $204get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 206
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $206for_iter.1 = iternext(value=$phi206.0)
DEBUG:numba.core.ssa:on stmt: $206for_iter.2 = pair_first(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $206for_iter.3 = pair_second(value=$206for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi210.1 = $206for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $206for_iter.3, 210, 482
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: i.1 = $phi210.1
DEBUG:numba.core.ssa:on stmt: jump 212
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $214load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $218load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.5 = static_getitem(value=$218load_attr.3, index=1, index_var=$const220.4)
DEBUG:numba.core.ssa:on stmt: $224call_function.6 = call $214load_global.1($222binary_subscr.5, func=$214load_global.1, args=[Var($222binary_subscr.5, macro_atom.py:49)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $226get_iter.7 = getiter(value=$224call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi228.1 = $226get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $228for_iter.2 = iternext(value=$phi228.1)
DEBUG:numba.core.ssa:on stmt: $228for_iter.3 = pair_first(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $228for_iter.4 = pair_second(value=$228for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi230.2 = $228for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $228for_iter.4, 230, 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: k = $phi230.2
DEBUG:numba.core.ssa:on stmt: $const232.3 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const232.3
DEBUG:numba.core.ssa:find_def var='k' stmt=norm_factor[k] = $const232.3
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 244
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $246load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $252binary_subscr.4 = getitem(value=block_references, index=i.1)
DEBUG:numba.core.ssa:on stmt: $const258.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $260binary_add.8 = i.1 + $const258.7
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.9 = getitem(value=block_references, index=$260binary_add.8)
DEBUG:numba.core.ssa:on stmt: $264call_function.10 = call $246load_global.1($252binary_subscr.4, $262binary_subscr.9, func=$246load_global.1, args=[Var($252binary_subscr.4, macro_atom.py:51), Var($262binary_subscr.9, macro_atom.py:51)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $266get_iter.11 = getiter(value=$264call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi268.1 = $266get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $268for_iter.2 = iternext(value=$phi268.1)
DEBUG:numba.core.ssa:on stmt: $268for_iter.3 = pair_first(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $268for_iter.4 = pair_second(value=$268for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi270.2 = $268for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $268for_iter.4, 270, 326
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: j.2 = $phi270.2
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $274load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.4 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const280.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $282binary_subscr.6 = static_getitem(value=$278load_attr.4, index=1, index_var=$const280.5)
DEBUG:numba.core.ssa:on stmt: $284call_function.7 = call $274load_global.2($282binary_subscr.6, func=$274load_global.2, args=[Var($282binary_subscr.6, macro_atom.py:52)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $286get_iter.8 = getiter(value=$284call_function.7)
DEBUG:numba.core.ssa:on stmt: $phi288.2 = $286get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 288
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $288for_iter.3 = iternext(value=$phi288.2)
DEBUG:numba.core.ssa:on stmt: $288for_iter.4 = pair_first(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $288for_iter.5 = pair_second(value=$288for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi290.3 = $288for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $288for_iter.5, 290, 320
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 290
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: k.1 = $phi290.3
DEBUG:numba.core.ssa:on stmt: $298binary_subscr.8 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:find_def var='k' stmt=$298binary_subscr.8 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:replaced with: $298binary_subscr.8 = getitem(value=norm_factor, index=k.1)
DEBUG:numba.core.ssa:on stmt: $306build_tuple.12 = build_tuple(items=[Var(j.2, macro_atom.py:51), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:find_def var='k' stmt=$306build_tuple.12 = build_tuple(items=[Var(j.2, macro_atom.py:51), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:replaced with: $306build_tuple.12 = build_tuple(items=[Var(j.2, macro_atom.py:51), Var(k.1, macro_atom.py:52)])
DEBUG:numba.core.ssa:on stmt: $308binary_subscr.13 = getitem(value=transition_probabilities, index=$306build_tuple.12)
DEBUG:numba.core.ssa:on stmt: $310inplace_add.14 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$298binary_subscr.8, rhs=$308binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $310inplace_add.14
DEBUG:numba.core.ssa:find_def var='k' stmt=norm_factor[k] = $310inplace_add.14
DEBUG:numba.core.ssa:replaced with: norm_factor[k.1] = $310inplace_add.14
DEBUG:numba.core.ssa:on stmt: jump 288
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 322
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 322
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 326
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $330load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $334load_attr.3 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const336.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $338binary_subscr.5 = static_getitem(value=$334load_attr.3, index=1, index_var=$const336.4)
DEBUG:numba.core.ssa:on stmt: $340call_function.6 = call $330load_global.1($338binary_subscr.5, func=$330load_global.1, args=[Var($338binary_subscr.5, macro_atom.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $342get_iter.7 = getiter(value=$340call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi344.1 = $342get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 344
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $344for_iter.2 = iternext(value=$phi344.1)
DEBUG:numba.core.ssa:on stmt: $344for_iter.3 = pair_first(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $344for_iter.4 = pair_second(value=$344for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi346.2 = $344for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $344for_iter.4, 346, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 346
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: k.2 = $phi346.2
DEBUG:numba.core.ssa:on stmt: $352binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:find_def var='k' stmt=$352binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:replaced with: $352binary_subscr.5 = getitem(value=norm_factor, index=k.2)
DEBUG:numba.core.ssa:on stmt: $const354.6 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $356compare_op.7 = $352binary_subscr.5 != $const354.6
DEBUG:numba.core.ssa:on stmt: bool358 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $358pred = call bool358($356compare_op.7, func=bool358, args=(Var($356compare_op.7, macro_atom.py:55),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $358pred, 362, 380
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $const362.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $368binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:find_def var='k' stmt=$368binary_subscr.5 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:find_def_from_top label 362
DEBUG:numba.core.ssa:idom 346 from label 362
DEBUG:numba.core.ssa:find_def_from_bottom label 346
DEBUG:numba.core.ssa:replaced with: $368binary_subscr.5 = getitem(value=norm_factor, index=k.2)
DEBUG:numba.core.ssa:on stmt: $370binary_true_divide.6 = $const362.2 / $368binary_subscr.5
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $370binary_true_divide.6
DEBUG:numba.core.ssa:find_def var='k' stmt=norm_factor[k] = $370binary_true_divide.6
DEBUG:numba.core.ssa:find_def_from_top label 362
DEBUG:numba.core.ssa:idom 346 from label 362
DEBUG:numba.core.ssa:find_def_from_bottom label 346
DEBUG:numba.core.ssa:replaced with: norm_factor[k.2] = $370binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 380
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $const380.2 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: norm_factor[k] = $const380.2
DEBUG:numba.core.ssa:find_def var='k' stmt=norm_factor[k] = $const380.2
DEBUG:numba.core.ssa:find_def_from_top label 380
DEBUG:numba.core.ssa:idom 346 from label 380
DEBUG:numba.core.ssa:find_def_from_bottom label 346
DEBUG:numba.core.ssa:replaced with: norm_factor[k.2] = $const380.2
DEBUG:numba.core.ssa:on stmt: jump 388
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 344
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $396load_global.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $402binary_subscr.4 = getitem(value=block_references, index=i.1)
DEBUG:numba.core.ssa:on stmt: $const408.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $410binary_add.8 = i.1 + $const408.7
DEBUG:numba.core.ssa:on stmt: $412binary_subscr.9 = getitem(value=block_references, index=$410binary_add.8)
DEBUG:numba.core.ssa:on stmt: $414call_function.10 = call $396load_global.1($402binary_subscr.4, $412binary_subscr.9, func=$396load_global.1, args=[Var($402binary_subscr.4, macro_atom.py:59), Var($412binary_subscr.9, macro_atom.py:59)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $416get_iter.11 = getiter(value=$414call_function.10)
DEBUG:numba.core.ssa:on stmt: $phi418.1 = $416get_iter.11
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 418
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $418for_iter.2 = iternext(value=$phi418.1)
DEBUG:numba.core.ssa:on stmt: $418for_iter.3 = pair_first(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $418for_iter.4 = pair_second(value=$418for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi420.2 = $418for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $418for_iter.4, 420, 478
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 420
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: j.3 = $phi420.2
DEBUG:numba.core.ssa:on stmt: jump 422
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 422
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $424load_global.2 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const426.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $430load_attr.5 = getattr(value=transition_probabilities, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const432.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $434binary_subscr.7 = static_getitem(value=$430load_attr.5, index=1, index_var=$const432.6)
DEBUG:numba.core.ssa:on stmt: $436call_function.8 = call $424load_global.2($const426.3, $434binary_subscr.7, func=$424load_global.2, args=[Var($const426.3, macro_atom.py:60), Var($434binary_subscr.7, macro_atom.py:60)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $438get_iter.9 = getiter(value=$436call_function.8)
DEBUG:numba.core.ssa:on stmt: $phi440.2 = $438get_iter.9
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 440
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $440for_iter.3 = iternext(value=$phi440.2)
DEBUG:numba.core.ssa:on stmt: $440for_iter.4 = pair_first(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $440for_iter.5 = pair_second(value=$440for_iter.3)
DEBUG:numba.core.ssa:on stmt: $phi442.3 = $440for_iter.4
DEBUG:numba.core.ssa:on stmt: branch $440for_iter.5, 442, 472
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: k.3 = $phi442.3
DEBUG:numba.core.ssa:on stmt: $450build_tuple.7 = build_tuple(items=[Var(j.3, macro_atom.py:59), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:find_def var='k' stmt=$450build_tuple.7 = build_tuple(items=[Var(j.3, macro_atom.py:59), Var(k, macro_atom.py:49)])
DEBUG:numba.core.ssa:replaced with: $450build_tuple.7 = build_tuple(items=[Var(j.3, macro_atom.py:59), Var(k.3, macro_atom.py:60)])
DEBUG:numba.core.ssa:on stmt: $454binary_subscr.10 = getitem(value=transition_probabilities, index=$450build_tuple.7)
DEBUG:numba.core.ssa:on stmt: $460binary_subscr.13 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:find_def var='k' stmt=$460binary_subscr.13 = getitem(value=norm_factor, index=k)
DEBUG:numba.core.ssa:replaced with: $460binary_subscr.13 = getitem(value=norm_factor, index=k.3)
DEBUG:numba.core.ssa:on stmt: $462inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$454binary_subscr.10, rhs=$460binary_subscr.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: transition_probabilities[$450build_tuple.7] = $462inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: jump 440
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 472
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 474
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 474
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 418
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 478
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 480
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 480
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 206
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 482
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 484
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 484
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: $const484.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $486return_value.1 = cast(value=$const484.0)
DEBUG:numba.core.ssa:on stmt: return $486return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 485
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e468687d0>
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	SETUP_LOOP(arg=40, lineno=2)
           4	LOAD_GLOBAL(arg=0, lineno=2)
           6	LOAD_FAST(arg=0, lineno=2)
           8	LOAD_CONST(arg=1, lineno=2)
          10	BINARY_SUBSCR(arg=None, lineno=2)
          12	LOAD_FAST(arg=0, lineno=2)
          14	LOAD_CONST(arg=2, lineno=2)
          16	BINARY_SUBSCR(arg=None, lineno=2)
          18	LOAD_GLOBAL(arg=1, lineno=2)
          20	LOAD_METHOD(arg=2, lineno=2)
          22	LOAD_CONST(arg=2, lineno=2)
          24	CALL_METHOD(arg=1, lineno=2)
          26	BINARY_ADD(arg=None, lineno=2)
          28	CALL_FUNCTION(arg=2, lineno=2)
          30	GET_ITER(arg=None, lineno=2)
>         32	FOR_ITER(arg=8, lineno=2)
          34	STORE_FAST(arg=2, lineno=2)
          36	LOAD_CONST(arg=1, lineno=3)
          38	STORE_FAST(arg=3, lineno=3)
          40	JUMP_ABSOLUTE(arg=32, lineno=3)
>         42	POP_BLOCK(arg=None, lineno=3)
>         44	LOAD_CONST(arg=0, lineno=4)
          46	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=2, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=2 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=SETUP_LOOP(arg=40, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1', '$const8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4', '$const14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$18load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8', '$const22.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$24call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$26binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$28call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.13',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=8, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_BLOCK(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=44 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$const36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=JUMP_ABSOLUTE(arg=32, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=2 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=2 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.13', State(pc_initial=2 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=2 nstack_initial=0): {'$phi32.0': '$30get_iter.13'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={2: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=2 nstack_initial=0):
AdaptBlockInfo(insts=((4, {'res': '$4load_global.0'}), (6, {'res': '$sched6.1'}), (8, {'res': '$const8.2'}), (10, {'index': '$const8.2', 'target': '$sched6.1', 'res': '$10binary_subscr.3'}), (12, {'res': '$sched12.4'}), (14, {'res': '$const14.5'}), (16, {'index': '$const14.5', 'target': '$sched12.4', 'res': '$16binary_subscr.6'}), (18, {'res': '$18load_global.7'}), (20, {'item': '$18load_global.7', 'res': '$20load_method.8'}), (22, {'res': '$const22.9'}), (24, {'func': '$20load_method.8', 'args': ['$const22.9'], 'res': '$24call_method.10'}), (26, {'lhs': '$16binary_subscr.6', 'rhs': '$24call_method.10', 'res': '$26binary_add.11'}), (28, {'func': '$4load_global.0', 'args': ['$10binary_subscr.3', '$26binary_add.11'], 'res': '$28call_function.12'}), (30, {'value': '$28call_function.12', 'res': '$30get_iter.13'})), outgoing_phis={'$phi32.0': '$30get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={42: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$const36.2'}), (38, {'value': '$const36.2'}), (40, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={44: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0'}), (46, {'retval': '$const44.0', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    _norm__factor_111 = arg(1, name=_norm__factor_111) ['_norm__factor_111']
    jump 2                                   []
label 2:
    $4load_global.0 = global(range: <class 'range'>) ['$4load_global.0']
    $const8.2 = const(int, 0)                ['$const8.2']
    $10binary_subscr.3 = getitem(value=sched, index=$const8.2) ['$10binary_subscr.3', '$const8.2', 'sched']
    $const14.5 = const(int, 1)               ['$const14.5']
    $16binary_subscr.6 = getitem(value=sched, index=$const14.5) ['$16binary_subscr.6', '$const14.5', 'sched']
    $18load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$18load_global.7']
    $20load_method.8 = getattr(value=$18load_global.7, attr=uint8) ['$18load_global.7', '$20load_method.8']
    $const22.9 = const(int, 1)               ['$const22.9']
    $24call_method.10 = call $20load_method.8($const22.9, func=$20load_method.8, args=[Var($const22.9, <string>:2)], kws=(), vararg=None) ['$20load_method.8', '$24call_method.10', '$const22.9']
    $26binary_add.11 = $16binary_subscr.6 + $24call_method.10 ['$16binary_subscr.6', '$24call_method.10', '$26binary_add.11']
    $28call_function.12 = call $4load_global.0($10binary_subscr.3, $26binary_add.11, func=$4load_global.0, args=[Var($10binary_subscr.3, <string>:2), Var($26binary_add.11, <string>:2)], kws=(), vararg=None) ['$10binary_subscr.3', '$26binary_add.11', '$28call_function.12', '$4load_global.0']
    $30get_iter.13 = getiter(value=$28call_function.12) ['$28call_function.12', '$30get_iter.13']
    $phi32.0 = $30get_iter.13                ['$30get_iter.13', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 42             ['$32for_iter.3']
label 34:
    parfor__index_105 = $phi34.1             ['$phi34.1', 'parfor__index_105']
    $const36.2 = const(int, 0)               ['$const36.2']
    __sentinel__0 = $const36.2               ['$const36.2', '__sentinel__0']
    jump 32                                  []
label 42:
    jump 44                                  []
label 44:
    $const44.0 = const(NoneType, None)       ['$const44.0']
    $46return_value.1 = cast(value=$const44.0) ['$46return_value.1', '$const44.0']
    return $46return_value.1                 ['$46return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e464a7610>
DEBUG:numba.core.ssa:on stmt: sched.186 = arg(0, name=sched)
DEBUG:numba.core.ssa:on stmt: _norm__factor_111 = arg(1, name=_norm__factor_111)
DEBUG:numba.core.ssa:on stmt: $expr_out_var.109 = const(float64, 0.0)
DEBUG:numba.core.ssa:on stmt: jump 2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 2
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e464a7610>
DEBUG:numba.core.ssa:on stmt: $4load_global.0.187 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const8.2.188 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.3.189 = getitem(value=sched.186, index=$const8.2.188)
DEBUG:numba.core.ssa:on stmt: $const14.5.190 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $16binary_subscr.6.191 = getitem(value=sched.186, index=$const14.5.190)
DEBUG:numba.core.ssa:on stmt: $18load_global.7.192 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_method.8.193 = getattr(value=$18load_global.7.192, attr=uint8)
DEBUG:numba.core.ssa:on stmt: $const22.9.194 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $24call_method.10.195 = call $20load_method.8.193($const22.9.194, func=$20load_method.8.193, args=[Var($const22.9.194, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $26binary_add.11.196 = $16binary_subscr.6.191 + $24call_method.10.195
DEBUG:numba.core.ssa:on stmt: $28call_function.12.197 = call $4load_global.0.187($10binary_subscr.3.189, $26binary_add.11.196, func=$4load_global.0.187, args=[Var($10binary_subscr.3.189, <string>:2), Var($26binary_add.11.196, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.13.198 = getiter(value=$28call_function.12.197)
DEBUG:numba.core.ssa:on stmt: $phi32.0.199 = $30get_iter.13.198
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e464a7610>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1.200 = iternext(value=$phi32.0.199)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2.201 = pair_first(value=$32for_iter.1.200)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3.202 = pair_second(value=$32for_iter.1.200)
DEBUG:numba.core.ssa:on stmt: $phi34.1.203 = $32for_iter.2.201
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3.202, 34, 531
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e464a7610>
DEBUG:numba.core.ssa:on stmt: parfor__index_105 = $phi34.1.203
DEBUG:numba.core.ssa:on stmt: $const36.2.204 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 531
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e464a7610>
DEBUG:numba.core.ssa:on stmt: jump 532
DEBUG:numba.core.ssa:==== SSA block analysis pass on 532
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e464a7610>
DEBUG:numba.core.ssa:on stmt: $const44.0.205 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1.206 = cast(value=$const44.0.205)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1.206
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e464a7610>
DEBUG:numba.core.ssa:on stmt: _norm__factor_111[parfor__index_105] = $expr_out_var.109
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e464a7610>
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subscr.3.189': [<numba.core.ir.Assign object at 0x7f6e4649e290>],
             '$16binary_subscr.6.191': [<numba.core.ir.Assign object at 0x7f6e4649e590>],
             '$18load_global.7.192': [<numba.core.ir.Assign object at 0x7f6e4649e690>],
             '$20load_method.8.193': [<numba.core.ir.Assign object at 0x7f6e4649e7d0>],
             '$24call_method.10.195': [<numba.core.ir.Assign object at 0x7f6e4649ea10>],
             '$26binary_add.11.196': [<numba.core.ir.Assign object at 0x7f6e4649ead0>],
             '$28call_function.12.197': [<numba.core.ir.Assign object at 0x7f6e4649ec10>],
             '$30get_iter.13.198': [<numba.core.ir.Assign object at 0x7f6e4649ed10>],
             '$32for_iter.1.200': [<numba.core.ir.Assign object at 0x7f6e4649ef10>],
             '$32for_iter.2.201': [<numba.core.ir.Assign object at 0x7f6e4649efd0>],
             '$32for_iter.3.202': [<numba.core.ir.Assign object at 0x7f6e464b20d0>],
             '$46return_value.1.206': [<numba.core.ir.Assign object at 0x7f6e464b2890>],
             '$4load_global.0.187': [<numba.core.ir.Assign object at 0x7f6e464b7d90>],
             '$const14.5.190': [<numba.core.ir.Assign object at 0x7f6e4649e490>],
             '$const22.9.194': [<numba.core.ir.Assign object at 0x7f6e4649e890>],
             '$const36.2.204': [<numba.core.ir.Assign object at 0x7f6e464b2410>],
             '$const44.0.205': [<numba.core.ir.Assign object at 0x7f6e464b2750>],
             '$const8.2.188': [<numba.core.ir.Assign object at 0x7f6e4649e190>],
             '$expr_out_var.109': [<numba.core.ir.Assign object at 0x7f6e4659d210>],
             '$phi32.0.199': [<numba.core.ir.Assign object at 0x7f6e464b7c10>],
             '$phi34.1.203': [<numba.core.ir.Assign object at 0x7f6e464b2150>],
             '_norm__factor_111': [<numba.core.ir.Assign object at 0x7f6e464b7cd0>],
             'parfor__index_105': [<numba.core.ir.Assign object at 0x7f6e464b2310>],
             'sched.186': [<numba.core.ir.Assign object at 0x7f6e464b7f10>]})
DEBUG:numba.core.ssa:SSA violators set()
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 1/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_GLOBAL(arg=0, lineno=3)
           4	LOAD_FAST(arg=0, lineno=3)
           6	LOAD_FAST(arg=1, lineno=3)
           8	LOAD_FAST(arg=2, lineno=3)
          10	LOAD_FAST(arg=3, lineno=3)
          12	LOAD_FAST(arg=4, lineno=3)
          14	CALL_FUNCTION(arg=5, lineno=3)
          16	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$packets_input_nu4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$packets_input_nu4.1', '$packets_input_mu6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$packets_input_nu4.1', '$packets_input_mu6.2', '$packets_input_energy8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=4, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$packets_input_nu4.1', '$packets_input_mu6.2', '$packets_input_energy8.3', '$packets_output_nu10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_FUNCTION(arg=5, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$packets_input_nu4.1', '$packets_input_mu6.2', '$packets_input_energy8.3', '$packets_output_nu10.4', '$packets_output_energy12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$14call_function.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$packets_input_nu4.1'}), (6, {'res': '$packets_input_mu6.2'}), (8, {'res': '$packets_input_energy8.3'}), (10, {'res': '$packets_output_nu10.4'}), (12, {'res': '$packets_output_energy12.5'}), (14, {'func': '$2load_global.0', 'args': ['$packets_input_nu4.1', '$packets_input_mu6.2', '$packets_input_energy8.3', '$packets_output_nu10.4', '$packets_output_energy12.5'], 'res': '$14call_function.6'}), (16, {'retval': '$14call_function.6', 'castval': '$16return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    packets_input_nu = arg(0, name=packets_input_nu) ['packets_input_nu']
    packets_input_mu = arg(1, name=packets_input_mu) ['packets_input_mu']
    packets_input_energy = arg(2, name=packets_input_energy) ['packets_input_energy']
    packets_output_nu = arg(3, name=packets_output_nu) ['packets_output_nu']
    packets_output_energy = arg(4, name=packets_output_energy) ['packets_output_energy']
    $2load_global.0 = global(__numba_cls_: <class 'numba.experimental.jitclass.base.PacketCollection'>) ['$2load_global.0']
    $14call_function.6 = call $2load_global.0(packets_input_nu, packets_input_mu, packets_input_energy, packets_output_nu, packets_output_energy, func=$2load_global.0, args=[Var(packets_input_nu, <string>:3), Var(packets_input_mu, <string>:3), Var(packets_input_energy, <string>:3), Var(packets_output_nu, <string>:3), Var(packets_output_energy, <string>:3)], kws=(), vararg=None) ['$14call_function.6', '$2load_global.0', 'packets_input_energy', 'packets_input_mu', 'packets_input_nu', 'packets_output_energy', 'packets_output_nu']
    $16return_value.7 = cast(value=$14call_function.6) ['$14call_function.6', '$16return_value.7']
    return $16return_value.7                 ['$16return_value.7']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e464ec5d0>
DEBUG:numba.core.ssa:on stmt: packets_input_nu = arg(0, name=packets_input_nu)
DEBUG:numba.core.ssa:on stmt: packets_input_mu = arg(1, name=packets_input_mu)
DEBUG:numba.core.ssa:on stmt: packets_input_energy = arg(2, name=packets_input_energy)
DEBUG:numba.core.ssa:on stmt: packets_output_nu = arg(3, name=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: packets_output_energy = arg(4, name=packets_output_energy)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(__numba_cls_: <class 'numba.experimental.jitclass.base.PacketCollection'>)
DEBUG:numba.core.ssa:on stmt: $14call_function.6 = call $2load_global.0(packets_input_nu, packets_input_mu, packets_input_energy, packets_output_nu, packets_output_energy, func=$2load_global.0, args=[Var(packets_input_nu, <string>:3), Var(packets_input_mu, <string>:3), Var(packets_input_energy, <string>:3), Var(packets_output_nu, <string>:3), Var(packets_output_energy, <string>:3)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $16return_value.7 = cast(value=$14call_function.6)
DEBUG:numba.core.ssa:on stmt: return $16return_value.7
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$14call_function.6': [<numba.core.ir.Assign object at 0x7f6e4653f6d0>],
             '$16return_value.7': [<numba.core.ir.Assign object at 0x7f6e4653ff50>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e4653f090>],
             'packets_input_energy': [<numba.core.ir.Assign object at 0x7f6e4653f0d0>],
             'packets_input_mu': [<numba.core.ir.Assign object at 0x7f6e4653f3d0>],
             'packets_input_nu': [<numba.core.ir.Assign object at 0x7f6e46404550>],
             'packets_output_energy': [<numba.core.ir.Assign object at 0x7f6e4653f290>],
             'packets_output_nu': [<numba.core.ir.Assign object at 0x7f6e4653f250>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=182)
           2	LOAD_FAST(arg=1, lineno=182)
           4	LOAD_FAST(arg=0, lineno=182)
           6	STORE_ATTR(arg=0, lineno=182)
           8	LOAD_FAST(arg=2, lineno=183)
          10	LOAD_FAST(arg=0, lineno=183)
          12	STORE_ATTR(arg=1, lineno=183)
          14	LOAD_FAST(arg=3, lineno=184)
          16	LOAD_FAST(arg=0, lineno=184)
          18	STORE_ATTR(arg=2, lineno=184)
          20	LOAD_FAST(arg=4, lineno=185)
          22	LOAD_FAST(arg=0, lineno=185)
          24	STORE_ATTR(arg=3, lineno=185)
          26	LOAD_FAST(arg=5, lineno=186)
          28	LOAD_FAST(arg=0, lineno=186)
          30	STORE_ATTR(arg=4, lineno=186)
          32	LOAD_CONST(arg=0, lineno=186)
          34	RETURN_VALUE(arg=None, lineno=186)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=182)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=182)
DEBUG:numba.core.byteflow:stack ['$packets_input_nu2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_ATTR(arg=0, lineno=182)
DEBUG:numba.core.byteflow:stack ['$packets_input_nu2.0', '$self4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=183)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=183)
DEBUG:numba.core.byteflow:stack ['$packets_input_mu8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_ATTR(arg=1, lineno=183)
DEBUG:numba.core.byteflow:stack ['$packets_input_mu8.2', '$self10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=184)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=184)
DEBUG:numba.core.byteflow:stack ['$packets_input_energy14.4']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_ATTR(arg=2, lineno=184)
DEBUG:numba.core.byteflow:stack ['$packets_input_energy14.4', '$self16.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=4, lineno=185)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=185)
DEBUG:numba.core.byteflow:stack ['$packets_output_nu20.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_ATTR(arg=3, lineno=185)
DEBUG:numba.core.byteflow:stack ['$packets_output_nu20.6', '$self22.7']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=186)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=186)
DEBUG:numba.core.byteflow:stack ['$packets_output_energy26.8']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_ATTR(arg=4, lineno=186)
DEBUG:numba.core.byteflow:stack ['$packets_output_energy26.8', '$self28.9']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=0, lineno=186)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=186)
DEBUG:numba.core.byteflow:stack ['$const32.10']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$packets_input_nu2.0'}), (4, {'res': '$self4.1'}), (6, {'target': '$self4.1', 'value': '$packets_input_nu2.0'}), (8, {'res': '$packets_input_mu8.2'}), (10, {'res': '$self10.3'}), (12, {'target': '$self10.3', 'value': '$packets_input_mu8.2'}), (14, {'res': '$packets_input_energy14.4'}), (16, {'res': '$self16.5'}), (18, {'target': '$self16.5', 'value': '$packets_input_energy14.4'}), (20, {'res': '$packets_output_nu20.6'}), (22, {'res': '$self22.7'}), (24, {'target': '$self22.7', 'value': '$packets_output_nu20.6'}), (26, {'res': '$packets_output_energy26.8'}), (28, {'res': '$self28.9'}), (30, {'target': '$self28.9', 'value': '$packets_output_energy26.8'}), (32, {'res': '$const32.10'}), (34, {'retval': '$const32.10', 'castval': '$34return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    self = arg(0, name=self)                 ['self']
    packets_input_nu = arg(1, name=packets_input_nu) ['packets_input_nu']
    packets_input_mu = arg(2, name=packets_input_mu) ['packets_input_mu']
    packets_input_energy = arg(3, name=packets_input_energy) ['packets_input_energy']
    packets_output_nu = arg(4, name=packets_output_nu) ['packets_output_nu']
    packets_output_energy = arg(5, name=packets_output_energy) ['packets_output_energy']
    (self).packets_input_nu = packets_input_nu ['packets_input_nu', 'self']
    (self).packets_input_mu = packets_input_mu ['packets_input_mu', 'self']
    (self).packets_input_energy = packets_input_energy ['packets_input_energy', 'self']
    (self).packets_output_nu = packets_output_nu ['packets_output_nu', 'self']
    (self).packets_output_energy = packets_output_energy ['packets_output_energy', 'self']
    $const32.10 = const(NoneType, None)      ['$const32.10']
    $34return_value.11 = cast(value=$const32.10) ['$34return_value.11', '$const32.10']
    return $34return_value.11                ['$34return_value.11']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46525610>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: packets_input_nu = arg(1, name=packets_input_nu)
DEBUG:numba.core.ssa:on stmt: packets_input_mu = arg(2, name=packets_input_mu)
DEBUG:numba.core.ssa:on stmt: packets_input_energy = arg(3, name=packets_input_energy)
DEBUG:numba.core.ssa:on stmt: packets_output_nu = arg(4, name=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: packets_output_energy = arg(5, name=packets_output_energy)
DEBUG:numba.core.ssa:on stmt: (self).packets_input_nu = packets_input_nu
DEBUG:numba.core.ssa:on stmt: (self).packets_input_mu = packets_input_mu
DEBUG:numba.core.ssa:on stmt: (self).packets_input_energy = packets_input_energy
DEBUG:numba.core.ssa:on stmt: (self).packets_output_nu = packets_output_nu
DEBUG:numba.core.ssa:on stmt: (self).packets_output_energy = packets_output_energy
DEBUG:numba.core.ssa:on stmt: $const32.10 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $34return_value.11 = cast(value=$const32.10)
DEBUG:numba.core.ssa:on stmt: return $34return_value.11
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$34return_value.11': [<numba.core.ir.Assign object at 0x7f6e46404f10>],
             '$const32.10': [<numba.core.ir.Assign object at 0x7f6e46404750>],
             'packets_input_energy': [<numba.core.ir.Assign object at 0x7f6e4650d590>],
             'packets_input_mu': [<numba.core.ir.Assign object at 0x7f6e464ec210>],
             'packets_input_nu': [<numba.core.ir.Assign object at 0x7f6e464ec790>],
             'packets_output_energy': [<numba.core.ir.Assign object at 0x7f6e4603fed0>],
             'packets_output_nu': [<numba.core.ir.Assign object at 0x7f6e4603ff10>],
             'self': [<numba.core.ir.Assign object at 0x7f6e464ec7d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=packets_input_nu) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4687ae10>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=packets_input_nu)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e46881810>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e46881dd0>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e46881a10>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=packets_input_mu) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ecc150>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=packets_input_mu)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e464b20d0>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e464b2fd0>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e464b2a10>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=packets_input_energy) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e463c5c90>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=packets_input_energy)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e46394c90>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e46394d90>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e46394a50>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=packets_output_nu) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4658a350>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e468ffbd0>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e468ff990>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e468ff7d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=packets_output_energy) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46426a10>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=packets_output_energy)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45f36890>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45f36990>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45f36690>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_GLOBAL(arg=0, lineno=3)
           4	LOAD_FAST(arg=0, lineno=3)
           6	LOAD_FAST(arg=1, lineno=3)
           8	LOAD_FAST(arg=2, lineno=3)
          10	CALL_FUNCTION(arg=3, lineno=3)
          12	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$r_inner4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$r_inner4.1', '$r_outer6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$r_inner4.1', '$r_outer6.2', '$time_explosion8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$10call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$r_inner4.1'}), (6, {'res': '$r_outer6.2'}), (8, {'res': '$time_explosion8.3'}), (10, {'func': '$2load_global.0', 'args': ['$r_inner4.1', '$r_outer6.2', '$time_explosion8.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_inner = arg(0, name=r_inner)           ['r_inner']
    r_outer = arg(1, name=r_outer)           ['r_outer']
    time_explosion = arg(2, name=time_explosion) ['time_explosion']
    $2load_global.0 = global(__numba_cls_: <class 'numba.experimental.jitclass.base.NumbaModel'>) ['$2load_global.0']
    $10call_function.4 = call $2load_global.0(r_inner, r_outer, time_explosion, func=$2load_global.0, args=[Var(r_inner, <string>:3), Var(r_outer, <string>:3), Var(time_explosion, <string>:3)], kws=(), vararg=None) ['$10call_function.4', '$2load_global.0', 'r_inner', 'r_outer', 'time_explosion']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f23250>
DEBUG:numba.core.ssa:on stmt: r_inner = arg(0, name=r_inner)
DEBUG:numba.core.ssa:on stmt: r_outer = arg(1, name=r_outer)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(2, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(__numba_cls_: <class 'numba.experimental.jitclass.base.NumbaModel'>)
DEBUG:numba.core.ssa:on stmt: $10call_function.4 = call $2load_global.0(r_inner, r_outer, time_explosion, func=$2load_global.0, args=[Var(r_inner, <string>:3), Var(r_outer, <string>:3), Var(time_explosion, <string>:3)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_function.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_function.4': [<numba.core.ir.Assign object at 0x7f6e45f19c50>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x7f6e45f19d50>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e45f19890>],
             'r_inner': [<numba.core.ir.Assign object at 0x7f6e45f19550>],
             'r_outer': [<numba.core.ir.Assign object at 0x7f6e45f19610>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e45f19750>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=36)
           2	LOAD_FAST(arg=1, lineno=36)
           4	LOAD_FAST(arg=0, lineno=36)
           6	STORE_ATTR(arg=0, lineno=36)
           8	LOAD_FAST(arg=2, lineno=37)
          10	LOAD_FAST(arg=0, lineno=37)
          12	STORE_ATTR(arg=1, lineno=37)
          14	LOAD_FAST(arg=3, lineno=38)
          16	LOAD_FAST(arg=0, lineno=38)
          18	STORE_ATTR(arg=2, lineno=38)
          20	LOAD_CONST(arg=1, lineno=38)
          22	RETURN_VALUE(arg=None, lineno=38)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=36)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=36)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=36)
DEBUG:numba.core.byteflow:stack ['$r_inner2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_ATTR(arg=0, lineno=36)
DEBUG:numba.core.byteflow:stack ['$r_inner2.0', '$self4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=37)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=37)
DEBUG:numba.core.byteflow:stack ['$r_outer8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_ATTR(arg=1, lineno=37)
DEBUG:numba.core.byteflow:stack ['$r_outer8.2', '$self10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=38)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=38)
DEBUG:numba.core.byteflow:stack ['$time_explosion14.4']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_ATTR(arg=2, lineno=38)
DEBUG:numba.core.byteflow:stack ['$time_explosion14.4', '$self16.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=1, lineno=38)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=RETURN_VALUE(arg=None, lineno=38)
DEBUG:numba.core.byteflow:stack ['$const20.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$r_inner2.0'}), (4, {'res': '$self4.1'}), (6, {'target': '$self4.1', 'value': '$r_inner2.0'}), (8, {'res': '$r_outer8.2'}), (10, {'res': '$self10.3'}), (12, {'target': '$self10.3', 'value': '$r_outer8.2'}), (14, {'res': '$time_explosion14.4'}), (16, {'res': '$self16.5'}), (18, {'target': '$self16.5', 'value': '$time_explosion14.4'}), (20, {'res': '$const20.6'}), (22, {'retval': '$const20.6', 'castval': '$22return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    self = arg(0, name=self)                 ['self']
    r_inner = arg(1, name=r_inner)           ['r_inner']
    r_outer = arg(2, name=r_outer)           ['r_outer']
    time_explosion = arg(3, name=time_explosion) ['time_explosion']
    (self).r_inner = r_inner                 ['r_inner', 'self']
    (self).r_outer = r_outer                 ['r_outer', 'self']
    (self).time_explosion = time_explosion   ['self', 'time_explosion']
    $const20.6 = const(NoneType, None)       ['$const20.6']
    $22return_value.7 = cast(value=$const20.6) ['$22return_value.7', '$const20.6']
    return $22return_value.7                 ['$22return_value.7']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f236d0>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: r_inner = arg(1, name=r_inner)
DEBUG:numba.core.ssa:on stmt: r_outer = arg(2, name=r_outer)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(3, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: (self).r_inner = r_inner
DEBUG:numba.core.ssa:on stmt: (self).r_outer = r_outer
DEBUG:numba.core.ssa:on stmt: (self).time_explosion = time_explosion
DEBUG:numba.core.ssa:on stmt: $const20.6 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $22return_value.7 = cast(value=$const20.6)
DEBUG:numba.core.ssa:on stmt: return $22return_value.7
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22return_value.7': [<numba.core.ir.Assign object at 0x7f6e45f23490>],
             '$const20.6': [<numba.core.ir.Assign object at 0x7f6e45f23690>],
             'r_inner': [<numba.core.ir.Assign object at 0x7f6e45f29d50>],
             'r_outer': [<numba.core.ir.Assign object at 0x7f6e45f29650>],
             'self': [<numba.core.ir.Assign object at 0x7f6e45f29dd0>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e45f29610>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=r_inner) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e460d0c10>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e460ecd50>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e460ece50>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e460ecb10>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=r_outer) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f64810>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45f5d690>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45f5d790>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45f5d450>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=time_explosion) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4613ed10>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e46127bd0>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e46127cd0>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e46127990>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_GLOBAL(arg=0, lineno=3)
           4	LOAD_FAST(arg=0, lineno=3)
           6	LOAD_FAST(arg=1, lineno=3)
           8	LOAD_FAST(arg=2, lineno=3)
          10	LOAD_FAST(arg=3, lineno=3)
          12	LOAD_FAST(arg=4, lineno=3)
          14	LOAD_FAST(arg=5, lineno=3)
          16	LOAD_FAST(arg=6, lineno=3)
          18	LOAD_FAST(arg=7, lineno=3)
          20	LOAD_FAST(arg=8, lineno=3)
          22	CALL_FUNCTION(arg=9, lineno=3)
          24	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$electron_density4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$electron_density4.1', '$line_list_nu6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$electron_density4.1', '$line_list_nu6.2', '$tau_sobolev8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=4, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$electron_density4.1', '$line_list_nu6.2', '$tau_sobolev8.3', '$transition_probabilities10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=5, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$electron_density4.1', '$line_list_nu6.2', '$tau_sobolev8.3', '$transition_probabilities10.4', '$line2macro_level_upper12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=6, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$electron_density4.1', '$line_list_nu6.2', '$tau_sobolev8.3', '$transition_probabilities10.4', '$line2macro_level_upper12.5', '$macro_block_references14.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=7, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$electron_density4.1', '$line_list_nu6.2', '$tau_sobolev8.3', '$transition_probabilities10.4', '$line2macro_level_upper12.5', '$macro_block_references14.6', '$transition_type16.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=8, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$electron_density4.1', '$line_list_nu6.2', '$tau_sobolev8.3', '$transition_probabilities10.4', '$line2macro_level_upper12.5', '$macro_block_references14.6', '$transition_type16.7', '$destination_level_id18.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL_FUNCTION(arg=9, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$electron_density4.1', '$line_list_nu6.2', '$tau_sobolev8.3', '$transition_probabilities10.4', '$line2macro_level_upper12.5', '$macro_block_references14.6', '$transition_type16.7', '$destination_level_id18.8', '$transition_line_id20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$22call_function.10']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$electron_density4.1'}), (6, {'res': '$line_list_nu6.2'}), (8, {'res': '$tau_sobolev8.3'}), (10, {'res': '$transition_probabilities10.4'}), (12, {'res': '$line2macro_level_upper12.5'}), (14, {'res': '$macro_block_references14.6'}), (16, {'res': '$transition_type16.7'}), (18, {'res': '$destination_level_id18.8'}), (20, {'res': '$transition_line_id20.9'}), (22, {'func': '$2load_global.0', 'args': ['$electron_density4.1', '$line_list_nu6.2', '$tau_sobolev8.3', '$transition_probabilities10.4', '$line2macro_level_upper12.5', '$macro_block_references14.6', '$transition_type16.7', '$destination_level_id18.8', '$transition_line_id20.9'], 'res': '$22call_function.10'}), (24, {'retval': '$22call_function.10', 'castval': '$24return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    electron_density = arg(0, name=electron_density) ['electron_density']
    line_list_nu = arg(1, name=line_list_nu) ['line_list_nu']
    tau_sobolev = arg(2, name=tau_sobolev)   ['tau_sobolev']
    transition_probabilities = arg(3, name=transition_probabilities) ['transition_probabilities']
    line2macro_level_upper = arg(4, name=line2macro_level_upper) ['line2macro_level_upper']
    macro_block_references = arg(5, name=macro_block_references) ['macro_block_references']
    transition_type = arg(6, name=transition_type) ['transition_type']
    destination_level_id = arg(7, name=destination_level_id) ['destination_level_id']
    transition_line_id = arg(8, name=transition_line_id) ['transition_line_id']
    $2load_global.0 = global(__numba_cls_: <class 'numba.experimental.jitclass.base.NumbaPlasma'>) ['$2load_global.0']
    $22call_function.10 = call $2load_global.0(electron_density, line_list_nu, tau_sobolev, transition_probabilities, line2macro_level_upper, macro_block_references, transition_type, destination_level_id, transition_line_id, func=$2load_global.0, args=[Var(electron_density, <string>:3), Var(line_list_nu, <string>:3), Var(tau_sobolev, <string>:3), Var(transition_probabilities, <string>:3), Var(line2macro_level_upper, <string>:3), Var(macro_block_references, <string>:3), Var(transition_type, <string>:3), Var(destination_level_id, <string>:3), Var(transition_line_id, <string>:3)], kws=(), vararg=None) ['$22call_function.10', '$2load_global.0', 'destination_level_id', 'electron_density', 'line2macro_level_upper', 'line_list_nu', 'macro_block_references', 'tau_sobolev', 'transition_line_id', 'transition_probabilities', 'transition_type']
    $24return_value.11 = cast(value=$22call_function.10) ['$22call_function.10', '$24return_value.11']
    return $24return_value.11                ['$24return_value.11']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46118c10>
DEBUG:numba.core.ssa:on stmt: electron_density = arg(0, name=electron_density)
DEBUG:numba.core.ssa:on stmt: line_list_nu = arg(1, name=line_list_nu)
DEBUG:numba.core.ssa:on stmt: tau_sobolev = arg(2, name=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: transition_probabilities = arg(3, name=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: line2macro_level_upper = arg(4, name=line2macro_level_upper)
DEBUG:numba.core.ssa:on stmt: macro_block_references = arg(5, name=macro_block_references)
DEBUG:numba.core.ssa:on stmt: transition_type = arg(6, name=transition_type)
DEBUG:numba.core.ssa:on stmt: destination_level_id = arg(7, name=destination_level_id)
DEBUG:numba.core.ssa:on stmt: transition_line_id = arg(8, name=transition_line_id)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(__numba_cls_: <class 'numba.experimental.jitclass.base.NumbaPlasma'>)
DEBUG:numba.core.ssa:on stmt: $22call_function.10 = call $2load_global.0(electron_density, line_list_nu, tau_sobolev, transition_probabilities, line2macro_level_upper, macro_block_references, transition_type, destination_level_id, transition_line_id, func=$2load_global.0, args=[Var(electron_density, <string>:3), Var(line_list_nu, <string>:3), Var(tau_sobolev, <string>:3), Var(transition_probabilities, <string>:3), Var(line2macro_level_upper, <string>:3), Var(macro_block_references, <string>:3), Var(transition_type, <string>:3), Var(destination_level_id, <string>:3), Var(transition_line_id, <string>:3)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $24return_value.11 = cast(value=$22call_function.10)
DEBUG:numba.core.ssa:on stmt: return $24return_value.11
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22call_function.10': [<numba.core.ir.Assign object at 0x7f6e45f66e10>],
             '$24return_value.11': [<numba.core.ir.Assign object at 0x7f6e45f66cd0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e45f66290>],
             'destination_level_id': [<numba.core.ir.Assign object at 0x7f6e4688cf50>],
             'electron_density': [<numba.core.ir.Assign object at 0x7f6e4688c210>],
             'line2macro_level_upper': [<numba.core.ir.Assign object at 0x7f6e4688c9d0>],
             'line_list_nu': [<numba.core.ir.Assign object at 0x7f6e4688cf90>],
             'macro_block_references': [<numba.core.ir.Assign object at 0x7f6e4688c250>],
             'tau_sobolev': [<numba.core.ir.Assign object at 0x7f6e4688cb10>],
             'transition_line_id': [<numba.core.ir.Assign object at 0x7f6e45f66890>],
             'transition_probabilities': [<numba.core.ir.Assign object at 0x7f6e4688c590>],
             'transition_type': [<numba.core.ir.Assign object at 0x7f6e4688c910>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=84)
           2	LOAD_FAST(arg=1, lineno=84)
           4	LOAD_FAST(arg=0, lineno=84)
           6	STORE_ATTR(arg=0, lineno=84)
           8	LOAD_FAST(arg=2, lineno=85)
          10	LOAD_FAST(arg=0, lineno=85)
          12	STORE_ATTR(arg=1, lineno=85)
          14	LOAD_FAST(arg=3, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	STORE_ATTR(arg=2, lineno=86)
          20	LOAD_FAST(arg=4, lineno=89)
          22	LOAD_FAST(arg=0, lineno=89)
          24	STORE_ATTR(arg=3, lineno=89)
          26	LOAD_FAST(arg=5, lineno=90)
          28	LOAD_FAST(arg=0, lineno=90)
          30	STORE_ATTR(arg=4, lineno=90)
          32	LOAD_FAST(arg=6, lineno=92)
          34	LOAD_FAST(arg=0, lineno=92)
          36	STORE_ATTR(arg=5, lineno=92)
          38	LOAD_FAST(arg=7, lineno=93)
          40	LOAD_FAST(arg=0, lineno=93)
          42	STORE_ATTR(arg=6, lineno=93)
          44	LOAD_FAST(arg=8, lineno=96)
          46	LOAD_FAST(arg=0, lineno=96)
          48	STORE_ATTR(arg=7, lineno=96)
          50	LOAD_FAST(arg=9, lineno=97)
          52	LOAD_FAST(arg=0, lineno=97)
          54	STORE_ATTR(arg=8, lineno=97)
          56	LOAD_CONST(arg=1, lineno=97)
          58	RETURN_VALUE(arg=None, lineno=97)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=84)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=84)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=84)
DEBUG:numba.core.byteflow:stack ['$electron_density2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_ATTR(arg=0, lineno=84)
DEBUG:numba.core.byteflow:stack ['$electron_density2.0', '$self4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=85)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=85)
DEBUG:numba.core.byteflow:stack ['$line_list_nu8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_ATTR(arg=1, lineno=85)
DEBUG:numba.core.byteflow:stack ['$line_list_nu8.2', '$self10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=86)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
DEBUG:numba.core.byteflow:stack ['$tau_sobolev14.4']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_ATTR(arg=2, lineno=86)
DEBUG:numba.core.byteflow:stack ['$tau_sobolev14.4', '$self16.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=4, lineno=89)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=89)
DEBUG:numba.core.byteflow:stack ['$transition_probabilities20.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_ATTR(arg=3, lineno=89)
DEBUG:numba.core.byteflow:stack ['$transition_probabilities20.6', '$self22.7']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=90)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=90)
DEBUG:numba.core.byteflow:stack ['$line2macro_level_upper26.8']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_ATTR(arg=4, lineno=90)
DEBUG:numba.core.byteflow:stack ['$line2macro_level_upper26.8', '$self28.9']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=6, lineno=92)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=92)
DEBUG:numba.core.byteflow:stack ['$macro_block_references32.10']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_ATTR(arg=5, lineno=92)
DEBUG:numba.core.byteflow:stack ['$macro_block_references32.10', '$self34.11']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=7, lineno=93)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=93)
DEBUG:numba.core.byteflow:stack ['$transition_type38.12']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_ATTR(arg=6, lineno=93)
DEBUG:numba.core.byteflow:stack ['$transition_type38.12', '$self40.13']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=8, lineno=96)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=0, lineno=96)
DEBUG:numba.core.byteflow:stack ['$destination_level_id44.14']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=STORE_ATTR(arg=7, lineno=96)
DEBUG:numba.core.byteflow:stack ['$destination_level_id44.14', '$self46.15']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=9, lineno=97)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=97)
DEBUG:numba.core.byteflow:stack ['$transition_line_id50.16']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_ATTR(arg=8, lineno=97)
DEBUG:numba.core.byteflow:stack ['$transition_line_id50.16', '$self52.17']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=1, lineno=97)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=RETURN_VALUE(arg=None, lineno=97)
DEBUG:numba.core.byteflow:stack ['$const56.18']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$electron_density2.0'}), (4, {'res': '$self4.1'}), (6, {'target': '$self4.1', 'value': '$electron_density2.0'}), (8, {'res': '$line_list_nu8.2'}), (10, {'res': '$self10.3'}), (12, {'target': '$self10.3', 'value': '$line_list_nu8.2'}), (14, {'res': '$tau_sobolev14.4'}), (16, {'res': '$self16.5'}), (18, {'target': '$self16.5', 'value': '$tau_sobolev14.4'}), (20, {'res': '$transition_probabilities20.6'}), (22, {'res': '$self22.7'}), (24, {'target': '$self22.7', 'value': '$transition_probabilities20.6'}), (26, {'res': '$line2macro_level_upper26.8'}), (28, {'res': '$self28.9'}), (30, {'target': '$self28.9', 'value': '$line2macro_level_upper26.8'}), (32, {'res': '$macro_block_references32.10'}), (34, {'res': '$self34.11'}), (36, {'target': '$self34.11', 'value': '$macro_block_references32.10'}), (38, {'res': '$transition_type38.12'}), (40, {'res': '$self40.13'}), (42, {'target': '$self40.13', 'value': '$transition_type38.12'}), (44, {'res': '$destination_level_id44.14'}), (46, {'res': '$self46.15'}), (48, {'target': '$self46.15', 'value': '$destination_level_id44.14'}), (50, {'res': '$transition_line_id50.16'}), (52, {'res': '$self52.17'}), (54, {'target': '$self52.17', 'value': '$transition_line_id50.16'}), (56, {'res': '$const56.18'}), (58, {'retval': '$const56.18', 'castval': '$58return_value.19'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    self = arg(0, name=self)                 ['self']
    electron_density = arg(1, name=electron_density) ['electron_density']
    line_list_nu = arg(2, name=line_list_nu) ['line_list_nu']
    tau_sobolev = arg(3, name=tau_sobolev)   ['tau_sobolev']
    transition_probabilities = arg(4, name=transition_probabilities) ['transition_probabilities']
    line2macro_level_upper = arg(5, name=line2macro_level_upper) ['line2macro_level_upper']
    macro_block_references = arg(6, name=macro_block_references) ['macro_block_references']
    transition_type = arg(7, name=transition_type) ['transition_type']
    destination_level_id = arg(8, name=destination_level_id) ['destination_level_id']
    transition_line_id = arg(9, name=transition_line_id) ['transition_line_id']
    (self).electron_density = electron_density ['electron_density', 'self']
    (self).line_list_nu = line_list_nu       ['line_list_nu', 'self']
    (self).tau_sobolev = tau_sobolev         ['self', 'tau_sobolev']
    (self).transition_probabilities = transition_probabilities ['self', 'transition_probabilities']
    (self).line2macro_level_upper = line2macro_level_upper ['line2macro_level_upper', 'self']
    (self).macro_block_references = macro_block_references ['macro_block_references', 'self']
    (self).transition_type = transition_type ['self', 'transition_type']
    (self).destination_level_id = destination_level_id ['destination_level_id', 'self']
    (self).transition_line_id = transition_line_id ['self', 'transition_line_id']
    $const56.18 = const(NoneType, None)      ['$const56.18']
    $58return_value.19 = cast(value=$const56.18) ['$58return_value.19', '$const56.18']
    return $58return_value.19                ['$58return_value.19']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4610b090>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: electron_density = arg(1, name=electron_density)
DEBUG:numba.core.ssa:on stmt: line_list_nu = arg(2, name=line_list_nu)
DEBUG:numba.core.ssa:on stmt: tau_sobolev = arg(3, name=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: transition_probabilities = arg(4, name=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: line2macro_level_upper = arg(5, name=line2macro_level_upper)
DEBUG:numba.core.ssa:on stmt: macro_block_references = arg(6, name=macro_block_references)
DEBUG:numba.core.ssa:on stmt: transition_type = arg(7, name=transition_type)
DEBUG:numba.core.ssa:on stmt: destination_level_id = arg(8, name=destination_level_id)
DEBUG:numba.core.ssa:on stmt: transition_line_id = arg(9, name=transition_line_id)
DEBUG:numba.core.ssa:on stmt: (self).electron_density = electron_density
DEBUG:numba.core.ssa:on stmt: (self).line_list_nu = line_list_nu
DEBUG:numba.core.ssa:on stmt: (self).tau_sobolev = tau_sobolev
DEBUG:numba.core.ssa:on stmt: (self).transition_probabilities = transition_probabilities
DEBUG:numba.core.ssa:on stmt: (self).line2macro_level_upper = line2macro_level_upper
DEBUG:numba.core.ssa:on stmt: (self).macro_block_references = macro_block_references
DEBUG:numba.core.ssa:on stmt: (self).transition_type = transition_type
DEBUG:numba.core.ssa:on stmt: (self).destination_level_id = destination_level_id
DEBUG:numba.core.ssa:on stmt: (self).transition_line_id = transition_line_id
DEBUG:numba.core.ssa:on stmt: $const56.18 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $58return_value.19 = cast(value=$const56.18)
DEBUG:numba.core.ssa:on stmt: return $58return_value.19
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$58return_value.19': [<numba.core.ir.Assign object at 0x7f6e46137d50>],
             '$const56.18': [<numba.core.ir.Assign object at 0x7f6e46137c50>],
             'destination_level_id': [<numba.core.ir.Assign object at 0x7f6e468f84d0>],
             'electron_density': [<numba.core.ir.Assign object at 0x7f6e461c9950>],
             'line2macro_level_upper': [<numba.core.ir.Assign object at 0x7f6e468f8a50>],
             'line_list_nu': [<numba.core.ir.Assign object at 0x7f6e461c9210>],
             'macro_block_references': [<numba.core.ir.Assign object at 0x7f6e468f8f10>],
             'self': [<numba.core.ir.Assign object at 0x7f6e461c9b50>],
             'tau_sobolev': [<numba.core.ir.Assign object at 0x7f6e468f8d90>],
             'transition_line_id': [<numba.core.ir.Assign object at 0x7f6e468f8b10>],
             'transition_probabilities': [<numba.core.ir.Assign object at 0x7f6e468f83d0>],
             'transition_type': [<numba.core.ir.Assign object at 0x7f6e468f8950>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=electron_density) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45eb3750>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45ea2d50>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45ea2e50>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45ea0090>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=line_list_nu) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45e37350>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45e2c1d0>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45e2c2d0>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45e26910>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=tau_sobolev) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45e0cd50>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45e0c510>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45e0c610>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45e0c2d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=transition_probabilities) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45dc4510>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45db9690>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45db9590>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45db9250>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=line2macro_level_upper) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45e64850>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=line2macro_level_upper)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45e1a6d0>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45e1a7d0>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45e1a3d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=macro_block_references) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d228d0>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45d22c50>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45d22d50>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45d22a10>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=transition_type) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d203d0>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=transition_type)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45d0dad0>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45d0dbd0>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45d0d890>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=destination_level_id) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45c931d0>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=destination_level_id)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45c8ce50>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45c8cf50>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45c8cc10>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=transition_line_id) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ca2650>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=transition_line_id)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45cd8f10>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45cd8e50>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45e16b10>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_GLOBAL(arg=0, lineno=3)
           4	LOAD_FAST(arg=0, lineno=3)
           6	LOAD_FAST(arg=1, lineno=3)
           8	LOAD_FAST(arg=2, lineno=3)
          10	LOAD_FAST(arg=3, lineno=3)
          12	CALL_FUNCTION(arg=4, lineno=3)
          14	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$j_estimator4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$j_estimator4.1', '$nu_bar_estimator6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$j_estimator4.1', '$nu_bar_estimator6.2', '$j_blue_estimator8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_FUNCTION(arg=4, lineno=3)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$j_estimator4.1', '$nu_bar_estimator6.2', '$j_blue_estimator8.3', '$Edotlu_estimator10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$12call_function.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$j_estimator4.1'}), (6, {'res': '$nu_bar_estimator6.2'}), (8, {'res': '$j_blue_estimator8.3'}), (10, {'res': '$Edotlu_estimator10.4'}), (12, {'func': '$2load_global.0', 'args': ['$j_estimator4.1', '$nu_bar_estimator6.2', '$j_blue_estimator8.3', '$Edotlu_estimator10.4'], 'res': '$12call_function.5'}), (14, {'retval': '$12call_function.5', 'castval': '$14return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    j_estimator = arg(0, name=j_estimator)   ['j_estimator']
    nu_bar_estimator = arg(1, name=nu_bar_estimator) ['nu_bar_estimator']
    j_blue_estimator = arg(2, name=j_blue_estimator) ['j_blue_estimator']
    Edotlu_estimator = arg(3, name=Edotlu_estimator) ['Edotlu_estimator']
    $2load_global.0 = global(__numba_cls_: <class 'numba.experimental.jitclass.base.Estimators'>) ['$2load_global.0']
    $12call_function.5 = call $2load_global.0(j_estimator, nu_bar_estimator, j_blue_estimator, Edotlu_estimator, func=$2load_global.0, args=[Var(j_estimator, <string>:3), Var(nu_bar_estimator, <string>:3), Var(j_blue_estimator, <string>:3), Var(Edotlu_estimator, <string>:3)], kws=(), vararg=None) ['$12call_function.5', '$2load_global.0', 'Edotlu_estimator', 'j_blue_estimator', 'j_estimator', 'nu_bar_estimator']
    $14return_value.6 = cast(value=$12call_function.5) ['$12call_function.5', '$14return_value.6']
    return $14return_value.6                 ['$14return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b8a110>
DEBUG:numba.core.ssa:on stmt: j_estimator = arg(0, name=j_estimator)
DEBUG:numba.core.ssa:on stmt: nu_bar_estimator = arg(1, name=nu_bar_estimator)
DEBUG:numba.core.ssa:on stmt: j_blue_estimator = arg(2, name=j_blue_estimator)
DEBUG:numba.core.ssa:on stmt: Edotlu_estimator = arg(3, name=Edotlu_estimator)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(__numba_cls_: <class 'numba.experimental.jitclass.base.Estimators'>)
DEBUG:numba.core.ssa:on stmt: $12call_function.5 = call $2load_global.0(j_estimator, nu_bar_estimator, j_blue_estimator, Edotlu_estimator, func=$2load_global.0, args=[Var(j_estimator, <string>:3), Var(nu_bar_estimator, <string>:3), Var(j_blue_estimator, <string>:3), Var(Edotlu_estimator, <string>:3)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $14return_value.6 = cast(value=$12call_function.5)
DEBUG:numba.core.ssa:on stmt: return $14return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12call_function.5': [<numba.core.ir.Assign object at 0x7f6e45c49090>],
             '$14return_value.6': [<numba.core.ir.Assign object at 0x7f6e45c46610>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e45c46c10>],
             'Edotlu_estimator': [<numba.core.ir.Assign object at 0x7f6e45c46a90>],
             'j_blue_estimator': [<numba.core.ir.Assign object at 0x7f6e45c469d0>],
             'j_estimator': [<numba.core.ir.Assign object at 0x7f6e45c46810>],
             'nu_bar_estimator': [<numba.core.ir.Assign object at 0x7f6e45c46890>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=285)
           2	LOAD_FAST(arg=1, lineno=285)
           4	LOAD_FAST(arg=0, lineno=285)
           6	STORE_ATTR(arg=0, lineno=285)
           8	LOAD_FAST(arg=2, lineno=286)
          10	LOAD_FAST(arg=0, lineno=286)
          12	STORE_ATTR(arg=1, lineno=286)
          14	LOAD_FAST(arg=3, lineno=287)
          16	LOAD_FAST(arg=0, lineno=287)
          18	STORE_ATTR(arg=2, lineno=287)
          20	LOAD_FAST(arg=4, lineno=288)
          22	LOAD_FAST(arg=0, lineno=288)
          24	STORE_ATTR(arg=3, lineno=288)
          26	LOAD_CONST(arg=0, lineno=288)
          28	RETURN_VALUE(arg=None, lineno=288)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=285)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=285)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=285)
DEBUG:numba.core.byteflow:stack ['$j_estimator2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_ATTR(arg=0, lineno=285)
DEBUG:numba.core.byteflow:stack ['$j_estimator2.0', '$self4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=286)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=286)
DEBUG:numba.core.byteflow:stack ['$nu_bar_estimator8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_ATTR(arg=1, lineno=286)
DEBUG:numba.core.byteflow:stack ['$nu_bar_estimator8.2', '$self10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=287)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=287)
DEBUG:numba.core.byteflow:stack ['$j_blue_estimator14.4']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_ATTR(arg=2, lineno=287)
DEBUG:numba.core.byteflow:stack ['$j_blue_estimator14.4', '$self16.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=4, lineno=288)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=288)
DEBUG:numba.core.byteflow:stack ['$Edotlu_estimator20.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_ATTR(arg=3, lineno=288)
DEBUG:numba.core.byteflow:stack ['$Edotlu_estimator20.6', '$self22.7']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=0, lineno=288)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=RETURN_VALUE(arg=None, lineno=288)
DEBUG:numba.core.byteflow:stack ['$const26.8']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$j_estimator2.0'}), (4, {'res': '$self4.1'}), (6, {'target': '$self4.1', 'value': '$j_estimator2.0'}), (8, {'res': '$nu_bar_estimator8.2'}), (10, {'res': '$self10.3'}), (12, {'target': '$self10.3', 'value': '$nu_bar_estimator8.2'}), (14, {'res': '$j_blue_estimator14.4'}), (16, {'res': '$self16.5'}), (18, {'target': '$self16.5', 'value': '$j_blue_estimator14.4'}), (20, {'res': '$Edotlu_estimator20.6'}), (22, {'res': '$self22.7'}), (24, {'target': '$self22.7', 'value': '$Edotlu_estimator20.6'}), (26, {'res': '$const26.8'}), (28, {'retval': '$const26.8', 'castval': '$28return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    self = arg(0, name=self)                 ['self']
    j_estimator = arg(1, name=j_estimator)   ['j_estimator']
    nu_bar_estimator = arg(2, name=nu_bar_estimator) ['nu_bar_estimator']
    j_blue_estimator = arg(3, name=j_blue_estimator) ['j_blue_estimator']
    Edotlu_estimator = arg(4, name=Edotlu_estimator) ['Edotlu_estimator']
    (self).j_estimator = j_estimator         ['j_estimator', 'self']
    (self).nu_bar_estimator = nu_bar_estimator ['nu_bar_estimator', 'self']
    (self).j_blue_estimator = j_blue_estimator ['j_blue_estimator', 'self']
    (self).Edotlu_estimator = Edotlu_estimator ['Edotlu_estimator', 'self']
    $const26.8 = const(NoneType, None)       ['$const26.8']
    $28return_value.9 = cast(value=$const26.8) ['$28return_value.9', '$const26.8']
    return $28return_value.9                 ['$28return_value.9']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45c0ded0>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: j_estimator = arg(1, name=j_estimator)
DEBUG:numba.core.ssa:on stmt: nu_bar_estimator = arg(2, name=nu_bar_estimator)
DEBUG:numba.core.ssa:on stmt: j_blue_estimator = arg(3, name=j_blue_estimator)
DEBUG:numba.core.ssa:on stmt: Edotlu_estimator = arg(4, name=Edotlu_estimator)
DEBUG:numba.core.ssa:on stmt: (self).j_estimator = j_estimator
DEBUG:numba.core.ssa:on stmt: (self).nu_bar_estimator = nu_bar_estimator
DEBUG:numba.core.ssa:on stmt: (self).j_blue_estimator = j_blue_estimator
DEBUG:numba.core.ssa:on stmt: (self).Edotlu_estimator = Edotlu_estimator
DEBUG:numba.core.ssa:on stmt: $const26.8 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $28return_value.9 = cast(value=$const26.8)
DEBUG:numba.core.ssa:on stmt: return $28return_value.9
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$28return_value.9': [<numba.core.ir.Assign object at 0x7f6e45c49210>],
             '$const26.8': [<numba.core.ir.Assign object at 0x7f6e45c49410>],
             'Edotlu_estimator': [<numba.core.ir.Assign object at 0x7f6e45c49a50>],
             'j_blue_estimator': [<numba.core.ir.Assign object at 0x7f6e45b8a210>],
             'j_estimator': [<numba.core.ir.Assign object at 0x7f6e45b8a350>],
             'nu_bar_estimator': [<numba.core.ir.Assign object at 0x7f6e45b8a410>],
             'self': [<numba.core.ir.Assign object at 0x7f6e45b8a490>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=j_estimator) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b46ad0>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=j_estimator)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45b3e9d0>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45b3ead0>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45b3e790>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=nu_bar_estimator) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d992d0>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=nu_bar_estimator)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45d88f90>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45d88bd0>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45d88310>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=j_blue_estimator) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45cd88d0>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=j_blue_estimator)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45e0f910>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45e0f350>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45e0fcd0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3)
           2	LOAD_FAST(arg=0, lineno=3)
           4	LOAD_ATTR(arg=0, lineno=3)
           6	RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=3)
DEBUG:numba.core.byteflow:stack ['$__numba_self_2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$__numba_self_2.0'}), (4, {'item': '$__numba_self_2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    __numba_self_ = arg(0, name=__numba_self_) ['__numba_self_']
    $4load_attr.1 = getattr(value=__numba_self_, attr=Edotlu_estimator) ['$4load_attr.1', '__numba_self_']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d2af50>
DEBUG:numba.core.ssa:on stmt: __numba_self_ = arg(0, name=__numba_self_)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=__numba_self_, attr=Edotlu_estimator)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45e64d10>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e45e647d0>],
             '__numba_self_': [<numba.core.ir.Assign object at 0x7f6e45e64a50>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=128)
           2	LOAD_GLOBAL(arg=0, lineno=128)
           4	LOAD_METHOD(arg=1, lineno=128)
           6	LOAD_FAST(arg=0, lineno=128)
           8	LOAD_ATTR(arg=2, lineno=128)
          10	CALL_METHOD(arg=1, lineno=128)
          12	STORE_FAST(arg=7, lineno=128)
          14	LOAD_GLOBAL(arg=0, lineno=130)
          16	LOAD_ATTR(arg=3, lineno=130)
          18	LOAD_FAST(arg=0, lineno=130)
          20	LOAD_ATTR(arg=2, lineno=130)
          22	LOAD_GLOBAL(arg=0, lineno=130)
          24	LOAD_ATTR(arg=4, lineno=130)
          26	LOAD_CONST(arg=1, lineno=130)
          28	CALL_FUNCTION_KW(arg=2, lineno=130)
          30	LOAD_CONST(arg=2, lineno=130)
          32	BINARY_MULTIPLY(arg=None, lineno=130)
          34	STORE_FAST(arg=8, lineno=130)
          36	LOAD_GLOBAL(arg=0, lineno=132)
          38	LOAD_METHOD(arg=1, lineno=132)
          40	LOAD_FAST(arg=0, lineno=132)
          42	LOAD_ATTR(arg=2, lineno=132)
          44	CALL_METHOD(arg=1, lineno=132)
          46	STORE_FAST(arg=9, lineno=132)
          48	LOAD_GLOBAL(arg=0, lineno=134)
          50	LOAD_METHOD(arg=1, lineno=134)
          52	LOAD_FAST(arg=0, lineno=134)
          54	LOAD_ATTR(arg=2, lineno=134)
          56	CALL_METHOD(arg=1, lineno=134)
          58	STORE_FAST(arg=10, lineno=134)
          60	LOAD_GLOBAL(arg=0, lineno=136)
          62	LOAD_ATTR(arg=3, lineno=136)
          64	LOAD_FAST(arg=0, lineno=136)
          66	LOAD_ATTR(arg=2, lineno=136)
          68	LOAD_GLOBAL(arg=0, lineno=136)
          70	LOAD_ATTR(arg=4, lineno=136)
          72	LOAD_CONST(arg=1, lineno=136)
          74	CALL_FUNCTION_KW(arg=2, lineno=136)
          76	LOAD_CONST(arg=2, lineno=136)
          78	BINARY_MULTIPLY(arg=None, lineno=136)
          80	STORE_FAST(arg=11, lineno=136)
          82	LOAD_GLOBAL(arg=0, lineno=139)
          84	LOAD_ATTR(arg=3, lineno=139)
          86	LOAD_FAST(arg=0, lineno=139)
          88	LOAD_ATTR(arg=2, lineno=139)
          90	LOAD_GLOBAL(arg=0, lineno=139)
          92	LOAD_ATTR(arg=4, lineno=139)
          94	LOAD_CONST(arg=1, lineno=139)
          96	CALL_FUNCTION_KW(arg=2, lineno=139)
          98	LOAD_CONST(arg=2, lineno=139)
         100	BINARY_MULTIPLY(arg=None, lineno=139)
         102	STORE_FAST(arg=12, lineno=139)
         104	LOAD_GLOBAL(arg=0, lineno=142)
         106	LOAD_METHOD(arg=5, lineno=142)
         108	LOAD_FAST(arg=4, lineno=142)
         110	CALL_METHOD(arg=1, lineno=142)
         112	STORE_FAST(arg=13, lineno=142)
         114	LOAD_FAST(arg=4, lineno=143)
         116	LOAD_CONST(arg=3, lineno=143)
         118	BINARY_SUBSCR(arg=None, lineno=143)
         120	LOAD_FAST(arg=4, lineno=143)
         122	LOAD_CONST(arg=4, lineno=143)
         124	BINARY_SUBSCR(arg=None, lineno=143)
         126	BINARY_SUBTRACT(arg=None, lineno=143)
         128	STORE_FAST(arg=14, lineno=143)
         130	BUILD_LIST(arg=0, lineno=145)
         132	STORE_FAST(arg=15, lineno=145)
         134	BUILD_LIST(arg=0, lineno=146)
         136	STORE_FAST(arg=16, lineno=146)
         138	BUILD_LIST(arg=0, lineno=147)
         140	STORE_FAST(arg=17, lineno=147)
         142	BUILD_LIST(arg=0, lineno=148)
         144	STORE_FAST(arg=18, lineno=148)
         146	BUILD_LIST(arg=0, lineno=149)
         148	STORE_FAST(arg=19, lineno=149)
         150	BUILD_LIST(arg=0, lineno=150)
         152	STORE_FAST(arg=20, lineno=150)
         154	LOAD_GLOBAL(arg=6, lineno=152)
         156	LOAD_CONST(arg=5, lineno=152)
         158	CALL_FUNCTION(arg=1, lineno=152)
         160	POP_TOP(arg=None, lineno=152)
         162	SETUP_LOOP(arg=534, lineno=153)
         166	LOAD_GLOBAL(arg=7, lineno=153)
         168	LOAD_GLOBAL(arg=8, lineno=153)
         170	LOAD_FAST(arg=7, lineno=153)
         172	CALL_FUNCTION(arg=1, lineno=153)
         174	CALL_FUNCTION(arg=1, lineno=153)
         176	GET_ITER(arg=None, lineno=153)
>        178	FOR_ITER(arg=516, lineno=153)
         182	STORE_FAST(arg=21, lineno=153)
         184	LOAD_GLOBAL(arg=9, lineno=154)
         186	LOAD_ATTR(arg=10, lineno=154)
         188	LOAD_CONST(arg=2, lineno=154)
         190	COMPARE_OP(arg=3, lineno=154)
         192	POP_JUMP_IF_FALSE(arg=218, lineno=154)
         194	LOAD_FAST(arg=6, lineno=155)
         196	LOAD_GLOBAL(arg=9, lineno=155)
         198	LOAD_ATTR(arg=10, lineno=155)
         200	BINARY_SUBSCR(arg=None, lineno=155)
         202	STORE_FAST(arg=22, lineno=155)
         204	LOAD_GLOBAL(arg=0, lineno=156)
         206	LOAD_ATTR(arg=11, lineno=156)
         208	LOAD_METHOD(arg=12, lineno=156)
         210	LOAD_FAST(arg=22, lineno=156)
         212	CALL_METHOD(arg=1, lineno=156)
         214	POP_TOP(arg=None, lineno=156)
         216	JUMP_FORWARD(arg=20, lineno=156)
>        218	LOAD_FAST(arg=6, lineno=158)
         220	LOAD_FAST(arg=21, lineno=158)
         222	BINARY_SUBSCR(arg=None, lineno=158)
         224	STORE_FAST(arg=22, lineno=158)
         226	LOAD_GLOBAL(arg=0, lineno=159)
         228	LOAD_ATTR(arg=11, lineno=159)
         230	LOAD_METHOD(arg=12, lineno=159)
         232	LOAD_FAST(arg=22, lineno=159)
         234	CALL_METHOD(arg=1, lineno=159)
         236	POP_TOP(arg=None, lineno=159)
>        238	LOAD_GLOBAL(arg=13, lineno=160)
         240	LOAD_FAST(arg=1, lineno=161)
         242	LOAD_ATTR(arg=14, lineno=161)
         244	LOAD_CONST(arg=4, lineno=161)
         246	BINARY_SUBSCR(arg=None, lineno=161)
         248	LOAD_FAST(arg=0, lineno=162)
         250	LOAD_ATTR(arg=15, lineno=162)
         252	LOAD_FAST(arg=21, lineno=162)
         254	BINARY_SUBSCR(arg=None, lineno=162)
         256	LOAD_FAST(arg=0, lineno=163)
         258	LOAD_ATTR(arg=16, lineno=163)
         260	LOAD_FAST(arg=21, lineno=163)
         262	BINARY_SUBSCR(arg=None, lineno=163)
         264	LOAD_FAST(arg=0, lineno=164)
         266	LOAD_ATTR(arg=17, lineno=164)
         268	LOAD_FAST(arg=21, lineno=164)
         270	BINARY_SUBSCR(arg=None, lineno=164)
         272	LOAD_FAST(arg=22, lineno=165)
         274	LOAD_FAST(arg=21, lineno=166)
         276	LOAD_CONST(arg=4, lineno=167)
         278	CALL_FUNCTION(arg=7, lineno=167)
         280	STORE_FAST(arg=23, lineno=167)
         282	LOAD_GLOBAL(arg=18, lineno=169)
         284	LOAD_FAST(arg=23, lineno=170)
         286	LOAD_ATTR(arg=19, lineno=170)
         288	LOAD_FAST(arg=4, lineno=171)
         290	LOAD_GLOBAL(arg=9, lineno=172)
         292	LOAD_ATTR(arg=20, lineno=172)
         294	LOAD_GLOBAL(arg=9, lineno=173)
         296	LOAD_ATTR(arg=21, lineno=173)
         298	LOAD_FAST(arg=5, lineno=174)
         300	LOAD_GLOBAL(arg=9, lineno=175)
         302	LOAD_ATTR(arg=22, lineno=175)
         304	CALL_FUNCTION(arg=6, lineno=175)
         306	STORE_FAST(arg=24, lineno=175)
         308	LOAD_GLOBAL(arg=23, lineno=177)
         310	LOAD_FAST(arg=23, lineno=178)
         312	LOAD_FAST(arg=1, lineno=178)
         314	LOAD_FAST(arg=2, lineno=178)
         316	LOAD_FAST(arg=3, lineno=178)
         318	LOAD_FAST(arg=24, lineno=178)
         320	CALL_FUNCTION(arg=5, lineno=178)
         322	STORE_FAST(arg=25, lineno=178)
         324	LOAD_FAST(arg=23, lineno=183)
         326	LOAD_ATTR(arg=24, lineno=183)
         328	LOAD_FAST(arg=7, lineno=183)
         330	LOAD_FAST(arg=21, lineno=183)
         332	STORE_SUBSCR(arg=None, lineno=183)
         334	LOAD_FAST(arg=23, lineno=184)
         336	LOAD_ATTR(arg=25, lineno=184)
         338	LOAD_FAST(arg=10, lineno=184)
         340	LOAD_FAST(arg=21, lineno=184)
         342	STORE_SUBSCR(arg=None, lineno=184)
         344	LOAD_FAST(arg=23, lineno=185)
         346	LOAD_ATTR(arg=26, lineno=185)
         348	LOAD_FAST(arg=11, lineno=185)
         350	LOAD_FAST(arg=21, lineno=185)
         352	STORE_SUBSCR(arg=None, lineno=185)
         354	LOAD_FAST(arg=23, lineno=186)
         356	LOAD_ATTR(arg=27, lineno=186)
         358	LOAD_FAST(arg=12, lineno=186)
         360	LOAD_FAST(arg=21, lineno=186)
         362	STORE_SUBSCR(arg=None, lineno=186)
         364	LOAD_FAST(arg=23, lineno=188)
         366	LOAD_ATTR(arg=28, lineno=188)
         368	LOAD_GLOBAL(arg=29, lineno=188)
         370	LOAD_ATTR(arg=30, lineno=188)
         372	COMPARE_OP(arg=2, lineno=188)
         374	POP_JUMP_IF_FALSE(arg=402, lineno=188)
         378	LOAD_FAST(arg=23, lineno=189)
         380	LOAD_ATTR(arg=31, lineno=189)
         382	UNARY_NEGATIVE(arg=None, lineno=189)
         384	LOAD_FAST(arg=9, lineno=189)
         386	LOAD_FAST(arg=21, lineno=189)
         388	STORE_SUBSCR(arg=None, lineno=189)
         390	LOAD_FAST(arg=23, lineno=190)
         392	LOAD_ATTR(arg=32, lineno=190)
         394	LOAD_FAST(arg=8, lineno=190)
         396	LOAD_FAST(arg=21, lineno=190)
         398	STORE_SUBSCR(arg=None, lineno=190)
         400	JUMP_FORWARD(arg=34, lineno=190)
>        402	LOAD_FAST(arg=23, lineno=191)
         404	LOAD_ATTR(arg=28, lineno=191)
         406	LOAD_GLOBAL(arg=29, lineno=191)
         408	LOAD_ATTR(arg=33, lineno=191)
         410	COMPARE_OP(arg=2, lineno=191)
         412	POP_JUMP_IF_FALSE(arg=436, lineno=191)
         416	LOAD_FAST(arg=23, lineno=192)
         418	LOAD_ATTR(arg=31, lineno=192)
         420	LOAD_FAST(arg=9, lineno=192)
         422	LOAD_FAST(arg=21, lineno=192)
         424	STORE_SUBSCR(arg=None, lineno=192)
         426	LOAD_FAST(arg=23, lineno=193)
         428	LOAD_ATTR(arg=32, lineno=193)
         430	LOAD_FAST(arg=8, lineno=193)
         432	LOAD_FAST(arg=21, lineno=193)
         434	STORE_SUBSCR(arg=None, lineno=193)
>        436	LOAD_FAST(arg=24, lineno=195)
         438	LOAD_ATTR(arg=34, lineno=195)
         440	LOAD_CONST(arg=6, lineno=195)
         442	LOAD_FAST(arg=24, lineno=195)
         444	LOAD_ATTR(arg=35, lineno=195)
         446	BUILD_SLICE(arg=2, lineno=195)
         448	BINARY_SUBSCR(arg=None, lineno=195)
         450	STORE_FAST(arg=26, lineno=195)
         452	LOAD_FAST(arg=24, lineno=196)
         454	LOAD_ATTR(arg=36, lineno=196)
         456	LOAD_CONST(arg=6, lineno=196)
         458	LOAD_FAST(arg=24, lineno=196)
         460	LOAD_ATTR(arg=35, lineno=196)
         462	BUILD_SLICE(arg=2, lineno=196)
         464	BINARY_SUBSCR(arg=None, lineno=196)
         466	STORE_FAST(arg=27, lineno=196)
         468	LOAD_GLOBAL(arg=0, lineno=198)
         470	LOAD_METHOD(arg=37, lineno=198)
         472	LOAD_FAST(arg=26, lineno=199)
         474	LOAD_FAST(arg=4, lineno=199)
         476	LOAD_CONST(arg=4, lineno=199)
         478	BINARY_SUBSCR(arg=None, lineno=199)
         480	BINARY_SUBTRACT(arg=None, lineno=199)
         482	LOAD_FAST(arg=14, lineno=199)
         484	BINARY_TRUE_DIVIDE(arg=None, lineno=199)
         486	CALL_METHOD(arg=1, lineno=199)
         488	LOAD_METHOD(arg=38, lineno=199)
         490	LOAD_GLOBAL(arg=0, lineno=200)
         492	LOAD_ATTR(arg=4, lineno=200)
         494	CALL_METHOD(arg=1, lineno=200)
         496	STORE_FAST(arg=28, lineno=200)
         498	SETUP_LOOP(arg=82, lineno=204)
         500	LOAD_GLOBAL(arg=39, lineno=204)
         502	LOAD_FAST(arg=28, lineno=204)
         504	CALL_FUNCTION(arg=1, lineno=204)
         506	GET_ITER(arg=None, lineno=204)
>        508	FOR_ITER(arg=70, lineno=204)
         510	UNPACK_SEQUENCE(arg=2, lineno=204)
         512	STORE_FAST(arg=29, lineno=204)
         514	STORE_FAST(arg=30, lineno=204)
         516	LOAD_FAST(arg=26, lineno=205)
         518	LOAD_FAST(arg=29, lineno=205)
         520	BINARY_SUBSCR(arg=None, lineno=205)
         522	LOAD_FAST(arg=4, lineno=205)
         524	LOAD_CONST(arg=4, lineno=205)
         526	BINARY_SUBSCR(arg=None, lineno=205)
         528	COMPARE_OP(arg=0, lineno=205)
         530	POP_JUMP_IF_TRUE(arg=508, lineno=205)
         534	LOAD_FAST(arg=26, lineno=206)
         536	LOAD_FAST(arg=29, lineno=206)
         538	BINARY_SUBSCR(arg=None, lineno=206)
         540	LOAD_FAST(arg=4, lineno=206)
         542	LOAD_CONST(arg=2, lineno=206)
         544	BINARY_SUBSCR(arg=None, lineno=206)
         546	COMPARE_OP(arg=4, lineno=206)
         548	POP_JUMP_IF_FALSE(arg=556, lineno=206)
         552	JUMP_ABSOLUTE(arg=508, lineno=208)
>        556	LOAD_FAST(arg=13, lineno=209)
         558	LOAD_FAST(arg=30, lineno=209)
         560	DUP_TOP_TWO(arg=None, lineno=209)
         562	BINARY_SUBSCR(arg=None, lineno=209)
         564	LOAD_FAST(arg=27, lineno=209)
         566	LOAD_FAST(arg=29, lineno=209)
         568	BINARY_SUBSCR(arg=None, lineno=209)
         570	INPLACE_ADD(arg=None, lineno=209)
         572	ROT_THREE(arg=None, lineno=209)
         574	STORE_SUBSCR(arg=None, lineno=209)
         576	JUMP_ABSOLUTE(arg=508, lineno=209)
>        580	POP_BLOCK(arg=None, lineno=209)
>        582	LOAD_GLOBAL(arg=9, lineno=211)
         584	LOAD_ATTR(arg=40, lineno=211)
         586	POP_JUMP_IF_FALSE(arg=178, lineno=211)
         588	LOAD_FAST(arg=15, lineno=212)
         590	LOAD_METHOD(arg=41, lineno=212)
         592	LOAD_FAST(arg=26, lineno=212)
         594	CALL_METHOD(arg=1, lineno=212)
         596	POP_TOP(arg=None, lineno=212)
         598	LOAD_FAST(arg=16, lineno=213)
         600	LOAD_METHOD(arg=41, lineno=213)
         602	LOAD_FAST(arg=27, lineno=213)
         604	CALL_METHOD(arg=1, lineno=213)
         606	POP_TOP(arg=None, lineno=213)
         608	LOAD_FAST(arg=17, lineno=214)
         610	LOAD_METHOD(arg=41, lineno=214)
         612	LOAD_FAST(arg=24, lineno=215)
         614	LOAD_ATTR(arg=25, lineno=215)
         616	LOAD_CONST(arg=6, lineno=215)
         618	LOAD_FAST(arg=24, lineno=216)
         620	LOAD_ATTR(arg=35, lineno=216)
         622	BUILD_SLICE(arg=2, lineno=216)
         624	BINARY_SUBSCR(arg=None, lineno=216)
         626	CALL_METHOD(arg=1, lineno=216)
         628	POP_TOP(arg=None, lineno=216)
         630	LOAD_FAST(arg=18, lineno=219)
         632	LOAD_METHOD(arg=41, lineno=219)
         634	LOAD_FAST(arg=24, lineno=220)
         636	LOAD_ATTR(arg=32, lineno=220)
         638	LOAD_CONST(arg=6, lineno=220)
         640	LOAD_FAST(arg=24, lineno=221)
         642	LOAD_ATTR(arg=35, lineno=221)
         644	BUILD_SLICE(arg=2, lineno=221)
         646	BINARY_SUBSCR(arg=None, lineno=221)
         648	CALL_METHOD(arg=1, lineno=221)
         650	POP_TOP(arg=None, lineno=221)
         652	LOAD_FAST(arg=19, lineno=224)
         654	LOAD_METHOD(arg=41, lineno=224)
         656	LOAD_FAST(arg=24, lineno=225)
         658	LOAD_ATTR(arg=42, lineno=225)
         660	LOAD_CONST(arg=6, lineno=225)
         662	LOAD_FAST(arg=24, lineno=226)
         664	LOAD_ATTR(arg=35, lineno=226)
         666	BUILD_SLICE(arg=2, lineno=226)
         668	BINARY_SUBSCR(arg=None, lineno=226)
         670	CALL_METHOD(arg=1, lineno=226)
         672	POP_TOP(arg=None, lineno=226)
         674	LOAD_FAST(arg=20, lineno=229)
         676	LOAD_METHOD(arg=41, lineno=229)
         678	LOAD_FAST(arg=24, lineno=230)
         680	LOAD_ATTR(arg=43, lineno=230)
         682	LOAD_CONST(arg=6, lineno=230)
         684	LOAD_FAST(arg=24, lineno=231)
         686	LOAD_ATTR(arg=35, lineno=231)
         688	BUILD_SLICE(arg=2, lineno=231)
         690	BINARY_SUBSCR(arg=None, lineno=231)
         692	CALL_METHOD(arg=1, lineno=231)
         694	POP_TOP(arg=None, lineno=231)
         696	JUMP_ABSOLUTE(arg=178, lineno=231)
>        698	POP_BLOCK(arg=None, lineno=231)
>        700	LOAD_FAST(arg=9, lineno=235)
         702	LOAD_CONST(arg=6, lineno=235)
         704	LOAD_CONST(arg=6, lineno=235)
         706	BUILD_SLICE(arg=2, lineno=235)
         708	BINARY_SUBSCR(arg=None, lineno=235)
         710	LOAD_FAST(arg=0, lineno=235)
         712	LOAD_ATTR(arg=44, lineno=235)
         714	LOAD_CONST(arg=6, lineno=235)
         716	LOAD_CONST(arg=6, lineno=235)
         718	BUILD_SLICE(arg=2, lineno=235)
         720	STORE_SUBSCR(arg=None, lineno=235)
         722	LOAD_FAST(arg=7, lineno=236)
         724	LOAD_CONST(arg=6, lineno=236)
         726	LOAD_CONST(arg=6, lineno=236)
         728	BUILD_SLICE(arg=2, lineno=236)
         730	BINARY_SUBSCR(arg=None, lineno=236)
         732	LOAD_FAST(arg=0, lineno=236)
         734	LOAD_ATTR(arg=2, lineno=236)
         736	LOAD_CONST(arg=6, lineno=236)
         738	LOAD_CONST(arg=6, lineno=236)
         740	BUILD_SLICE(arg=2, lineno=236)
         742	STORE_SUBSCR(arg=None, lineno=236)
         744	LOAD_FAST(arg=13, lineno=239)
         746	LOAD_FAST(arg=8, lineno=240)
         748	LOAD_FAST(arg=10, lineno=241)
         750	LOAD_FAST(arg=11, lineno=242)
         752	LOAD_FAST(arg=12, lineno=243)
         754	LOAD_FAST(arg=15, lineno=244)
         756	LOAD_FAST(arg=16, lineno=245)
         758	LOAD_FAST(arg=17, lineno=246)
         760	LOAD_FAST(arg=18, lineno=247)
         762	LOAD_FAST(arg=19, lineno=248)
         764	LOAD_FAST(arg=20, lineno=249)
         766	BUILD_TUPLE(arg=11, lineno=249)
         768	RETURN_VALUE(arg=None, lineno=249)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=128)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=128)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=128)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=128)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=128)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$packet_collection6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=128)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_FAST(arg=7, lineno=128)
DEBUG:numba.core.byteflow:stack ['$10call_method.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_GLOBAL(arg=0, lineno=130)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=130)
DEBUG:numba.core.byteflow:stack ['$14load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=130)
DEBUG:numba.core.byteflow:stack ['$16load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_ATTR(arg=2, lineno=130)
DEBUG:numba.core.byteflow:stack ['$16load_attr.6', '$packet_collection18.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_GLOBAL(arg=0, lineno=130)
DEBUG:numba.core.byteflow:stack ['$16load_attr.6', '$20load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_ATTR(arg=4, lineno=130)
DEBUG:numba.core.byteflow:stack ['$16load_attr.6', '$20load_attr.8', '$22load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=130)
DEBUG:numba.core.byteflow:stack ['$16load_attr.6', '$20load_attr.8', '$24load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION_KW(arg=2, lineno=130)
DEBUG:numba.core.byteflow:stack ['$16load_attr.6', '$20load_attr.8', '$24load_attr.10', '$const26.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=130)
DEBUG:numba.core.byteflow:stack ['$28call_function_kw.12']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BINARY_MULTIPLY(arg=None, lineno=130)
DEBUG:numba.core.byteflow:stack ['$28call_function_kw.12', '$const30.13']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=8, lineno=130)
DEBUG:numba.core.byteflow:stack ['$32binary_multiply.14']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_GLOBAL(arg=0, lineno=132)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_METHOD(arg=1, lineno=132)
DEBUG:numba.core.byteflow:stack ['$36load_global.15']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=132)
DEBUG:numba.core.byteflow:stack ['$38load_method.16']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_ATTR(arg=2, lineno=132)
DEBUG:numba.core.byteflow:stack ['$38load_method.16', '$packet_collection40.17']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=CALL_METHOD(arg=1, lineno=132)
DEBUG:numba.core.byteflow:stack ['$38load_method.16', '$42load_attr.18']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=9, lineno=132)
DEBUG:numba.core.byteflow:stack ['$44call_method.19']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_GLOBAL(arg=0, lineno=134)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_METHOD(arg=1, lineno=134)
DEBUG:numba.core.byteflow:stack ['$48load_global.20']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=134)
DEBUG:numba.core.byteflow:stack ['$50load_method.21']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_ATTR(arg=2, lineno=134)
DEBUG:numba.core.byteflow:stack ['$50load_method.21', '$packet_collection52.22']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=134)
DEBUG:numba.core.byteflow:stack ['$50load_method.21', '$54load_attr.23']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=STORE_FAST(arg=10, lineno=134)
DEBUG:numba.core.byteflow:stack ['$56call_method.24']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_GLOBAL(arg=0, lineno=136)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=3, lineno=136)
DEBUG:numba.core.byteflow:stack ['$60load_global.25']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=136)
DEBUG:numba.core.byteflow:stack ['$62load_attr.26']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=2, lineno=136)
DEBUG:numba.core.byteflow:stack ['$62load_attr.26', '$packet_collection64.27']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_GLOBAL(arg=0, lineno=136)
DEBUG:numba.core.byteflow:stack ['$62load_attr.26', '$66load_attr.28']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_ATTR(arg=4, lineno=136)
DEBUG:numba.core.byteflow:stack ['$62load_attr.26', '$66load_attr.28', '$68load_global.29']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_CONST(arg=1, lineno=136)
DEBUG:numba.core.byteflow:stack ['$62load_attr.26', '$66load_attr.28', '$70load_attr.30']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL_FUNCTION_KW(arg=2, lineno=136)
DEBUG:numba.core.byteflow:stack ['$62load_attr.26', '$66load_attr.28', '$70load_attr.30', '$const72.31']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_CONST(arg=2, lineno=136)
DEBUG:numba.core.byteflow:stack ['$74call_function_kw.32']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=BINARY_MULTIPLY(arg=None, lineno=136)
DEBUG:numba.core.byteflow:stack ['$74call_function_kw.32', '$const76.33']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=STORE_FAST(arg=11, lineno=136)
DEBUG:numba.core.byteflow:stack ['$78binary_multiply.34']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=139)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_ATTR(arg=3, lineno=139)
DEBUG:numba.core.byteflow:stack ['$82load_global.35']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=139)
DEBUG:numba.core.byteflow:stack ['$84load_attr.36']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_ATTR(arg=2, lineno=139)
DEBUG:numba.core.byteflow:stack ['$84load_attr.36', '$packet_collection86.37']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=139)
DEBUG:numba.core.byteflow:stack ['$84load_attr.36', '$88load_attr.38']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_ATTR(arg=4, lineno=139)
DEBUG:numba.core.byteflow:stack ['$84load_attr.36', '$88load_attr.38', '$90load_global.39']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=1, lineno=139)
DEBUG:numba.core.byteflow:stack ['$84load_attr.36', '$88load_attr.38', '$92load_attr.40']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=CALL_FUNCTION_KW(arg=2, lineno=139)
DEBUG:numba.core.byteflow:stack ['$84load_attr.36', '$88load_attr.38', '$92load_attr.40', '$const94.41']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=2, lineno=139)
DEBUG:numba.core.byteflow:stack ['$96call_function_kw.42']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=BINARY_MULTIPLY(arg=None, lineno=139)
DEBUG:numba.core.byteflow:stack ['$96call_function_kw.42', '$const98.43']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=STORE_FAST(arg=12, lineno=139)
DEBUG:numba.core.byteflow:stack ['$100binary_multiply.44']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=0, lineno=142)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_METHOD(arg=5, lineno=142)
DEBUG:numba.core.byteflow:stack ['$104load_global.45']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=4, lineno=142)
DEBUG:numba.core.byteflow:stack ['$106load_method.46']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=CALL_METHOD(arg=1, lineno=142)
DEBUG:numba.core.byteflow:stack ['$106load_method.46', '$spectrum_frequency108.47']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=STORE_FAST(arg=13, lineno=142)
DEBUG:numba.core.byteflow:stack ['$110call_method.48']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=143)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_CONST(arg=3, lineno=143)
DEBUG:numba.core.byteflow:stack ['$spectrum_frequency114.49']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=BINARY_SUBSCR(arg=None, lineno=143)
DEBUG:numba.core.byteflow:stack ['$spectrum_frequency114.49', '$const116.50']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=4, lineno=143)
DEBUG:numba.core.byteflow:stack ['$118binary_subscr.51']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_CONST(arg=4, lineno=143)
DEBUG:numba.core.byteflow:stack ['$118binary_subscr.51', '$spectrum_frequency120.52']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=BINARY_SUBSCR(arg=None, lineno=143)
DEBUG:numba.core.byteflow:stack ['$118binary_subscr.51', '$spectrum_frequency120.52', '$const122.53']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=BINARY_SUBTRACT(arg=None, lineno=143)
DEBUG:numba.core.byteflow:stack ['$118binary_subscr.51', '$124binary_subscr.54']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=STORE_FAST(arg=14, lineno=143)
DEBUG:numba.core.byteflow:stack ['$126binary_subtract.55']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=BUILD_LIST(arg=0, lineno=145)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=132, inst=STORE_FAST(arg=15, lineno=145)
DEBUG:numba.core.byteflow:stack ['$130build_list.56']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=BUILD_LIST(arg=0, lineno=146)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=136, inst=STORE_FAST(arg=16, lineno=146)
DEBUG:numba.core.byteflow:stack ['$134build_list.57']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=BUILD_LIST(arg=0, lineno=147)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=140, inst=STORE_FAST(arg=17, lineno=147)
DEBUG:numba.core.byteflow:stack ['$138build_list.58']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=BUILD_LIST(arg=0, lineno=148)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=144, inst=STORE_FAST(arg=18, lineno=148)
DEBUG:numba.core.byteflow:stack ['$142build_list.59']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=BUILD_LIST(arg=0, lineno=149)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=148, inst=STORE_FAST(arg=19, lineno=149)
DEBUG:numba.core.byteflow:stack ['$146build_list.60']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=BUILD_LIST(arg=0, lineno=150)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=152, inst=STORE_FAST(arg=20, lineno=150)
DEBUG:numba.core.byteflow:stack ['$150build_list.61']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_GLOBAL(arg=6, lineno=152)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_CONST(arg=5, lineno=152)
DEBUG:numba.core.byteflow:stack ['$154load_global.62']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=CALL_FUNCTION(arg=1, lineno=152)
DEBUG:numba.core.byteflow:stack ['$154load_global.62', '$const156.63']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=POP_TOP(arg=None, lineno=152)
DEBUG:numba.core.byteflow:stack ['$158call_function.64']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=162, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=162 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=162, inst=SETUP_LOOP(arg=534, lineno=153)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_GLOBAL(arg=7, lineno=153)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_GLOBAL(arg=8, lineno=153)
DEBUG:numba.core.byteflow:stack ['$166load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=7, lineno=153)
DEBUG:numba.core.byteflow:stack ['$166load_global.0', '$168load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=CALL_FUNCTION(arg=1, lineno=153)
DEBUG:numba.core.byteflow:stack ['$166load_global.0', '$168load_global.1', '$output_nus170.2']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=CALL_FUNCTION(arg=1, lineno=153)
DEBUG:numba.core.byteflow:stack ['$166load_global.0', '$172call_function.3']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=GET_ITER(arg=None, lineno=153)
DEBUG:numba.core.byteflow:stack ['$174call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=178, stack=('$176get_iter.5',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=178 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi178.0']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=FOR_ITER(arg=516, lineno=153)
DEBUG:numba.core.byteflow:stack ['$phi178.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=698, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=182, stack=('$phi178.0', '$178for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=698 nstack_initial=0), State(pc_initial=182 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=698, inst=POP_BLOCK(arg=None, lineno=231)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=700, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=182 nstack_initial=2), State(pc_initial=700 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi182.0', '$phi182.1']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=STORE_FAST(arg=21, lineno=153)
DEBUG:numba.core.byteflow:stack ['$phi182.0', '$phi182.1']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=LOAD_GLOBAL(arg=9, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi182.0']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=LOAD_ATTR(arg=10, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi182.0', '$184load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_CONST(arg=2, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi182.0', '$186load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=COMPARE_OP(arg=3, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi182.0', '$186load_attr.3', '$const188.4']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=POP_JUMP_IF_FALSE(arg=218, lineno=154)
DEBUG:numba.core.byteflow:stack ['$phi182.0', '$190compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=194, stack=('$phi182.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=218, stack=('$phi182.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=700 nstack_initial=0), State(pc_initial=194 nstack_initial=1), State(pc_initial=218 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=700, inst=LOAD_FAST(arg=9, lineno=235)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=702, inst=LOAD_CONST(arg=6, lineno=235)
DEBUG:numba.core.byteflow:stack ['$output_energies700.0']
DEBUG:numba.core.byteflow:dispatch pc=704, inst=LOAD_CONST(arg=6, lineno=235)
DEBUG:numba.core.byteflow:stack ['$output_energies700.0', '$const702.1']
DEBUG:numba.core.byteflow:dispatch pc=706, inst=BUILD_SLICE(arg=2, lineno=235)
DEBUG:numba.core.byteflow:stack ['$output_energies700.0', '$const702.1', '$const704.2']
DEBUG:numba.core.byteflow:dispatch pc=708, inst=BINARY_SUBSCR(arg=None, lineno=235)
DEBUG:numba.core.byteflow:stack ['$output_energies700.0', '$706build_slice.4']
DEBUG:numba.core.byteflow:dispatch pc=710, inst=LOAD_FAST(arg=0, lineno=235)
DEBUG:numba.core.byteflow:stack ['$708binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=712, inst=LOAD_ATTR(arg=44, lineno=235)
DEBUG:numba.core.byteflow:stack ['$708binary_subscr.5', '$packet_collection710.6']
DEBUG:numba.core.byteflow:dispatch pc=714, inst=LOAD_CONST(arg=6, lineno=235)
DEBUG:numba.core.byteflow:stack ['$708binary_subscr.5', '$712load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=716, inst=LOAD_CONST(arg=6, lineno=235)
DEBUG:numba.core.byteflow:stack ['$708binary_subscr.5', '$712load_attr.7', '$const714.8']
DEBUG:numba.core.byteflow:dispatch pc=718, inst=BUILD_SLICE(arg=2, lineno=235)
DEBUG:numba.core.byteflow:stack ['$708binary_subscr.5', '$712load_attr.7', '$const714.8', '$const716.9']
DEBUG:numba.core.byteflow:dispatch pc=720, inst=STORE_SUBSCR(arg=None, lineno=235)
DEBUG:numba.core.byteflow:stack ['$708binary_subscr.5', '$712load_attr.7', '$718build_slice.11']
DEBUG:numba.core.byteflow:dispatch pc=722, inst=LOAD_FAST(arg=7, lineno=236)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=724, inst=LOAD_CONST(arg=6, lineno=236)
DEBUG:numba.core.byteflow:stack ['$output_nus722.12']
DEBUG:numba.core.byteflow:dispatch pc=726, inst=LOAD_CONST(arg=6, lineno=236)
DEBUG:numba.core.byteflow:stack ['$output_nus722.12', '$const724.13']
DEBUG:numba.core.byteflow:dispatch pc=728, inst=BUILD_SLICE(arg=2, lineno=236)
DEBUG:numba.core.byteflow:stack ['$output_nus722.12', '$const724.13', '$const726.14']
DEBUG:numba.core.byteflow:dispatch pc=730, inst=BINARY_SUBSCR(arg=None, lineno=236)
DEBUG:numba.core.byteflow:stack ['$output_nus722.12', '$728build_slice.16']
DEBUG:numba.core.byteflow:dispatch pc=732, inst=LOAD_FAST(arg=0, lineno=236)
DEBUG:numba.core.byteflow:stack ['$730binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=734, inst=LOAD_ATTR(arg=2, lineno=236)
DEBUG:numba.core.byteflow:stack ['$730binary_subscr.17', '$packet_collection732.18']
DEBUG:numba.core.byteflow:dispatch pc=736, inst=LOAD_CONST(arg=6, lineno=236)
DEBUG:numba.core.byteflow:stack ['$730binary_subscr.17', '$734load_attr.19']
DEBUG:numba.core.byteflow:dispatch pc=738, inst=LOAD_CONST(arg=6, lineno=236)
DEBUG:numba.core.byteflow:stack ['$730binary_subscr.17', '$734load_attr.19', '$const736.20']
DEBUG:numba.core.byteflow:dispatch pc=740, inst=BUILD_SLICE(arg=2, lineno=236)
DEBUG:numba.core.byteflow:stack ['$730binary_subscr.17', '$734load_attr.19', '$const736.20', '$const738.21']
DEBUG:numba.core.byteflow:dispatch pc=742, inst=STORE_SUBSCR(arg=None, lineno=236)
DEBUG:numba.core.byteflow:stack ['$730binary_subscr.17', '$734load_attr.19', '$740build_slice.23']
DEBUG:numba.core.byteflow:dispatch pc=744, inst=LOAD_FAST(arg=13, lineno=239)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=746, inst=LOAD_FAST(arg=8, lineno=240)
DEBUG:numba.core.byteflow:stack ['$v_packets_energy_hist744.24']
DEBUG:numba.core.byteflow:dispatch pc=748, inst=LOAD_FAST(arg=10, lineno=241)
DEBUG:numba.core.byteflow:stack ['$v_packets_energy_hist744.24', '$last_interaction_types746.25']
DEBUG:numba.core.byteflow:dispatch pc=750, inst=LOAD_FAST(arg=11, lineno=242)
DEBUG:numba.core.byteflow:stack ['$v_packets_energy_hist744.24', '$last_interaction_types746.25', '$last_interaction_in_nus748.26']
DEBUG:numba.core.byteflow:dispatch pc=752, inst=LOAD_FAST(arg=12, lineno=243)
DEBUG:numba.core.byteflow:stack ['$v_packets_energy_hist744.24', '$last_interaction_types746.25', '$last_interaction_in_nus748.26', '$last_line_interaction_in_ids750.27']
DEBUG:numba.core.byteflow:dispatch pc=754, inst=LOAD_FAST(arg=15, lineno=244)
DEBUG:numba.core.byteflow:stack ['$v_packets_energy_hist744.24', '$last_interaction_types746.25', '$last_interaction_in_nus748.26', '$last_line_interaction_in_ids750.27', '$last_line_interaction_out_ids752.28']
DEBUG:numba.core.byteflow:dispatch pc=756, inst=LOAD_FAST(arg=16, lineno=245)
DEBUG:numba.core.byteflow:stack ['$v_packets_energy_hist744.24', '$last_interaction_types746.25', '$last_interaction_in_nus748.26', '$last_line_interaction_in_ids750.27', '$last_line_interaction_out_ids752.28', '$virt_packet_nus754.29']
DEBUG:numba.core.byteflow:dispatch pc=758, inst=LOAD_FAST(arg=17, lineno=246)
DEBUG:numba.core.byteflow:stack ['$v_packets_energy_hist744.24', '$last_interaction_types746.25', '$last_interaction_in_nus748.26', '$last_line_interaction_in_ids750.27', '$last_line_interaction_out_ids752.28', '$virt_packet_nus754.29', '$virt_packet_energies756.30']
DEBUG:numba.core.byteflow:dispatch pc=760, inst=LOAD_FAST(arg=18, lineno=247)
DEBUG:numba.core.byteflow:stack ['$v_packets_energy_hist744.24', '$last_interaction_types746.25', '$last_interaction_in_nus748.26', '$last_line_interaction_in_ids750.27', '$last_line_interaction_out_ids752.28', '$virt_packet_nus754.29', '$virt_packet_energies756.30', '$virt_packet_last_interaction_in_nu758.31']
DEBUG:numba.core.byteflow:dispatch pc=762, inst=LOAD_FAST(arg=19, lineno=248)
DEBUG:numba.core.byteflow:stack ['$v_packets_energy_hist744.24', '$last_interaction_types746.25', '$last_interaction_in_nus748.26', '$last_line_interaction_in_ids750.27', '$last_line_interaction_out_ids752.28', '$virt_packet_nus754.29', '$virt_packet_energies756.30', '$virt_packet_last_interaction_in_nu758.31', '$virt_packet_last_interaction_type760.32']
DEBUG:numba.core.byteflow:dispatch pc=764, inst=LOAD_FAST(arg=20, lineno=249)
DEBUG:numba.core.byteflow:stack ['$v_packets_energy_hist744.24', '$last_interaction_types746.25', '$last_interaction_in_nus748.26', '$last_line_interaction_in_ids750.27', '$last_line_interaction_out_ids752.28', '$virt_packet_nus754.29', '$virt_packet_energies756.30', '$virt_packet_last_interaction_in_nu758.31', '$virt_packet_last_interaction_type760.32', '$virt_packet_last_line_interaction_in_id762.33']
DEBUG:numba.core.byteflow:dispatch pc=766, inst=BUILD_TUPLE(arg=11, lineno=249)
DEBUG:numba.core.byteflow:stack ['$v_packets_energy_hist744.24', '$last_interaction_types746.25', '$last_interaction_in_nus748.26', '$last_line_interaction_in_ids750.27', '$last_line_interaction_out_ids752.28', '$virt_packet_nus754.29', '$virt_packet_energies756.30', '$virt_packet_last_interaction_in_nu758.31', '$virt_packet_last_interaction_type760.32', '$virt_packet_last_line_interaction_in_id762.33', '$virt_packet_last_line_interaction_out_id764.34']
DEBUG:numba.core.byteflow:dispatch pc=768, inst=RETURN_VALUE(arg=None, lineno=249)
DEBUG:numba.core.byteflow:stack ['$766build_tuple.35']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=194 nstack_initial=1), State(pc_initial=218 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi194.0']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_FAST(arg=6, lineno=155)
DEBUG:numba.core.byteflow:stack ['$phi194.0']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_GLOBAL(arg=9, lineno=155)
DEBUG:numba.core.byteflow:stack ['$phi194.0', '$packet_seeds194.1']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_ATTR(arg=10, lineno=155)
DEBUG:numba.core.byteflow:stack ['$phi194.0', '$packet_seeds194.1', '$196load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=BINARY_SUBSCR(arg=None, lineno=155)
DEBUG:numba.core.byteflow:stack ['$phi194.0', '$packet_seeds194.1', '$198load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=STORE_FAST(arg=22, lineno=155)
DEBUG:numba.core.byteflow:stack ['$phi194.0', '$200binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=LOAD_GLOBAL(arg=0, lineno=156)
DEBUG:numba.core.byteflow:stack ['$phi194.0']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_ATTR(arg=11, lineno=156)
DEBUG:numba.core.byteflow:stack ['$phi194.0', '$204load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_METHOD(arg=12, lineno=156)
DEBUG:numba.core.byteflow:stack ['$phi194.0', '$206load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_FAST(arg=22, lineno=156)
DEBUG:numba.core.byteflow:stack ['$phi194.0', '$208load_method.7']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=CALL_METHOD(arg=1, lineno=156)
DEBUG:numba.core.byteflow:stack ['$phi194.0', '$208load_method.7', '$seed210.8']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=POP_TOP(arg=None, lineno=156)
DEBUG:numba.core.byteflow:stack ['$phi194.0', '$212call_method.9']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=JUMP_FORWARD(arg=20, lineno=156)
DEBUG:numba.core.byteflow:stack ['$phi194.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=238, stack=('$phi194.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=218 nstack_initial=1), State(pc_initial=238 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi218.0']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=LOAD_FAST(arg=6, lineno=158)
DEBUG:numba.core.byteflow:stack ['$phi218.0']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=21, lineno=158)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$packet_seeds218.1']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=158)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$packet_seeds218.1', '$i220.2']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=STORE_FAST(arg=22, lineno=158)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$222binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_GLOBAL(arg=0, lineno=159)
DEBUG:numba.core.byteflow:stack ['$phi218.0']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=LOAD_ATTR(arg=11, lineno=159)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$226load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_METHOD(arg=12, lineno=159)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$228load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_FAST(arg=22, lineno=159)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$230load_method.6']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=CALL_METHOD(arg=1, lineno=159)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$230load_method.6', '$seed232.7']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=POP_TOP(arg=None, lineno=159)
DEBUG:numba.core.byteflow:stack ['$phi218.0', '$234call_method.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=238, stack=('$phi218.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=238 nstack_initial=1), State(pc_initial=238 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi238.0']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=LOAD_GLOBAL(arg=13, lineno=160)
DEBUG:numba.core.byteflow:stack ['$phi238.0']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=1, lineno=161)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_ATTR(arg=14, lineno=161)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$numba_model240.2']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_CONST(arg=4, lineno=161)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$242load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=BINARY_SUBSCR(arg=None, lineno=161)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$242load_attr.3', '$const244.4']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=0, lineno=162)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=LOAD_ATTR(arg=15, lineno=162)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$packet_collection248.6']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=LOAD_FAST(arg=21, lineno=162)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$250load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=BINARY_SUBSCR(arg=None, lineno=162)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$250load_attr.7', '$i252.8']
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_FAST(arg=0, lineno=163)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=LOAD_ATTR(arg=16, lineno=163)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9', '$packet_collection256.10']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=21, lineno=163)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9', '$258load_attr.11']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=BINARY_SUBSCR(arg=None, lineno=163)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9', '$258load_attr.11', '$i260.12']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=LOAD_FAST(arg=0, lineno=164)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9', '$262binary_subscr.13']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=LOAD_ATTR(arg=17, lineno=164)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9', '$262binary_subscr.13', '$packet_collection264.14']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=LOAD_FAST(arg=21, lineno=164)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9', '$262binary_subscr.13', '$266load_attr.15']
DEBUG:numba.core.byteflow:dispatch pc=270, inst=BINARY_SUBSCR(arg=None, lineno=164)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9', '$262binary_subscr.13', '$266load_attr.15', '$i268.16']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_FAST(arg=22, lineno=165)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9', '$262binary_subscr.13', '$270binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_FAST(arg=21, lineno=166)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9', '$262binary_subscr.13', '$270binary_subscr.17', '$seed272.18']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=LOAD_CONST(arg=4, lineno=167)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9', '$262binary_subscr.13', '$270binary_subscr.17', '$seed272.18', '$i274.19']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=CALL_FUNCTION(arg=7, lineno=167)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9', '$262binary_subscr.13', '$270binary_subscr.17', '$seed272.18', '$i274.19', '$const276.20']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=STORE_FAST(arg=23, lineno=167)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$278call_function.21']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=LOAD_GLOBAL(arg=18, lineno=169)
DEBUG:numba.core.byteflow:stack ['$phi238.0']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=LOAD_FAST(arg=23, lineno=170)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$282load_global.22']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=LOAD_ATTR(arg=19, lineno=170)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$282load_global.22', '$r_packet284.23']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=LOAD_FAST(arg=4, lineno=171)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$282load_global.22', '$286load_attr.24']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=LOAD_GLOBAL(arg=9, lineno=172)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$282load_global.22', '$286load_attr.24', '$spectrum_frequency288.25']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=LOAD_ATTR(arg=20, lineno=172)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$282load_global.22', '$286load_attr.24', '$spectrum_frequency288.25', '$290load_global.26']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_GLOBAL(arg=9, lineno=173)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$282load_global.22', '$286load_attr.24', '$spectrum_frequency288.25', '$292load_attr.27']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=LOAD_ATTR(arg=21, lineno=173)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$282load_global.22', '$286load_attr.24', '$spectrum_frequency288.25', '$292load_attr.27', '$294load_global.28']
DEBUG:numba.core.byteflow:dispatch pc=298, inst=LOAD_FAST(arg=5, lineno=174)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$282load_global.22', '$286load_attr.24', '$spectrum_frequency288.25', '$292load_attr.27', '$296load_attr.29']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=LOAD_GLOBAL(arg=9, lineno=175)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$282load_global.22', '$286load_attr.24', '$spectrum_frequency288.25', '$292load_attr.27', '$296load_attr.29', '$number_of_vpackets298.30']
DEBUG:numba.core.byteflow:dispatch pc=302, inst=LOAD_ATTR(arg=22, lineno=175)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$282load_global.22', '$286load_attr.24', '$spectrum_frequency288.25', '$292load_attr.27', '$296load_attr.29', '$number_of_vpackets298.30', '$300load_global.31']
DEBUG:numba.core.byteflow:dispatch pc=304, inst=CALL_FUNCTION(arg=6, lineno=175)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$282load_global.22', '$286load_attr.24', '$spectrum_frequency288.25', '$292load_attr.27', '$296load_attr.29', '$number_of_vpackets298.30', '$302load_attr.32']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=STORE_FAST(arg=24, lineno=175)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$304call_function.33']
DEBUG:numba.core.byteflow:dispatch pc=308, inst=LOAD_GLOBAL(arg=23, lineno=177)
DEBUG:numba.core.byteflow:stack ['$phi238.0']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=23, lineno=178)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$308load_global.34']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_FAST(arg=1, lineno=178)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$308load_global.34', '$r_packet310.35']
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_FAST(arg=2, lineno=178)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$308load_global.34', '$r_packet310.35', '$numba_model312.36']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=3, lineno=178)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$308load_global.34', '$r_packet310.35', '$numba_model312.36', '$numba_plasma314.37']
DEBUG:numba.core.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=24, lineno=178)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$308load_global.34', '$r_packet310.35', '$numba_model312.36', '$numba_plasma314.37', '$estimators316.38']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=CALL_FUNCTION(arg=5, lineno=178)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$308load_global.34', '$r_packet310.35', '$numba_model312.36', '$numba_plasma314.37', '$estimators316.38', '$vpacket_collection318.39']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=STORE_FAST(arg=25, lineno=178)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$320call_function.40']
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_FAST(arg=23, lineno=183)
DEBUG:numba.core.byteflow:stack ['$phi238.0']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=LOAD_ATTR(arg=24, lineno=183)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$r_packet324.41']
DEBUG:numba.core.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=7, lineno=183)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$326load_attr.42']
DEBUG:numba.core.byteflow:dispatch pc=330, inst=LOAD_FAST(arg=21, lineno=183)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$326load_attr.42', '$output_nus328.43']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=STORE_SUBSCR(arg=None, lineno=183)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$326load_attr.42', '$output_nus328.43', '$i330.44']
DEBUG:numba.core.byteflow:dispatch pc=334, inst=LOAD_FAST(arg=23, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi238.0']
DEBUG:numba.core.byteflow:dispatch pc=336, inst=LOAD_ATTR(arg=25, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$r_packet334.45']
DEBUG:numba.core.byteflow:dispatch pc=338, inst=LOAD_FAST(arg=10, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$336load_attr.46']
DEBUG:numba.core.byteflow:dispatch pc=340, inst=LOAD_FAST(arg=21, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$336load_attr.46', '$last_interaction_in_nus338.47']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=STORE_SUBSCR(arg=None, lineno=184)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$336load_attr.46', '$last_interaction_in_nus338.47', '$i340.48']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=LOAD_FAST(arg=23, lineno=185)
DEBUG:numba.core.byteflow:stack ['$phi238.0']
DEBUG:numba.core.byteflow:dispatch pc=346, inst=LOAD_ATTR(arg=26, lineno=185)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$r_packet344.49']
DEBUG:numba.core.byteflow:dispatch pc=348, inst=LOAD_FAST(arg=11, lineno=185)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$346load_attr.50']
DEBUG:numba.core.byteflow:dispatch pc=350, inst=LOAD_FAST(arg=21, lineno=185)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$346load_attr.50', '$last_line_interaction_in_ids348.51']
DEBUG:numba.core.byteflow:dispatch pc=352, inst=STORE_SUBSCR(arg=None, lineno=185)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$346load_attr.50', '$last_line_interaction_in_ids348.51', '$i350.52']
DEBUG:numba.core.byteflow:dispatch pc=354, inst=LOAD_FAST(arg=23, lineno=186)
DEBUG:numba.core.byteflow:stack ['$phi238.0']
DEBUG:numba.core.byteflow:dispatch pc=356, inst=LOAD_ATTR(arg=27, lineno=186)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$r_packet354.53']
DEBUG:numba.core.byteflow:dispatch pc=358, inst=LOAD_FAST(arg=12, lineno=186)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$356load_attr.54']
DEBUG:numba.core.byteflow:dispatch pc=360, inst=LOAD_FAST(arg=21, lineno=186)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$356load_attr.54', '$last_line_interaction_out_ids358.55']
DEBUG:numba.core.byteflow:dispatch pc=362, inst=STORE_SUBSCR(arg=None, lineno=186)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$356load_attr.54', '$last_line_interaction_out_ids358.55', '$i360.56']
DEBUG:numba.core.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=23, lineno=188)
DEBUG:numba.core.byteflow:stack ['$phi238.0']
DEBUG:numba.core.byteflow:dispatch pc=366, inst=LOAD_ATTR(arg=28, lineno=188)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$r_packet364.57']
DEBUG:numba.core.byteflow:dispatch pc=368, inst=LOAD_GLOBAL(arg=29, lineno=188)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$366load_attr.58']
DEBUG:numba.core.byteflow:dispatch pc=370, inst=LOAD_ATTR(arg=30, lineno=188)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$366load_attr.58', '$368load_global.59']
DEBUG:numba.core.byteflow:dispatch pc=372, inst=COMPARE_OP(arg=2, lineno=188)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$366load_attr.58', '$370load_attr.60']
DEBUG:numba.core.byteflow:dispatch pc=374, inst=POP_JUMP_IF_FALSE(arg=402, lineno=188)
DEBUG:numba.core.byteflow:stack ['$phi238.0', '$372compare_op.61']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=378, stack=('$phi238.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=402, stack=('$phi238.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=238 nstack_initial=1), State(pc_initial=378 nstack_initial=1), State(pc_initial=402 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=378 nstack_initial=1), State(pc_initial=402 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi378.0']
DEBUG:numba.core.byteflow:dispatch pc=378, inst=LOAD_FAST(arg=23, lineno=189)
DEBUG:numba.core.byteflow:stack ['$phi378.0']
DEBUG:numba.core.byteflow:dispatch pc=380, inst=LOAD_ATTR(arg=31, lineno=189)
DEBUG:numba.core.byteflow:stack ['$phi378.0', '$r_packet378.1']
DEBUG:numba.core.byteflow:dispatch pc=382, inst=UNARY_NEGATIVE(arg=None, lineno=189)
DEBUG:numba.core.byteflow:stack ['$phi378.0', '$380load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=9, lineno=189)
DEBUG:numba.core.byteflow:stack ['$phi378.0', '$382unary_negative.3']
DEBUG:numba.core.byteflow:dispatch pc=386, inst=LOAD_FAST(arg=21, lineno=189)
DEBUG:numba.core.byteflow:stack ['$phi378.0', '$382unary_negative.3', '$output_energies384.4']
DEBUG:numba.core.byteflow:dispatch pc=388, inst=STORE_SUBSCR(arg=None, lineno=189)
DEBUG:numba.core.byteflow:stack ['$phi378.0', '$382unary_negative.3', '$output_energies384.4', '$i386.5']
DEBUG:numba.core.byteflow:dispatch pc=390, inst=LOAD_FAST(arg=23, lineno=190)
DEBUG:numba.core.byteflow:stack ['$phi378.0']
DEBUG:numba.core.byteflow:dispatch pc=392, inst=LOAD_ATTR(arg=32, lineno=190)
DEBUG:numba.core.byteflow:stack ['$phi378.0', '$r_packet390.6']
DEBUG:numba.core.byteflow:dispatch pc=394, inst=LOAD_FAST(arg=8, lineno=190)
DEBUG:numba.core.byteflow:stack ['$phi378.0', '$392load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=396, inst=LOAD_FAST(arg=21, lineno=190)
DEBUG:numba.core.byteflow:stack ['$phi378.0', '$392load_attr.7', '$last_interaction_types394.8']
DEBUG:numba.core.byteflow:dispatch pc=398, inst=STORE_SUBSCR(arg=None, lineno=190)
DEBUG:numba.core.byteflow:stack ['$phi378.0', '$392load_attr.7', '$last_interaction_types394.8', '$i396.9']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=JUMP_FORWARD(arg=34, lineno=190)
DEBUG:numba.core.byteflow:stack ['$phi378.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=436, stack=('$phi378.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=402 nstack_initial=1), State(pc_initial=436 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi402.0']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=LOAD_FAST(arg=23, lineno=191)
DEBUG:numba.core.byteflow:stack ['$phi402.0']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=LOAD_ATTR(arg=28, lineno=191)
DEBUG:numba.core.byteflow:stack ['$phi402.0', '$r_packet402.1']
DEBUG:numba.core.byteflow:dispatch pc=406, inst=LOAD_GLOBAL(arg=29, lineno=191)
DEBUG:numba.core.byteflow:stack ['$phi402.0', '$404load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=408, inst=LOAD_ATTR(arg=33, lineno=191)
DEBUG:numba.core.byteflow:stack ['$phi402.0', '$404load_attr.2', '$406load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=410, inst=COMPARE_OP(arg=2, lineno=191)
DEBUG:numba.core.byteflow:stack ['$phi402.0', '$404load_attr.2', '$408load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=412, inst=POP_JUMP_IF_FALSE(arg=436, lineno=191)
DEBUG:numba.core.byteflow:stack ['$phi402.0', '$410compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=416, stack=('$phi402.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=436, stack=('$phi402.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=436 nstack_initial=1), State(pc_initial=416 nstack_initial=1), State(pc_initial=436 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi436.0']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=LOAD_FAST(arg=24, lineno=195)
DEBUG:numba.core.byteflow:stack ['$phi436.0']
DEBUG:numba.core.byteflow:dispatch pc=438, inst=LOAD_ATTR(arg=34, lineno=195)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$vpacket_collection436.1']
DEBUG:numba.core.byteflow:dispatch pc=440, inst=LOAD_CONST(arg=6, lineno=195)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$438load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=442, inst=LOAD_FAST(arg=24, lineno=195)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$438load_attr.2', '$const440.3']
DEBUG:numba.core.byteflow:dispatch pc=444, inst=LOAD_ATTR(arg=35, lineno=195)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$438load_attr.2', '$const440.3', '$vpacket_collection442.4']
DEBUG:numba.core.byteflow:dispatch pc=446, inst=BUILD_SLICE(arg=2, lineno=195)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$438load_attr.2', '$const440.3', '$444load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=448, inst=BINARY_SUBSCR(arg=None, lineno=195)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$438load_attr.2', '$446build_slice.7']
DEBUG:numba.core.byteflow:dispatch pc=450, inst=STORE_FAST(arg=26, lineno=195)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$448binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=452, inst=LOAD_FAST(arg=24, lineno=196)
DEBUG:numba.core.byteflow:stack ['$phi436.0']
DEBUG:numba.core.byteflow:dispatch pc=454, inst=LOAD_ATTR(arg=36, lineno=196)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$vpacket_collection452.9']
DEBUG:numba.core.byteflow:dispatch pc=456, inst=LOAD_CONST(arg=6, lineno=196)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$454load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=458, inst=LOAD_FAST(arg=24, lineno=196)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$454load_attr.10', '$const456.11']
DEBUG:numba.core.byteflow:dispatch pc=460, inst=LOAD_ATTR(arg=35, lineno=196)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$454load_attr.10', '$const456.11', '$vpacket_collection458.12']
DEBUG:numba.core.byteflow:dispatch pc=462, inst=BUILD_SLICE(arg=2, lineno=196)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$454load_attr.10', '$const456.11', '$460load_attr.13']
DEBUG:numba.core.byteflow:dispatch pc=464, inst=BINARY_SUBSCR(arg=None, lineno=196)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$454load_attr.10', '$462build_slice.15']
DEBUG:numba.core.byteflow:dispatch pc=466, inst=STORE_FAST(arg=27, lineno=196)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$464binary_subscr.16']
DEBUG:numba.core.byteflow:dispatch pc=468, inst=LOAD_GLOBAL(arg=0, lineno=198)
DEBUG:numba.core.byteflow:stack ['$phi436.0']
DEBUG:numba.core.byteflow:dispatch pc=470, inst=LOAD_METHOD(arg=37, lineno=198)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$468load_global.17']
DEBUG:numba.core.byteflow:dispatch pc=472, inst=LOAD_FAST(arg=26, lineno=199)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$470load_method.18']
DEBUG:numba.core.byteflow:dispatch pc=474, inst=LOAD_FAST(arg=4, lineno=199)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$470load_method.18', '$vpackets_nu472.19']
DEBUG:numba.core.byteflow:dispatch pc=476, inst=LOAD_CONST(arg=4, lineno=199)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$470load_method.18', '$vpackets_nu472.19', '$spectrum_frequency474.20']
DEBUG:numba.core.byteflow:dispatch pc=478, inst=BINARY_SUBSCR(arg=None, lineno=199)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$470load_method.18', '$vpackets_nu472.19', '$spectrum_frequency474.20', '$const476.21']
DEBUG:numba.core.byteflow:dispatch pc=480, inst=BINARY_SUBTRACT(arg=None, lineno=199)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$470load_method.18', '$vpackets_nu472.19', '$478binary_subscr.22']
DEBUG:numba.core.byteflow:dispatch pc=482, inst=LOAD_FAST(arg=14, lineno=199)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$470load_method.18', '$480binary_subtract.23']
DEBUG:numba.core.byteflow:dispatch pc=484, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=199)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$470load_method.18', '$480binary_subtract.23', '$delta_nu482.24']
DEBUG:numba.core.byteflow:dispatch pc=486, inst=CALL_METHOD(arg=1, lineno=199)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$470load_method.18', '$484binary_true_divide.25']
DEBUG:numba.core.byteflow:dispatch pc=488, inst=LOAD_METHOD(arg=38, lineno=199)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$486call_method.26']
DEBUG:numba.core.byteflow:dispatch pc=490, inst=LOAD_GLOBAL(arg=0, lineno=200)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$488load_method.27']
DEBUG:numba.core.byteflow:dispatch pc=492, inst=LOAD_ATTR(arg=4, lineno=200)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$488load_method.27', '$490load_global.28']
DEBUG:numba.core.byteflow:dispatch pc=494, inst=CALL_METHOD(arg=1, lineno=200)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$488load_method.27', '$492load_attr.29']
DEBUG:numba.core.byteflow:dispatch pc=496, inst=STORE_FAST(arg=28, lineno=200)
DEBUG:numba.core.byteflow:stack ['$phi436.0', '$494call_method.30']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=498, stack=('$phi436.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=416 nstack_initial=1), State(pc_initial=436 nstack_initial=1), State(pc_initial=498 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi416.0']
DEBUG:numba.core.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=23, lineno=192)
DEBUG:numba.core.byteflow:stack ['$phi416.0']
DEBUG:numba.core.byteflow:dispatch pc=418, inst=LOAD_ATTR(arg=31, lineno=192)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$r_packet416.1']
DEBUG:numba.core.byteflow:dispatch pc=420, inst=LOAD_FAST(arg=9, lineno=192)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$418load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=422, inst=LOAD_FAST(arg=21, lineno=192)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$418load_attr.2', '$output_energies420.3']
DEBUG:numba.core.byteflow:dispatch pc=424, inst=STORE_SUBSCR(arg=None, lineno=192)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$418load_attr.2', '$output_energies420.3', '$i422.4']
DEBUG:numba.core.byteflow:dispatch pc=426, inst=LOAD_FAST(arg=23, lineno=193)
DEBUG:numba.core.byteflow:stack ['$phi416.0']
DEBUG:numba.core.byteflow:dispatch pc=428, inst=LOAD_ATTR(arg=32, lineno=193)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$r_packet426.5']
DEBUG:numba.core.byteflow:dispatch pc=430, inst=LOAD_FAST(arg=8, lineno=193)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$428load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=432, inst=LOAD_FAST(arg=21, lineno=193)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$428load_attr.6', '$last_interaction_types430.7']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=STORE_SUBSCR(arg=None, lineno=193)
DEBUG:numba.core.byteflow:stack ['$phi416.0', '$428load_attr.6', '$last_interaction_types430.7', '$i432.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=436, stack=('$phi416.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=436 nstack_initial=1), State(pc_initial=498 nstack_initial=1), State(pc_initial=436 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=498 nstack_initial=1), State(pc_initial=436 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi498.0']
DEBUG:numba.core.byteflow:dispatch pc=498, inst=SETUP_LOOP(arg=82, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi498.0']
DEBUG:numba.core.byteflow:dispatch pc=500, inst=LOAD_GLOBAL(arg=39, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi498.0']
DEBUG:numba.core.byteflow:dispatch pc=502, inst=LOAD_FAST(arg=28, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi498.0', '$500load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=504, inst=CALL_FUNCTION(arg=1, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi498.0', '$500load_global.1', '$v_packets_idx502.2']
DEBUG:numba.core.byteflow:dispatch pc=506, inst=GET_ITER(arg=None, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi498.0', '$504call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=508, stack=('$phi498.0', '$506get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=436 nstack_initial=1), State(pc_initial=508 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=508 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi508.0', '$phi508.1']
DEBUG:numba.core.byteflow:dispatch pc=508, inst=FOR_ITER(arg=70, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi508.0', '$phi508.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=580, stack=('$phi508.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=510, stack=('$phi508.0', '$phi508.1', '$508for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=580 nstack_initial=1), State(pc_initial=510 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi580.0']
DEBUG:numba.core.byteflow:dispatch pc=580, inst=POP_BLOCK(arg=None, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi580.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=582, stack=('$phi580.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=510 nstack_initial=3), State(pc_initial=582 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi510.0', '$phi510.1', '$phi510.2']
DEBUG:numba.core.byteflow:dispatch pc=510, inst=UNPACK_SEQUENCE(arg=2, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$phi510.2']
DEBUG:numba.core.byteflow:dispatch pc=512, inst=STORE_FAST(arg=29, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$510unpack_sequence.4', '$510unpack_sequence.3']
DEBUG:numba.core.byteflow:dispatch pc=514, inst=STORE_FAST(arg=30, lineno=204)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$510unpack_sequence.4']
DEBUG:numba.core.byteflow:dispatch pc=516, inst=LOAD_FAST(arg=26, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1']
DEBUG:numba.core.byteflow:dispatch pc=518, inst=LOAD_FAST(arg=29, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$vpackets_nu516.6']
DEBUG:numba.core.byteflow:dispatch pc=520, inst=BINARY_SUBSCR(arg=None, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$vpackets_nu516.6', '$j518.7']
DEBUG:numba.core.byteflow:dispatch pc=522, inst=LOAD_FAST(arg=4, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$520binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=524, inst=LOAD_CONST(arg=4, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$520binary_subscr.8', '$spectrum_frequency522.9']
DEBUG:numba.core.byteflow:dispatch pc=526, inst=BINARY_SUBSCR(arg=None, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$520binary_subscr.8', '$spectrum_frequency522.9', '$const524.10']
DEBUG:numba.core.byteflow:dispatch pc=528, inst=COMPARE_OP(arg=0, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$520binary_subscr.8', '$526binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=530, inst=POP_JUMP_IF_TRUE(arg=508, lineno=205)
DEBUG:numba.core.byteflow:stack ['$phi510.0', '$phi510.1', '$528compare_op.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=534, stack=('$phi510.0', '$phi510.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=508, stack=('$phi510.0', '$phi510.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=582 nstack_initial=1), State(pc_initial=534 nstack_initial=2), State(pc_initial=508 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi582.0']
DEBUG:numba.core.byteflow:dispatch pc=582, inst=LOAD_GLOBAL(arg=9, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi582.0']
DEBUG:numba.core.byteflow:dispatch pc=584, inst=LOAD_ATTR(arg=40, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi582.0', '$582load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=586, inst=POP_JUMP_IF_FALSE(arg=178, lineno=211)
DEBUG:numba.core.byteflow:stack ['$phi582.0', '$584load_attr.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=588, stack=('$phi582.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=178, stack=('$phi582.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=534 nstack_initial=2), State(pc_initial=508 nstack_initial=2), State(pc_initial=588 nstack_initial=1), State(pc_initial=178 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi534.0', '$phi534.1']
DEBUG:numba.core.byteflow:dispatch pc=534, inst=LOAD_FAST(arg=26, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$phi534.1']
DEBUG:numba.core.byteflow:dispatch pc=536, inst=LOAD_FAST(arg=29, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$phi534.1', '$vpackets_nu534.2']
DEBUG:numba.core.byteflow:dispatch pc=538, inst=BINARY_SUBSCR(arg=None, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$phi534.1', '$vpackets_nu534.2', '$j536.3']
DEBUG:numba.core.byteflow:dispatch pc=540, inst=LOAD_FAST(arg=4, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$phi534.1', '$538binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=542, inst=LOAD_CONST(arg=2, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$phi534.1', '$538binary_subscr.4', '$spectrum_frequency540.5']
DEBUG:numba.core.byteflow:dispatch pc=544, inst=BINARY_SUBSCR(arg=None, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$phi534.1', '$538binary_subscr.4', '$spectrum_frequency540.5', '$const542.6']
DEBUG:numba.core.byteflow:dispatch pc=546, inst=COMPARE_OP(arg=4, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$phi534.1', '$538binary_subscr.4', '$544binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=548, inst=POP_JUMP_IF_FALSE(arg=556, lineno=206)
DEBUG:numba.core.byteflow:stack ['$phi534.0', '$phi534.1', '$546compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=552, stack=('$phi534.0', '$phi534.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=556, stack=('$phi534.0', '$phi534.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=508 nstack_initial=2), State(pc_initial=588 nstack_initial=1), State(pc_initial=178 nstack_initial=1), State(pc_initial=552 nstack_initial=2), State(pc_initial=556 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=588 nstack_initial=1), State(pc_initial=178 nstack_initial=1), State(pc_initial=552 nstack_initial=2), State(pc_initial=556 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi588.0']
DEBUG:numba.core.byteflow:dispatch pc=588, inst=LOAD_FAST(arg=15, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi588.0']
DEBUG:numba.core.byteflow:dispatch pc=590, inst=LOAD_METHOD(arg=41, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$virt_packet_nus588.1']
DEBUG:numba.core.byteflow:dispatch pc=592, inst=LOAD_FAST(arg=26, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$590load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=594, inst=CALL_METHOD(arg=1, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$590load_method.2', '$vpackets_nu592.3']
DEBUG:numba.core.byteflow:dispatch pc=596, inst=POP_TOP(arg=None, lineno=212)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$594call_method.4']
DEBUG:numba.core.byteflow:dispatch pc=598, inst=LOAD_FAST(arg=16, lineno=213)
DEBUG:numba.core.byteflow:stack ['$phi588.0']
DEBUG:numba.core.byteflow:dispatch pc=600, inst=LOAD_METHOD(arg=41, lineno=213)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$virt_packet_energies598.5']
DEBUG:numba.core.byteflow:dispatch pc=602, inst=LOAD_FAST(arg=27, lineno=213)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$600load_method.6']
DEBUG:numba.core.byteflow:dispatch pc=604, inst=CALL_METHOD(arg=1, lineno=213)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$600load_method.6', '$vpackets_energy602.7']
DEBUG:numba.core.byteflow:dispatch pc=606, inst=POP_TOP(arg=None, lineno=213)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$604call_method.8']
DEBUG:numba.core.byteflow:dispatch pc=608, inst=LOAD_FAST(arg=17, lineno=214)
DEBUG:numba.core.byteflow:stack ['$phi588.0']
DEBUG:numba.core.byteflow:dispatch pc=610, inst=LOAD_METHOD(arg=41, lineno=214)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$virt_packet_last_interaction_in_nu608.9']
DEBUG:numba.core.byteflow:dispatch pc=612, inst=LOAD_FAST(arg=24, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$610load_method.10']
DEBUG:numba.core.byteflow:dispatch pc=614, inst=LOAD_ATTR(arg=25, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$610load_method.10', '$vpacket_collection612.11']
DEBUG:numba.core.byteflow:dispatch pc=616, inst=LOAD_CONST(arg=6, lineno=215)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$610load_method.10', '$614load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=618, inst=LOAD_FAST(arg=24, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$610load_method.10', '$614load_attr.12', '$const616.13']
DEBUG:numba.core.byteflow:dispatch pc=620, inst=LOAD_ATTR(arg=35, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$610load_method.10', '$614load_attr.12', '$const616.13', '$vpacket_collection618.14']
DEBUG:numba.core.byteflow:dispatch pc=622, inst=BUILD_SLICE(arg=2, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$610load_method.10', '$614load_attr.12', '$const616.13', '$620load_attr.15']
DEBUG:numba.core.byteflow:dispatch pc=624, inst=BINARY_SUBSCR(arg=None, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$610load_method.10', '$614load_attr.12', '$622build_slice.17']
DEBUG:numba.core.byteflow:dispatch pc=626, inst=CALL_METHOD(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$610load_method.10', '$624binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=628, inst=POP_TOP(arg=None, lineno=216)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$626call_method.19']
DEBUG:numba.core.byteflow:dispatch pc=630, inst=LOAD_FAST(arg=18, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi588.0']
DEBUG:numba.core.byteflow:dispatch pc=632, inst=LOAD_METHOD(arg=41, lineno=219)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$virt_packet_last_interaction_type630.20']
DEBUG:numba.core.byteflow:dispatch pc=634, inst=LOAD_FAST(arg=24, lineno=220)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$632load_method.21']
DEBUG:numba.core.byteflow:dispatch pc=636, inst=LOAD_ATTR(arg=32, lineno=220)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$632load_method.21', '$vpacket_collection634.22']
DEBUG:numba.core.byteflow:dispatch pc=638, inst=LOAD_CONST(arg=6, lineno=220)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$632load_method.21', '$636load_attr.23']
DEBUG:numba.core.byteflow:dispatch pc=640, inst=LOAD_FAST(arg=24, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$632load_method.21', '$636load_attr.23', '$const638.24']
DEBUG:numba.core.byteflow:dispatch pc=642, inst=LOAD_ATTR(arg=35, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$632load_method.21', '$636load_attr.23', '$const638.24', '$vpacket_collection640.25']
DEBUG:numba.core.byteflow:dispatch pc=644, inst=BUILD_SLICE(arg=2, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$632load_method.21', '$636load_attr.23', '$const638.24', '$642load_attr.26']
DEBUG:numba.core.byteflow:dispatch pc=646, inst=BINARY_SUBSCR(arg=None, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$632load_method.21', '$636load_attr.23', '$644build_slice.28']
DEBUG:numba.core.byteflow:dispatch pc=648, inst=CALL_METHOD(arg=1, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$632load_method.21', '$646binary_subscr.29']
DEBUG:numba.core.byteflow:dispatch pc=650, inst=POP_TOP(arg=None, lineno=221)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$648call_method.30']
DEBUG:numba.core.byteflow:dispatch pc=652, inst=LOAD_FAST(arg=19, lineno=224)
DEBUG:numba.core.byteflow:stack ['$phi588.0']
DEBUG:numba.core.byteflow:dispatch pc=654, inst=LOAD_METHOD(arg=41, lineno=224)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$virt_packet_last_line_interaction_in_id652.31']
DEBUG:numba.core.byteflow:dispatch pc=656, inst=LOAD_FAST(arg=24, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$654load_method.32']
DEBUG:numba.core.byteflow:dispatch pc=658, inst=LOAD_ATTR(arg=42, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$654load_method.32', '$vpacket_collection656.33']
DEBUG:numba.core.byteflow:dispatch pc=660, inst=LOAD_CONST(arg=6, lineno=225)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$654load_method.32', '$658load_attr.34']
DEBUG:numba.core.byteflow:dispatch pc=662, inst=LOAD_FAST(arg=24, lineno=226)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$654load_method.32', '$658load_attr.34', '$const660.35']
DEBUG:numba.core.byteflow:dispatch pc=664, inst=LOAD_ATTR(arg=35, lineno=226)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$654load_method.32', '$658load_attr.34', '$const660.35', '$vpacket_collection662.36']
DEBUG:numba.core.byteflow:dispatch pc=666, inst=BUILD_SLICE(arg=2, lineno=226)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$654load_method.32', '$658load_attr.34', '$const660.35', '$664load_attr.37']
DEBUG:numba.core.byteflow:dispatch pc=668, inst=BINARY_SUBSCR(arg=None, lineno=226)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$654load_method.32', '$658load_attr.34', '$666build_slice.39']
DEBUG:numba.core.byteflow:dispatch pc=670, inst=CALL_METHOD(arg=1, lineno=226)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$654load_method.32', '$668binary_subscr.40']
DEBUG:numba.core.byteflow:dispatch pc=672, inst=POP_TOP(arg=None, lineno=226)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$670call_method.41']
DEBUG:numba.core.byteflow:dispatch pc=674, inst=LOAD_FAST(arg=20, lineno=229)
DEBUG:numba.core.byteflow:stack ['$phi588.0']
DEBUG:numba.core.byteflow:dispatch pc=676, inst=LOAD_METHOD(arg=41, lineno=229)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$virt_packet_last_line_interaction_out_id674.42']
DEBUG:numba.core.byteflow:dispatch pc=678, inst=LOAD_FAST(arg=24, lineno=230)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$676load_method.43']
DEBUG:numba.core.byteflow:dispatch pc=680, inst=LOAD_ATTR(arg=43, lineno=230)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$676load_method.43', '$vpacket_collection678.44']
DEBUG:numba.core.byteflow:dispatch pc=682, inst=LOAD_CONST(arg=6, lineno=230)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$676load_method.43', '$680load_attr.45']
DEBUG:numba.core.byteflow:dispatch pc=684, inst=LOAD_FAST(arg=24, lineno=231)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$676load_method.43', '$680load_attr.45', '$const682.46']
DEBUG:numba.core.byteflow:dispatch pc=686, inst=LOAD_ATTR(arg=35, lineno=231)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$676load_method.43', '$680load_attr.45', '$const682.46', '$vpacket_collection684.47']
DEBUG:numba.core.byteflow:dispatch pc=688, inst=BUILD_SLICE(arg=2, lineno=231)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$676load_method.43', '$680load_attr.45', '$const682.46', '$686load_attr.48']
DEBUG:numba.core.byteflow:dispatch pc=690, inst=BINARY_SUBSCR(arg=None, lineno=231)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$676load_method.43', '$680load_attr.45', '$688build_slice.50']
DEBUG:numba.core.byteflow:dispatch pc=692, inst=CALL_METHOD(arg=1, lineno=231)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$676load_method.43', '$690binary_subscr.51']
DEBUG:numba.core.byteflow:dispatch pc=694, inst=POP_TOP(arg=None, lineno=231)
DEBUG:numba.core.byteflow:stack ['$phi588.0', '$692call_method.52']
DEBUG:numba.core.byteflow:dispatch pc=696, inst=JUMP_ABSOLUTE(arg=178, lineno=231)
DEBUG:numba.core.byteflow:stack ['$phi588.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=178, stack=('$phi588.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=178 nstack_initial=1), State(pc_initial=552 nstack_initial=2), State(pc_initial=556 nstack_initial=2), State(pc_initial=178 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=552 nstack_initial=2), State(pc_initial=556 nstack_initial=2), State(pc_initial=178 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi552.0', '$phi552.1']
DEBUG:numba.core.byteflow:dispatch pc=552, inst=JUMP_ABSOLUTE(arg=508, lineno=208)
DEBUG:numba.core.byteflow:stack ['$phi552.0', '$phi552.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=508, stack=('$phi552.0', '$phi552.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=556 nstack_initial=2), State(pc_initial=178 nstack_initial=1), State(pc_initial=508 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi556.0', '$phi556.1']
DEBUG:numba.core.byteflow:dispatch pc=556, inst=LOAD_FAST(arg=13, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi556.0', '$phi556.1']
DEBUG:numba.core.byteflow:dispatch pc=558, inst=LOAD_FAST(arg=30, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi556.0', '$phi556.1', '$v_packets_energy_hist556.2']
DEBUG:numba.core.byteflow:dispatch pc=560, inst=DUP_TOP_TWO(arg=None, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi556.0', '$phi556.1', '$v_packets_energy_hist556.2', '$idx558.3']
DEBUG:numba.core.byteflow:dispatch pc=562, inst=BINARY_SUBSCR(arg=None, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi556.0', '$phi556.1', '$v_packets_energy_hist556.2', '$idx558.3', '$560dup_top_two.4', '$560dup_top_two.5']
DEBUG:numba.core.byteflow:dispatch pc=564, inst=LOAD_FAST(arg=27, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi556.0', '$phi556.1', '$v_packets_energy_hist556.2', '$idx558.3', '$562binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=566, inst=LOAD_FAST(arg=29, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi556.0', '$phi556.1', '$v_packets_energy_hist556.2', '$idx558.3', '$562binary_subscr.6', '$vpackets_energy564.7']
DEBUG:numba.core.byteflow:dispatch pc=568, inst=BINARY_SUBSCR(arg=None, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi556.0', '$phi556.1', '$v_packets_energy_hist556.2', '$idx558.3', '$562binary_subscr.6', '$vpackets_energy564.7', '$j566.8']
DEBUG:numba.core.byteflow:dispatch pc=570, inst=INPLACE_ADD(arg=None, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi556.0', '$phi556.1', '$v_packets_energy_hist556.2', '$idx558.3', '$562binary_subscr.6', '$568binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=572, inst=ROT_THREE(arg=None, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi556.0', '$phi556.1', '$v_packets_energy_hist556.2', '$idx558.3', '$570inplace_add.10']
DEBUG:numba.core.byteflow:dispatch pc=574, inst=STORE_SUBSCR(arg=None, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi556.0', '$phi556.1', '$570inplace_add.10', '$v_packets_energy_hist556.2', '$idx558.3']
DEBUG:numba.core.byteflow:dispatch pc=576, inst=JUMP_ABSOLUTE(arg=508, lineno=209)
DEBUG:numba.core.byteflow:stack ['$phi556.0', '$phi556.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=508, stack=('$phi556.0', '$phi556.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=178 nstack_initial=1), State(pc_initial=508 nstack_initial=2), State(pc_initial=508 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=508 nstack_initial=2), State(pc_initial=508 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=508 nstack_initial=2)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=162 nstack_initial=0): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=182 nstack_initial=2): {'$phi182.1'},
             State(pc_initial=194 nstack_initial=1): set(),
             State(pc_initial=218 nstack_initial=1): set(),
             State(pc_initial=238 nstack_initial=1): set(),
             State(pc_initial=378 nstack_initial=1): set(),
             State(pc_initial=402 nstack_initial=1): set(),
             State(pc_initial=416 nstack_initial=1): set(),
             State(pc_initial=436 nstack_initial=1): set(),
             State(pc_initial=498 nstack_initial=1): set(),
             State(pc_initial=508 nstack_initial=2): {'$phi508.1'},
             State(pc_initial=510 nstack_initial=3): {'$phi510.2'},
             State(pc_initial=534 nstack_initial=2): set(),
             State(pc_initial=552 nstack_initial=2): set(),
             State(pc_initial=556 nstack_initial=2): set(),
             State(pc_initial=580 nstack_initial=1): set(),
             State(pc_initial=582 nstack_initial=1): set(),
             State(pc_initial=588 nstack_initial=1): set(),
             State(pc_initial=698 nstack_initial=0): set(),
             State(pc_initial=700 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi178.0': State(pc_initial=162 nstack_initial=0),
 '$phi182.1': State(pc_initial=178 nstack_initial=1),
 '$phi508.1': State(pc_initial=498 nstack_initial=1),
 '$phi510.2': State(pc_initial=508 nstack_initial=2)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi178.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi582.0',
                            State(pc_initial=582 nstack_initial=1)),
                           ('$phi588.0',
                            State(pc_initial=588 nstack_initial=1))},
             '$phi182.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi182.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi194.0': {('$phi182.0',
                            State(pc_initial=182 nstack_initial=2))},
             '$phi218.0': {('$phi182.0',
                            State(pc_initial=182 nstack_initial=2))},
             '$phi238.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=1)),
                           ('$phi218.0',
                            State(pc_initial=218 nstack_initial=1))},
             '$phi378.0': {('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi402.0': {('$phi238.0',
                            State(pc_initial=238 nstack_initial=1))},
             '$phi416.0': {('$phi402.0',
                            State(pc_initial=402 nstack_initial=1))},
             '$phi436.0': {('$phi378.0',
                            State(pc_initial=378 nstack_initial=1)),
                           ('$phi402.0',
                            State(pc_initial=402 nstack_initial=1)),
                           ('$phi416.0',
                            State(pc_initial=416 nstack_initial=1))},
             '$phi498.0': {('$phi436.0',
                            State(pc_initial=436 nstack_initial=1))},
             '$phi508.0': {('$phi498.0',
                            State(pc_initial=498 nstack_initial=1)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=3)),
                           ('$phi552.0',
                            State(pc_initial=552 nstack_initial=2)),
                           ('$phi556.0',
                            State(pc_initial=556 nstack_initial=2))},
             '$phi508.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=3)),
                           ('$phi552.1',
                            State(pc_initial=552 nstack_initial=2)),
                           ('$phi556.1',
                            State(pc_initial=556 nstack_initial=2))},
             '$phi510.0': {('$phi508.0',
                            State(pc_initial=508 nstack_initial=2))},
             '$phi510.1': {('$phi508.1',
                            State(pc_initial=508 nstack_initial=2))},
             '$phi510.2': {('$508for_iter.3',
                            State(pc_initial=508 nstack_initial=2))},
             '$phi534.0': {('$phi510.0',
                            State(pc_initial=510 nstack_initial=3))},
             '$phi534.1': {('$phi510.1',
                            State(pc_initial=510 nstack_initial=3))},
             '$phi552.0': {('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi552.1': {('$phi534.1',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi556.0': {('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi556.1': {('$phi534.1',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi580.0': {('$phi508.0',
                            State(pc_initial=508 nstack_initial=2))},
             '$phi582.0': {('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi588.0': {('$phi582.0',
                            State(pc_initial=582 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi178.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi182.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi182.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi194.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi218.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi238.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi378.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi402.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi416.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi436.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi498.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi508.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi508.0',
                            State(pc_initial=508 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi508.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1)),
                           ('$phi508.1',
                            State(pc_initial=508 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi510.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi510.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi510.2': {('$508for_iter.3',
                            State(pc_initial=508 nstack_initial=2))},
             '$phi534.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi534.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi552.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi552.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi556.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi556.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi580.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=1))},
             '$phi582.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi588.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi178.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi182.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi182.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi194.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi218.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi238.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi378.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi402.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi416.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi436.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi498.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2))},
             '$phi508.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi508.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi510.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi510.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi510.2': {('$508for_iter.3',
                            State(pc_initial=508 nstack_initial=2))},
             '$phi534.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi534.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi552.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi552.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi556.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi556.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi580.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi582.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi588.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi178.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi182.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi182.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi194.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi218.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi238.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi378.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi402.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi416.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi436.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi498.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi508.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi508.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi510.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi510.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi510.2': {('$508for_iter.3',
                            State(pc_initial=508 nstack_initial=2))},
             '$phi534.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi534.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi552.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi552.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi556.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi556.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi580.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi582.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi588.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi178.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi182.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi182.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi194.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi218.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi238.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi378.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi402.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi416.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi436.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi498.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi508.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi508.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi510.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi510.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi510.2': {('$508for_iter.3',
                            State(pc_initial=508 nstack_initial=2))},
             '$phi534.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi534.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi552.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi552.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi556.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi556.1': {('$506get_iter.4',
                            State(pc_initial=498 nstack_initial=1))},
             '$phi580.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi582.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))},
             '$phi588.0': {('$176get_iter.5',
                            State(pc_initial=162 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi178.0': {('$176get_iter.5', State(pc_initial=162 nstack_initial=0))},
 '$phi182.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi508.1': {('$506get_iter.4', State(pc_initial=498 nstack_initial=1))},
 '$phi510.2': {('$508for_iter.3', State(pc_initial=508 nstack_initial=2))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=162 nstack_initial=0): {'$phi178.0': '$176get_iter.5'},
             State(pc_initial=178 nstack_initial=1): {'$phi182.1': '$178for_iter.2'},
             State(pc_initial=498 nstack_initial=1): {'$phi508.1': '$506get_iter.4'},
             State(pc_initial=508 nstack_initial=2): {'$phi510.2': '$508for_iter.3'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$packet_collection6.2'}), (8, {'item': '$packet_collection6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'value': '$10call_method.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$packet_collection18.7'}), (20, {'item': '$packet_collection18.7', 'res': '$20load_attr.8'}), (22, {'res': '$22load_global.9'}), (24, {'item': '$22load_global.9', 'res': '$24load_attr.10'}), (26, {'res': '$const26.11'}), (28, {'func': '$16load_attr.6', 'args': ['$20load_attr.8', '$24load_attr.10'], 'names': '$const26.11', 'res': '$28call_function_kw.12'}), (30, {'res': '$const30.13'}), (32, {'lhs': '$28call_function_kw.12', 'rhs': '$const30.13', 'res': '$32binary_multiply.14'}), (34, {'value': '$32binary_multiply.14'}), (36, {'res': '$36load_global.15'}), (38, {'item': '$36load_global.15', 'res': '$38load_method.16'}), (40, {'res': '$packet_collection40.17'}), (42, {'item': '$packet_collection40.17', 'res': '$42load_attr.18'}), (44, {'func': '$38load_method.16', 'args': ['$42load_attr.18'], 'res': '$44call_method.19'}), (46, {'value': '$44call_method.19'}), (48, {'res': '$48load_global.20'}), (50, {'item': '$48load_global.20', 'res': '$50load_method.21'}), (52, {'res': '$packet_collection52.22'}), (54, {'item': '$packet_collection52.22', 'res': '$54load_attr.23'}), (56, {'func': '$50load_method.21', 'args': ['$54load_attr.23'], 'res': '$56call_method.24'}), (58, {'value': '$56call_method.24'}), (60, {'res': '$60load_global.25'}), (62, {'item': '$60load_global.25', 'res': '$62load_attr.26'}), (64, {'res': '$packet_collection64.27'}), (66, {'item': '$packet_collection64.27', 'res': '$66load_attr.28'}), (68, {'res': '$68load_global.29'}), (70, {'item': '$68load_global.29', 'res': '$70load_attr.30'}), (72, {'res': '$const72.31'}), (74, {'func': '$62load_attr.26', 'args': ['$66load_attr.28', '$70load_attr.30'], 'names': '$const72.31', 'res': '$74call_function_kw.32'}), (76, {'res': '$const76.33'}), (78, {'lhs': '$74call_function_kw.32', 'rhs': '$const76.33', 'res': '$78binary_multiply.34'}), (80, {'value': '$78binary_multiply.34'}), (82, {'res': '$82load_global.35'}), (84, {'item': '$82load_global.35', 'res': '$84load_attr.36'}), (86, {'res': '$packet_collection86.37'}), (88, {'item': '$packet_collection86.37', 'res': '$88load_attr.38'}), (90, {'res': '$90load_global.39'}), (92, {'item': '$90load_global.39', 'res': '$92load_attr.40'}), (94, {'res': '$const94.41'}), (96, {'func': '$84load_attr.36', 'args': ['$88load_attr.38', '$92load_attr.40'], 'names': '$const94.41', 'res': '$96call_function_kw.42'}), (98, {'res': '$const98.43'}), (100, {'lhs': '$96call_function_kw.42', 'rhs': '$const98.43', 'res': '$100binary_multiply.44'}), (102, {'value': '$100binary_multiply.44'}), (104, {'res': '$104load_global.45'}), (106, {'item': '$104load_global.45', 'res': '$106load_method.46'}), (108, {'res': '$spectrum_frequency108.47'}), (110, {'func': '$106load_method.46', 'args': ['$spectrum_frequency108.47'], 'res': '$110call_method.48'}), (112, {'value': '$110call_method.48'}), (114, {'res': '$spectrum_frequency114.49'}), (116, {'res': '$const116.50'}), (118, {'index': '$const116.50', 'target': '$spectrum_frequency114.49', 'res': '$118binary_subscr.51'}), (120, {'res': '$spectrum_frequency120.52'}), (122, {'res': '$const122.53'}), (124, {'index': '$const122.53', 'target': '$spectrum_frequency120.52', 'res': '$124binary_subscr.54'}), (126, {'lhs': '$118binary_subscr.51', 'rhs': '$124binary_subscr.54', 'res': '$126binary_subtract.55'}), (128, {'value': '$126binary_subtract.55'}), (130, {'items': [], 'res': '$130build_list.56'}), (132, {'value': '$130build_list.56'}), (134, {'items': [], 'res': '$134build_list.57'}), (136, {'value': '$134build_list.57'}), (138, {'items': [], 'res': '$138build_list.58'}), (140, {'value': '$138build_list.58'}), (142, {'items': [], 'res': '$142build_list.59'}), (144, {'value': '$142build_list.59'}), (146, {'items': [], 'res': '$146build_list.60'}), (148, {'value': '$146build_list.60'}), (150, {'items': [], 'res': '$150build_list.61'}), (152, {'value': '$150build_list.61'}), (154, {'res': '$154load_global.62'}), (156, {'res': '$const156.63'}), (158, {'func': '$154load_global.62', 'args': ['$const156.63'], 'res': '$158call_function.64'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={162: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=162 nstack_initial=0):
AdaptBlockInfo(insts=((166, {'res': '$166load_global.0'}), (168, {'res': '$168load_global.1'}), (170, {'res': '$output_nus170.2'}), (172, {'func': '$168load_global.1', 'args': ['$output_nus170.2'], 'res': '$172call_function.3'}), (174, {'func': '$166load_global.0', 'args': ['$172call_function.3'], 'res': '$174call_function.4'}), (176, {'value': '$174call_function.4', 'res': '$176get_iter.5'})), outgoing_phis={'$phi178.0': '$176get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$176get_iter.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi182.1': '$178for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={698: (), 182: ('$phi178.0', '$178for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=182 nstack_initial=2):
AdaptBlockInfo(insts=((182, {'value': '$phi182.1'}), (184, {'res': '$184load_global.2'}), (186, {'item': '$184load_global.2', 'res': '$186load_attr.3'}), (188, {'res': '$const188.4'}), (190, {'lhs': '$186load_attr.3', 'rhs': '$const188.4', 'res': '$190compare_op.5'}), (192, {'pred': '$190compare_op.5'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={194: ('$phi182.0',), 218: ('$phi182.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=194 nstack_initial=1):
AdaptBlockInfo(insts=((194, {'res': '$packet_seeds194.1'}), (196, {'res': '$196load_global.2'}), (198, {'item': '$196load_global.2', 'res': '$198load_attr.3'}), (200, {'index': '$198load_attr.3', 'target': '$packet_seeds194.1', 'res': '$200binary_subscr.4'}), (202, {'value': '$200binary_subscr.4'}), (204, {'res': '$204load_global.5'}), (206, {'item': '$204load_global.5', 'res': '$206load_attr.6'}), (208, {'item': '$206load_attr.6', 'res': '$208load_method.7'}), (210, {'res': '$seed210.8'}), (212, {'func': '$208load_method.7', 'args': ['$seed210.8'], 'res': '$212call_method.9'}), (216, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={238: ('$phi194.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=218 nstack_initial=1):
AdaptBlockInfo(insts=((218, {'res': '$packet_seeds218.1'}), (220, {'res': '$i220.2'}), (222, {'index': '$i220.2', 'target': '$packet_seeds218.1', 'res': '$222binary_subscr.3'}), (224, {'value': '$222binary_subscr.3'}), (226, {'res': '$226load_global.4'}), (228, {'item': '$226load_global.4', 'res': '$228load_attr.5'}), (230, {'item': '$228load_attr.5', 'res': '$230load_method.6'}), (232, {'res': '$seed232.7'}), (234, {'func': '$230load_method.6', 'args': ['$seed232.7'], 'res': '$234call_method.8'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={238: ('$phi218.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=238 nstack_initial=1):
AdaptBlockInfo(insts=((238, {'res': '$238load_global.1'}), (240, {'res': '$numba_model240.2'}), (242, {'item': '$numba_model240.2', 'res': '$242load_attr.3'}), (244, {'res': '$const244.4'}), (246, {'index': '$const244.4', 'target': '$242load_attr.3', 'res': '$246binary_subscr.5'}), (248, {'res': '$packet_collection248.6'}), (250, {'item': '$packet_collection248.6', 'res': '$250load_attr.7'}), (252, {'res': '$i252.8'}), (254, {'index': '$i252.8', 'target': '$250load_attr.7', 'res': '$254binary_subscr.9'}), (256, {'res': '$packet_collection256.10'}), (258, {'item': '$packet_collection256.10', 'res': '$258load_attr.11'}), (260, {'res': '$i260.12'}), (262, {'index': '$i260.12', 'target': '$258load_attr.11', 'res': '$262binary_subscr.13'}), (264, {'res': '$packet_collection264.14'}), (266, {'item': '$packet_collection264.14', 'res': '$266load_attr.15'}), (268, {'res': '$i268.16'}), (270, {'index': '$i268.16', 'target': '$266load_attr.15', 'res': '$270binary_subscr.17'}), (272, {'res': '$seed272.18'}), (274, {'res': '$i274.19'}), (276, {'res': '$const276.20'}), (278, {'func': '$238load_global.1', 'args': ['$246binary_subscr.5', '$254binary_subscr.9', '$262binary_subscr.13', '$270binary_subscr.17', '$seed272.18', '$i274.19', '$const276.20'], 'res': '$278call_function.21'}), (280, {'value': '$278call_function.21'}), (282, {'res': '$282load_global.22'}), (284, {'res': '$r_packet284.23'}), (286, {'item': '$r_packet284.23', 'res': '$286load_attr.24'}), (288, {'res': '$spectrum_frequency288.25'}), (290, {'res': '$290load_global.26'}), (292, {'item': '$290load_global.26', 'res': '$292load_attr.27'}), (294, {'res': '$294load_global.28'}), (296, {'item': '$294load_global.28', 'res': '$296load_attr.29'}), (298, {'res': '$number_of_vpackets298.30'}), (300, {'res': '$300load_global.31'}), (302, {'item': '$300load_global.31', 'res': '$302load_attr.32'}), (304, {'func': '$282load_global.22', 'args': ['$286load_attr.24', '$spectrum_frequency288.25', '$292load_attr.27', '$296load_attr.29', '$number_of_vpackets298.30', '$302load_attr.32'], 'res': '$304call_function.33'}), (306, {'value': '$304call_function.33'}), (308, {'res': '$308load_global.34'}), (310, {'res': '$r_packet310.35'}), (312, {'res': '$numba_model312.36'}), (314, {'res': '$numba_plasma314.37'}), (316, {'res': '$estimators316.38'}), (318, {'res': '$vpacket_collection318.39'}), (320, {'func': '$308load_global.34', 'args': ['$r_packet310.35', '$numba_model312.36', '$numba_plasma314.37', '$estimators316.38', '$vpacket_collection318.39'], 'res': '$320call_function.40'}), (322, {'value': '$320call_function.40'}), (324, {'res': '$r_packet324.41'}), (326, {'item': '$r_packet324.41', 'res': '$326load_attr.42'}), (328, {'res': '$output_nus328.43'}), (330, {'res': '$i330.44'}), (332, {'target': '$output_nus328.43', 'index': '$i330.44', 'value': '$326load_attr.42'}), (334, {'res': '$r_packet334.45'}), (336, {'item': '$r_packet334.45', 'res': '$336load_attr.46'}), (338, {'res': '$last_interaction_in_nus338.47'}), (340, {'res': '$i340.48'}), (342, {'target': '$last_interaction_in_nus338.47', 'index': '$i340.48', 'value': '$336load_attr.46'}), (344, {'res': '$r_packet344.49'}), (346, {'item': '$r_packet344.49', 'res': '$346load_attr.50'}), (348, {'res': '$last_line_interaction_in_ids348.51'}), (350, {'res': '$i350.52'}), (352, {'target': '$last_line_interaction_in_ids348.51', 'index': '$i350.52', 'value': '$346load_attr.50'}), (354, {'res': '$r_packet354.53'}), (356, {'item': '$r_packet354.53', 'res': '$356load_attr.54'}), (358, {'res': '$last_line_interaction_out_ids358.55'}), (360, {'res': '$i360.56'}), (362, {'target': '$last_line_interaction_out_ids358.55', 'index': '$i360.56', 'value': '$356load_attr.54'}), (364, {'res': '$r_packet364.57'}), (366, {'item': '$r_packet364.57', 'res': '$366load_attr.58'}), (368, {'res': '$368load_global.59'}), (370, {'item': '$368load_global.59', 'res': '$370load_attr.60'}), (372, {'lhs': '$366load_attr.58', 'rhs': '$370load_attr.60', 'res': '$372compare_op.61'}), (374, {'pred': '$372compare_op.61'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={378: ('$phi238.0',), 402: ('$phi238.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=378 nstack_initial=1):
AdaptBlockInfo(insts=((378, {'res': '$r_packet378.1'}), (380, {'item': '$r_packet378.1', 'res': '$380load_attr.2'}), (382, {'value': '$380load_attr.2', 'res': '$382unary_negative.3'}), (384, {'res': '$output_energies384.4'}), (386, {'res': '$i386.5'}), (388, {'target': '$output_energies384.4', 'index': '$i386.5', 'value': '$382unary_negative.3'}), (390, {'res': '$r_packet390.6'}), (392, {'item': '$r_packet390.6', 'res': '$392load_attr.7'}), (394, {'res': '$last_interaction_types394.8'}), (396, {'res': '$i396.9'}), (398, {'target': '$last_interaction_types394.8', 'index': '$i396.9', 'value': '$392load_attr.7'}), (400, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={436: ('$phi378.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=402 nstack_initial=1):
AdaptBlockInfo(insts=((402, {'res': '$r_packet402.1'}), (404, {'item': '$r_packet402.1', 'res': '$404load_attr.2'}), (406, {'res': '$406load_global.3'}), (408, {'item': '$406load_global.3', 'res': '$408load_attr.4'}), (410, {'lhs': '$404load_attr.2', 'rhs': '$408load_attr.4', 'res': '$410compare_op.5'}), (412, {'pred': '$410compare_op.5'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={416: ('$phi402.0',), 436: ('$phi402.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=416 nstack_initial=1):
AdaptBlockInfo(insts=((416, {'res': '$r_packet416.1'}), (418, {'item': '$r_packet416.1', 'res': '$418load_attr.2'}), (420, {'res': '$output_energies420.3'}), (422, {'res': '$i422.4'}), (424, {'target': '$output_energies420.3', 'index': '$i422.4', 'value': '$418load_attr.2'}), (426, {'res': '$r_packet426.5'}), (428, {'item': '$r_packet426.5', 'res': '$428load_attr.6'}), (430, {'res': '$last_interaction_types430.7'}), (432, {'res': '$i432.8'}), (434, {'target': '$last_interaction_types430.7', 'index': '$i432.8', 'value': '$428load_attr.6'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={436: ('$phi416.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=436 nstack_initial=1):
AdaptBlockInfo(insts=((436, {'res': '$vpacket_collection436.1'}), (438, {'item': '$vpacket_collection436.1', 'res': '$438load_attr.2'}), (440, {'res': '$const440.3'}), (442, {'res': '$vpacket_collection442.4'}), (444, {'item': '$vpacket_collection442.4', 'res': '$444load_attr.5'}), (446, {'start': '$const440.3', 'stop': '$444load_attr.5', 'step': None, 'res': '$446build_slice.7', 'slicevar': '$446build_slice.6'}), (448, {'index': '$446build_slice.7', 'target': '$438load_attr.2', 'res': '$448binary_subscr.8'}), (450, {'value': '$448binary_subscr.8'}), (452, {'res': '$vpacket_collection452.9'}), (454, {'item': '$vpacket_collection452.9', 'res': '$454load_attr.10'}), (456, {'res': '$const456.11'}), (458, {'res': '$vpacket_collection458.12'}), (460, {'item': '$vpacket_collection458.12', 'res': '$460load_attr.13'}), (462, {'start': '$const456.11', 'stop': '$460load_attr.13', 'step': None, 'res': '$462build_slice.15', 'slicevar': '$462build_slice.14'}), (464, {'index': '$462build_slice.15', 'target': '$454load_attr.10', 'res': '$464binary_subscr.16'}), (466, {'value': '$464binary_subscr.16'}), (468, {'res': '$468load_global.17'}), (470, {'item': '$468load_global.17', 'res': '$470load_method.18'}), (472, {'res': '$vpackets_nu472.19'}), (474, {'res': '$spectrum_frequency474.20'}), (476, {'res': '$const476.21'}), (478, {'index': '$const476.21', 'target': '$spectrum_frequency474.20', 'res': '$478binary_subscr.22'}), (480, {'lhs': '$vpackets_nu472.19', 'rhs': '$478binary_subscr.22', 'res': '$480binary_subtract.23'}), (482, {'res': '$delta_nu482.24'}), (484, {'lhs': '$480binary_subtract.23', 'rhs': '$delta_nu482.24', 'res': '$484binary_true_divide.25'}), (486, {'func': '$470load_method.18', 'args': ['$484binary_true_divide.25'], 'res': '$486call_method.26'}), (488, {'item': '$486call_method.26', 'res': '$488load_method.27'}), (490, {'res': '$490load_global.28'}), (492, {'item': '$490load_global.28', 'res': '$492load_attr.29'}), (494, {'func': '$488load_method.27', 'args': ['$492load_attr.29'], 'res': '$494call_method.30'}), (496, {'value': '$494call_method.30'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={498: ('$phi436.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=498 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$500load_global.1'}), (502, {'res': '$v_packets_idx502.2'}), (504, {'func': '$500load_global.1', 'args': ['$v_packets_idx502.2'], 'res': '$504call_function.3'}), (506, {'value': '$504call_function.3', 'res': '$506get_iter.4'})), outgoing_phis={'$phi508.1': '$506get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={508: ('$phi498.0', '$506get_iter.4')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=508 nstack_initial=2):
AdaptBlockInfo(insts=((508, {'iterator': '$phi508.1', 'pair': '$508for_iter.2', 'indval': '$508for_iter.3', 'pred': '$508for_iter.4'}),), outgoing_phis={'$phi510.2': '$508for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={580: ('$phi508.0',), 510: ('$phi508.0', '$phi508.1', '$508for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=510 nstack_initial=3):
AdaptBlockInfo(insts=((510, {'iterable': '$phi510.2', 'stores': ['$510unpack_sequence.3', '$510unpack_sequence.4'], 'tupleobj': '$510unpack_sequence.5'}), (512, {'value': '$510unpack_sequence.3'}), (514, {'value': '$510unpack_sequence.4'}), (516, {'res': '$vpackets_nu516.6'}), (518, {'res': '$j518.7'}), (520, {'index': '$j518.7', 'target': '$vpackets_nu516.6', 'res': '$520binary_subscr.8'}), (522, {'res': '$spectrum_frequency522.9'}), (524, {'res': '$const524.10'}), (526, {'index': '$const524.10', 'target': '$spectrum_frequency522.9', 'res': '$526binary_subscr.11'}), (528, {'lhs': '$520binary_subscr.8', 'rhs': '$526binary_subscr.11', 'res': '$528compare_op.12'}), (530, {'pred': '$528compare_op.12'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={534: ('$phi510.0', '$phi510.1'), 508: ('$phi510.0', '$phi510.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=534 nstack_initial=2):
AdaptBlockInfo(insts=((534, {'res': '$vpackets_nu534.2'}), (536, {'res': '$j536.3'}), (538, {'index': '$j536.3', 'target': '$vpackets_nu534.2', 'res': '$538binary_subscr.4'}), (540, {'res': '$spectrum_frequency540.5'}), (542, {'res': '$const542.6'}), (544, {'index': '$const542.6', 'target': '$spectrum_frequency540.5', 'res': '$544binary_subscr.7'}), (546, {'lhs': '$538binary_subscr.4', 'rhs': '$544binary_subscr.7', 'res': '$546compare_op.8'}), (548, {'pred': '$546compare_op.8'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={552: ('$phi534.0', '$phi534.1'), 556: ('$phi534.0', '$phi534.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=552 nstack_initial=2):
AdaptBlockInfo(insts=((552, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={508: ('$phi552.0', '$phi552.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=556 nstack_initial=2):
AdaptBlockInfo(insts=((556, {'res': '$v_packets_energy_hist556.2'}), (558, {'res': '$idx558.3'}), (560, {'orig': ['$v_packets_energy_hist556.2', '$idx558.3'], 'duped': ['$560dup_top_two.4', '$560dup_top_two.5']}), (562, {'index': '$560dup_top_two.5', 'target': '$560dup_top_two.4', 'res': '$562binary_subscr.6'}), (564, {'res': '$vpackets_energy564.7'}), (566, {'res': '$j566.8'}), (568, {'index': '$j566.8', 'target': '$vpackets_energy564.7', 'res': '$568binary_subscr.9'}), (570, {'lhs': '$562binary_subscr.6', 'rhs': '$568binary_subscr.9', 'res': '$570inplace_add.10'}), (574, {'target': '$v_packets_energy_hist556.2', 'index': '$idx558.3', 'value': '$570inplace_add.10'}), (576, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={508: ('$phi556.0', '$phi556.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=580 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 582, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={582: ('$phi580.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=582 nstack_initial=1):
AdaptBlockInfo(insts=((582, {'res': '$582load_global.1'}), (584, {'item': '$582load_global.1', 'res': '$584load_attr.2'}), (586, {'pred': '$584load_attr.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={588: ('$phi582.0',), 178: ('$phi582.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=588 nstack_initial=1):
AdaptBlockInfo(insts=((588, {'res': '$virt_packet_nus588.1'}), (590, {'item': '$virt_packet_nus588.1', 'res': '$590load_method.2'}), (592, {'res': '$vpackets_nu592.3'}), (594, {'func': '$590load_method.2', 'args': ['$vpackets_nu592.3'], 'res': '$594call_method.4'}), (598, {'res': '$virt_packet_energies598.5'}), (600, {'item': '$virt_packet_energies598.5', 'res': '$600load_method.6'}), (602, {'res': '$vpackets_energy602.7'}), (604, {'func': '$600load_method.6', 'args': ['$vpackets_energy602.7'], 'res': '$604call_method.8'}), (608, {'res': '$virt_packet_last_interaction_in_nu608.9'}), (610, {'item': '$virt_packet_last_interaction_in_nu608.9', 'res': '$610load_method.10'}), (612, {'res': '$vpacket_collection612.11'}), (614, {'item': '$vpacket_collection612.11', 'res': '$614load_attr.12'}), (616, {'res': '$const616.13'}), (618, {'res': '$vpacket_collection618.14'}), (620, {'item': '$vpacket_collection618.14', 'res': '$620load_attr.15'}), (622, {'start': '$const616.13', 'stop': '$620load_attr.15', 'step': None, 'res': '$622build_slice.17', 'slicevar': '$622build_slice.16'}), (624, {'index': '$622build_slice.17', 'target': '$614load_attr.12', 'res': '$624binary_subscr.18'}), (626, {'func': '$610load_method.10', 'args': ['$624binary_subscr.18'], 'res': '$626call_method.19'}), (630, {'res': '$virt_packet_last_interaction_type630.20'}), (632, {'item': '$virt_packet_last_interaction_type630.20', 'res': '$632load_method.21'}), (634, {'res': '$vpacket_collection634.22'}), (636, {'item': '$vpacket_collection634.22', 'res': '$636load_attr.23'}), (638, {'res': '$const638.24'}), (640, {'res': '$vpacket_collection640.25'}), (642, {'item': '$vpacket_collection640.25', 'res': '$642load_attr.26'}), (644, {'start': '$const638.24', 'stop': '$642load_attr.26', 'step': None, 'res': '$644build_slice.28', 'slicevar': '$644build_slice.27'}), (646, {'index': '$644build_slice.28', 'target': '$636load_attr.23', 'res': '$646binary_subscr.29'}), (648, {'func': '$632load_method.21', 'args': ['$646binary_subscr.29'], 'res': '$648call_method.30'}), (652, {'res': '$virt_packet_last_line_interaction_in_id652.31'}), (654, {'item': '$virt_packet_last_line_interaction_in_id652.31', 'res': '$654load_method.32'}), (656, {'res': '$vpacket_collection656.33'}), (658, {'item': '$vpacket_collection656.33', 'res': '$658load_attr.34'}), (660, {'res': '$const660.35'}), (662, {'res': '$vpacket_collection662.36'}), (664, {'item': '$vpacket_collection662.36', 'res': '$664load_attr.37'}), (666, {'start': '$const660.35', 'stop': '$664load_attr.37', 'step': None, 'res': '$666build_slice.39', 'slicevar': '$666build_slice.38'}), (668, {'index': '$666build_slice.39', 'target': '$658load_attr.34', 'res': '$668binary_subscr.40'}), (670, {'func': '$654load_method.32', 'args': ['$668binary_subscr.40'], 'res': '$670call_method.41'}), (674, {'res': '$virt_packet_last_line_interaction_out_id674.42'}), (676, {'item': '$virt_packet_last_line_interaction_out_id674.42', 'res': '$676load_method.43'}), (678, {'res': '$vpacket_collection678.44'}), (680, {'item': '$vpacket_collection678.44', 'res': '$680load_attr.45'}), (682, {'res': '$const682.46'}), (684, {'res': '$vpacket_collection684.47'}), (686, {'item': '$vpacket_collection684.47', 'res': '$686load_attr.48'}), (688, {'start': '$const682.46', 'stop': '$686load_attr.48', 'step': None, 'res': '$688build_slice.50', 'slicevar': '$688build_slice.49'}), (690, {'index': '$688build_slice.50', 'target': '$680load_attr.45', 'res': '$690binary_subscr.51'}), (692, {'func': '$676load_method.43', 'args': ['$690binary_subscr.51'], 'res': '$692call_method.52'}), (696, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={178: ('$phi588.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=698 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 700, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={700: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=700 nstack_initial=0):
AdaptBlockInfo(insts=((700, {'res': '$output_energies700.0'}), (702, {'res': '$const702.1'}), (704, {'res': '$const704.2'}), (706, {'start': '$const702.1', 'stop': '$const704.2', 'step': None, 'res': '$706build_slice.4', 'slicevar': '$706build_slice.3'}), (708, {'index': '$706build_slice.4', 'target': '$output_energies700.0', 'res': '$708binary_subscr.5'}), (710, {'res': '$packet_collection710.6'}), (712, {'item': '$packet_collection710.6', 'res': '$712load_attr.7'}), (714, {'res': '$const714.8'}), (716, {'res': '$const716.9'}), (718, {'start': '$const714.8', 'stop': '$const716.9', 'step': None, 'res': '$718build_slice.11', 'slicevar': '$718build_slice.10'}), (720, {'target': '$712load_attr.7', 'index': '$718build_slice.11', 'value': '$708binary_subscr.5'}), (722, {'res': '$output_nus722.12'}), (724, {'res': '$const724.13'}), (726, {'res': '$const726.14'}), (728, {'start': '$const724.13', 'stop': '$const726.14', 'step': None, 'res': '$728build_slice.16', 'slicevar': '$728build_slice.15'}), (730, {'index': '$728build_slice.16', 'target': '$output_nus722.12', 'res': '$730binary_subscr.17'}), (732, {'res': '$packet_collection732.18'}), (734, {'item': '$packet_collection732.18', 'res': '$734load_attr.19'}), (736, {'res': '$const736.20'}), (738, {'res': '$const738.21'}), (740, {'start': '$const736.20', 'stop': '$const738.21', 'step': None, 'res': '$740build_slice.23', 'slicevar': '$740build_slice.22'}), (742, {'target': '$734load_attr.19', 'index': '$740build_slice.23', 'value': '$730binary_subscr.17'}), (744, {'res': '$v_packets_energy_hist744.24'}), (746, {'res': '$last_interaction_types746.25'}), (748, {'res': '$last_interaction_in_nus748.26'}), (750, {'res': '$last_line_interaction_in_ids750.27'}), (752, {'res': '$last_line_interaction_out_ids752.28'}), (754, {'res': '$virt_packet_nus754.29'}), (756, {'res': '$virt_packet_energies756.30'}), (758, {'res': '$virt_packet_last_interaction_in_nu758.31'}), (760, {'res': '$virt_packet_last_interaction_type760.32'}), (762, {'res': '$virt_packet_last_line_interaction_in_id762.33'}), (764, {'res': '$virt_packet_last_line_interaction_out_id764.34'}), (766, {'items': ['$v_packets_energy_hist744.24', '$last_interaction_types746.25', '$last_interaction_in_nus748.26', '$last_line_interaction_in_ids750.27', '$last_line_interaction_out_ids752.28', '$virt_packet_nus754.29', '$virt_packet_energies756.30', '$virt_packet_last_interaction_in_nu758.31', '$virt_packet_last_interaction_type760.32', '$virt_packet_last_line_interaction_in_id762.33', '$virt_packet_last_line_interaction_out_id764.34'], 'res': '$766build_tuple.35'}), (768, {'retval': '$766build_tuple.35', 'castval': '$768return_value.36'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    packet_collection = arg(0, name=packet_collection) ['packet_collection']
    numba_model = arg(1, name=numba_model)   ['numba_model']
    numba_plasma = arg(2, name=numba_plasma) ['numba_plasma']
    estimators = arg(3, name=estimators)     ['estimators']
    spectrum_frequency = arg(4, name=spectrum_frequency) ['spectrum_frequency']
    number_of_vpackets = arg(5, name=number_of_vpackets) ['number_of_vpackets']
    packet_seeds = arg(6, name=packet_seeds) ['packet_seeds']
    $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=empty_like) ['$2load_global.0', '$4load_method.1']
    $8load_attr.3 = getattr(value=packet_collection, attr=packets_output_nu) ['$8load_attr.3', 'packet_collection']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, base.py:128)], kws=(), vararg=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    output_nus = $10call_method.4            ['$10call_method.4', 'output_nus']
    $14load_global.5 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=ones_like) ['$14load_global.5', '$16load_attr.6']
    $20load_attr.8 = getattr(value=packet_collection, attr=packets_output_nu) ['$20load_attr.8', 'packet_collection']
    $22load_global.9 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$22load_global.9']
    $24load_attr.10 = getattr(value=$22load_global.9, attr=int64) ['$22load_global.9', '$24load_attr.10']
    $28call_function_kw.12 = call $16load_attr.6($20load_attr.8, func=$16load_attr.6, args=[Var($20load_attr.8, base.py:130)], kws=[('dtype', Var($24load_attr.10, base.py:130))], vararg=None) ['$16load_attr.6', '$20load_attr.8', '$24load_attr.10', '$28call_function_kw.12']
    $const30.13 = const(int, -1)             ['$const30.13']
    $32binary_multiply.14 = $28call_function_kw.12 * $const30.13 ['$28call_function_kw.12', '$32binary_multiply.14', '$const30.13']
    last_interaction_types = $32binary_multiply.14 ['$32binary_multiply.14', 'last_interaction_types']
    $36load_global.15 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$36load_global.15']
    $38load_method.16 = getattr(value=$36load_global.15, attr=empty_like) ['$36load_global.15', '$38load_method.16']
    $42load_attr.18 = getattr(value=packet_collection, attr=packets_output_nu) ['$42load_attr.18', 'packet_collection']
    $44call_method.19 = call $38load_method.16($42load_attr.18, func=$38load_method.16, args=[Var($42load_attr.18, base.py:132)], kws=(), vararg=None) ['$38load_method.16', '$42load_attr.18', '$44call_method.19']
    output_energies = $44call_method.19      ['$44call_method.19', 'output_energies']
    $48load_global.20 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$48load_global.20']
    $50load_method.21 = getattr(value=$48load_global.20, attr=empty_like) ['$48load_global.20', '$50load_method.21']
    $54load_attr.23 = getattr(value=packet_collection, attr=packets_output_nu) ['$54load_attr.23', 'packet_collection']
    $56call_method.24 = call $50load_method.21($54load_attr.23, func=$50load_method.21, args=[Var($54load_attr.23, base.py:134)], kws=(), vararg=None) ['$50load_method.21', '$54load_attr.23', '$56call_method.24']
    last_interaction_in_nus = $56call_method.24 ['$56call_method.24', 'last_interaction_in_nus']
    $60load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$60load_global.25']
    $62load_attr.26 = getattr(value=$60load_global.25, attr=ones_like) ['$60load_global.25', '$62load_attr.26']
    $66load_attr.28 = getattr(value=packet_collection, attr=packets_output_nu) ['$66load_attr.28', 'packet_collection']
    $68load_global.29 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$68load_global.29']
    $70load_attr.30 = getattr(value=$68load_global.29, attr=int64) ['$68load_global.29', '$70load_attr.30']
    $74call_function_kw.32 = call $62load_attr.26($66load_attr.28, func=$62load_attr.26, args=[Var($66load_attr.28, base.py:136)], kws=[('dtype', Var($70load_attr.30, base.py:136))], vararg=None) ['$62load_attr.26', '$66load_attr.28', '$70load_attr.30', '$74call_function_kw.32']
    $const76.33 = const(int, -1)             ['$const76.33']
    $78binary_multiply.34 = $74call_function_kw.32 * $const76.33 ['$74call_function_kw.32', '$78binary_multiply.34', '$const76.33']
    last_line_interaction_in_ids = $78binary_multiply.34 ['$78binary_multiply.34', 'last_line_interaction_in_ids']
    $82load_global.35 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$82load_global.35']
    $84load_attr.36 = getattr(value=$82load_global.35, attr=ones_like) ['$82load_global.35', '$84load_attr.36']
    $88load_attr.38 = getattr(value=packet_collection, attr=packets_output_nu) ['$88load_attr.38', 'packet_collection']
    $90load_global.39 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$90load_global.39']
    $92load_attr.40 = getattr(value=$90load_global.39, attr=int64) ['$90load_global.39', '$92load_attr.40']
    $96call_function_kw.42 = call $84load_attr.36($88load_attr.38, func=$84load_attr.36, args=[Var($88load_attr.38, base.py:139)], kws=[('dtype', Var($92load_attr.40, base.py:139))], vararg=None) ['$84load_attr.36', '$88load_attr.38', '$92load_attr.40', '$96call_function_kw.42']
    $const98.43 = const(int, -1)             ['$const98.43']
    $100binary_multiply.44 = $96call_function_kw.42 * $const98.43 ['$100binary_multiply.44', '$96call_function_kw.42', '$const98.43']
    last_line_interaction_out_ids = $100binary_multiply.44 ['$100binary_multiply.44', 'last_line_interaction_out_ids']
    $104load_global.45 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$104load_global.45']
    $106load_method.46 = getattr(value=$104load_global.45, attr=zeros_like) ['$104load_global.45', '$106load_method.46']
    $110call_method.48 = call $106load_method.46(spectrum_frequency, func=$106load_method.46, args=[Var(spectrum_frequency, base.py:128)], kws=(), vararg=None) ['$106load_method.46', '$110call_method.48', 'spectrum_frequency']
    v_packets_energy_hist = $110call_method.48 ['$110call_method.48', 'v_packets_energy_hist']
    $const116.50 = const(int, 1)             ['$const116.50']
    $118binary_subscr.51 = getitem(value=spectrum_frequency, index=$const116.50) ['$118binary_subscr.51', '$const116.50', 'spectrum_frequency']
    $const122.53 = const(int, 0)             ['$const122.53']
    $124binary_subscr.54 = getitem(value=spectrum_frequency, index=$const122.53) ['$124binary_subscr.54', '$const122.53', 'spectrum_frequency']
    $126binary_subtract.55 = $118binary_subscr.51 - $124binary_subscr.54 ['$118binary_subscr.51', '$124binary_subscr.54', '$126binary_subtract.55']
    delta_nu = $126binary_subtract.55        ['$126binary_subtract.55', 'delta_nu']
    $130build_list.56 = build_list(items=[]) ['$130build_list.56']
    virt_packet_nus = $130build_list.56      ['$130build_list.56', 'virt_packet_nus']
    $134build_list.57 = build_list(items=[]) ['$134build_list.57']
    virt_packet_energies = $134build_list.57 ['$134build_list.57', 'virt_packet_energies']
    $138build_list.58 = build_list(items=[]) ['$138build_list.58']
    virt_packet_last_interaction_in_nu = $138build_list.58 ['$138build_list.58', 'virt_packet_last_interaction_in_nu']
    $142build_list.59 = build_list(items=[]) ['$142build_list.59']
    virt_packet_last_interaction_type = $142build_list.59 ['$142build_list.59', 'virt_packet_last_interaction_type']
    $146build_list.60 = build_list(items=[]) ['$146build_list.60']
    virt_packet_last_line_interaction_in_id = $146build_list.60 ['$146build_list.60', 'virt_packet_last_line_interaction_in_id']
    $150build_list.61 = build_list(items=[]) ['$150build_list.61']
    virt_packet_last_line_interaction_out_id = $150build_list.61 ['$150build_list.61', 'virt_packet_last_line_interaction_out_id']
    $154load_global.62 = global(print: <built-in function print>) ['$154load_global.62']
    $const156.63 = const(str, Running post-merge numba montecarlo (with C close lines)!) ['$const156.63']
    $158call_function.64 = call $154load_global.62($const156.63, func=$154load_global.62, args=[Var($const156.63, base.py:152)], kws=(), vararg=None) ['$154load_global.62', '$158call_function.64', '$const156.63']
    jump 162                                 []
label 162:
    $166load_global.0 = global(prange: <class 'numba.misc.special.prange'>) ['$166load_global.0']
    $168load_global.1 = global(len: <built-in function len>) ['$168load_global.1']
    $172call_function.3 = call $168load_global.1(output_nus, func=$168load_global.1, args=[Var(output_nus, base.py:128)], kws=(), vararg=None) ['$168load_global.1', '$172call_function.3', 'output_nus']
    $174call_function.4 = call $166load_global.0($172call_function.3, func=$166load_global.0, args=[Var($172call_function.3, base.py:153)], kws=(), vararg=None) ['$166load_global.0', '$172call_function.3', '$174call_function.4']
    $176get_iter.5 = getiter(value=$174call_function.4) ['$174call_function.4', '$176get_iter.5']
    $phi178.0 = $176get_iter.5               ['$176get_iter.5', '$phi178.0']
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi182.1 = $178for_iter.2               ['$178for_iter.2', '$phi182.1']
    branch $178for_iter.3, 182, 698          ['$178for_iter.3']
label 182:
    i = $phi182.1                            ['$phi182.1', 'i']
    $184load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$184load_global.2']
    $186load_attr.3 = getattr(value=$184load_global.2, attr=single_packet_seed) ['$184load_global.2', '$186load_attr.3']
    $const188.4 = const(int, -1)             ['$const188.4']
    $190compare_op.5 = $186load_attr.3 != $const188.4 ['$186load_attr.3', '$190compare_op.5', '$const188.4']
    bool192 = global(bool: <class 'bool'>)   ['bool192']
    $192pred = call bool192($190compare_op.5, func=bool192, args=(Var($190compare_op.5, base.py:154),), kws=(), vararg=None) ['$190compare_op.5', '$192pred', 'bool192']
    branch $192pred, 194, 218                ['$192pred']
label 194:
    $196load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$196load_global.2']
    $198load_attr.3 = getattr(value=$196load_global.2, attr=single_packet_seed) ['$196load_global.2', '$198load_attr.3']
    $200binary_subscr.4 = getitem(value=packet_seeds, index=$198load_attr.3) ['$198load_attr.3', '$200binary_subscr.4', 'packet_seeds']
    seed = $200binary_subscr.4               ['$200binary_subscr.4', 'seed']
    $204load_global.5 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$204load_global.5']
    $206load_attr.6 = getattr(value=$204load_global.5, attr=random) ['$204load_global.5', '$206load_attr.6']
    $208load_method.7 = getattr(value=$206load_attr.6, attr=seed) ['$206load_attr.6', '$208load_method.7']
    $212call_method.9 = call $208load_method.7(seed, func=$208load_method.7, args=[Var(seed, base.py:155)], kws=(), vararg=None) ['$208load_method.7', '$212call_method.9', 'seed']
    jump 238                                 []
label 218:
    $222binary_subscr.3 = getitem(value=packet_seeds, index=i) ['$222binary_subscr.3', 'i', 'packet_seeds']
    seed = $222binary_subscr.3               ['$222binary_subscr.3', 'seed']
    $226load_global.4 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$226load_global.4']
    $228load_attr.5 = getattr(value=$226load_global.4, attr=random) ['$226load_global.4', '$228load_attr.5']
    $230load_method.6 = getattr(value=$228load_attr.5, attr=seed) ['$228load_attr.5', '$230load_method.6']
    $234call_method.8 = call $230load_method.6(seed, func=$230load_method.6, args=[Var(seed, base.py:155)], kws=(), vararg=None) ['$230load_method.6', '$234call_method.8', 'seed']
    jump 238                                 []
label 238:
    $238load_global.1 = global(RPacket: <class 'numba.experimental.jitclass.base.RPacket'>) ['$238load_global.1']
    $242load_attr.3 = getattr(value=numba_model, attr=r_inner) ['$242load_attr.3', 'numba_model']
    $const244.4 = const(int, 0)              ['$const244.4']
    $246binary_subscr.5 = getitem(value=$242load_attr.3, index=$const244.4) ['$242load_attr.3', '$246binary_subscr.5', '$const244.4']
    $250load_attr.7 = getattr(value=packet_collection, attr=packets_input_mu) ['$250load_attr.7', 'packet_collection']
    $254binary_subscr.9 = getitem(value=$250load_attr.7, index=i) ['$250load_attr.7', '$254binary_subscr.9', 'i']
    $258load_attr.11 = getattr(value=packet_collection, attr=packets_input_nu) ['$258load_attr.11', 'packet_collection']
    $262binary_subscr.13 = getitem(value=$258load_attr.11, index=i) ['$258load_attr.11', '$262binary_subscr.13', 'i']
    $266load_attr.15 = getattr(value=packet_collection, attr=packets_input_energy) ['$266load_attr.15', 'packet_collection']
    $270binary_subscr.17 = getitem(value=$266load_attr.15, index=i) ['$266load_attr.15', '$270binary_subscr.17', 'i']
    $const276.20 = const(int, 0)             ['$const276.20']
    $278call_function.21 = call $238load_global.1($246binary_subscr.5, $254binary_subscr.9, $262binary_subscr.13, $270binary_subscr.17, seed, i, $const276.20, func=$238load_global.1, args=[Var($246binary_subscr.5, base.py:161), Var($254binary_subscr.9, base.py:162), Var($262binary_subscr.13, base.py:163), Var($270binary_subscr.17, base.py:164), Var(seed, base.py:155), Var(i, base.py:153), Var($const276.20, base.py:167)], kws=(), vararg=None) ['$238load_global.1', '$246binary_subscr.5', '$254binary_subscr.9', '$262binary_subscr.13', '$270binary_subscr.17', '$278call_function.21', '$const276.20', 'i', 'seed']
    r_packet = $278call_function.21          ['$278call_function.21', 'r_packet']
    $282load_global.22 = global(VPacketCollection: <class 'numba.experimental.jitclass.base.VPacketCollection'>) ['$282load_global.22']
    $286load_attr.24 = getattr(value=r_packet, attr=index) ['$286load_attr.24', 'r_packet']
    $290load_global.26 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$290load_global.26']
    $292load_attr.27 = getattr(value=$290load_global.26, attr=v_packet_spawn_start_frequency) ['$290load_global.26', '$292load_attr.27']
    $294load_global.28 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$294load_global.28']
    $296load_attr.29 = getattr(value=$294load_global.28, attr=v_packet_spawn_end_frequency) ['$294load_global.28', '$296load_attr.29']
    $300load_global.31 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$300load_global.31']
    $302load_attr.32 = getattr(value=$300load_global.31, attr=temporary_v_packet_bins) ['$300load_global.31', '$302load_attr.32']
    $304call_function.33 = call $282load_global.22($286load_attr.24, spectrum_frequency, $292load_attr.27, $296load_attr.29, number_of_vpackets, $302load_attr.32, func=$282load_global.22, args=[Var($286load_attr.24, base.py:170), Var(spectrum_frequency, base.py:128), Var($292load_attr.27, base.py:172), Var($296load_attr.29, base.py:173), Var(number_of_vpackets, base.py:128), Var($302load_attr.32, base.py:175)], kws=(), vararg=None) ['$282load_global.22', '$286load_attr.24', '$292load_attr.27', '$296load_attr.29', '$302load_attr.32', '$304call_function.33', 'number_of_vpackets', 'spectrum_frequency']
    vpacket_collection = $304call_function.33 ['$304call_function.33', 'vpacket_collection']
    $308load_global.34 = global(single_packet_loop: CPUDispatcher(<function single_packet_loop at 0x7f6e4a107ef0>)) ['$308load_global.34']
    $320call_function.40 = call $308load_global.34(r_packet, numba_model, numba_plasma, estimators, vpacket_collection, func=$308load_global.34, args=[Var(r_packet, base.py:167), Var(numba_model, base.py:128), Var(numba_plasma, base.py:128), Var(estimators, base.py:128), Var(vpacket_collection, base.py:175)], kws=(), vararg=None) ['$308load_global.34', '$320call_function.40', 'estimators', 'numba_model', 'numba_plasma', 'r_packet', 'vpacket_collection']
    loop = $320call_function.40              ['$320call_function.40', 'loop']
    $326load_attr.42 = getattr(value=r_packet, attr=nu) ['$326load_attr.42', 'r_packet']
    output_nus[i] = $326load_attr.42         ['$326load_attr.42', 'i', 'output_nus']
    $336load_attr.46 = getattr(value=r_packet, attr=last_interaction_in_nu) ['$336load_attr.46', 'r_packet']
    last_interaction_in_nus[i] = $336load_attr.46 ['$336load_attr.46', 'i', 'last_interaction_in_nus']
    $346load_attr.50 = getattr(value=r_packet, attr=last_line_interaction_in_id) ['$346load_attr.50', 'r_packet']
    last_line_interaction_in_ids[i] = $346load_attr.50 ['$346load_attr.50', 'i', 'last_line_interaction_in_ids']
    $356load_attr.54 = getattr(value=r_packet, attr=last_line_interaction_out_id) ['$356load_attr.54', 'r_packet']
    last_line_interaction_out_ids[i] = $356load_attr.54 ['$356load_attr.54', 'i', 'last_line_interaction_out_ids']
    $366load_attr.58 = getattr(value=r_packet, attr=status) ['$366load_attr.58', 'r_packet']
    $368load_global.59 = global(PacketStatus: <enum 'PacketStatus'>) ['$368load_global.59']
    $370load_attr.60 = getattr(value=$368load_global.59, attr=REABSORBED) ['$368load_global.59', '$370load_attr.60']
    $372compare_op.61 = $366load_attr.58 == $370load_attr.60 ['$366load_attr.58', '$370load_attr.60', '$372compare_op.61']
    bool374 = global(bool: <class 'bool'>)   ['bool374']
    $374pred = call bool374($372compare_op.61, func=bool374, args=(Var($372compare_op.61, base.py:188),), kws=(), vararg=None) ['$372compare_op.61', '$374pred', 'bool374']
    branch $374pred, 378, 402                ['$374pred']
label 378:
    $380load_attr.2 = getattr(value=r_packet, attr=energy) ['$380load_attr.2', 'r_packet']
    $382unary_negative.3 = unary(fn=<built-in function neg>, value=$380load_attr.2) ['$380load_attr.2', '$382unary_negative.3']
    output_energies[i] = $382unary_negative.3 ['$382unary_negative.3', 'i', 'output_energies']
    $392load_attr.7 = getattr(value=r_packet, attr=last_interaction_type) ['$392load_attr.7', 'r_packet']
    last_interaction_types[i] = $392load_attr.7 ['$392load_attr.7', 'i', 'last_interaction_types']
    jump 436                                 []
label 402:
    $404load_attr.2 = getattr(value=r_packet, attr=status) ['$404load_attr.2', 'r_packet']
    $406load_global.3 = global(PacketStatus: <enum 'PacketStatus'>) ['$406load_global.3']
    $408load_attr.4 = getattr(value=$406load_global.3, attr=EMITTED) ['$406load_global.3', '$408load_attr.4']
    $410compare_op.5 = $404load_attr.2 == $408load_attr.4 ['$404load_attr.2', '$408load_attr.4', '$410compare_op.5']
    bool412 = global(bool: <class 'bool'>)   ['bool412']
    $412pred = call bool412($410compare_op.5, func=bool412, args=(Var($410compare_op.5, base.py:191),), kws=(), vararg=None) ['$410compare_op.5', '$412pred', 'bool412']
    branch $412pred, 416, 436                ['$412pred']
label 416:
    $418load_attr.2 = getattr(value=r_packet, attr=energy) ['$418load_attr.2', 'r_packet']
    output_energies[i] = $418load_attr.2     ['$418load_attr.2', 'i', 'output_energies']
    $428load_attr.6 = getattr(value=r_packet, attr=last_interaction_type) ['$428load_attr.6', 'r_packet']
    last_interaction_types[i] = $428load_attr.6 ['$428load_attr.6', 'i', 'last_interaction_types']
    jump 436                                 []
label 436:
    $438load_attr.2 = getattr(value=vpacket_collection, attr=nus) ['$438load_attr.2', 'vpacket_collection']
    $const440.3 = const(NoneType, None)      ['$const440.3']
    $444load_attr.5 = getattr(value=vpacket_collection, attr=idx) ['$444load_attr.5', 'vpacket_collection']
    $446build_slice.6 = global(slice: <class 'slice'>) ['$446build_slice.6']
    $446build_slice.7 = call $446build_slice.6($const440.3, $444load_attr.5, func=$446build_slice.6, args=(Var($const440.3, base.py:195), Var($444load_attr.5, base.py:195)), kws=(), vararg=None) ['$444load_attr.5', '$446build_slice.6', '$446build_slice.7', '$const440.3']
    $448binary_subscr.8 = getitem(value=$438load_attr.2, index=$446build_slice.7) ['$438load_attr.2', '$446build_slice.7', '$448binary_subscr.8']
    vpackets_nu = $448binary_subscr.8        ['$448binary_subscr.8', 'vpackets_nu']
    $454load_attr.10 = getattr(value=vpacket_collection, attr=energies) ['$454load_attr.10', 'vpacket_collection']
    $const456.11 = const(NoneType, None)     ['$const456.11']
    $460load_attr.13 = getattr(value=vpacket_collection, attr=idx) ['$460load_attr.13', 'vpacket_collection']
    $462build_slice.14 = global(slice: <class 'slice'>) ['$462build_slice.14']
    $462build_slice.15 = call $462build_slice.14($const456.11, $460load_attr.13, func=$462build_slice.14, args=(Var($const456.11, base.py:196), Var($460load_attr.13, base.py:196)), kws=(), vararg=None) ['$460load_attr.13', '$462build_slice.14', '$462build_slice.15', '$const456.11']
    $464binary_subscr.16 = getitem(value=$454load_attr.10, index=$462build_slice.15) ['$454load_attr.10', '$462build_slice.15', '$464binary_subscr.16']
    vpackets_energy = $464binary_subscr.16   ['$464binary_subscr.16', 'vpackets_energy']
    $468load_global.17 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$468load_global.17']
    $470load_method.18 = getattr(value=$468load_global.17, attr=floor) ['$468load_global.17', '$470load_method.18']
    $const476.21 = const(int, 0)             ['$const476.21']
    $478binary_subscr.22 = getitem(value=spectrum_frequency, index=$const476.21) ['$478binary_subscr.22', '$const476.21', 'spectrum_frequency']
    $480binary_subtract.23 = vpackets_nu - $478binary_subscr.22 ['$478binary_subscr.22', '$480binary_subtract.23', 'vpackets_nu']
    $484binary_true_divide.25 = $480binary_subtract.23 / delta_nu ['$480binary_subtract.23', '$484binary_true_divide.25', 'delta_nu']
    $486call_method.26 = call $470load_method.18($484binary_true_divide.25, func=$470load_method.18, args=[Var($484binary_true_divide.25, base.py:199)], kws=(), vararg=None) ['$470load_method.18', '$484binary_true_divide.25', '$486call_method.26']
    $488load_method.27 = getattr(value=$486call_method.26, attr=astype) ['$486call_method.26', '$488load_method.27']
    $490load_global.28 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$490load_global.28']
    $492load_attr.29 = getattr(value=$490load_global.28, attr=int64) ['$490load_global.28', '$492load_attr.29']
    $494call_method.30 = call $488load_method.27($492load_attr.29, func=$488load_method.27, args=[Var($492load_attr.29, base.py:200)], kws=(), vararg=None) ['$488load_method.27', '$492load_attr.29', '$494call_method.30']
    v_packets_idx = $494call_method.30       ['$494call_method.30', 'v_packets_idx']
    jump 498                                 []
label 498:
    $500load_global.1 = global(enumerate: <class 'enumerate'>) ['$500load_global.1']
    $504call_function.3 = call $500load_global.1(v_packets_idx, func=$500load_global.1, args=[Var(v_packets_idx, base.py:200)], kws=(), vararg=None) ['$500load_global.1', '$504call_function.3', 'v_packets_idx']
    $506get_iter.4 = getiter(value=$504call_function.3) ['$504call_function.3', '$506get_iter.4']
    $phi508.1 = $506get_iter.4               ['$506get_iter.4', '$phi508.1']
    jump 508                                 []
label 508:
    $508for_iter.2 = iternext(value=$phi508.1) ['$508for_iter.2', '$phi508.1']
    $508for_iter.3 = pair_first(value=$508for_iter.2) ['$508for_iter.2', '$508for_iter.3']
    $508for_iter.4 = pair_second(value=$508for_iter.2) ['$508for_iter.2', '$508for_iter.4']
    $phi510.2 = $508for_iter.3               ['$508for_iter.3', '$phi510.2']
    branch $508for_iter.4, 510, 580          ['$508for_iter.4']
label 510:
    $510unpack_sequence.5 = exhaust_iter(value=$phi510.2, count=2) ['$510unpack_sequence.5', '$phi510.2']
    $510unpack_sequence.3 = static_getitem(value=$510unpack_sequence.5, index=0, index_var=None) ['$510unpack_sequence.3', '$510unpack_sequence.5']
    $510unpack_sequence.4 = static_getitem(value=$510unpack_sequence.5, index=1, index_var=None) ['$510unpack_sequence.4', '$510unpack_sequence.5']
    j = $510unpack_sequence.3                ['$510unpack_sequence.3', 'j']
    idx = $510unpack_sequence.4              ['$510unpack_sequence.4', 'idx']
    $520binary_subscr.8 = getitem(value=vpackets_nu, index=j) ['$520binary_subscr.8', 'j', 'vpackets_nu']
    $const524.10 = const(int, 0)             ['$const524.10']
    $526binary_subscr.11 = getitem(value=spectrum_frequency, index=$const524.10) ['$526binary_subscr.11', '$const524.10', 'spectrum_frequency']
    $528compare_op.12 = $520binary_subscr.8 < $526binary_subscr.11 ['$520binary_subscr.8', '$526binary_subscr.11', '$528compare_op.12']
    bool530 = global(bool: <class 'bool'>)   ['bool530']
    $530pred = call bool530($528compare_op.12, func=bool530, args=(Var($528compare_op.12, base.py:205),), kws=(), vararg=None) ['$528compare_op.12', '$530pred', 'bool530']
    branch $530pred, 508, 534                ['$530pred']
label 534:
    $538binary_subscr.4 = getitem(value=vpackets_nu, index=j) ['$538binary_subscr.4', 'j', 'vpackets_nu']
    $const542.6 = const(int, -1)             ['$const542.6']
    $544binary_subscr.7 = getitem(value=spectrum_frequency, index=$const542.6) ['$544binary_subscr.7', '$const542.6', 'spectrum_frequency']
    $546compare_op.8 = $538binary_subscr.4 > $544binary_subscr.7 ['$538binary_subscr.4', '$544binary_subscr.7', '$546compare_op.8']
    bool548 = global(bool: <class 'bool'>)   ['bool548']
    $548pred = call bool548($546compare_op.8, func=bool548, args=(Var($546compare_op.8, base.py:206),), kws=(), vararg=None) ['$546compare_op.8', '$548pred', 'bool548']
    branch $548pred, 552, 556                ['$548pred']
label 552:
    jump 508                                 []
label 556:
    $562binary_subscr.6 = getitem(value=v_packets_energy_hist, index=idx) ['$562binary_subscr.6', 'idx', 'v_packets_energy_hist']
    $568binary_subscr.9 = getitem(value=vpackets_energy, index=j) ['$568binary_subscr.9', 'j', 'vpackets_energy']
    $570inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$562binary_subscr.6, rhs=$568binary_subscr.9, static_lhs=Undefined, static_rhs=Undefined) ['$562binary_subscr.6', '$568binary_subscr.9', '$570inplace_add.10']
    v_packets_energy_hist[idx] = $570inplace_add.10 ['$570inplace_add.10', 'idx', 'v_packets_energy_hist']
    jump 508                                 []
label 580:
    jump 582                                 []
label 582:
    $582load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$582load_global.1']
    $584load_attr.2 = getattr(value=$582load_global.1, attr=VPACKET_LOGGING) ['$582load_global.1', '$584load_attr.2']
    bool586 = global(bool: <class 'bool'>)   ['bool586']
    $586pred = call bool586($584load_attr.2, func=bool586, args=(Var($584load_attr.2, base.py:211),), kws=(), vararg=None) ['$584load_attr.2', '$586pred', 'bool586']
    branch $586pred, 588, 178                ['$586pred']
label 588:
    $590load_method.2 = getattr(value=virt_packet_nus, attr=append) ['$590load_method.2', 'virt_packet_nus']
    $594call_method.4 = call $590load_method.2(vpackets_nu, func=$590load_method.2, args=[Var(vpackets_nu, base.py:195)], kws=(), vararg=None) ['$590load_method.2', '$594call_method.4', 'vpackets_nu']
    $600load_method.6 = getattr(value=virt_packet_energies, attr=append) ['$600load_method.6', 'virt_packet_energies']
    $604call_method.8 = call $600load_method.6(vpackets_energy, func=$600load_method.6, args=[Var(vpackets_energy, base.py:196)], kws=(), vararg=None) ['$600load_method.6', '$604call_method.8', 'vpackets_energy']
    $610load_method.10 = getattr(value=virt_packet_last_interaction_in_nu, attr=append) ['$610load_method.10', 'virt_packet_last_interaction_in_nu']
    $614load_attr.12 = getattr(value=vpacket_collection, attr=last_interaction_in_nu) ['$614load_attr.12', 'vpacket_collection']
    $const616.13 = const(NoneType, None)     ['$const616.13']
    $620load_attr.15 = getattr(value=vpacket_collection, attr=idx) ['$620load_attr.15', 'vpacket_collection']
    $622build_slice.16 = global(slice: <class 'slice'>) ['$622build_slice.16']
    $622build_slice.17 = call $622build_slice.16($const616.13, $620load_attr.15, func=$622build_slice.16, args=(Var($const616.13, base.py:215), Var($620load_attr.15, base.py:216)), kws=(), vararg=None) ['$620load_attr.15', '$622build_slice.16', '$622build_slice.17', '$const616.13']
    $624binary_subscr.18 = getitem(value=$614load_attr.12, index=$622build_slice.17) ['$614load_attr.12', '$622build_slice.17', '$624binary_subscr.18']
    $626call_method.19 = call $610load_method.10($624binary_subscr.18, func=$610load_method.10, args=[Var($624binary_subscr.18, base.py:216)], kws=(), vararg=None) ['$610load_method.10', '$624binary_subscr.18', '$626call_method.19']
    $632load_method.21 = getattr(value=virt_packet_last_interaction_type, attr=append) ['$632load_method.21', 'virt_packet_last_interaction_type']
    $636load_attr.23 = getattr(value=vpacket_collection, attr=last_interaction_type) ['$636load_attr.23', 'vpacket_collection']
    $const638.24 = const(NoneType, None)     ['$const638.24']
    $642load_attr.26 = getattr(value=vpacket_collection, attr=idx) ['$642load_attr.26', 'vpacket_collection']
    $644build_slice.27 = global(slice: <class 'slice'>) ['$644build_slice.27']
    $644build_slice.28 = call $644build_slice.27($const638.24, $642load_attr.26, func=$644build_slice.27, args=(Var($const638.24, base.py:220), Var($642load_attr.26, base.py:221)), kws=(), vararg=None) ['$642load_attr.26', '$644build_slice.27', '$644build_slice.28', '$const638.24']
    $646binary_subscr.29 = getitem(value=$636load_attr.23, index=$644build_slice.28) ['$636load_attr.23', '$644build_slice.28', '$646binary_subscr.29']
    $648call_method.30 = call $632load_method.21($646binary_subscr.29, func=$632load_method.21, args=[Var($646binary_subscr.29, base.py:221)], kws=(), vararg=None) ['$632load_method.21', '$646binary_subscr.29', '$648call_method.30']
    $654load_method.32 = getattr(value=virt_packet_last_line_interaction_in_id, attr=append) ['$654load_method.32', 'virt_packet_last_line_interaction_in_id']
    $658load_attr.34 = getattr(value=vpacket_collection, attr=last_interaction_in_id) ['$658load_attr.34', 'vpacket_collection']
    $const660.35 = const(NoneType, None)     ['$const660.35']
    $664load_attr.37 = getattr(value=vpacket_collection, attr=idx) ['$664load_attr.37', 'vpacket_collection']
    $666build_slice.38 = global(slice: <class 'slice'>) ['$666build_slice.38']
    $666build_slice.39 = call $666build_slice.38($const660.35, $664load_attr.37, func=$666build_slice.38, args=(Var($const660.35, base.py:225), Var($664load_attr.37, base.py:226)), kws=(), vararg=None) ['$664load_attr.37', '$666build_slice.38', '$666build_slice.39', '$const660.35']
    $668binary_subscr.40 = getitem(value=$658load_attr.34, index=$666build_slice.39) ['$658load_attr.34', '$666build_slice.39', '$668binary_subscr.40']
    $670call_method.41 = call $654load_method.32($668binary_subscr.40, func=$654load_method.32, args=[Var($668binary_subscr.40, base.py:226)], kws=(), vararg=None) ['$654load_method.32', '$668binary_subscr.40', '$670call_method.41']
    $676load_method.43 = getattr(value=virt_packet_last_line_interaction_out_id, attr=append) ['$676load_method.43', 'virt_packet_last_line_interaction_out_id']
    $680load_attr.45 = getattr(value=vpacket_collection, attr=last_interaction_out_id) ['$680load_attr.45', 'vpacket_collection']
    $const682.46 = const(NoneType, None)     ['$const682.46']
    $686load_attr.48 = getattr(value=vpacket_collection, attr=idx) ['$686load_attr.48', 'vpacket_collection']
    $688build_slice.49 = global(slice: <class 'slice'>) ['$688build_slice.49']
    $688build_slice.50 = call $688build_slice.49($const682.46, $686load_attr.48, func=$688build_slice.49, args=(Var($const682.46, base.py:230), Var($686load_attr.48, base.py:231)), kws=(), vararg=None) ['$686load_attr.48', '$688build_slice.49', '$688build_slice.50', '$const682.46']
    $690binary_subscr.51 = getitem(value=$680load_attr.45, index=$688build_slice.50) ['$680load_attr.45', '$688build_slice.50', '$690binary_subscr.51']
    $692call_method.52 = call $676load_method.43($690binary_subscr.51, func=$676load_method.43, args=[Var($690binary_subscr.51, base.py:231)], kws=(), vararg=None) ['$676load_method.43', '$690binary_subscr.51', '$692call_method.52']
    jump 178                                 []
label 698:
    jump 700                                 []
label 700:
    $const702.1 = const(NoneType, None)      ['$const702.1']
    $const704.2 = const(NoneType, None)      ['$const704.2']
    $706build_slice.3 = global(slice: <class 'slice'>) ['$706build_slice.3']
    $706build_slice.4 = call $706build_slice.3($const702.1, $const704.2, func=$706build_slice.3, args=(Var($const702.1, base.py:235), Var($const704.2, base.py:235)), kws=(), vararg=None) ['$706build_slice.3', '$706build_slice.4', '$const702.1', '$const704.2']
    $708binary_subscr.5 = getitem(value=output_energies, index=$706build_slice.4) ['$706build_slice.4', '$708binary_subscr.5', 'output_energies']
    $712load_attr.7 = getattr(value=packet_collection, attr=packets_output_energy) ['$712load_attr.7', 'packet_collection']
    $const714.8 = const(NoneType, None)      ['$const714.8']
    $const716.9 = const(NoneType, None)      ['$const716.9']
    $718build_slice.10 = global(slice: <class 'slice'>) ['$718build_slice.10']
    $718build_slice.11 = call $718build_slice.10($const714.8, $const716.9, func=$718build_slice.10, args=(Var($const714.8, base.py:235), Var($const716.9, base.py:235)), kws=(), vararg=None) ['$718build_slice.10', '$718build_slice.11', '$const714.8', '$const716.9']
    $712load_attr.7[$718build_slice.11] = $708binary_subscr.5 ['$708binary_subscr.5', '$712load_attr.7', '$718build_slice.11']
    $const724.13 = const(NoneType, None)     ['$const724.13']
    $const726.14 = const(NoneType, None)     ['$const726.14']
    $728build_slice.15 = global(slice: <class 'slice'>) ['$728build_slice.15']
    $728build_slice.16 = call $728build_slice.15($const724.13, $const726.14, func=$728build_slice.15, args=(Var($const724.13, base.py:236), Var($const726.14, base.py:236)), kws=(), vararg=None) ['$728build_slice.15', '$728build_slice.16', '$const724.13', '$const726.14']
    $730binary_subscr.17 = getitem(value=output_nus, index=$728build_slice.16) ['$728build_slice.16', '$730binary_subscr.17', 'output_nus']
    $734load_attr.19 = getattr(value=packet_collection, attr=packets_output_nu) ['$734load_attr.19', 'packet_collection']
    $const736.20 = const(NoneType, None)     ['$const736.20']
    $const738.21 = const(NoneType, None)     ['$const738.21']
    $740build_slice.22 = global(slice: <class 'slice'>) ['$740build_slice.22']
    $740build_slice.23 = call $740build_slice.22($const736.20, $const738.21, func=$740build_slice.22, args=(Var($const736.20, base.py:236), Var($const738.21, base.py:236)), kws=(), vararg=None) ['$740build_slice.22', '$740build_slice.23', '$const736.20', '$const738.21']
    $734load_attr.19[$740build_slice.23] = $730binary_subscr.17 ['$730binary_subscr.17', '$734load_attr.19', '$740build_slice.23']
    $766build_tuple.35 = build_tuple(items=[Var(v_packets_energy_hist, base.py:142), Var(last_interaction_types, base.py:130), Var(last_interaction_in_nus, base.py:134), Var(last_line_interaction_in_ids, base.py:136), Var(last_line_interaction_out_ids, base.py:139), Var(virt_packet_nus, base.py:145), Var(virt_packet_energies, base.py:146), Var(virt_packet_last_interaction_in_nu, base.py:147), Var(virt_packet_last_interaction_type, base.py:148), Var(virt_packet_last_line_interaction_in_id, base.py:149), Var(virt_packet_last_line_interaction_out_id, base.py:150)]) ['$766build_tuple.35', 'last_interaction_in_nus', 'last_interaction_types', 'last_line_interaction_in_ids', 'last_line_interaction_out_ids', 'v_packets_energy_hist', 'virt_packet_energies', 'virt_packet_last_interaction_in_nu', 'virt_packet_last_interaction_type', 'virt_packet_last_line_interaction_in_id', 'virt_packet_last_line_interaction_out_id', 'virt_packet_nus']
    $768return_value.36 = cast(value=$766build_tuple.35) ['$766build_tuple.35', '$768return_value.36']
    return $768return_value.36               ['$768return_value.36']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: packet_collection = arg(0, name=packet_collection)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: spectrum_frequency = arg(4, name=spectrum_frequency)
DEBUG:numba.core.ssa:on stmt: number_of_vpackets = arg(5, name=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: packet_seeds = arg(6, name=packet_seeds)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=empty_like)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, base.py:128)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: output_nus = $10call_method.4
DEBUG:numba.core.ssa:on stmt: $14load_global.5 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=$14load_global.5, attr=ones_like)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $22load_global.9 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.10 = getattr(value=$22load_global.9, attr=int64)
DEBUG:numba.core.ssa:on stmt: $28call_function_kw.12 = call $16load_attr.6($20load_attr.8, func=$16load_attr.6, args=[Var($20load_attr.8, base.py:130)], kws=[('dtype', Var($24load_attr.10, base.py:130))], vararg=None)
DEBUG:numba.core.ssa:on stmt: $const30.13 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $32binary_multiply.14 = $28call_function_kw.12 * $const30.13
DEBUG:numba.core.ssa:on stmt: last_interaction_types = $32binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $36load_global.15 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $38load_method.16 = getattr(value=$36load_global.15, attr=empty_like)
DEBUG:numba.core.ssa:on stmt: $42load_attr.18 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $44call_method.19 = call $38load_method.16($42load_attr.18, func=$38load_method.16, args=[Var($42load_attr.18, base.py:132)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: output_energies = $44call_method.19
DEBUG:numba.core.ssa:on stmt: $48load_global.20 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.21 = getattr(value=$48load_global.20, attr=empty_like)
DEBUG:numba.core.ssa:on stmt: $54load_attr.23 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $56call_method.24 = call $50load_method.21($54load_attr.23, func=$50load_method.21, args=[Var($54load_attr.23, base.py:134)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: last_interaction_in_nus = $56call_method.24
DEBUG:numba.core.ssa:on stmt: $60load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_attr.26 = getattr(value=$60load_global.25, attr=ones_like)
DEBUG:numba.core.ssa:on stmt: $66load_attr.28 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $68load_global.29 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.30 = getattr(value=$68load_global.29, attr=int64)
DEBUG:numba.core.ssa:on stmt: $74call_function_kw.32 = call $62load_attr.26($66load_attr.28, func=$62load_attr.26, args=[Var($66load_attr.28, base.py:136)], kws=[('dtype', Var($70load_attr.30, base.py:136))], vararg=None)
DEBUG:numba.core.ssa:on stmt: $const76.33 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $78binary_multiply.34 = $74call_function_kw.32 * $const76.33
DEBUG:numba.core.ssa:on stmt: last_line_interaction_in_ids = $78binary_multiply.34
DEBUG:numba.core.ssa:on stmt: $82load_global.35 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $84load_attr.36 = getattr(value=$82load_global.35, attr=ones_like)
DEBUG:numba.core.ssa:on stmt: $88load_attr.38 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $90load_global.39 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.40 = getattr(value=$90load_global.39, attr=int64)
DEBUG:numba.core.ssa:on stmt: $96call_function_kw.42 = call $84load_attr.36($88load_attr.38, func=$84load_attr.36, args=[Var($88load_attr.38, base.py:139)], kws=[('dtype', Var($92load_attr.40, base.py:139))], vararg=None)
DEBUG:numba.core.ssa:on stmt: $const98.43 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $100binary_multiply.44 = $96call_function_kw.42 * $const98.43
DEBUG:numba.core.ssa:on stmt: last_line_interaction_out_ids = $100binary_multiply.44
DEBUG:numba.core.ssa:on stmt: $104load_global.45 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_method.46 = getattr(value=$104load_global.45, attr=zeros_like)
DEBUG:numba.core.ssa:on stmt: $110call_method.48 = call $106load_method.46(spectrum_frequency, func=$106load_method.46, args=[Var(spectrum_frequency, base.py:128)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packets_energy_hist = $110call_method.48
DEBUG:numba.core.ssa:on stmt: $const116.50 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $118binary_subscr.51 = static_getitem(value=spectrum_frequency, index=1, index_var=$const116.50)
DEBUG:numba.core.ssa:on stmt: $const122.53 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $124binary_subscr.54 = static_getitem(value=spectrum_frequency, index=0, index_var=$const122.53)
DEBUG:numba.core.ssa:on stmt: $126binary_subtract.55 = $118binary_subscr.51 - $124binary_subscr.54
DEBUG:numba.core.ssa:on stmt: delta_nu = $126binary_subtract.55
DEBUG:numba.core.ssa:on stmt: $130build_list.56 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_nus = $130build_list.56
DEBUG:numba.core.ssa:on stmt: $134build_list.57 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_energies = $134build_list.57
DEBUG:numba.core.ssa:on stmt: $138build_list.58 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_last_interaction_in_nu = $138build_list.58
DEBUG:numba.core.ssa:on stmt: $142build_list.59 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_last_interaction_type = $142build_list.59
DEBUG:numba.core.ssa:on stmt: $146build_list.60 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_last_line_interaction_in_id = $146build_list.60
DEBUG:numba.core.ssa:on stmt: $150build_list.61 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_last_line_interaction_out_id = $150build_list.61
DEBUG:numba.core.ssa:on stmt: $154load_global.62 = global(print: <built-in function print>)
DEBUG:numba.core.ssa:on stmt: $const156.63 = const(str, Running post-merge numba montecarlo (with C close lines)!)
DEBUG:numba.core.ssa:on stmt: print($const156.63)
DEBUG:numba.core.ssa:on stmt: $158call_function.64 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: jump 162
DEBUG:numba.core.ssa:==== SSA block analysis pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $166load_global.0 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $168load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $172call_function.3 = call $168load_global.1(output_nus, func=$168load_global.1, args=[Var(output_nus, base.py:128)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $174call_function.4 = call $166load_global.0($172call_function.3, func=$166load_global.0, args=[Var($172call_function.3, base.py:153)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $176get_iter.5 = getiter(value=$174call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $176get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block analysis pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi182.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 182, 698
DEBUG:numba.core.ssa:==== SSA block analysis pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: i = $phi182.1
DEBUG:numba.core.ssa:on stmt: $184load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $186load_attr.3 = getattr(value=$184load_global.2, attr=single_packet_seed)
DEBUG:numba.core.ssa:on stmt: $const188.4 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $190compare_op.5 = $186load_attr.3 != $const188.4
DEBUG:numba.core.ssa:on stmt: bool192 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $192pred = call bool192($190compare_op.5, func=bool192, args=(Var($190compare_op.5, base.py:154),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $192pred, 194, 218
DEBUG:numba.core.ssa:==== SSA block analysis pass on 194
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $196load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $198load_attr.3 = getattr(value=$196load_global.2, attr=single_packet_seed)
DEBUG:numba.core.ssa:on stmt: $200binary_subscr.4 = static_getitem(value=packet_seeds, index=46, index_var=$198load_attr.3)
DEBUG:numba.core.ssa:on stmt: seed = $200binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $204load_global.5 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $206load_attr.6 = getattr(value=$204load_global.5, attr=random)
DEBUG:numba.core.ssa:on stmt: $208load_method.7 = getattr(value=$206load_attr.6, attr=seed)
DEBUG:numba.core.ssa:on stmt: $212call_method.9 = call $208load_method.7(seed, func=$208load_method.7, args=[Var(seed, base.py:155)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 238
DEBUG:numba.core.ssa:==== SSA block analysis pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.3 = getitem(value=packet_seeds, index=i)
DEBUG:numba.core.ssa:on stmt: seed = $222binary_subscr.3
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $228load_attr.5 = getattr(value=$226load_global.4, attr=random)
DEBUG:numba.core.ssa:on stmt: $230load_method.6 = getattr(value=$228load_attr.5, attr=seed)
DEBUG:numba.core.ssa:on stmt: $234call_method.8 = call $230load_method.6(seed, func=$230load_method.6, args=[Var(seed, base.py:155)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 238
DEBUG:numba.core.ssa:==== SSA block analysis pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $238load_global.1 = global(RPacket: <class 'numba.experimental.jitclass.base.RPacket'>)
DEBUG:numba.core.ssa:on stmt: $242load_attr.3 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const244.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $246binary_subscr.5 = static_getitem(value=$242load_attr.3, index=0, index_var=$const244.4)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=packet_collection, attr=packets_input_mu)
DEBUG:numba.core.ssa:on stmt: $254binary_subscr.9 = getitem(value=$250load_attr.7, index=i)
DEBUG:numba.core.ssa:on stmt: $258load_attr.11 = getattr(value=packet_collection, attr=packets_input_nu)
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.13 = getitem(value=$258load_attr.11, index=i)
DEBUG:numba.core.ssa:on stmt: $266load_attr.15 = getattr(value=packet_collection, attr=packets_input_energy)
DEBUG:numba.core.ssa:on stmt: $270binary_subscr.17 = getitem(value=$266load_attr.15, index=i)
DEBUG:numba.core.ssa:on stmt: $const276.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $278call_function.21 = call $238load_global.1($246binary_subscr.5, $254binary_subscr.9, $262binary_subscr.13, $270binary_subscr.17, seed, i, $const276.20, func=$238load_global.1, args=[Var($246binary_subscr.5, base.py:161), Var($254binary_subscr.9, base.py:162), Var($262binary_subscr.13, base.py:163), Var($270binary_subscr.17, base.py:164), Var(seed, base.py:155), Var(i, base.py:153), Var($const276.20, base.py:167)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r_packet = $278call_function.21
DEBUG:numba.core.ssa:on stmt: $282load_global.22 = global(VPacketCollection: <class 'numba.experimental.jitclass.base.VPacketCollection'>)
DEBUG:numba.core.ssa:on stmt: $286load_attr.24 = getattr(value=r_packet, attr=index)
DEBUG:numba.core.ssa:on stmt: $290load_global.26 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $292load_attr.27 = getattr(value=$290load_global.26, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $294load_global.28 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $296load_attr.29 = getattr(value=$294load_global.28, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $300load_global.31 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $302load_attr.32 = getattr(value=$300load_global.31, attr=temporary_v_packet_bins)
DEBUG:numba.core.ssa:on stmt: $304call_function.33 = call $282load_global.22($286load_attr.24, spectrum_frequency, $292load_attr.27, $296load_attr.29, number_of_vpackets, $302load_attr.32, func=$282load_global.22, args=[Var($286load_attr.24, base.py:170), Var(spectrum_frequency, base.py:128), Var($292load_attr.27, base.py:172), Var($296load_attr.29, base.py:173), Var(number_of_vpackets, base.py:128), Var($302load_attr.32, base.py:175)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = $304call_function.33
DEBUG:numba.core.ssa:on stmt: $308load_global.34 = global(single_packet_loop: CPUDispatcher(<function single_packet_loop at 0x7f6e4a107ef0>))
DEBUG:numba.core.ssa:on stmt: $320call_function.40 = call $308load_global.34(r_packet, numba_model, numba_plasma, estimators, vpacket_collection, func=$308load_global.34, args=[Var(r_packet, base.py:167), Var(numba_model, base.py:128), Var(numba_plasma, base.py:128), Var(estimators, base.py:128), Var(vpacket_collection, base.py:175)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: loop = $320call_function.40
DEBUG:numba.core.ssa:on stmt: $326load_attr.42 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: output_nus[i] = $326load_attr.42
DEBUG:numba.core.ssa:on stmt: $336load_attr.46 = getattr(value=r_packet, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: last_interaction_in_nus[i] = $336load_attr.46
DEBUG:numba.core.ssa:on stmt: $346load_attr.50 = getattr(value=r_packet, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: last_line_interaction_in_ids[i] = $346load_attr.50
DEBUG:numba.core.ssa:on stmt: $356load_attr.54 = getattr(value=r_packet, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: last_line_interaction_out_ids[i] = $356load_attr.54
DEBUG:numba.core.ssa:on stmt: $366load_attr.58 = getattr(value=r_packet, attr=status)
DEBUG:numba.core.ssa:on stmt: $368load_global.59 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $370load_attr.60 = getattr(value=$368load_global.59, attr=REABSORBED)
DEBUG:numba.core.ssa:on stmt: $372compare_op.61 = $366load_attr.58 == $370load_attr.60
DEBUG:numba.core.ssa:on stmt: bool374 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $374pred = call bool374($372compare_op.61, func=bool374, args=(Var($372compare_op.61, base.py:188),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $374pred, 378, 402
DEBUG:numba.core.ssa:==== SSA block analysis pass on 378
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $380load_attr.2 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $382unary_negative.3 = unary(fn=<built-in function neg>, value=$380load_attr.2)
DEBUG:numba.core.ssa:on stmt: output_energies[i] = $382unary_negative.3
DEBUG:numba.core.ssa:on stmt: $392load_attr.7 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: last_interaction_types[i] = $392load_attr.7
DEBUG:numba.core.ssa:on stmt: jump 436
DEBUG:numba.core.ssa:==== SSA block analysis pass on 402
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $404load_attr.2 = getattr(value=r_packet, attr=status)
DEBUG:numba.core.ssa:on stmt: $406load_global.3 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $408load_attr.4 = getattr(value=$406load_global.3, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: $410compare_op.5 = $404load_attr.2 == $408load_attr.4
DEBUG:numba.core.ssa:on stmt: bool412 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $412pred = call bool412($410compare_op.5, func=bool412, args=(Var($410compare_op.5, base.py:191),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $412pred, 416, 436
DEBUG:numba.core.ssa:==== SSA block analysis pass on 416
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $418load_attr.2 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: output_energies[i] = $418load_attr.2
DEBUG:numba.core.ssa:on stmt: $428load_attr.6 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: last_interaction_types[i] = $428load_attr.6
DEBUG:numba.core.ssa:on stmt: jump 436
DEBUG:numba.core.ssa:==== SSA block analysis pass on 436
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $438load_attr.2 = getattr(value=vpacket_collection, attr=nus)
DEBUG:numba.core.ssa:on stmt: $const440.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $444load_attr.5 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $446build_slice.6 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $446build_slice.7 = call $446build_slice.6($const440.3, $444load_attr.5, func=$446build_slice.6, args=(Var($const440.3, base.py:195), Var($444load_attr.5, base.py:195)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $448binary_subscr.8 = getitem(value=$438load_attr.2, index=$446build_slice.7)
DEBUG:numba.core.ssa:on stmt: vpackets_nu = $448binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $454load_attr.10 = getattr(value=vpacket_collection, attr=energies)
DEBUG:numba.core.ssa:on stmt: $const456.11 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $460load_attr.13 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $462build_slice.14 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $462build_slice.15 = call $462build_slice.14($const456.11, $460load_attr.13, func=$462build_slice.14, args=(Var($const456.11, base.py:196), Var($460load_attr.13, base.py:196)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $464binary_subscr.16 = getitem(value=$454load_attr.10, index=$462build_slice.15)
DEBUG:numba.core.ssa:on stmt: vpackets_energy = $464binary_subscr.16
DEBUG:numba.core.ssa:on stmt: $468load_global.17 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $470load_method.18 = getattr(value=$468load_global.17, attr=floor)
DEBUG:numba.core.ssa:on stmt: $const476.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $478binary_subscr.22 = static_getitem(value=spectrum_frequency, index=0, index_var=$const476.21)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.23 = vpackets_nu - $478binary_subscr.22
DEBUG:numba.core.ssa:on stmt: $484binary_true_divide.25 = $480binary_subtract.23 / delta_nu
DEBUG:numba.core.ssa:on stmt: $486call_method.26 = call $470load_method.18($484binary_true_divide.25, func=$470load_method.18, args=[Var($484binary_true_divide.25, base.py:199)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $488load_method.27 = getattr(value=$486call_method.26, attr=astype)
DEBUG:numba.core.ssa:on stmt: $490load_global.28 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $492load_attr.29 = getattr(value=$490load_global.28, attr=int64)
DEBUG:numba.core.ssa:on stmt: $494call_method.30 = call $488load_method.27($492load_attr.29, func=$488load_method.27, args=[Var($492load_attr.29, base.py:200)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packets_idx = $494call_method.30
DEBUG:numba.core.ssa:on stmt: jump 498
DEBUG:numba.core.ssa:==== SSA block analysis pass on 498
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $500load_global.1 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $504call_function.3 = call $500load_global.1(v_packets_idx, func=$500load_global.1, args=[Var(v_packets_idx, base.py:200)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $506get_iter.4 = getiter(value=$504call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi508.1 = $506get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 508
DEBUG:numba.core.ssa:==== SSA block analysis pass on 508
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $508for_iter.2 = iternext(value=$phi508.1)
DEBUG:numba.core.ssa:on stmt: $508for_iter.3 = pair_first(value=$508for_iter.2)
DEBUG:numba.core.ssa:on stmt: $508for_iter.4 = pair_second(value=$508for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi510.2 = $508for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $508for_iter.4, 510, 580
DEBUG:numba.core.ssa:==== SSA block analysis pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $510unpack_sequence.5 = exhaust_iter(value=$phi510.2, count=2)
DEBUG:numba.core.ssa:on stmt: $510unpack_sequence.3 = static_getitem(value=$510unpack_sequence.5, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $510unpack_sequence.4 = static_getitem(value=$510unpack_sequence.5, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: j = $510unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: idx = $510unpack_sequence.4
DEBUG:numba.core.ssa:on stmt: $520binary_subscr.8 = getitem(value=vpackets_nu, index=j)
DEBUG:numba.core.ssa:on stmt: $const524.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $526binary_subscr.11 = static_getitem(value=spectrum_frequency, index=0, index_var=$const524.10)
DEBUG:numba.core.ssa:on stmt: $528compare_op.12 = $520binary_subscr.8 < $526binary_subscr.11
DEBUG:numba.core.ssa:on stmt: bool530 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $530pred = call bool530($528compare_op.12, func=bool530, args=(Var($528compare_op.12, base.py:205),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $530pred, 702, 534
DEBUG:numba.core.ssa:==== SSA block analysis pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $538binary_subscr.4 = getitem(value=vpackets_nu, index=j)
DEBUG:numba.core.ssa:on stmt: $const542.6 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $544binary_subscr.7 = static_getitem(value=spectrum_frequency, index=-1, index_var=$const542.6)
DEBUG:numba.core.ssa:on stmt: $546compare_op.8 = $538binary_subscr.4 > $544binary_subscr.7
DEBUG:numba.core.ssa:on stmt: bool548 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $548pred = call bool548($546compare_op.8, func=bool548, args=(Var($546compare_op.8, base.py:206),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $548pred, 552, 556
DEBUG:numba.core.ssa:==== SSA block analysis pass on 552
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: jump 702
DEBUG:numba.core.ssa:==== SSA block analysis pass on 556
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.6 = getitem(value=v_packets_energy_hist, index=idx)
DEBUG:numba.core.ssa:on stmt: $568binary_subscr.9 = getitem(value=vpackets_energy, index=j)
DEBUG:numba.core.ssa:on stmt: $570inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$562binary_subscr.6, rhs=$568binary_subscr.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: v_packets_energy_hist[idx] = $570inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 702
DEBUG:numba.core.ssa:==== SSA block analysis pass on 580
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: jump 582
DEBUG:numba.core.ssa:==== SSA block analysis pass on 582
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $582load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $584load_attr.2 = getattr(value=$582load_global.1, attr=VPACKET_LOGGING)
DEBUG:numba.core.ssa:on stmt: bool586 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $586pred = call bool586($584load_attr.2, func=bool586, args=(Var($584load_attr.2, base.py:211),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $586pred, 588, 701
DEBUG:numba.core.ssa:==== SSA block analysis pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $590load_method.2 = getattr(value=virt_packet_nus, attr=append)
DEBUG:numba.core.ssa:on stmt: $594call_method.4 = call $590load_method.2(vpackets_nu, func=$590load_method.2, args=[Var(vpackets_nu, base.py:195)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $600load_method.6 = getattr(value=virt_packet_energies, attr=append)
DEBUG:numba.core.ssa:on stmt: $604call_method.8 = call $600load_method.6(vpackets_energy, func=$600load_method.6, args=[Var(vpackets_energy, base.py:196)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $610load_method.10 = getattr(value=virt_packet_last_interaction_in_nu, attr=append)
DEBUG:numba.core.ssa:on stmt: $614load_attr.12 = getattr(value=vpacket_collection, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $const616.13 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $620load_attr.15 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $622build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $622build_slice.17 = call $622build_slice.16($const616.13, $620load_attr.15, func=$622build_slice.16, args=(Var($const616.13, base.py:215), Var($620load_attr.15, base.py:216)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $624binary_subscr.18 = getitem(value=$614load_attr.12, index=$622build_slice.17)
DEBUG:numba.core.ssa:on stmt: $626call_method.19 = call $610load_method.10($624binary_subscr.18, func=$610load_method.10, args=[Var($624binary_subscr.18, base.py:216)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $632load_method.21 = getattr(value=virt_packet_last_interaction_type, attr=append)
DEBUG:numba.core.ssa:on stmt: $636load_attr.23 = getattr(value=vpacket_collection, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $const638.24 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $642load_attr.26 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $644build_slice.27 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $644build_slice.28 = call $644build_slice.27($const638.24, $642load_attr.26, func=$644build_slice.27, args=(Var($const638.24, base.py:220), Var($642load_attr.26, base.py:221)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $646binary_subscr.29 = getitem(value=$636load_attr.23, index=$644build_slice.28)
DEBUG:numba.core.ssa:on stmt: $648call_method.30 = call $632load_method.21($646binary_subscr.29, func=$632load_method.21, args=[Var($646binary_subscr.29, base.py:221)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $654load_method.32 = getattr(value=virt_packet_last_line_interaction_in_id, attr=append)
DEBUG:numba.core.ssa:on stmt: $658load_attr.34 = getattr(value=vpacket_collection, attr=last_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $const660.35 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $664load_attr.37 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $666build_slice.38 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $666build_slice.39 = call $666build_slice.38($const660.35, $664load_attr.37, func=$666build_slice.38, args=(Var($const660.35, base.py:225), Var($664load_attr.37, base.py:226)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $668binary_subscr.40 = getitem(value=$658load_attr.34, index=$666build_slice.39)
DEBUG:numba.core.ssa:on stmt: $670call_method.41 = call $654load_method.32($668binary_subscr.40, func=$654load_method.32, args=[Var($668binary_subscr.40, base.py:226)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $676load_method.43 = getattr(value=virt_packet_last_line_interaction_out_id, attr=append)
DEBUG:numba.core.ssa:on stmt: $680load_attr.45 = getattr(value=vpacket_collection, attr=last_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $const682.46 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $686load_attr.48 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $688build_slice.49 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $688build_slice.50 = call $688build_slice.49($const682.46, $686load_attr.48, func=$688build_slice.49, args=(Var($const682.46, base.py:230), Var($686load_attr.48, base.py:231)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $690binary_subscr.51 = getitem(value=$680load_attr.45, index=$688build_slice.50)
DEBUG:numba.core.ssa:on stmt: $692call_method.52 = call $676load_method.43($690binary_subscr.51, func=$676load_method.43, args=[Var($690binary_subscr.51, base.py:231)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 701
DEBUG:numba.core.ssa:==== SSA block analysis pass on 698
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: jump 700
DEBUG:numba.core.ssa:==== SSA block analysis pass on 700
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: $const702.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const704.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $706build_slice.3 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $706build_slice.4 = call $706build_slice.3($const702.1, $const704.2, func=$706build_slice.3, args=(Var($const702.1, base.py:235), Var($const704.2, base.py:235)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $708binary_subscr.5 = static_getitem(value=output_energies, index=slice(None, None, None), index_var=$706build_slice.4)
DEBUG:numba.core.ssa:on stmt: $712load_attr.7 = getattr(value=packet_collection, attr=packets_output_energy)
DEBUG:numba.core.ssa:on stmt: $const714.8 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const716.9 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $718build_slice.10 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $718build_slice.11 = call $718build_slice.10($const714.8, $const716.9, func=$718build_slice.10, args=(Var($const714.8, base.py:235), Var($const716.9, base.py:235)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $712load_attr.7[slice(None, None, None)] = $708binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const724.13 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const726.14 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $728build_slice.15 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $728build_slice.16 = call $728build_slice.15($const724.13, $const726.14, func=$728build_slice.15, args=(Var($const724.13, base.py:236), Var($const726.14, base.py:236)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $730binary_subscr.17 = static_getitem(value=output_nus, index=slice(None, None, None), index_var=$728build_slice.16)
DEBUG:numba.core.ssa:on stmt: $734load_attr.19 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $const736.20 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const738.21 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $740build_slice.22 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $740build_slice.23 = call $740build_slice.22($const736.20, $const738.21, func=$740build_slice.22, args=(Var($const736.20, base.py:236), Var($const738.21, base.py:236)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $734load_attr.19[slice(None, None, None)] = $730binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $766build_tuple.35 = build_tuple(items=[Var(v_packets_energy_hist, base.py:142), Var(last_interaction_types, base.py:130), Var(last_interaction_in_nus, base.py:134), Var(last_line_interaction_in_ids, base.py:136), Var(last_line_interaction_out_ids, base.py:139), Var(virt_packet_nus, base.py:145), Var(virt_packet_energies, base.py:146), Var(virt_packet_last_interaction_in_nu, base.py:147), Var(virt_packet_last_interaction_type, base.py:148), Var(virt_packet_last_line_interaction_in_id, base.py:149), Var(virt_packet_last_line_interaction_out_id, base.py:150)])
DEBUG:numba.core.ssa:on stmt: $768return_value.36 = cast(value=$766build_tuple.35)
DEBUG:numba.core.ssa:on stmt: return $768return_value.36
DEBUG:numba.core.ssa:==== SSA block analysis pass on 701
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block analysis pass on 702
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46299790>
DEBUG:numba.core.ssa:on stmt: jump 508
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100binary_multiply.44': [<numba.core.ir.Assign object at 0x7f6e45fb9490>],
             '$104load_global.45': [<numba.core.ir.Assign object at 0x7f6e45fb9890>],
             '$106load_method.46': [<numba.core.ir.Assign object at 0x7f6e45fb9c10>],
             '$10call_method.4': [<numba.core.ir.Assign object at 0x7f6e4614b450>],
             '$110call_method.48': [<numba.core.ir.Assign object at 0x7f6e45fb9910>],
             '$118binary_subscr.51': [<numba.core.ir.Assign object at 0x7f6e45e33910>],
             '$124binary_subscr.54': [<numba.core.ir.Assign object at 0x7f6e45e33a90>],
             '$126binary_subtract.55': [<numba.core.ir.Assign object at 0x7f6e46137050>],
             '$130build_list.56': [<numba.core.ir.Assign object at 0x7f6e461376d0>],
             '$134build_list.57': [<numba.core.ir.Assign object at 0x7f6e46137650>],
             '$138build_list.58': [<numba.core.ir.Assign object at 0x7f6e46137610>],
             '$142build_list.59': [<numba.core.ir.Assign object at 0x7f6e4628fcd0>],
             '$146build_list.60': [<numba.core.ir.Assign object at 0x7f6e4628f0d0>],
             '$14load_global.5': [<numba.core.ir.Assign object at 0x7f6e4614bdd0>],
             '$150build_list.61': [<numba.core.ir.Assign object at 0x7f6e4628f510>],
             '$154load_global.62': [<numba.core.ir.Assign object at 0x7f6e4628f9d0>],
             '$158call_function.64': [<numba.core.ir.Assign object at 0x7f6e45b92550>],
             '$166load_global.0': [<numba.core.ir.Assign object at 0x7f6e45fb95d0>],
             '$168load_global.1': [<numba.core.ir.Assign object at 0x7f6e461183d0>],
             '$16load_attr.6': [<numba.core.ir.Assign object at 0x7f6e4614b3d0>],
             '$172call_function.3': [<numba.core.ir.Assign object at 0x7f6e4628f850>],
             '$174call_function.4': [<numba.core.ir.Assign object at 0x7f6e4628f810>],
             '$176get_iter.5': [<numba.core.ir.Assign object at 0x7f6e4628fe90>],
             '$178for_iter.1': [<numba.core.ir.Assign object at 0x7f6e4628f350>],
             '$178for_iter.2': [<numba.core.ir.Assign object at 0x7f6e4628f650>],
             '$178for_iter.3': [<numba.core.ir.Assign object at 0x7f6e46299710>],
             '$184load_global.2': [<numba.core.ir.Assign object at 0x7f6e46299090>],
             '$186load_attr.3': [<numba.core.ir.Assign object at 0x7f6e462995d0>],
             '$190compare_op.5': [<numba.core.ir.Assign object at 0x7f6e46286310>],
             '$192pred': [<numba.core.ir.Assign object at 0x7f6e46286b50>],
             '$196load_global.2': [<numba.core.ir.Assign object at 0x7f6e46286650>],
             '$198load_attr.3': [<numba.core.ir.Assign object at 0x7f6e46286550>],
             '$200binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e45e33ad0>],
             '$204load_global.5': [<numba.core.ir.Assign object at 0x7f6e46286590>],
             '$206load_attr.6': [<numba.core.ir.Assign object at 0x7f6e46286c10>],
             '$208load_method.7': [<numba.core.ir.Assign object at 0x7f6e46286f90>],
             '$20load_attr.8': [<numba.core.ir.Assign object at 0x7f6e4614bd10>],
             '$212call_method.9': [<numba.core.ir.Assign object at 0x7f6e46286110>],
             '$222binary_subscr.3': [<numba.core.ir.Assign object at 0x7f6e461dec10>],
             '$226load_global.4': [<numba.core.ir.Assign object at 0x7f6e461def50>],
             '$228load_attr.5': [<numba.core.ir.Assign object at 0x7f6e461deed0>],
             '$22load_global.9': [<numba.core.ir.Assign object at 0x7f6e4614bad0>],
             '$230load_method.6': [<numba.core.ir.Assign object at 0x7f6e461dea10>],
             '$234call_method.8': [<numba.core.ir.Assign object at 0x7f6e461de650>],
             '$238load_global.1': [<numba.core.ir.Assign object at 0x7f6e461de390>],
             '$242load_attr.3': [<numba.core.ir.Assign object at 0x7f6e461de810>],
             '$246binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e45ca2150>],
             '$24load_attr.10': [<numba.core.ir.Assign object at 0x7f6e4614b290>],
             '$250load_attr.7': [<numba.core.ir.Assign object at 0x7f6e461ded90>],
             '$254binary_subscr.9': [<numba.core.ir.Assign object at 0x7f6e45b6ced0>],
             '$258load_attr.11': [<numba.core.ir.Assign object at 0x7f6e45e976d0>],
             '$262binary_subscr.13': [<numba.core.ir.Assign object at 0x7f6e45e97210>],
             '$266load_attr.15': [<numba.core.ir.Assign object at 0x7f6e45e97890>],
             '$270binary_subscr.17': [<numba.core.ir.Assign object at 0x7f6e45e97fd0>],
             '$278call_function.21': [<numba.core.ir.Assign object at 0x7f6e45e16c10>],
             '$282load_global.22': [<numba.core.ir.Assign object at 0x7f6e45e16fd0>],
             '$286load_attr.24': [<numba.core.ir.Assign object at 0x7f6e45e16e50>],
             '$28call_function_kw.12': [<numba.core.ir.Assign object at 0x7f6e4614b990>],
             '$290load_global.26': [<numba.core.ir.Assign object at 0x7f6e45e16b90>],
             '$292load_attr.27': [<numba.core.ir.Assign object at 0x7f6e45e16e90>],
             '$294load_global.28': [<numba.core.ir.Assign object at 0x7f6e45e16950>],
             '$296load_attr.29': [<numba.core.ir.Assign object at 0x7f6e45e16250>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e461549d0>],
             '$300load_global.31': [<numba.core.ir.Assign object at 0x7f6e45e16310>],
             '$302load_attr.32': [<numba.core.ir.Assign object at 0x7f6e45e16850>],
             '$304call_function.33': [<numba.core.ir.Assign object at 0x7f6e46088910>],
             '$308load_global.34': [<numba.core.ir.Assign object at 0x7f6e46088e10>],
             '$320call_function.40': [<numba.core.ir.Assign object at 0x7f6e46088850>],
             '$326load_attr.42': [<numba.core.ir.Assign object at 0x7f6e45ea0290>],
             '$32binary_multiply.14': [<numba.core.ir.Assign object at 0x7f6e4616e5d0>],
             '$336load_attr.46': [<numba.core.ir.Assign object at 0x7f6e45ea0710>],
             '$346load_attr.50': [<numba.core.ir.Assign object at 0x7f6e45ea0dd0>],
             '$356load_attr.54': [<numba.core.ir.Assign object at 0x7f6e45ea0750>],
             '$366load_attr.58': [<numba.core.ir.Assign object at 0x7f6e45eb77d0>],
             '$368load_global.59': [<numba.core.ir.Assign object at 0x7f6e45eb7890>],
             '$36load_global.15': [<numba.core.ir.Assign object at 0x7f6e4616e190>],
             '$370load_attr.60': [<numba.core.ir.Assign object at 0x7f6e45eb7290>],
             '$372compare_op.61': [<numba.core.ir.Assign object at 0x7f6e45eb7d90>],
             '$374pred': [<numba.core.ir.Assign object at 0x7f6e45eb7110>],
             '$380load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45e162d0>],
             '$382unary_negative.3': [<numba.core.ir.Assign object at 0x7f6e46088810>],
             '$38load_method.16': [<numba.core.ir.Assign object at 0x7f6e4616e390>],
             '$392load_attr.7': [<numba.core.ir.Assign object at 0x7f6e45eb7690>],
             '$404load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45eb7cd0>],
             '$406load_global.3': [<numba.core.ir.Assign object at 0x7f6e45eb7410>],
             '$408load_attr.4': [<numba.core.ir.Assign object at 0x7f6e45eb7f90>],
             '$410compare_op.5': [<numba.core.ir.Assign object at 0x7f6e45eb7c50>],
             '$412pred': [<numba.core.ir.Assign object at 0x7f6e45e196d0>],
             '$418load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45e19850>],
             '$428load_attr.6': [<numba.core.ir.Assign object at 0x7f6e45e19510>],
             '$42load_attr.18': [<numba.core.ir.Assign object at 0x7f6e4616ee90>],
             '$438load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45e19350>],
             '$444load_attr.5': [<numba.core.ir.Assign object at 0x7f6e45e19a10>],
             '$446build_slice.6': [<numba.core.ir.Assign object at 0x7f6e45e194d0>],
             '$446build_slice.7': [<numba.core.ir.Assign object at 0x7f6e45e2c3d0>],
             '$448binary_subscr.8': [<numba.core.ir.Assign object at 0x7f6e45e2cd50>],
             '$44call_method.19': [<numba.core.ir.Assign object at 0x7f6e4616eb50>],
             '$454load_attr.10': [<numba.core.ir.Assign object at 0x7f6e45e2ca50>],
             '$460load_attr.13': [<numba.core.ir.Assign object at 0x7f6e45e2cf50>],
             '$462build_slice.14': [<numba.core.ir.Assign object at 0x7f6e45e2ce50>],
             '$462build_slice.15': [<numba.core.ir.Assign object at 0x7f6e45e2c290>],
             '$464binary_subscr.16': [<numba.core.ir.Assign object at 0x7f6e45e2c2d0>],
             '$468load_global.17': [<numba.core.ir.Assign object at 0x7f6e45e2cc10>],
             '$470load_method.18': [<numba.core.ir.Assign object at 0x7f6e45e2c590>],
             '$478binary_subscr.22': [<numba.core.ir.Assign object at 0x7f6e45ca20d0>],
             '$480binary_subtract.23': [<numba.core.ir.Assign object at 0x7f6e46082a90>],
             '$484binary_true_divide.25': [<numba.core.ir.Assign object at 0x7f6e46082390>],
             '$486call_method.26': [<numba.core.ir.Assign object at 0x7f6e46082290>],
             '$488load_method.27': [<numba.core.ir.Assign object at 0x7f6e460829d0>],
             '$48load_global.20': [<numba.core.ir.Assign object at 0x7f6e4616eb10>],
             '$490load_global.28': [<numba.core.ir.Assign object at 0x7f6e46082590>],
             '$492load_attr.29': [<numba.core.ir.Assign object at 0x7f6e46082410>],
             '$494call_method.30': [<numba.core.ir.Assign object at 0x7f6e46082690>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7f6e4614b2d0>],
             '$500load_global.1': [<numba.core.ir.Assign object at 0x7f6e46082f50>],
             '$504call_function.3': [<numba.core.ir.Assign object at 0x7f6e46082ad0>],
             '$506get_iter.4': [<numba.core.ir.Assign object at 0x7f6e46082790>],
             '$508for_iter.2': [<numba.core.ir.Assign object at 0x7f6e46082550>],
             '$508for_iter.3': [<numba.core.ir.Assign object at 0x7f6e46082f90>],
             '$508for_iter.4': [<numba.core.ir.Assign object at 0x7f6e46082090>],
             '$50load_method.21': [<numba.core.ir.Assign object at 0x7f6e4616ec90>],
             '$510unpack_sequence.3': [<numba.core.ir.Assign object at 0x7f6e45d99290>],
             '$510unpack_sequence.4': [<numba.core.ir.Assign object at 0x7f6e45d99950>],
             '$510unpack_sequence.5': [<numba.core.ir.Assign object at 0x7f6e45c46050>],
             '$520binary_subscr.8': [<numba.core.ir.Assign object at 0x7f6e45d99fd0>],
             '$526binary_subscr.11': [<numba.core.ir.Assign object at 0x7f6e45c3ed90>],
             '$528compare_op.12': [<numba.core.ir.Assign object at 0x7f6e45d99750>],
             '$530pred': [<numba.core.ir.Assign object at 0x7f6e45d99850>],
             '$538binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e45c9ce10>],
             '$544binary_subscr.7': [<numba.core.ir.Assign object at 0x7f6e45e334d0>],
             '$546compare_op.8': [<numba.core.ir.Assign object at 0x7f6e45b5a690>],
             '$548pred': [<numba.core.ir.Assign object at 0x7f6e45d8e6d0>],
             '$54load_attr.23': [<numba.core.ir.Assign object at 0x7f6e4616e610>],
             '$562binary_subscr.6': [<numba.core.ir.Assign object at 0x7f6e45d8e1d0>],
             '$568binary_subscr.9': [<numba.core.ir.Assign object at 0x7f6e45d8e3d0>],
             '$56call_method.24': [<numba.core.ir.Assign object at 0x7f6e4616e9d0>],
             '$570inplace_add.10': [<numba.core.ir.Assign object at 0x7f6e45d8e690>],
             '$582load_global.1': [<numba.core.ir.Assign object at 0x7f6e45d8ec10>],
             '$584load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45d8ef50>],
             '$586pred': [<numba.core.ir.Assign object at 0x7f6e45c76290>],
             '$590load_method.2': [<numba.core.ir.Assign object at 0x7f6e45c76790>],
             '$594call_method.4': [<numba.core.ir.Assign object at 0x7f6e45c76190>],
             '$600load_method.6': [<numba.core.ir.Assign object at 0x7f6e45c76d10>],
             '$604call_method.8': [<numba.core.ir.Assign object at 0x7f6e45c76e10>],
             '$60load_global.25': [<numba.core.ir.Assign object at 0x7f6e4616e1d0>],
             '$610load_method.10': [<numba.core.ir.Assign object at 0x7f6e45c769d0>],
             '$614load_attr.12': [<numba.core.ir.Assign object at 0x7f6e45c765d0>],
             '$620load_attr.15': [<numba.core.ir.Assign object at 0x7f6e45b90410>],
             '$622build_slice.16': [<numba.core.ir.Assign object at 0x7f6e45b90150>],
             '$622build_slice.17': [<numba.core.ir.Assign object at 0x7f6e45b90c10>],
             '$624binary_subscr.18': [<numba.core.ir.Assign object at 0x7f6e45b90350>],
             '$626call_method.19': [<numba.core.ir.Assign object at 0x7f6e45b90250>],
             '$62load_attr.26': [<numba.core.ir.Assign object at 0x7f6e4616ead0>],
             '$632load_method.21': [<numba.core.ir.Assign object at 0x7f6e45b90d90>],
             '$636load_attr.23': [<numba.core.ir.Assign object at 0x7f6e45b46950>],
             '$642load_attr.26': [<numba.core.ir.Assign object at 0x7f6e45e3bdd0>],
             '$644build_slice.27': [<numba.core.ir.Assign object at 0x7f6e45e3b410>],
             '$644build_slice.28': [<numba.core.ir.Assign object at 0x7f6e45e3bb50>],
             '$646binary_subscr.29': [<numba.core.ir.Assign object at 0x7f6e45e3b6d0>],
             '$648call_method.30': [<numba.core.ir.Assign object at 0x7f6e45e3b710>],
             '$654load_method.32': [<numba.core.ir.Assign object at 0x7f6e45e3b050>],
             '$658load_attr.34': [<numba.core.ir.Assign object at 0x7f6e45e3b550>],
             '$664load_attr.37': [<numba.core.ir.Assign object at 0x7f6e45e3b590>],
             '$666build_slice.38': [<numba.core.ir.Assign object at 0x7f6e45e3b1d0>],
             '$666build_slice.39': [<numba.core.ir.Assign object at 0x7f6e45e3b210>],
             '$668binary_subscr.40': [<numba.core.ir.Assign object at 0x7f6e45e3b150>],
             '$66load_attr.28': [<numba.core.ir.Assign object at 0x7f6e45f65ed0>],
             '$670call_method.41': [<numba.core.ir.Assign object at 0x7f6e45c49310>],
             '$676load_method.43': [<numba.core.ir.Assign object at 0x7f6e45c498d0>],
             '$680load_attr.45': [<numba.core.ir.Assign object at 0x7f6e45de32d0>],
             '$686load_attr.48': [<numba.core.ir.Assign object at 0x7f6e45d88590>],
             '$688build_slice.49': [<numba.core.ir.Assign object at 0x7f6e45d881d0>],
             '$688build_slice.50': [<numba.core.ir.Assign object at 0x7f6e45d884d0>],
             '$68load_global.29': [<numba.core.ir.Assign object at 0x7f6e45f65550>],
             '$690binary_subscr.51': [<numba.core.ir.Assign object at 0x7f6e45d88650>],
             '$692call_method.52': [<numba.core.ir.Assign object at 0x7f6e45d88090>],
             '$706build_slice.3': [<numba.core.ir.Assign object at 0x7f6e45d88210>],
             '$706build_slice.4': [<numba.core.ir.Assign object at 0x7f6e45d88490>],
             '$708binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e45ca2b90>],
             '$70load_attr.30': [<numba.core.ir.Assign object at 0x7f6e45f65810>],
             '$712load_attr.7': [<numba.core.ir.Assign object at 0x7f6e45c294d0>],
             '$718build_slice.10': [<numba.core.ir.Assign object at 0x7f6e45c29d10>],
             '$718build_slice.11': [<numba.core.ir.Assign object at 0x7f6e45c29ad0>],
             '$728build_slice.15': [<numba.core.ir.Assign object at 0x7f6e45c29450>],
             '$728build_slice.16': [<numba.core.ir.Assign object at 0x7f6e45c29650>],
             '$730binary_subscr.17': [<numba.core.ir.Assign object at 0x7f6e45ca2d90>],
             '$734load_attr.19': [<numba.core.ir.Assign object at 0x7f6e45c29590>],
             '$740build_slice.22': [<numba.core.ir.Assign object at 0x7f6e45d0db50>],
             '$740build_slice.23': [<numba.core.ir.Assign object at 0x7f6e45d0d890>],
             '$74call_function_kw.32': [<numba.core.ir.Assign object at 0x7f6e45f65310>],
             '$766build_tuple.35': [<numba.core.ir.Assign object at 0x7f6e45d0d590>],
             '$768return_value.36': [<numba.core.ir.Assign object at 0x7f6e45d0ded0>],
             '$78binary_multiply.34': [<numba.core.ir.Assign object at 0x7f6e45f65c90>],
             '$82load_global.35': [<numba.core.ir.Assign object at 0x7f6e45f658d0>],
             '$84load_attr.36': [<numba.core.ir.Assign object at 0x7f6e45f65890>],
             '$88load_attr.38': [<numba.core.ir.Assign object at 0x7f6e45f66750>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f6e4614b490>],
             '$90load_global.39': [<numba.core.ir.Assign object at 0x7f6e45f66690>],
             '$92load_attr.40': [<numba.core.ir.Assign object at 0x7f6e45fb9d90>],
             '$96call_function_kw.42': [<numba.core.ir.Assign object at 0x7f6e45fb9250>],
             '$const116.50': [<numba.core.ir.Assign object at 0x7f6e45fb92d0>],
             '$const122.53': [<numba.core.ir.Assign object at 0x7f6e46137a50>],
             '$const156.63': [<numba.core.ir.Assign object at 0x7f6e4628fe10>],
             '$const188.4': [<numba.core.ir.Assign object at 0x7f6e46286d10>],
             '$const244.4': [<numba.core.ir.Assign object at 0x7f6e461de610>],
             '$const276.20': [<numba.core.ir.Assign object at 0x7f6e45e97190>],
             '$const30.13': [<numba.core.ir.Assign object at 0x7f6e4614bb10>],
             '$const440.3': [<numba.core.ir.Assign object at 0x7f6e45e19410>],
             '$const456.11': [<numba.core.ir.Assign object at 0x7f6e45e2c310>],
             '$const476.21': [<numba.core.ir.Assign object at 0x7f6e45e2c950>],
             '$const524.10': [<numba.core.ir.Assign object at 0x7f6e45d992d0>],
             '$const542.6': [<numba.core.ir.Assign object at 0x7f6e45c9c750>],
             '$const616.13': [<numba.core.ir.Assign object at 0x7f6e45c76590>],
             '$const638.24': [<numba.core.ir.Assign object at 0x7f6e45e3b750>],
             '$const660.35': [<numba.core.ir.Assign object at 0x7f6e45e3b690>],
             '$const682.46': [<numba.core.ir.Assign object at 0x7f6e45de3250>],
             '$const702.1': [<numba.core.ir.Assign object at 0x7f6e45e3bcd0>],
             '$const704.2': [<numba.core.ir.Assign object at 0x7f6e45d882d0>],
             '$const714.8': [<numba.core.ir.Assign object at 0x7f6e45c298d0>],
             '$const716.9': [<numba.core.ir.Assign object at 0x7f6e45c29090>],
             '$const724.13': [<numba.core.ir.Assign object at 0x7f6e45c29390>],
             '$const726.14': [<numba.core.ir.Assign object at 0x7f6e45c29d90>],
             '$const736.20': [<numba.core.ir.Assign object at 0x7f6e45c293d0>],
             '$const738.21': [<numba.core.ir.Assign object at 0x7f6e45d0d0d0>],
             '$const76.33': [<numba.core.ir.Assign object at 0x7f6e45f65e50>],
             '$const98.43': [<numba.core.ir.Assign object at 0x7f6e45fb9190>],
             '$phi178.0': [<numba.core.ir.Assign object at 0x7f6e4628f790>],
             '$phi182.1': [<numba.core.ir.Assign object at 0x7f6e46299350>],
             '$phi508.1': [<numba.core.ir.Assign object at 0x7f6e460828d0>],
             '$phi510.2': [<numba.core.ir.Assign object at 0x7f6e45c462d0>],
             'bool192': [<numba.core.ir.Assign object at 0x7f6e46286bd0>],
             'bool374': [<numba.core.ir.Assign object at 0x7f6e45eb7d10>],
             'bool412': [<numba.core.ir.Assign object at 0x7f6e45e19a50>],
             'bool530': [<numba.core.ir.Assign object at 0x7f6e45d997d0>],
             'bool548': [<numba.core.ir.Assign object at 0x7f6e45b5a710>],
             'bool586': [<numba.core.ir.Assign object at 0x7f6e45c76110>],
             'delta_nu': [<numba.core.ir.Assign object at 0x7f6e46137210>],
             'estimators': [<numba.core.ir.Assign object at 0x7f6e46154250>],
             'i': [<numba.core.ir.Assign object at 0x7f6e46299550>],
             'idx': [<numba.core.ir.Assign object at 0x7f6e45d99110>],
             'j': [<numba.core.ir.Assign object at 0x7f6e45d99a10>],
             'last_interaction_in_nus': [<numba.core.ir.Assign object at 0x7f6e4616eed0>],
             'last_interaction_types': [<numba.core.ir.Assign object at 0x7f6e4616e410>],
             'last_line_interaction_in_ids': [<numba.core.ir.Assign object at 0x7f6e45f65950>],
             'last_line_interaction_out_ids': [<numba.core.ir.Assign object at 0x7f6e45fb9b50>],
             'loop': [<numba.core.ir.Assign object at 0x7f6e46088350>],
             'numba_model': [<numba.core.ir.Assign object at 0x7f6e46118090>],
             'numba_plasma': [<numba.core.ir.Assign object at 0x7f6e46118710>],
             'number_of_vpackets': [<numba.core.ir.Assign object at 0x7f6e461543d0>],
             'output_energies': [<numba.core.ir.Assign object at 0x7f6e4616ebd0>],
             'output_nus': [<numba.core.ir.Assign object at 0x7f6e4614b050>],
             'packet_collection': [<numba.core.ir.Assign object at 0x7f6e46118c90>],
             'packet_seeds': [<numba.core.ir.Assign object at 0x7f6e46154e50>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e45e16690>],
             'seed': [<numba.core.ir.Assign object at 0x7f6e46286e10>,
                      <numba.core.ir.Assign object at 0x7f6e46286e90>],
             'spectrum_frequency': [<numba.core.ir.Assign object at 0x7f6e46154290>],
             'v_packets_energy_hist': [<numba.core.ir.Assign object at 0x7f6e45fb9b10>],
             'v_packets_idx': [<numba.core.ir.Assign object at 0x7f6e460827d0>],
             'virt_packet_energies': [<numba.core.ir.Assign object at 0x7f6e461375d0>],
             'virt_packet_last_interaction_in_nu': [<numba.core.ir.Assign object at 0x7f6e46137ed0>],
             'virt_packet_last_interaction_type': [<numba.core.ir.Assign object at 0x7f6e4628f610>],
             'virt_packet_last_line_interaction_in_id': [<numba.core.ir.Assign object at 0x7f6e4628fe50>],
             'virt_packet_last_line_interaction_out_id': [<numba.core.ir.Assign object at 0x7f6e4628f310>],
             'virt_packet_nus': [<numba.core.ir.Assign object at 0x7f6e46137690>],
             'vpacket_collection': [<numba.core.ir.Assign object at 0x7f6e46088950>],
             'vpackets_energy': [<numba.core.ir.Assign object at 0x7f6e45e2c6d0>],
             'vpackets_nu': [<numba.core.ir.Assign object at 0x7f6e45e2c350>]})
DEBUG:numba.core.ssa:SSA violators {'seed'}
DEBUG:numba.core.ssa:Fix SSA violator on var seed
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: packet_collection = arg(0, name=packet_collection)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: spectrum_frequency = arg(4, name=spectrum_frequency)
DEBUG:numba.core.ssa:on stmt: number_of_vpackets = arg(5, name=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: packet_seeds = arg(6, name=packet_seeds)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=empty_like)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, base.py:128)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: output_nus = $10call_method.4
DEBUG:numba.core.ssa:on stmt: $14load_global.5 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=$14load_global.5, attr=ones_like)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $22load_global.9 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.10 = getattr(value=$22load_global.9, attr=int64)
DEBUG:numba.core.ssa:on stmt: $28call_function_kw.12 = call $16load_attr.6($20load_attr.8, func=$16load_attr.6, args=[Var($20load_attr.8, base.py:130)], kws=[('dtype', Var($24load_attr.10, base.py:130))], vararg=None)
DEBUG:numba.core.ssa:on stmt: $const30.13 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $32binary_multiply.14 = $28call_function_kw.12 * $const30.13
DEBUG:numba.core.ssa:on stmt: last_interaction_types = $32binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $36load_global.15 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $38load_method.16 = getattr(value=$36load_global.15, attr=empty_like)
DEBUG:numba.core.ssa:on stmt: $42load_attr.18 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $44call_method.19 = call $38load_method.16($42load_attr.18, func=$38load_method.16, args=[Var($42load_attr.18, base.py:132)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: output_energies = $44call_method.19
DEBUG:numba.core.ssa:on stmt: $48load_global.20 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.21 = getattr(value=$48load_global.20, attr=empty_like)
DEBUG:numba.core.ssa:on stmt: $54load_attr.23 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $56call_method.24 = call $50load_method.21($54load_attr.23, func=$50load_method.21, args=[Var($54load_attr.23, base.py:134)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: last_interaction_in_nus = $56call_method.24
DEBUG:numba.core.ssa:on stmt: $60load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_attr.26 = getattr(value=$60load_global.25, attr=ones_like)
DEBUG:numba.core.ssa:on stmt: $66load_attr.28 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $68load_global.29 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.30 = getattr(value=$68load_global.29, attr=int64)
DEBUG:numba.core.ssa:on stmt: $74call_function_kw.32 = call $62load_attr.26($66load_attr.28, func=$62load_attr.26, args=[Var($66load_attr.28, base.py:136)], kws=[('dtype', Var($70load_attr.30, base.py:136))], vararg=None)
DEBUG:numba.core.ssa:on stmt: $const76.33 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $78binary_multiply.34 = $74call_function_kw.32 * $const76.33
DEBUG:numba.core.ssa:on stmt: last_line_interaction_in_ids = $78binary_multiply.34
DEBUG:numba.core.ssa:on stmt: $82load_global.35 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $84load_attr.36 = getattr(value=$82load_global.35, attr=ones_like)
DEBUG:numba.core.ssa:on stmt: $88load_attr.38 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $90load_global.39 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.40 = getattr(value=$90load_global.39, attr=int64)
DEBUG:numba.core.ssa:on stmt: $96call_function_kw.42 = call $84load_attr.36($88load_attr.38, func=$84load_attr.36, args=[Var($88load_attr.38, base.py:139)], kws=[('dtype', Var($92load_attr.40, base.py:139))], vararg=None)
DEBUG:numba.core.ssa:on stmt: $const98.43 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $100binary_multiply.44 = $96call_function_kw.42 * $const98.43
DEBUG:numba.core.ssa:on stmt: last_line_interaction_out_ids = $100binary_multiply.44
DEBUG:numba.core.ssa:on stmt: $104load_global.45 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_method.46 = getattr(value=$104load_global.45, attr=zeros_like)
DEBUG:numba.core.ssa:on stmt: $110call_method.48 = call $106load_method.46(spectrum_frequency, func=$106load_method.46, args=[Var(spectrum_frequency, base.py:128)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packets_energy_hist = $110call_method.48
DEBUG:numba.core.ssa:on stmt: $const116.50 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $118binary_subscr.51 = static_getitem(value=spectrum_frequency, index=1, index_var=$const116.50)
DEBUG:numba.core.ssa:on stmt: $const122.53 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $124binary_subscr.54 = static_getitem(value=spectrum_frequency, index=0, index_var=$const122.53)
DEBUG:numba.core.ssa:on stmt: $126binary_subtract.55 = $118binary_subscr.51 - $124binary_subscr.54
DEBUG:numba.core.ssa:on stmt: delta_nu = $126binary_subtract.55
DEBUG:numba.core.ssa:on stmt: $130build_list.56 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_nus = $130build_list.56
DEBUG:numba.core.ssa:on stmt: $134build_list.57 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_energies = $134build_list.57
DEBUG:numba.core.ssa:on stmt: $138build_list.58 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_last_interaction_in_nu = $138build_list.58
DEBUG:numba.core.ssa:on stmt: $142build_list.59 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_last_interaction_type = $142build_list.59
DEBUG:numba.core.ssa:on stmt: $146build_list.60 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_last_line_interaction_in_id = $146build_list.60
DEBUG:numba.core.ssa:on stmt: $150build_list.61 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_last_line_interaction_out_id = $150build_list.61
DEBUG:numba.core.ssa:on stmt: $154load_global.62 = global(print: <built-in function print>)
DEBUG:numba.core.ssa:on stmt: $const156.63 = const(str, Running post-merge numba montecarlo (with C close lines)!)
DEBUG:numba.core.ssa:on stmt: print($const156.63)
DEBUG:numba.core.ssa:on stmt: $158call_function.64 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: jump 162
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $166load_global.0 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $168load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $172call_function.3 = call $168load_global.1(output_nus, func=$168load_global.1, args=[Var(output_nus, base.py:128)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $174call_function.4 = call $166load_global.0($172call_function.3, func=$166load_global.0, args=[Var($172call_function.3, base.py:153)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $176get_iter.5 = getiter(value=$174call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $176get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi182.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 182, 698
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: i = $phi182.1
DEBUG:numba.core.ssa:on stmt: $184load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $186load_attr.3 = getattr(value=$184load_global.2, attr=single_packet_seed)
DEBUG:numba.core.ssa:on stmt: $const188.4 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $190compare_op.5 = $186load_attr.3 != $const188.4
DEBUG:numba.core.ssa:on stmt: bool192 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $192pred = call bool192($190compare_op.5, func=bool192, args=(Var($190compare_op.5, base.py:154),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $192pred, 194, 218
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 194
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $196load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $198load_attr.3 = getattr(value=$196load_global.2, attr=single_packet_seed)
DEBUG:numba.core.ssa:on stmt: $200binary_subscr.4 = static_getitem(value=packet_seeds, index=46, index_var=$198load_attr.3)
DEBUG:numba.core.ssa:on stmt: seed = $200binary_subscr.4
DEBUG:numba.core.ssa:first assign: seed
DEBUG:numba.core.ssa:replaced with: seed = $200binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $204load_global.5 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $206load_attr.6 = getattr(value=$204load_global.5, attr=random)
DEBUG:numba.core.ssa:on stmt: $208load_method.7 = getattr(value=$206load_attr.6, attr=seed)
DEBUG:numba.core.ssa:on stmt: $212call_method.9 = call $208load_method.7(seed, func=$208load_method.7, args=[Var(seed, base.py:155)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 238
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.3 = getitem(value=packet_seeds, index=i)
DEBUG:numba.core.ssa:on stmt: seed = $222binary_subscr.3
DEBUG:numba.core.ssa:replaced with: seed.1 = $222binary_subscr.3
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $228load_attr.5 = getattr(value=$226load_global.4, attr=random)
DEBUG:numba.core.ssa:on stmt: $230load_method.6 = getattr(value=$228load_attr.5, attr=seed)
DEBUG:numba.core.ssa:on stmt: $234call_method.8 = call $230load_method.6(seed, func=$230load_method.6, args=[Var(seed, base.py:155)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 238
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $238load_global.1 = global(RPacket: <class 'numba.experimental.jitclass.base.RPacket'>)
DEBUG:numba.core.ssa:on stmt: $242load_attr.3 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const244.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $246binary_subscr.5 = static_getitem(value=$242load_attr.3, index=0, index_var=$const244.4)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=packet_collection, attr=packets_input_mu)
DEBUG:numba.core.ssa:on stmt: $254binary_subscr.9 = getitem(value=$250load_attr.7, index=i)
DEBUG:numba.core.ssa:on stmt: $258load_attr.11 = getattr(value=packet_collection, attr=packets_input_nu)
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.13 = getitem(value=$258load_attr.11, index=i)
DEBUG:numba.core.ssa:on stmt: $266load_attr.15 = getattr(value=packet_collection, attr=packets_input_energy)
DEBUG:numba.core.ssa:on stmt: $270binary_subscr.17 = getitem(value=$266load_attr.15, index=i)
DEBUG:numba.core.ssa:on stmt: $const276.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $278call_function.21 = call $238load_global.1($246binary_subscr.5, $254binary_subscr.9, $262binary_subscr.13, $270binary_subscr.17, seed, i, $const276.20, func=$238load_global.1, args=[Var($246binary_subscr.5, base.py:161), Var($254binary_subscr.9, base.py:162), Var($262binary_subscr.13, base.py:163), Var($270binary_subscr.17, base.py:164), Var(seed, base.py:155), Var(i, base.py:153), Var($const276.20, base.py:167)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r_packet = $278call_function.21
DEBUG:numba.core.ssa:on stmt: $282load_global.22 = global(VPacketCollection: <class 'numba.experimental.jitclass.base.VPacketCollection'>)
DEBUG:numba.core.ssa:on stmt: $286load_attr.24 = getattr(value=r_packet, attr=index)
DEBUG:numba.core.ssa:on stmt: $290load_global.26 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $292load_attr.27 = getattr(value=$290load_global.26, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $294load_global.28 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $296load_attr.29 = getattr(value=$294load_global.28, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $300load_global.31 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $302load_attr.32 = getattr(value=$300load_global.31, attr=temporary_v_packet_bins)
DEBUG:numba.core.ssa:on stmt: $304call_function.33 = call $282load_global.22($286load_attr.24, spectrum_frequency, $292load_attr.27, $296load_attr.29, number_of_vpackets, $302load_attr.32, func=$282load_global.22, args=[Var($286load_attr.24, base.py:170), Var(spectrum_frequency, base.py:128), Var($292load_attr.27, base.py:172), Var($296load_attr.29, base.py:173), Var(number_of_vpackets, base.py:128), Var($302load_attr.32, base.py:175)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = $304call_function.33
DEBUG:numba.core.ssa:on stmt: $308load_global.34 = global(single_packet_loop: CPUDispatcher(<function single_packet_loop at 0x7f6e4a107ef0>))
DEBUG:numba.core.ssa:on stmt: $320call_function.40 = call $308load_global.34(r_packet, numba_model, numba_plasma, estimators, vpacket_collection, func=$308load_global.34, args=[Var(r_packet, base.py:167), Var(numba_model, base.py:128), Var(numba_plasma, base.py:128), Var(estimators, base.py:128), Var(vpacket_collection, base.py:175)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: loop = $320call_function.40
DEBUG:numba.core.ssa:on stmt: $326load_attr.42 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: output_nus[i] = $326load_attr.42
DEBUG:numba.core.ssa:on stmt: $336load_attr.46 = getattr(value=r_packet, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: last_interaction_in_nus[i] = $336load_attr.46
DEBUG:numba.core.ssa:on stmt: $346load_attr.50 = getattr(value=r_packet, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: last_line_interaction_in_ids[i] = $346load_attr.50
DEBUG:numba.core.ssa:on stmt: $356load_attr.54 = getattr(value=r_packet, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: last_line_interaction_out_ids[i] = $356load_attr.54
DEBUG:numba.core.ssa:on stmt: $366load_attr.58 = getattr(value=r_packet, attr=status)
DEBUG:numba.core.ssa:on stmt: $368load_global.59 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $370load_attr.60 = getattr(value=$368load_global.59, attr=REABSORBED)
DEBUG:numba.core.ssa:on stmt: $372compare_op.61 = $366load_attr.58 == $370load_attr.60
DEBUG:numba.core.ssa:on stmt: bool374 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $374pred = call bool374($372compare_op.61, func=bool374, args=(Var($372compare_op.61, base.py:188),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $374pred, 378, 402
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 378
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $380load_attr.2 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $382unary_negative.3 = unary(fn=<built-in function neg>, value=$380load_attr.2)
DEBUG:numba.core.ssa:on stmt: output_energies[i] = $382unary_negative.3
DEBUG:numba.core.ssa:on stmt: $392load_attr.7 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: last_interaction_types[i] = $392load_attr.7
DEBUG:numba.core.ssa:on stmt: jump 436
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 402
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $404load_attr.2 = getattr(value=r_packet, attr=status)
DEBUG:numba.core.ssa:on stmt: $406load_global.3 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $408load_attr.4 = getattr(value=$406load_global.3, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: $410compare_op.5 = $404load_attr.2 == $408load_attr.4
DEBUG:numba.core.ssa:on stmt: bool412 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $412pred = call bool412($410compare_op.5, func=bool412, args=(Var($410compare_op.5, base.py:191),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $412pred, 416, 436
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 416
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $418load_attr.2 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: output_energies[i] = $418load_attr.2
DEBUG:numba.core.ssa:on stmt: $428load_attr.6 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: last_interaction_types[i] = $428load_attr.6
DEBUG:numba.core.ssa:on stmt: jump 436
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 436
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $438load_attr.2 = getattr(value=vpacket_collection, attr=nus)
DEBUG:numba.core.ssa:on stmt: $const440.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $444load_attr.5 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $446build_slice.6 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $446build_slice.7 = call $446build_slice.6($const440.3, $444load_attr.5, func=$446build_slice.6, args=(Var($const440.3, base.py:195), Var($444load_attr.5, base.py:195)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $448binary_subscr.8 = getitem(value=$438load_attr.2, index=$446build_slice.7)
DEBUG:numba.core.ssa:on stmt: vpackets_nu = $448binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $454load_attr.10 = getattr(value=vpacket_collection, attr=energies)
DEBUG:numba.core.ssa:on stmt: $const456.11 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $460load_attr.13 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $462build_slice.14 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $462build_slice.15 = call $462build_slice.14($const456.11, $460load_attr.13, func=$462build_slice.14, args=(Var($const456.11, base.py:196), Var($460load_attr.13, base.py:196)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $464binary_subscr.16 = getitem(value=$454load_attr.10, index=$462build_slice.15)
DEBUG:numba.core.ssa:on stmt: vpackets_energy = $464binary_subscr.16
DEBUG:numba.core.ssa:on stmt: $468load_global.17 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $470load_method.18 = getattr(value=$468load_global.17, attr=floor)
DEBUG:numba.core.ssa:on stmt: $const476.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $478binary_subscr.22 = static_getitem(value=spectrum_frequency, index=0, index_var=$const476.21)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.23 = vpackets_nu - $478binary_subscr.22
DEBUG:numba.core.ssa:on stmt: $484binary_true_divide.25 = $480binary_subtract.23 / delta_nu
DEBUG:numba.core.ssa:on stmt: $486call_method.26 = call $470load_method.18($484binary_true_divide.25, func=$470load_method.18, args=[Var($484binary_true_divide.25, base.py:199)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $488load_method.27 = getattr(value=$486call_method.26, attr=astype)
DEBUG:numba.core.ssa:on stmt: $490load_global.28 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $492load_attr.29 = getattr(value=$490load_global.28, attr=int64)
DEBUG:numba.core.ssa:on stmt: $494call_method.30 = call $488load_method.27($492load_attr.29, func=$488load_method.27, args=[Var($492load_attr.29, base.py:200)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packets_idx = $494call_method.30
DEBUG:numba.core.ssa:on stmt: jump 498
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 498
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $500load_global.1 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $504call_function.3 = call $500load_global.1(v_packets_idx, func=$500load_global.1, args=[Var(v_packets_idx, base.py:200)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $506get_iter.4 = getiter(value=$504call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi508.1 = $506get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 508
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 508
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $508for_iter.2 = iternext(value=$phi508.1)
DEBUG:numba.core.ssa:on stmt: $508for_iter.3 = pair_first(value=$508for_iter.2)
DEBUG:numba.core.ssa:on stmt: $508for_iter.4 = pair_second(value=$508for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi510.2 = $508for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $508for_iter.4, 510, 580
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $510unpack_sequence.5 = exhaust_iter(value=$phi510.2, count=2)
DEBUG:numba.core.ssa:on stmt: $510unpack_sequence.3 = static_getitem(value=$510unpack_sequence.5, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $510unpack_sequence.4 = static_getitem(value=$510unpack_sequence.5, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: j = $510unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: idx = $510unpack_sequence.4
DEBUG:numba.core.ssa:on stmt: $520binary_subscr.8 = getitem(value=vpackets_nu, index=j)
DEBUG:numba.core.ssa:on stmt: $const524.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $526binary_subscr.11 = static_getitem(value=spectrum_frequency, index=0, index_var=$const524.10)
DEBUG:numba.core.ssa:on stmt: $528compare_op.12 = $520binary_subscr.8 < $526binary_subscr.11
DEBUG:numba.core.ssa:on stmt: bool530 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $530pred = call bool530($528compare_op.12, func=bool530, args=(Var($528compare_op.12, base.py:205),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $530pred, 702, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $538binary_subscr.4 = getitem(value=vpackets_nu, index=j)
DEBUG:numba.core.ssa:on stmt: $const542.6 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $544binary_subscr.7 = static_getitem(value=spectrum_frequency, index=-1, index_var=$const542.6)
DEBUG:numba.core.ssa:on stmt: $546compare_op.8 = $538binary_subscr.4 > $544binary_subscr.7
DEBUG:numba.core.ssa:on stmt: bool548 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $548pred = call bool548($546compare_op.8, func=bool548, args=(Var($546compare_op.8, base.py:206),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $548pred, 552, 556
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 552
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: jump 702
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 556
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.6 = getitem(value=v_packets_energy_hist, index=idx)
DEBUG:numba.core.ssa:on stmt: $568binary_subscr.9 = getitem(value=vpackets_energy, index=j)
DEBUG:numba.core.ssa:on stmt: $570inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$562binary_subscr.6, rhs=$568binary_subscr.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: v_packets_energy_hist[idx] = $570inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 702
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 580
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: jump 582
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 582
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $582load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $584load_attr.2 = getattr(value=$582load_global.1, attr=VPACKET_LOGGING)
DEBUG:numba.core.ssa:on stmt: bool586 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $586pred = call bool586($584load_attr.2, func=bool586, args=(Var($584load_attr.2, base.py:211),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $586pred, 588, 701
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $590load_method.2 = getattr(value=virt_packet_nus, attr=append)
DEBUG:numba.core.ssa:on stmt: $594call_method.4 = call $590load_method.2(vpackets_nu, func=$590load_method.2, args=[Var(vpackets_nu, base.py:195)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $600load_method.6 = getattr(value=virt_packet_energies, attr=append)
DEBUG:numba.core.ssa:on stmt: $604call_method.8 = call $600load_method.6(vpackets_energy, func=$600load_method.6, args=[Var(vpackets_energy, base.py:196)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $610load_method.10 = getattr(value=virt_packet_last_interaction_in_nu, attr=append)
DEBUG:numba.core.ssa:on stmt: $614load_attr.12 = getattr(value=vpacket_collection, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $const616.13 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $620load_attr.15 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $622build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $622build_slice.17 = call $622build_slice.16($const616.13, $620load_attr.15, func=$622build_slice.16, args=(Var($const616.13, base.py:215), Var($620load_attr.15, base.py:216)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $624binary_subscr.18 = getitem(value=$614load_attr.12, index=$622build_slice.17)
DEBUG:numba.core.ssa:on stmt: $626call_method.19 = call $610load_method.10($624binary_subscr.18, func=$610load_method.10, args=[Var($624binary_subscr.18, base.py:216)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $632load_method.21 = getattr(value=virt_packet_last_interaction_type, attr=append)
DEBUG:numba.core.ssa:on stmt: $636load_attr.23 = getattr(value=vpacket_collection, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $const638.24 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $642load_attr.26 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $644build_slice.27 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $644build_slice.28 = call $644build_slice.27($const638.24, $642load_attr.26, func=$644build_slice.27, args=(Var($const638.24, base.py:220), Var($642load_attr.26, base.py:221)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $646binary_subscr.29 = getitem(value=$636load_attr.23, index=$644build_slice.28)
DEBUG:numba.core.ssa:on stmt: $648call_method.30 = call $632load_method.21($646binary_subscr.29, func=$632load_method.21, args=[Var($646binary_subscr.29, base.py:221)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $654load_method.32 = getattr(value=virt_packet_last_line_interaction_in_id, attr=append)
DEBUG:numba.core.ssa:on stmt: $658load_attr.34 = getattr(value=vpacket_collection, attr=last_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $const660.35 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $664load_attr.37 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $666build_slice.38 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $666build_slice.39 = call $666build_slice.38($const660.35, $664load_attr.37, func=$666build_slice.38, args=(Var($const660.35, base.py:225), Var($664load_attr.37, base.py:226)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $668binary_subscr.40 = getitem(value=$658load_attr.34, index=$666build_slice.39)
DEBUG:numba.core.ssa:on stmt: $670call_method.41 = call $654load_method.32($668binary_subscr.40, func=$654load_method.32, args=[Var($668binary_subscr.40, base.py:226)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $676load_method.43 = getattr(value=virt_packet_last_line_interaction_out_id, attr=append)
DEBUG:numba.core.ssa:on stmt: $680load_attr.45 = getattr(value=vpacket_collection, attr=last_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $const682.46 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $686load_attr.48 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $688build_slice.49 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $688build_slice.50 = call $688build_slice.49($const682.46, $686load_attr.48, func=$688build_slice.49, args=(Var($const682.46, base.py:230), Var($686load_attr.48, base.py:231)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $690binary_subscr.51 = getitem(value=$680load_attr.45, index=$688build_slice.50)
DEBUG:numba.core.ssa:on stmt: $692call_method.52 = call $676load_method.43($690binary_subscr.51, func=$676load_method.43, args=[Var($690binary_subscr.51, base.py:231)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 701
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 698
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: jump 700
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 700
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: $const702.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const704.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $706build_slice.3 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $706build_slice.4 = call $706build_slice.3($const702.1, $const704.2, func=$706build_slice.3, args=(Var($const702.1, base.py:235), Var($const704.2, base.py:235)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $708binary_subscr.5 = static_getitem(value=output_energies, index=slice(None, None, None), index_var=$706build_slice.4)
DEBUG:numba.core.ssa:on stmt: $712load_attr.7 = getattr(value=packet_collection, attr=packets_output_energy)
DEBUG:numba.core.ssa:on stmt: $const714.8 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const716.9 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $718build_slice.10 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $718build_slice.11 = call $718build_slice.10($const714.8, $const716.9, func=$718build_slice.10, args=(Var($const714.8, base.py:235), Var($const716.9, base.py:235)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $712load_attr.7[slice(None, None, None)] = $708binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const724.13 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const726.14 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $728build_slice.15 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $728build_slice.16 = call $728build_slice.15($const724.13, $const726.14, func=$728build_slice.15, args=(Var($const724.13, base.py:236), Var($const726.14, base.py:236)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $730binary_subscr.17 = static_getitem(value=output_nus, index=slice(None, None, None), index_var=$728build_slice.16)
DEBUG:numba.core.ssa:on stmt: $734load_attr.19 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $const736.20 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const738.21 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $740build_slice.22 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $740build_slice.23 = call $740build_slice.22($const736.20, $const738.21, func=$740build_slice.22, args=(Var($const736.20, base.py:236), Var($const738.21, base.py:236)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $734load_attr.19[slice(None, None, None)] = $730binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $766build_tuple.35 = build_tuple(items=[Var(v_packets_energy_hist, base.py:142), Var(last_interaction_types, base.py:130), Var(last_interaction_in_nus, base.py:134), Var(last_line_interaction_in_ids, base.py:136), Var(last_line_interaction_out_ids, base.py:139), Var(virt_packet_nus, base.py:145), Var(virt_packet_energies, base.py:146), Var(virt_packet_last_interaction_in_nu, base.py:147), Var(virt_packet_last_interaction_type, base.py:148), Var(virt_packet_last_line_interaction_in_id, base.py:149), Var(virt_packet_last_line_interaction_out_id, base.py:150)])
DEBUG:numba.core.ssa:on stmt: $768return_value.36 = cast(value=$766build_tuple.35)
DEBUG:numba.core.ssa:on stmt: return $768return_value.36
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 701
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 702
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45d88950>
DEBUG:numba.core.ssa:on stmt: jump 508
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {194: [<numba.core.ir.Assign object at 0x7f6e45d11150>],
             218: [<numba.core.ir.Assign object at 0x7f6e45d11710>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: packet_collection = arg(0, name=packet_collection)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: spectrum_frequency = arg(4, name=spectrum_frequency)
DEBUG:numba.core.ssa:on stmt: number_of_vpackets = arg(5, name=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: packet_seeds = arg(6, name=packet_seeds)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=empty_like)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, base.py:128)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: output_nus = $10call_method.4
DEBUG:numba.core.ssa:on stmt: $14load_global.5 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=$14load_global.5, attr=ones_like)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $22load_global.9 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $24load_attr.10 = getattr(value=$22load_global.9, attr=int64)
DEBUG:numba.core.ssa:on stmt: $28call_function_kw.12 = call $16load_attr.6($20load_attr.8, func=$16load_attr.6, args=[Var($20load_attr.8, base.py:130)], kws=[('dtype', Var($24load_attr.10, base.py:130))], vararg=None)
DEBUG:numba.core.ssa:on stmt: $const30.13 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $32binary_multiply.14 = $28call_function_kw.12 * $const30.13
DEBUG:numba.core.ssa:on stmt: last_interaction_types = $32binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $36load_global.15 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $38load_method.16 = getattr(value=$36load_global.15, attr=empty_like)
DEBUG:numba.core.ssa:on stmt: $42load_attr.18 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $44call_method.19 = call $38load_method.16($42load_attr.18, func=$38load_method.16, args=[Var($42load_attr.18, base.py:132)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: output_energies = $44call_method.19
DEBUG:numba.core.ssa:on stmt: $48load_global.20 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_method.21 = getattr(value=$48load_global.20, attr=empty_like)
DEBUG:numba.core.ssa:on stmt: $54load_attr.23 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $56call_method.24 = call $50load_method.21($54load_attr.23, func=$50load_method.21, args=[Var($54load_attr.23, base.py:134)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: last_interaction_in_nus = $56call_method.24
DEBUG:numba.core.ssa:on stmt: $60load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $62load_attr.26 = getattr(value=$60load_global.25, attr=ones_like)
DEBUG:numba.core.ssa:on stmt: $66load_attr.28 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $68load_global.29 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.30 = getattr(value=$68load_global.29, attr=int64)
DEBUG:numba.core.ssa:on stmt: $74call_function_kw.32 = call $62load_attr.26($66load_attr.28, func=$62load_attr.26, args=[Var($66load_attr.28, base.py:136)], kws=[('dtype', Var($70load_attr.30, base.py:136))], vararg=None)
DEBUG:numba.core.ssa:on stmt: $const76.33 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $78binary_multiply.34 = $74call_function_kw.32 * $const76.33
DEBUG:numba.core.ssa:on stmt: last_line_interaction_in_ids = $78binary_multiply.34
DEBUG:numba.core.ssa:on stmt: $82load_global.35 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $84load_attr.36 = getattr(value=$82load_global.35, attr=ones_like)
DEBUG:numba.core.ssa:on stmt: $88load_attr.38 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $90load_global.39 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $92load_attr.40 = getattr(value=$90load_global.39, attr=int64)
DEBUG:numba.core.ssa:on stmt: $96call_function_kw.42 = call $84load_attr.36($88load_attr.38, func=$84load_attr.36, args=[Var($88load_attr.38, base.py:139)], kws=[('dtype', Var($92load_attr.40, base.py:139))], vararg=None)
DEBUG:numba.core.ssa:on stmt: $const98.43 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $100binary_multiply.44 = $96call_function_kw.42 * $const98.43
DEBUG:numba.core.ssa:on stmt: last_line_interaction_out_ids = $100binary_multiply.44
DEBUG:numba.core.ssa:on stmt: $104load_global.45 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_method.46 = getattr(value=$104load_global.45, attr=zeros_like)
DEBUG:numba.core.ssa:on stmt: $110call_method.48 = call $106load_method.46(spectrum_frequency, func=$106load_method.46, args=[Var(spectrum_frequency, base.py:128)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packets_energy_hist = $110call_method.48
DEBUG:numba.core.ssa:on stmt: $const116.50 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $118binary_subscr.51 = static_getitem(value=spectrum_frequency, index=1, index_var=$const116.50)
DEBUG:numba.core.ssa:on stmt: $const122.53 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $124binary_subscr.54 = static_getitem(value=spectrum_frequency, index=0, index_var=$const122.53)
DEBUG:numba.core.ssa:on stmt: $126binary_subtract.55 = $118binary_subscr.51 - $124binary_subscr.54
DEBUG:numba.core.ssa:on stmt: delta_nu = $126binary_subtract.55
DEBUG:numba.core.ssa:on stmt: $130build_list.56 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_nus = $130build_list.56
DEBUG:numba.core.ssa:on stmt: $134build_list.57 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_energies = $134build_list.57
DEBUG:numba.core.ssa:on stmt: $138build_list.58 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_last_interaction_in_nu = $138build_list.58
DEBUG:numba.core.ssa:on stmt: $142build_list.59 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_last_interaction_type = $142build_list.59
DEBUG:numba.core.ssa:on stmt: $146build_list.60 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_last_line_interaction_in_id = $146build_list.60
DEBUG:numba.core.ssa:on stmt: $150build_list.61 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: virt_packet_last_line_interaction_out_id = $150build_list.61
DEBUG:numba.core.ssa:on stmt: $154load_global.62 = global(print: <built-in function print>)
DEBUG:numba.core.ssa:on stmt: $const156.63 = const(str, Running post-merge numba montecarlo (with C close lines)!)
DEBUG:numba.core.ssa:on stmt: print($const156.63)
DEBUG:numba.core.ssa:on stmt: $158call_function.64 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: jump 162
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $166load_global.0 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $168load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $172call_function.3 = call $168load_global.1(output_nus, func=$168load_global.1, args=[Var(output_nus, base.py:128)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $174call_function.4 = call $166load_global.0($172call_function.3, func=$166load_global.0, args=[Var($172call_function.3, base.py:153)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $176get_iter.5 = getiter(value=$174call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $176get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi182.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 182, 698
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: i = $phi182.1
DEBUG:numba.core.ssa:on stmt: $184load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $186load_attr.3 = getattr(value=$184load_global.2, attr=single_packet_seed)
DEBUG:numba.core.ssa:on stmt: $const188.4 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $190compare_op.5 = $186load_attr.3 != $const188.4
DEBUG:numba.core.ssa:on stmt: bool192 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $192pred = call bool192($190compare_op.5, func=bool192, args=(Var($190compare_op.5, base.py:154),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $192pred, 194, 218
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 194
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $196load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $198load_attr.3 = getattr(value=$196load_global.2, attr=single_packet_seed)
DEBUG:numba.core.ssa:on stmt: $200binary_subscr.4 = static_getitem(value=packet_seeds, index=46, index_var=$198load_attr.3)
DEBUG:numba.core.ssa:on stmt: seed = $200binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $204load_global.5 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $206load_attr.6 = getattr(value=$204load_global.5, attr=random)
DEBUG:numba.core.ssa:on stmt: $208load_method.7 = getattr(value=$206load_attr.6, attr=seed)
DEBUG:numba.core.ssa:on stmt: $212call_method.9 = call $208load_method.7(seed, func=$208load_method.7, args=[Var(seed, base.py:155)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='seed' stmt=$212call_method.9 = call $208load_method.7(seed, func=$208load_method.7, args=[Var(seed, base.py:155)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 238
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 218
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.3 = getitem(value=packet_seeds, index=i)
DEBUG:numba.core.ssa:on stmt: seed.1 = $222binary_subscr.3
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $228load_attr.5 = getattr(value=$226load_global.4, attr=random)
DEBUG:numba.core.ssa:on stmt: $230load_method.6 = getattr(value=$228load_attr.5, attr=seed)
DEBUG:numba.core.ssa:on stmt: $234call_method.8 = call $230load_method.6(seed, func=$230load_method.6, args=[Var(seed, base.py:155)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='seed' stmt=$234call_method.8 = call $230load_method.6(seed, func=$230load_method.6, args=[Var(seed, base.py:155)], kws=(), vararg=None)
DEBUG:numba.core.ssa:replaced with: $234call_method.8 = call $230load_method.6(seed.1, func=$230load_method.6, args=[Var(seed.1, base.py:158)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 238
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 238
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $238load_global.1 = global(RPacket: <class 'numba.experimental.jitclass.base.RPacket'>)
DEBUG:numba.core.ssa:on stmt: $242load_attr.3 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const244.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $246binary_subscr.5 = static_getitem(value=$242load_attr.3, index=0, index_var=$const244.4)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=packet_collection, attr=packets_input_mu)
DEBUG:numba.core.ssa:on stmt: $254binary_subscr.9 = getitem(value=$250load_attr.7, index=i)
DEBUG:numba.core.ssa:on stmt: $258load_attr.11 = getattr(value=packet_collection, attr=packets_input_nu)
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.13 = getitem(value=$258load_attr.11, index=i)
DEBUG:numba.core.ssa:on stmt: $266load_attr.15 = getattr(value=packet_collection, attr=packets_input_energy)
DEBUG:numba.core.ssa:on stmt: $270binary_subscr.17 = getitem(value=$266load_attr.15, index=i)
DEBUG:numba.core.ssa:on stmt: $const276.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $278call_function.21 = call $238load_global.1($246binary_subscr.5, $254binary_subscr.9, $262binary_subscr.13, $270binary_subscr.17, seed, i, $const276.20, func=$238load_global.1, args=[Var($246binary_subscr.5, base.py:161), Var($254binary_subscr.9, base.py:162), Var($262binary_subscr.13, base.py:163), Var($270binary_subscr.17, base.py:164), Var(seed, base.py:155), Var(i, base.py:153), Var($const276.20, base.py:167)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='seed' stmt=$278call_function.21 = call $238load_global.1($246binary_subscr.5, $254binary_subscr.9, $262binary_subscr.13, $270binary_subscr.17, seed, i, $const276.20, func=$238load_global.1, args=[Var($246binary_subscr.5, base.py:161), Var($254binary_subscr.9, base.py:162), Var($262binary_subscr.13, base.py:163), Var($270binary_subscr.17, base.py:164), Var(seed, base.py:155), Var(i, base.py:153), Var($const276.20, base.py:167)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def_from_top label 238
DEBUG:numba.core.ssa:insert phi node seed.2 = phi(incoming_values=[], incoming_blocks=[]) at 238
DEBUG:numba.core.ssa:find_def_from_bottom label 218
DEBUG:numba.core.ssa:incoming_def seed.1 = $222binary_subscr.3
DEBUG:numba.core.ssa:find_def_from_bottom label 194
DEBUG:numba.core.ssa:incoming_def seed = $200binary_subscr.4
DEBUG:numba.core.ssa:replaced with: $278call_function.21 = call $238load_global.1($246binary_subscr.5, $254binary_subscr.9, $262binary_subscr.13, $270binary_subscr.17, seed.2, i, $const276.20, func=$238load_global.1, args=[Var($246binary_subscr.5, base.py:161), Var($254binary_subscr.9, base.py:162), Var($262binary_subscr.13, base.py:163), Var($270binary_subscr.17, base.py:164), Var(seed.2, base.py:160), Var(i, base.py:153), Var($const276.20, base.py:167)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r_packet = $278call_function.21
DEBUG:numba.core.ssa:on stmt: $282load_global.22 = global(VPacketCollection: <class 'numba.experimental.jitclass.base.VPacketCollection'>)
DEBUG:numba.core.ssa:on stmt: $286load_attr.24 = getattr(value=r_packet, attr=index)
DEBUG:numba.core.ssa:on stmt: $290load_global.26 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $292load_attr.27 = getattr(value=$290load_global.26, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $294load_global.28 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $296load_attr.29 = getattr(value=$294load_global.28, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $300load_global.31 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $302load_attr.32 = getattr(value=$300load_global.31, attr=temporary_v_packet_bins)
DEBUG:numba.core.ssa:on stmt: $304call_function.33 = call $282load_global.22($286load_attr.24, spectrum_frequency, $292load_attr.27, $296load_attr.29, number_of_vpackets, $302load_attr.32, func=$282load_global.22, args=[Var($286load_attr.24, base.py:170), Var(spectrum_frequency, base.py:128), Var($292load_attr.27, base.py:172), Var($296load_attr.29, base.py:173), Var(number_of_vpackets, base.py:128), Var($302load_attr.32, base.py:175)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = $304call_function.33
DEBUG:numba.core.ssa:on stmt: $308load_global.34 = global(single_packet_loop: CPUDispatcher(<function single_packet_loop at 0x7f6e4a107ef0>))
DEBUG:numba.core.ssa:on stmt: $320call_function.40 = call $308load_global.34(r_packet, numba_model, numba_plasma, estimators, vpacket_collection, func=$308load_global.34, args=[Var(r_packet, base.py:167), Var(numba_model, base.py:128), Var(numba_plasma, base.py:128), Var(estimators, base.py:128), Var(vpacket_collection, base.py:175)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: loop = $320call_function.40
DEBUG:numba.core.ssa:on stmt: $326load_attr.42 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: output_nus[i] = $326load_attr.42
DEBUG:numba.core.ssa:on stmt: $336load_attr.46 = getattr(value=r_packet, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: last_interaction_in_nus[i] = $336load_attr.46
DEBUG:numba.core.ssa:on stmt: $346load_attr.50 = getattr(value=r_packet, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: last_line_interaction_in_ids[i] = $346load_attr.50
DEBUG:numba.core.ssa:on stmt: $356load_attr.54 = getattr(value=r_packet, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: last_line_interaction_out_ids[i] = $356load_attr.54
DEBUG:numba.core.ssa:on stmt: $366load_attr.58 = getattr(value=r_packet, attr=status)
DEBUG:numba.core.ssa:on stmt: $368load_global.59 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $370load_attr.60 = getattr(value=$368load_global.59, attr=REABSORBED)
DEBUG:numba.core.ssa:on stmt: $372compare_op.61 = $366load_attr.58 == $370load_attr.60
DEBUG:numba.core.ssa:on stmt: bool374 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $374pred = call bool374($372compare_op.61, func=bool374, args=(Var($372compare_op.61, base.py:188),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $374pred, 378, 402
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 378
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $380load_attr.2 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $382unary_negative.3 = unary(fn=<built-in function neg>, value=$380load_attr.2)
DEBUG:numba.core.ssa:on stmt: output_energies[i] = $382unary_negative.3
DEBUG:numba.core.ssa:on stmt: $392load_attr.7 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: last_interaction_types[i] = $392load_attr.7
DEBUG:numba.core.ssa:on stmt: jump 436
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 402
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $404load_attr.2 = getattr(value=r_packet, attr=status)
DEBUG:numba.core.ssa:on stmt: $406load_global.3 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $408load_attr.4 = getattr(value=$406load_global.3, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: $410compare_op.5 = $404load_attr.2 == $408load_attr.4
DEBUG:numba.core.ssa:on stmt: bool412 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $412pred = call bool412($410compare_op.5, func=bool412, args=(Var($410compare_op.5, base.py:191),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $412pred, 416, 436
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 416
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $418load_attr.2 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: output_energies[i] = $418load_attr.2
DEBUG:numba.core.ssa:on stmt: $428load_attr.6 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: last_interaction_types[i] = $428load_attr.6
DEBUG:numba.core.ssa:on stmt: jump 436
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 436
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $438load_attr.2 = getattr(value=vpacket_collection, attr=nus)
DEBUG:numba.core.ssa:on stmt: $const440.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $444load_attr.5 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $446build_slice.6 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $446build_slice.7 = call $446build_slice.6($const440.3, $444load_attr.5, func=$446build_slice.6, args=(Var($const440.3, base.py:195), Var($444load_attr.5, base.py:195)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $448binary_subscr.8 = getitem(value=$438load_attr.2, index=$446build_slice.7)
DEBUG:numba.core.ssa:on stmt: vpackets_nu = $448binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $454load_attr.10 = getattr(value=vpacket_collection, attr=energies)
DEBUG:numba.core.ssa:on stmt: $const456.11 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $460load_attr.13 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $462build_slice.14 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $462build_slice.15 = call $462build_slice.14($const456.11, $460load_attr.13, func=$462build_slice.14, args=(Var($const456.11, base.py:196), Var($460load_attr.13, base.py:196)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $464binary_subscr.16 = getitem(value=$454load_attr.10, index=$462build_slice.15)
DEBUG:numba.core.ssa:on stmt: vpackets_energy = $464binary_subscr.16
DEBUG:numba.core.ssa:on stmt: $468load_global.17 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $470load_method.18 = getattr(value=$468load_global.17, attr=floor)
DEBUG:numba.core.ssa:on stmt: $const476.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $478binary_subscr.22 = static_getitem(value=spectrum_frequency, index=0, index_var=$const476.21)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.23 = vpackets_nu - $478binary_subscr.22
DEBUG:numba.core.ssa:on stmt: $484binary_true_divide.25 = $480binary_subtract.23 / delta_nu
DEBUG:numba.core.ssa:on stmt: $486call_method.26 = call $470load_method.18($484binary_true_divide.25, func=$470load_method.18, args=[Var($484binary_true_divide.25, base.py:199)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $488load_method.27 = getattr(value=$486call_method.26, attr=astype)
DEBUG:numba.core.ssa:on stmt: $490load_global.28 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $492load_attr.29 = getattr(value=$490load_global.28, attr=int64)
DEBUG:numba.core.ssa:on stmt: $494call_method.30 = call $488load_method.27($492load_attr.29, func=$488load_method.27, args=[Var($492load_attr.29, base.py:200)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packets_idx = $494call_method.30
DEBUG:numba.core.ssa:on stmt: jump 498
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 498
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $500load_global.1 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $504call_function.3 = call $500load_global.1(v_packets_idx, func=$500load_global.1, args=[Var(v_packets_idx, base.py:200)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $506get_iter.4 = getiter(value=$504call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi508.1 = $506get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 508
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 508
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $508for_iter.2 = iternext(value=$phi508.1)
DEBUG:numba.core.ssa:on stmt: $508for_iter.3 = pair_first(value=$508for_iter.2)
DEBUG:numba.core.ssa:on stmt: $508for_iter.4 = pair_second(value=$508for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi510.2 = $508for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $508for_iter.4, 510, 580
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 510
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $510unpack_sequence.5 = exhaust_iter(value=$phi510.2, count=2)
DEBUG:numba.core.ssa:on stmt: $510unpack_sequence.3 = static_getitem(value=$510unpack_sequence.5, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $510unpack_sequence.4 = static_getitem(value=$510unpack_sequence.5, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: j = $510unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: idx = $510unpack_sequence.4
DEBUG:numba.core.ssa:on stmt: $520binary_subscr.8 = getitem(value=vpackets_nu, index=j)
DEBUG:numba.core.ssa:on stmt: $const524.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $526binary_subscr.11 = static_getitem(value=spectrum_frequency, index=0, index_var=$const524.10)
DEBUG:numba.core.ssa:on stmt: $528compare_op.12 = $520binary_subscr.8 < $526binary_subscr.11
DEBUG:numba.core.ssa:on stmt: bool530 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $530pred = call bool530($528compare_op.12, func=bool530, args=(Var($528compare_op.12, base.py:205),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $530pred, 702, 534
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 534
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $538binary_subscr.4 = getitem(value=vpackets_nu, index=j)
DEBUG:numba.core.ssa:on stmt: $const542.6 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $544binary_subscr.7 = static_getitem(value=spectrum_frequency, index=-1, index_var=$const542.6)
DEBUG:numba.core.ssa:on stmt: $546compare_op.8 = $538binary_subscr.4 > $544binary_subscr.7
DEBUG:numba.core.ssa:on stmt: bool548 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $548pred = call bool548($546compare_op.8, func=bool548, args=(Var($546compare_op.8, base.py:206),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $548pred, 552, 556
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 552
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: jump 702
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 556
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.6 = getitem(value=v_packets_energy_hist, index=idx)
DEBUG:numba.core.ssa:on stmt: $568binary_subscr.9 = getitem(value=vpackets_energy, index=j)
DEBUG:numba.core.ssa:on stmt: $570inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$562binary_subscr.6, rhs=$568binary_subscr.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: v_packets_energy_hist[idx] = $570inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 702
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 580
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: jump 582
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 582
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $582load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $584load_attr.2 = getattr(value=$582load_global.1, attr=VPACKET_LOGGING)
DEBUG:numba.core.ssa:on stmt: bool586 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $586pred = call bool586($584load_attr.2, func=bool586, args=(Var($584load_attr.2, base.py:211),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $586pred, 588, 701
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 588
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $590load_method.2 = getattr(value=virt_packet_nus, attr=append)
DEBUG:numba.core.ssa:on stmt: $594call_method.4 = call $590load_method.2(vpackets_nu, func=$590load_method.2, args=[Var(vpackets_nu, base.py:195)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $600load_method.6 = getattr(value=virt_packet_energies, attr=append)
DEBUG:numba.core.ssa:on stmt: $604call_method.8 = call $600load_method.6(vpackets_energy, func=$600load_method.6, args=[Var(vpackets_energy, base.py:196)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $610load_method.10 = getattr(value=virt_packet_last_interaction_in_nu, attr=append)
DEBUG:numba.core.ssa:on stmt: $614load_attr.12 = getattr(value=vpacket_collection, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $const616.13 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $620load_attr.15 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $622build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $622build_slice.17 = call $622build_slice.16($const616.13, $620load_attr.15, func=$622build_slice.16, args=(Var($const616.13, base.py:215), Var($620load_attr.15, base.py:216)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $624binary_subscr.18 = getitem(value=$614load_attr.12, index=$622build_slice.17)
DEBUG:numba.core.ssa:on stmt: $626call_method.19 = call $610load_method.10($624binary_subscr.18, func=$610load_method.10, args=[Var($624binary_subscr.18, base.py:216)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $632load_method.21 = getattr(value=virt_packet_last_interaction_type, attr=append)
DEBUG:numba.core.ssa:on stmt: $636load_attr.23 = getattr(value=vpacket_collection, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $const638.24 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $642load_attr.26 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $644build_slice.27 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $644build_slice.28 = call $644build_slice.27($const638.24, $642load_attr.26, func=$644build_slice.27, args=(Var($const638.24, base.py:220), Var($642load_attr.26, base.py:221)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $646binary_subscr.29 = getitem(value=$636load_attr.23, index=$644build_slice.28)
DEBUG:numba.core.ssa:on stmt: $648call_method.30 = call $632load_method.21($646binary_subscr.29, func=$632load_method.21, args=[Var($646binary_subscr.29, base.py:221)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $654load_method.32 = getattr(value=virt_packet_last_line_interaction_in_id, attr=append)
DEBUG:numba.core.ssa:on stmt: $658load_attr.34 = getattr(value=vpacket_collection, attr=last_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $const660.35 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $664load_attr.37 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $666build_slice.38 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $666build_slice.39 = call $666build_slice.38($const660.35, $664load_attr.37, func=$666build_slice.38, args=(Var($const660.35, base.py:225), Var($664load_attr.37, base.py:226)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $668binary_subscr.40 = getitem(value=$658load_attr.34, index=$666build_slice.39)
DEBUG:numba.core.ssa:on stmt: $670call_method.41 = call $654load_method.32($668binary_subscr.40, func=$654load_method.32, args=[Var($668binary_subscr.40, base.py:226)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $676load_method.43 = getattr(value=virt_packet_last_line_interaction_out_id, attr=append)
DEBUG:numba.core.ssa:on stmt: $680load_attr.45 = getattr(value=vpacket_collection, attr=last_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $const682.46 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $686load_attr.48 = getattr(value=vpacket_collection, attr=idx)
DEBUG:numba.core.ssa:on stmt: $688build_slice.49 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $688build_slice.50 = call $688build_slice.49($const682.46, $686load_attr.48, func=$688build_slice.49, args=(Var($const682.46, base.py:230), Var($686load_attr.48, base.py:231)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $690binary_subscr.51 = getitem(value=$680load_attr.45, index=$688build_slice.50)
DEBUG:numba.core.ssa:on stmt: $692call_method.52 = call $676load_method.43($690binary_subscr.51, func=$676load_method.43, args=[Var($690binary_subscr.51, base.py:231)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 701
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 698
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: jump 700
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 700
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: $const702.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const704.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $706build_slice.3 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $706build_slice.4 = call $706build_slice.3($const702.1, $const704.2, func=$706build_slice.3, args=(Var($const702.1, base.py:235), Var($const704.2, base.py:235)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $708binary_subscr.5 = static_getitem(value=output_energies, index=slice(None, None, None), index_var=$706build_slice.4)
DEBUG:numba.core.ssa:on stmt: $712load_attr.7 = getattr(value=packet_collection, attr=packets_output_energy)
DEBUG:numba.core.ssa:on stmt: $const714.8 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const716.9 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $718build_slice.10 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $718build_slice.11 = call $718build_slice.10($const714.8, $const716.9, func=$718build_slice.10, args=(Var($const714.8, base.py:235), Var($const716.9, base.py:235)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $712load_attr.7[slice(None, None, None)] = $708binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const724.13 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const726.14 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $728build_slice.15 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $728build_slice.16 = call $728build_slice.15($const724.13, $const726.14, func=$728build_slice.15, args=(Var($const724.13, base.py:236), Var($const726.14, base.py:236)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $730binary_subscr.17 = static_getitem(value=output_nus, index=slice(None, None, None), index_var=$728build_slice.16)
DEBUG:numba.core.ssa:on stmt: $734load_attr.19 = getattr(value=packet_collection, attr=packets_output_nu)
DEBUG:numba.core.ssa:on stmt: $const736.20 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const738.21 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $740build_slice.22 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $740build_slice.23 = call $740build_slice.22($const736.20, $const738.21, func=$740build_slice.22, args=(Var($const736.20, base.py:236), Var($const738.21, base.py:236)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $734load_attr.19[slice(None, None, None)] = $730binary_subscr.17
DEBUG:numba.core.ssa:on stmt: $766build_tuple.35 = build_tuple(items=[Var(v_packets_energy_hist, base.py:142), Var(last_interaction_types, base.py:130), Var(last_interaction_in_nus, base.py:134), Var(last_line_interaction_in_ids, base.py:136), Var(last_line_interaction_out_ids, base.py:139), Var(virt_packet_nus, base.py:145), Var(virt_packet_energies, base.py:146), Var(virt_packet_last_interaction_in_nu, base.py:147), Var(virt_packet_last_interaction_type, base.py:148), Var(virt_packet_last_line_interaction_in_id, base.py:149), Var(virt_packet_last_line_interaction_out_id, base.py:150)])
DEBUG:numba.core.ssa:on stmt: $768return_value.36 = cast(value=$766build_tuple.35)
DEBUG:numba.core.ssa:on stmt: return $768return_value.36
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 701
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 702
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45d11110>
DEBUG:numba.core.ssa:on stmt: jump 508
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=57)
           2	LOAD_FAST(arg=1, lineno=57)
           4	LOAD_FAST(arg=0, lineno=57)
           6	STORE_ATTR(arg=0, lineno=57)
           8	LOAD_FAST(arg=2, lineno=58)
          10	LOAD_FAST(arg=0, lineno=58)
          12	STORE_ATTR(arg=1, lineno=58)
          14	LOAD_FAST(arg=3, lineno=59)
          16	LOAD_FAST(arg=0, lineno=59)
          18	STORE_ATTR(arg=2, lineno=59)
          20	LOAD_FAST(arg=4, lineno=60)
          22	LOAD_FAST(arg=0, lineno=60)
          24	STORE_ATTR(arg=3, lineno=60)
          26	LOAD_CONST(arg=1, lineno=61)
          28	LOAD_FAST(arg=0, lineno=61)
          30	STORE_ATTR(arg=4, lineno=61)
          32	LOAD_GLOBAL(arg=5, lineno=62)
          34	LOAD_ATTR(arg=6, lineno=62)
          36	LOAD_FAST(arg=0, lineno=62)
          38	STORE_ATTR(arg=7, lineno=62)
          40	LOAD_FAST(arg=5, lineno=63)
          42	LOAD_FAST(arg=0, lineno=63)
          44	STORE_ATTR(arg=8, lineno=63)
          46	LOAD_FAST(arg=6, lineno=64)
          48	LOAD_FAST(arg=0, lineno=64)
          50	STORE_ATTR(arg=9, lineno=64)
          52	LOAD_FAST(arg=7, lineno=65)
          54	LOAD_FAST(arg=0, lineno=65)
          56	STORE_ATTR(arg=10, lineno=65)
          58	LOAD_CONST(arg=2, lineno=66)
          60	LOAD_FAST(arg=0, lineno=66)
          62	STORE_ATTR(arg=11, lineno=66)
          64	LOAD_CONST(arg=3, lineno=67)
          66	LOAD_FAST(arg=0, lineno=67)
          68	STORE_ATTR(arg=12, lineno=67)
          70	LOAD_CONST(arg=2, lineno=68)
          72	LOAD_FAST(arg=0, lineno=68)
          74	STORE_ATTR(arg=13, lineno=68)
          76	LOAD_CONST(arg=2, lineno=69)
          78	LOAD_FAST(arg=0, lineno=69)
          80	STORE_ATTR(arg=14, lineno=69)
          82	LOAD_CONST(arg=0, lineno=69)
          84	RETURN_VALUE(arg=None, lineno=69)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=57)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=57)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=57)
DEBUG:numba.core.byteflow:stack ['$r2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_ATTR(arg=0, lineno=57)
DEBUG:numba.core.byteflow:stack ['$r2.0', '$self4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=58)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=58)
DEBUG:numba.core.byteflow:stack ['$mu8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_ATTR(arg=1, lineno=58)
DEBUG:numba.core.byteflow:stack ['$mu8.2', '$self10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=59)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=59)
DEBUG:numba.core.byteflow:stack ['$nu14.4']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_ATTR(arg=2, lineno=59)
DEBUG:numba.core.byteflow:stack ['$nu14.4', '$self16.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=4, lineno=60)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=60)
DEBUG:numba.core.byteflow:stack ['$energy20.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_ATTR(arg=3, lineno=60)
DEBUG:numba.core.byteflow:stack ['$energy20.6', '$self22.7']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=61)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=61)
DEBUG:numba.core.byteflow:stack ['$const26.8']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_ATTR(arg=4, lineno=61)
DEBUG:numba.core.byteflow:stack ['$const26.8', '$self28.9']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_GLOBAL(arg=5, lineno=62)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_ATTR(arg=6, lineno=62)
DEBUG:numba.core.byteflow:stack ['$32load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=62)
DEBUG:numba.core.byteflow:stack ['$34load_attr.11']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_ATTR(arg=7, lineno=62)
DEBUG:numba.core.byteflow:stack ['$34load_attr.11', '$self36.12']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=5, lineno=63)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=63)
DEBUG:numba.core.byteflow:stack ['$seed40.13']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_ATTR(arg=8, lineno=63)
DEBUG:numba.core.byteflow:stack ['$seed40.13', '$self42.14']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=6, lineno=64)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=64)
DEBUG:numba.core.byteflow:stack ['$index46.15']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=STORE_ATTR(arg=9, lineno=64)
DEBUG:numba.core.byteflow:stack ['$index46.15', '$self48.16']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=7, lineno=65)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=65)
DEBUG:numba.core.byteflow:stack ['$is_close_line52.17']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=STORE_ATTR(arg=10, lineno=65)
DEBUG:numba.core.byteflow:stack ['$is_close_line52.17', '$self54.18']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_CONST(arg=2, lineno=66)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=0, lineno=66)
DEBUG:numba.core.byteflow:stack ['$const58.19']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_ATTR(arg=11, lineno=66)
DEBUG:numba.core.byteflow:stack ['$const58.19', '$self60.20']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=3, lineno=67)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=67)
DEBUG:numba.core.byteflow:stack ['$const64.21']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=STORE_ATTR(arg=12, lineno=67)
DEBUG:numba.core.byteflow:stack ['$const64.21', '$self66.22']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_CONST(arg=2, lineno=68)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=0, lineno=68)
DEBUG:numba.core.byteflow:stack ['$const70.23']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_ATTR(arg=13, lineno=68)
DEBUG:numba.core.byteflow:stack ['$const70.23', '$self72.24']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_CONST(arg=2, lineno=69)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=0, lineno=69)
DEBUG:numba.core.byteflow:stack ['$const76.25']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=STORE_ATTR(arg=14, lineno=69)
DEBUG:numba.core.byteflow:stack ['$const76.25', '$self78.26']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_CONST(arg=0, lineno=69)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RETURN_VALUE(arg=None, lineno=69)
DEBUG:numba.core.byteflow:stack ['$const82.27']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$r2.0'}), (4, {'res': '$self4.1'}), (6, {'target': '$self4.1', 'value': '$r2.0'}), (8, {'res': '$mu8.2'}), (10, {'res': '$self10.3'}), (12, {'target': '$self10.3', 'value': '$mu8.2'}), (14, {'res': '$nu14.4'}), (16, {'res': '$self16.5'}), (18, {'target': '$self16.5', 'value': '$nu14.4'}), (20, {'res': '$energy20.6'}), (22, {'res': '$self22.7'}), (24, {'target': '$self22.7', 'value': '$energy20.6'}), (26, {'res': '$const26.8'}), (28, {'res': '$self28.9'}), (30, {'target': '$self28.9', 'value': '$const26.8'}), (32, {'res': '$32load_global.10'}), (34, {'item': '$32load_global.10', 'res': '$34load_attr.11'}), (36, {'res': '$self36.12'}), (38, {'target': '$self36.12', 'value': '$34load_attr.11'}), (40, {'res': '$seed40.13'}), (42, {'res': '$self42.14'}), (44, {'target': '$self42.14', 'value': '$seed40.13'}), (46, {'res': '$index46.15'}), (48, {'res': '$self48.16'}), (50, {'target': '$self48.16', 'value': '$index46.15'}), (52, {'res': '$is_close_line52.17'}), (54, {'res': '$self54.18'}), (56, {'target': '$self54.18', 'value': '$is_close_line52.17'}), (58, {'res': '$const58.19'}), (60, {'res': '$self60.20'}), (62, {'target': '$self60.20', 'value': '$const58.19'}), (64, {'res': '$const64.21'}), (66, {'res': '$self66.22'}), (68, {'target': '$self66.22', 'value': '$const64.21'}), (70, {'res': '$const70.23'}), (72, {'res': '$self72.24'}), (74, {'target': '$self72.24', 'value': '$const70.23'}), (76, {'res': '$const76.25'}), (78, {'res': '$self78.26'}), (80, {'target': '$self78.26', 'value': '$const76.25'}), (82, {'res': '$const82.27'}), (84, {'retval': '$const82.27', 'castval': '$84return_value.28'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    self = arg(0, name=self)                 ['self']
    r = arg(1, name=r)                       ['r']
    mu = arg(2, name=mu)                     ['mu']
    nu = arg(3, name=nu)                     ['nu']
    energy = arg(4, name=energy)             ['energy']
    seed = arg(5, name=seed)                 ['seed']
    index = arg(6, name=index)               ['index']
    is_close_line = arg(7, name=is_close_line) ['is_close_line']
    (self).r = r                             ['r', 'self']
    (self).mu = mu                           ['mu', 'self']
    (self).nu = nu                           ['nu', 'self']
    (self).energy = energy                   ['energy', 'self']
    $const26.8 = const(int, 0)               ['$const26.8']
    (self).current_shell_id = $const26.8     ['$const26.8', 'self']
    $32load_global.10 = global(PacketStatus: <enum 'PacketStatus'>) ['$32load_global.10']
    $34load_attr.11 = getattr(value=$32load_global.10, attr=IN_PROCESS) ['$32load_global.10', '$34load_attr.11']
    (self).status = $34load_attr.11          ['$34load_attr.11', 'self']
    (self).seed = seed                       ['seed', 'self']
    (self).index = index                     ['index', 'self']
    (self).is_close_line = is_close_line     ['is_close_line', 'self']
    $const58.19 = const(int, -1)             ['$const58.19']
    (self).last_interaction_type = $const58.19 ['$const58.19', 'self']
    $const64.21 = const(float, 0.0)          ['$const64.21']
    (self).last_interaction_in_nu = $const64.21 ['$const64.21', 'self']
    $const70.23 = const(int, -1)             ['$const70.23']
    (self).last_line_interaction_in_id = $const70.23 ['$const70.23', 'self']
    $const76.25 = const(int, -1)             ['$const76.25']
    (self).last_line_interaction_out_id = $const76.25 ['$const76.25', 'self']
    $const82.27 = const(NoneType, None)      ['$const82.27']
    $84return_value.28 = cast(value=$const82.27) ['$84return_value.28', '$const82.27']
    return $84return_value.28                ['$84return_value.28']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ea5e50>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: r = arg(1, name=r)
DEBUG:numba.core.ssa:on stmt: mu = arg(2, name=mu)
DEBUG:numba.core.ssa:on stmt: nu = arg(3, name=nu)
DEBUG:numba.core.ssa:on stmt: energy = arg(4, name=energy)
DEBUG:numba.core.ssa:on stmt: seed = arg(5, name=seed)
DEBUG:numba.core.ssa:on stmt: index = arg(6, name=index)
DEBUG:numba.core.ssa:on stmt: is_close_line = arg(7, name=is_close_line)
DEBUG:numba.core.ssa:on stmt: (self).r = r
DEBUG:numba.core.ssa:on stmt: (self).mu = mu
DEBUG:numba.core.ssa:on stmt: (self).nu = nu
DEBUG:numba.core.ssa:on stmt: (self).energy = energy
DEBUG:numba.core.ssa:on stmt: $const26.8 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: (self).current_shell_id = $const26.8
DEBUG:numba.core.ssa:on stmt: $32load_global.10 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $34load_attr.11 = getattr(value=$32load_global.10, attr=IN_PROCESS)
DEBUG:numba.core.ssa:on stmt: (self).status = $34load_attr.11
DEBUG:numba.core.ssa:on stmt: (self).seed = seed
DEBUG:numba.core.ssa:on stmt: (self).index = index
DEBUG:numba.core.ssa:on stmt: (self).is_close_line = is_close_line
DEBUG:numba.core.ssa:on stmt: $const58.19 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: (self).last_interaction_type = $const58.19
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: (self).last_interaction_in_nu = $const64.21
DEBUG:numba.core.ssa:on stmt: $const70.23 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: (self).last_line_interaction_in_id = $const70.23
DEBUG:numba.core.ssa:on stmt: $const76.25 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: (self).last_line_interaction_out_id = $const76.25
DEBUG:numba.core.ssa:on stmt: $const82.27 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.28 = cast(value=$const82.27)
DEBUG:numba.core.ssa:on stmt: return $84return_value.28
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$32load_global.10': [<numba.core.ir.Assign object at 0x7f6e45e130d0>],
             '$34load_attr.11': [<numba.core.ir.Assign object at 0x7f6e45e139d0>],
             '$84return_value.28': [<numba.core.ir.Assign object at 0x7f6e45e52a10>],
             '$const26.8': [<numba.core.ir.Assign object at 0x7f6e45d20d10>],
             '$const58.19': [<numba.core.ir.Assign object at 0x7f6e45e13910>],
             '$const64.21': [<numba.core.ir.Assign object at 0x7f6e45d98110>],
             '$const70.23': [<numba.core.ir.Assign object at 0x7f6e45d98790>],
             '$const76.25': [<numba.core.ir.Assign object at 0x7f6e45e521d0>],
             '$const82.27': [<numba.core.ir.Assign object at 0x7f6e45e528d0>],
             'energy': [<numba.core.ir.Assign object at 0x7f6e45d20c50>],
             'index': [<numba.core.ir.Assign object at 0x7f6e45d20310>],
             'is_close_line': [<numba.core.ir.Assign object at 0x7f6e45d20610>],
             'mu': [<numba.core.ir.Assign object at 0x7f6e45e522d0>],
             'nu': [<numba.core.ir.Assign object at 0x7f6e45d20f90>],
             'r': [<numba.core.ir.Assign object at 0x7f6e45e52590>],
             'seed': [<numba.core.ir.Assign object at 0x7f6e45d20390>],
             'self': [<numba.core.ir.Assign object at 0x7f6e45e52f90>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_FAST(arg=2, lineno=217)
           4	LOAD_FAST(arg=0, lineno=217)
           6	STORE_ATTR(arg=0, lineno=217)
           8	LOAD_FAST(arg=3, lineno=218)
          10	LOAD_FAST(arg=0, lineno=218)
          12	STORE_ATTR(arg=1, lineno=218)
          14	LOAD_FAST(arg=4, lineno=219)
          16	LOAD_FAST(arg=0, lineno=219)
          18	STORE_ATTR(arg=2, lineno=219)
          20	LOAD_GLOBAL(arg=3, lineno=220)
          22	LOAD_ATTR(arg=4, lineno=220)
          24	LOAD_FAST(arg=6, lineno=220)
          26	LOAD_GLOBAL(arg=3, lineno=220)
          28	LOAD_ATTR(arg=5, lineno=220)
          30	LOAD_CONST(arg=1, lineno=220)
          32	CALL_FUNCTION_KW(arg=2, lineno=220)
          34	LOAD_FAST(arg=0, lineno=220)
          36	STORE_ATTR(arg=6, lineno=220)
          38	LOAD_GLOBAL(arg=3, lineno=221)
          40	LOAD_ATTR(arg=4, lineno=221)
          42	LOAD_FAST(arg=6, lineno=221)
          44	LOAD_GLOBAL(arg=3, lineno=221)
          46	LOAD_ATTR(arg=5, lineno=221)
          48	LOAD_CONST(arg=1, lineno=221)
          50	CALL_FUNCTION_KW(arg=2, lineno=221)
          52	LOAD_FAST(arg=0, lineno=221)
          54	STORE_ATTR(arg=7, lineno=221)
          56	LOAD_FAST(arg=5, lineno=222)
          58	LOAD_FAST(arg=0, lineno=222)
          60	STORE_ATTR(arg=8, lineno=222)
          62	LOAD_GLOBAL(arg=3, lineno=223)
          64	LOAD_ATTR(arg=9, lineno=223)
          66	LOAD_FAST(arg=6, lineno=223)
          68	LOAD_GLOBAL(arg=3, lineno=223)
          70	LOAD_ATTR(arg=5, lineno=223)
          72	LOAD_CONST(arg=1, lineno=223)
          74	CALL_FUNCTION_KW(arg=2, lineno=223)
          76	LOAD_FAST(arg=0, lineno=223)
          78	STORE_ATTR(arg=10, lineno=223)
          80	LOAD_CONST(arg=2, lineno=224)
          82	LOAD_GLOBAL(arg=3, lineno=224)
          84	LOAD_ATTR(arg=11, lineno=224)
          86	LOAD_FAST(arg=6, lineno=224)
          88	LOAD_GLOBAL(arg=3, lineno=224)
          90	LOAD_ATTR(arg=12, lineno=224)
          92	LOAD_CONST(arg=1, lineno=224)
          94	CALL_FUNCTION_KW(arg=2, lineno=224)
          96	BINARY_MULTIPLY(arg=None, lineno=224)
          98	LOAD_FAST(arg=0, lineno=224)
         100	STORE_ATTR(arg=13, lineno=224)
         102	LOAD_CONST(arg=2, lineno=225)
         104	LOAD_GLOBAL(arg=3, lineno=225)
         106	LOAD_ATTR(arg=11, lineno=225)
         108	LOAD_FAST(arg=6, lineno=225)
         110	LOAD_GLOBAL(arg=3, lineno=225)
         112	LOAD_ATTR(arg=12, lineno=225)
         114	LOAD_CONST(arg=1, lineno=225)
         116	CALL_FUNCTION_KW(arg=2, lineno=225)
         118	BINARY_MULTIPLY(arg=None, lineno=225)
         120	LOAD_FAST(arg=0, lineno=225)
         122	STORE_ATTR(arg=14, lineno=225)
         124	LOAD_CONST(arg=2, lineno=226)
         126	LOAD_GLOBAL(arg=3, lineno=226)
         128	LOAD_ATTR(arg=11, lineno=226)
         130	LOAD_FAST(arg=6, lineno=226)
         132	LOAD_GLOBAL(arg=3, lineno=226)
         134	LOAD_ATTR(arg=12, lineno=226)
         136	LOAD_CONST(arg=1, lineno=226)
         138	CALL_FUNCTION_KW(arg=2, lineno=226)
         140	BINARY_MULTIPLY(arg=None, lineno=226)
         142	LOAD_FAST(arg=0, lineno=226)
         144	STORE_ATTR(arg=15, lineno=226)
         146	LOAD_CONST(arg=3, lineno=227)
         148	LOAD_FAST(arg=0, lineno=227)
         150	STORE_ATTR(arg=16, lineno=227)
         152	LOAD_FAST(arg=1, lineno=228)
         154	LOAD_FAST(arg=0, lineno=228)
         156	STORE_ATTR(arg=17, lineno=228)
         158	LOAD_FAST(arg=6, lineno=229)
         160	LOAD_FAST(arg=0, lineno=229)
         162	STORE_ATTR(arg=18, lineno=229)
         164	LOAD_CONST(arg=0, lineno=229)
         166	RETURN_VALUE(arg=None, lineno=229)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=217)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=2, lineno=217)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=217)
DEBUG:numba.core.byteflow:stack ['$spectrum_frequency2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_ATTR(arg=0, lineno=217)
DEBUG:numba.core.byteflow:stack ['$spectrum_frequency2.0', '$self4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=3, lineno=218)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=218)
DEBUG:numba.core.byteflow:stack ['$v_packet_spawn_start_frequency8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_ATTR(arg=1, lineno=218)
DEBUG:numba.core.byteflow:stack ['$v_packet_spawn_start_frequency8.2', '$self10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=219)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=219)
DEBUG:numba.core.byteflow:stack ['$v_packet_spawn_end_frequency14.4']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_ATTR(arg=2, lineno=219)
DEBUG:numba.core.byteflow:stack ['$v_packet_spawn_end_frequency14.4', '$self16.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=3, lineno=220)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=4, lineno=220)
DEBUG:numba.core.byteflow:stack ['$20load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=6, lineno=220)
DEBUG:numba.core.byteflow:stack ['$22load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_GLOBAL(arg=3, lineno=220)
DEBUG:numba.core.byteflow:stack ['$22load_attr.7', '$temporary_v_packet_bins24.8']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_ATTR(arg=5, lineno=220)
DEBUG:numba.core.byteflow:stack ['$22load_attr.7', '$temporary_v_packet_bins24.8', '$26load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=220)
DEBUG:numba.core.byteflow:stack ['$22load_attr.7', '$temporary_v_packet_bins24.8', '$28load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=CALL_FUNCTION_KW(arg=2, lineno=220)
DEBUG:numba.core.byteflow:stack ['$22load_attr.7', '$temporary_v_packet_bins24.8', '$28load_attr.10', '$const30.11']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=220)
DEBUG:numba.core.byteflow:stack ['$32call_function_kw.12']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_ATTR(arg=6, lineno=220)
DEBUG:numba.core.byteflow:stack ['$32call_function_kw.12', '$self34.13']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=3, lineno=221)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_ATTR(arg=4, lineno=221)
DEBUG:numba.core.byteflow:stack ['$38load_global.14']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=6, lineno=221)
DEBUG:numba.core.byteflow:stack ['$40load_attr.15']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_GLOBAL(arg=3, lineno=221)
DEBUG:numba.core.byteflow:stack ['$40load_attr.15', '$temporary_v_packet_bins42.16']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_ATTR(arg=5, lineno=221)
DEBUG:numba.core.byteflow:stack ['$40load_attr.15', '$temporary_v_packet_bins42.16', '$44load_global.17']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=221)
DEBUG:numba.core.byteflow:stack ['$40load_attr.15', '$temporary_v_packet_bins42.16', '$46load_attr.18']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=CALL_FUNCTION_KW(arg=2, lineno=221)
DEBUG:numba.core.byteflow:stack ['$40load_attr.15', '$temporary_v_packet_bins42.16', '$46load_attr.18', '$const48.19']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=221)
DEBUG:numba.core.byteflow:stack ['$50call_function_kw.20']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_ATTR(arg=7, lineno=221)
DEBUG:numba.core.byteflow:stack ['$50call_function_kw.20', '$self52.21']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=5, lineno=222)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=222)
DEBUG:numba.core.byteflow:stack ['$number_of_vpackets56.22']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=STORE_ATTR(arg=8, lineno=222)
DEBUG:numba.core.byteflow:stack ['$number_of_vpackets56.22', '$self58.23']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_GLOBAL(arg=3, lineno=223)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_ATTR(arg=9, lineno=223)
DEBUG:numba.core.byteflow:stack ['$62load_global.24']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=6, lineno=223)
DEBUG:numba.core.byteflow:stack ['$64load_attr.25']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_GLOBAL(arg=3, lineno=223)
DEBUG:numba.core.byteflow:stack ['$64load_attr.25', '$temporary_v_packet_bins66.26']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_ATTR(arg=5, lineno=223)
DEBUG:numba.core.byteflow:stack ['$64load_attr.25', '$temporary_v_packet_bins66.26', '$68load_global.27']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_CONST(arg=1, lineno=223)
DEBUG:numba.core.byteflow:stack ['$64load_attr.25', '$temporary_v_packet_bins66.26', '$70load_attr.28']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL_FUNCTION_KW(arg=2, lineno=223)
DEBUG:numba.core.byteflow:stack ['$64load_attr.25', '$temporary_v_packet_bins66.26', '$70load_attr.28', '$const72.29']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=223)
DEBUG:numba.core.byteflow:stack ['$74call_function_kw.30']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=STORE_ATTR(arg=10, lineno=223)
DEBUG:numba.core.byteflow:stack ['$74call_function_kw.30', '$self76.31']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_GLOBAL(arg=3, lineno=224)
DEBUG:numba.core.byteflow:stack ['$const80.32']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_ATTR(arg=11, lineno=224)
DEBUG:numba.core.byteflow:stack ['$const80.32', '$82load_global.33']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=6, lineno=224)
DEBUG:numba.core.byteflow:stack ['$const80.32', '$84load_attr.34']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_GLOBAL(arg=3, lineno=224)
DEBUG:numba.core.byteflow:stack ['$const80.32', '$84load_attr.34', '$temporary_v_packet_bins86.35']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_ATTR(arg=12, lineno=224)
DEBUG:numba.core.byteflow:stack ['$const80.32', '$84load_attr.34', '$temporary_v_packet_bins86.35', '$88load_global.36']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_CONST(arg=1, lineno=224)
DEBUG:numba.core.byteflow:stack ['$const80.32', '$84load_attr.34', '$temporary_v_packet_bins86.35', '$90load_attr.37']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=CALL_FUNCTION_KW(arg=2, lineno=224)
DEBUG:numba.core.byteflow:stack ['$const80.32', '$84load_attr.34', '$temporary_v_packet_bins86.35', '$90load_attr.37', '$const92.38']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=224)
DEBUG:numba.core.byteflow:stack ['$const80.32', '$94call_function_kw.39']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=224)
DEBUG:numba.core.byteflow:stack ['$96binary_multiply.40']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=STORE_ATTR(arg=13, lineno=224)
DEBUG:numba.core.byteflow:stack ['$96binary_multiply.40', '$self98.41']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_CONST(arg=2, lineno=225)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=3, lineno=225)
DEBUG:numba.core.byteflow:stack ['$const102.42']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_ATTR(arg=11, lineno=225)
DEBUG:numba.core.byteflow:stack ['$const102.42', '$104load_global.43']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=225)
DEBUG:numba.core.byteflow:stack ['$const102.42', '$106load_attr.44']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_GLOBAL(arg=3, lineno=225)
DEBUG:numba.core.byteflow:stack ['$const102.42', '$106load_attr.44', '$temporary_v_packet_bins108.45']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_ATTR(arg=12, lineno=225)
DEBUG:numba.core.byteflow:stack ['$const102.42', '$106load_attr.44', '$temporary_v_packet_bins108.45', '$110load_global.46']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=1, lineno=225)
DEBUG:numba.core.byteflow:stack ['$const102.42', '$106load_attr.44', '$temporary_v_packet_bins108.45', '$112load_attr.47']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=CALL_FUNCTION_KW(arg=2, lineno=225)
DEBUG:numba.core.byteflow:stack ['$const102.42', '$106load_attr.44', '$temporary_v_packet_bins108.45', '$112load_attr.47', '$const114.48']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=BINARY_MULTIPLY(arg=None, lineno=225)
DEBUG:numba.core.byteflow:stack ['$const102.42', '$116call_function_kw.49']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=0, lineno=225)
DEBUG:numba.core.byteflow:stack ['$118binary_multiply.50']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=STORE_ATTR(arg=14, lineno=225)
DEBUG:numba.core.byteflow:stack ['$118binary_multiply.50', '$self120.51']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_CONST(arg=2, lineno=226)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_GLOBAL(arg=3, lineno=226)
DEBUG:numba.core.byteflow:stack ['$const124.52']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_ATTR(arg=11, lineno=226)
DEBUG:numba.core.byteflow:stack ['$const124.52', '$126load_global.53']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=6, lineno=226)
DEBUG:numba.core.byteflow:stack ['$const124.52', '$128load_attr.54']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_GLOBAL(arg=3, lineno=226)
DEBUG:numba.core.byteflow:stack ['$const124.52', '$128load_attr.54', '$temporary_v_packet_bins130.55']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_ATTR(arg=12, lineno=226)
DEBUG:numba.core.byteflow:stack ['$const124.52', '$128load_attr.54', '$temporary_v_packet_bins130.55', '$132load_global.56']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_CONST(arg=1, lineno=226)
DEBUG:numba.core.byteflow:stack ['$const124.52', '$128load_attr.54', '$temporary_v_packet_bins130.55', '$134load_attr.57']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=CALL_FUNCTION_KW(arg=2, lineno=226)
DEBUG:numba.core.byteflow:stack ['$const124.52', '$128load_attr.54', '$temporary_v_packet_bins130.55', '$134load_attr.57', '$const136.58']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=BINARY_MULTIPLY(arg=None, lineno=226)
DEBUG:numba.core.byteflow:stack ['$const124.52', '$138call_function_kw.59']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_FAST(arg=0, lineno=226)
DEBUG:numba.core.byteflow:stack ['$140binary_multiply.60']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=STORE_ATTR(arg=15, lineno=226)
DEBUG:numba.core.byteflow:stack ['$140binary_multiply.60', '$self142.61']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=3, lineno=227)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=227)
DEBUG:numba.core.byteflow:stack ['$const146.62']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=STORE_ATTR(arg=16, lineno=227)
DEBUG:numba.core.byteflow:stack ['$const146.62', '$self148.63']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=1, lineno=228)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=228)
DEBUG:numba.core.byteflow:stack ['$rpacket_index152.64']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=STORE_ATTR(arg=17, lineno=228)
DEBUG:numba.core.byteflow:stack ['$rpacket_index152.64', '$self154.65']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_FAST(arg=6, lineno=229)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_FAST(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack ['$temporary_v_packet_bins158.66']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=STORE_ATTR(arg=18, lineno=229)
DEBUG:numba.core.byteflow:stack ['$temporary_v_packet_bins158.66', '$self160.67']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_CONST(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=166, inst=RETURN_VALUE(arg=None, lineno=229)
DEBUG:numba.core.byteflow:stack ['$const164.68']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$spectrum_frequency2.0'}), (4, {'res': '$self4.1'}), (6, {'target': '$self4.1', 'value': '$spectrum_frequency2.0'}), (8, {'res': '$v_packet_spawn_start_frequency8.2'}), (10, {'res': '$self10.3'}), (12, {'target': '$self10.3', 'value': '$v_packet_spawn_start_frequency8.2'}), (14, {'res': '$v_packet_spawn_end_frequency14.4'}), (16, {'res': '$self16.5'}), (18, {'target': '$self16.5', 'value': '$v_packet_spawn_end_frequency14.4'}), (20, {'res': '$20load_global.6'}), (22, {'item': '$20load_global.6', 'res': '$22load_attr.7'}), (24, {'res': '$temporary_v_packet_bins24.8'}), (26, {'res': '$26load_global.9'}), (28, {'item': '$26load_global.9', 'res': '$28load_attr.10'}), (30, {'res': '$const30.11'}), (32, {'func': '$22load_attr.7', 'args': ['$temporary_v_packet_bins24.8', '$28load_attr.10'], 'names': '$const30.11', 'res': '$32call_function_kw.12'}), (34, {'res': '$self34.13'}), (36, {'target': '$self34.13', 'value': '$32call_function_kw.12'}), (38, {'res': '$38load_global.14'}), (40, {'item': '$38load_global.14', 'res': '$40load_attr.15'}), (42, {'res': '$temporary_v_packet_bins42.16'}), (44, {'res': '$44load_global.17'}), (46, {'item': '$44load_global.17', 'res': '$46load_attr.18'}), (48, {'res': '$const48.19'}), (50, {'func': '$40load_attr.15', 'args': ['$temporary_v_packet_bins42.16', '$46load_attr.18'], 'names': '$const48.19', 'res': '$50call_function_kw.20'}), (52, {'res': '$self52.21'}), (54, {'target': '$self52.21', 'value': '$50call_function_kw.20'}), (56, {'res': '$number_of_vpackets56.22'}), (58, {'res': '$self58.23'}), (60, {'target': '$self58.23', 'value': '$number_of_vpackets56.22'}), (62, {'res': '$62load_global.24'}), (64, {'item': '$62load_global.24', 'res': '$64load_attr.25'}), (66, {'res': '$temporary_v_packet_bins66.26'}), (68, {'res': '$68load_global.27'}), (70, {'item': '$68load_global.27', 'res': '$70load_attr.28'}), (72, {'res': '$const72.29'}), (74, {'func': '$64load_attr.25', 'args': ['$temporary_v_packet_bins66.26', '$70load_attr.28'], 'names': '$const72.29', 'res': '$74call_function_kw.30'}), (76, {'res': '$self76.31'}), (78, {'target': '$self76.31', 'value': '$74call_function_kw.30'}), (80, {'res': '$const80.32'}), (82, {'res': '$82load_global.33'}), (84, {'item': '$82load_global.33', 'res': '$84load_attr.34'}), (86, {'res': '$temporary_v_packet_bins86.35'}), (88, {'res': '$88load_global.36'}), (90, {'item': '$88load_global.36', 'res': '$90load_attr.37'}), (92, {'res': '$const92.38'}), (94, {'func': '$84load_attr.34', 'args': ['$temporary_v_packet_bins86.35', '$90load_attr.37'], 'names': '$const92.38', 'res': '$94call_function_kw.39'}), (96, {'lhs': '$const80.32', 'rhs': '$94call_function_kw.39', 'res': '$96binary_multiply.40'}), (98, {'res': '$self98.41'}), (100, {'target': '$self98.41', 'value': '$96binary_multiply.40'}), (102, {'res': '$const102.42'}), (104, {'res': '$104load_global.43'}), (106, {'item': '$104load_global.43', 'res': '$106load_attr.44'}), (108, {'res': '$temporary_v_packet_bins108.45'}), (110, {'res': '$110load_global.46'}), (112, {'item': '$110load_global.46', 'res': '$112load_attr.47'}), (114, {'res': '$const114.48'}), (116, {'func': '$106load_attr.44', 'args': ['$temporary_v_packet_bins108.45', '$112load_attr.47'], 'names': '$const114.48', 'res': '$116call_function_kw.49'}), (118, {'lhs': '$const102.42', 'rhs': '$116call_function_kw.49', 'res': '$118binary_multiply.50'}), (120, {'res': '$self120.51'}), (122, {'target': '$self120.51', 'value': '$118binary_multiply.50'}), (124, {'res': '$const124.52'}), (126, {'res': '$126load_global.53'}), (128, {'item': '$126load_global.53', 'res': '$128load_attr.54'}), (130, {'res': '$temporary_v_packet_bins130.55'}), (132, {'res': '$132load_global.56'}), (134, {'item': '$132load_global.56', 'res': '$134load_attr.57'}), (136, {'res': '$const136.58'}), (138, {'func': '$128load_attr.54', 'args': ['$temporary_v_packet_bins130.55', '$134load_attr.57'], 'names': '$const136.58', 'res': '$138call_function_kw.59'}), (140, {'lhs': '$const124.52', 'rhs': '$138call_function_kw.59', 'res': '$140binary_multiply.60'}), (142, {'res': '$self142.61'}), (144, {'target': '$self142.61', 'value': '$140binary_multiply.60'}), (146, {'res': '$const146.62'}), (148, {'res': '$self148.63'}), (150, {'target': '$self148.63', 'value': '$const146.62'}), (152, {'res': '$rpacket_index152.64'}), (154, {'res': '$self154.65'}), (156, {'target': '$self154.65', 'value': '$rpacket_index152.64'}), (158, {'res': '$temporary_v_packet_bins158.66'}), (160, {'res': '$self160.67'}), (162, {'target': '$self160.67', 'value': '$temporary_v_packet_bins158.66'}), (164, {'res': '$const164.68'}), (166, {'retval': '$const164.68', 'castval': '$166return_value.69'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    self = arg(0, name=self)                 ['self']
    rpacket_index = arg(1, name=rpacket_index) ['rpacket_index']
    spectrum_frequency = arg(2, name=spectrum_frequency) ['spectrum_frequency']
    v_packet_spawn_start_frequency = arg(3, name=v_packet_spawn_start_frequency) ['v_packet_spawn_start_frequency']
    v_packet_spawn_end_frequency = arg(4, name=v_packet_spawn_end_frequency) ['v_packet_spawn_end_frequency']
    number_of_vpackets = arg(5, name=number_of_vpackets) ['number_of_vpackets']
    temporary_v_packet_bins = arg(6, name=temporary_v_packet_bins) ['temporary_v_packet_bins']
    (self).spectrum_frequency = spectrum_frequency ['self', 'spectrum_frequency']
    (self).v_packet_spawn_start_frequency = v_packet_spawn_start_frequency ['self', 'v_packet_spawn_start_frequency']
    (self).v_packet_spawn_end_frequency = v_packet_spawn_end_frequency ['self', 'v_packet_spawn_end_frequency']
    $20load_global.6 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$20load_global.6']
    $22load_attr.7 = getattr(value=$20load_global.6, attr=empty) ['$20load_global.6', '$22load_attr.7']
    $26load_global.9 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$26load_global.9']
    $28load_attr.10 = getattr(value=$26load_global.9, attr=float64) ['$26load_global.9', '$28load_attr.10']
    $32call_function_kw.12 = call $22load_attr.7(temporary_v_packet_bins, func=$22load_attr.7, args=[Var(temporary_v_packet_bins, numba_interface.py:217)], kws=[('dtype', Var($28load_attr.10, numba_interface.py:220))], vararg=None) ['$22load_attr.7', '$28load_attr.10', '$32call_function_kw.12', 'temporary_v_packet_bins']
    (self).nus = $32call_function_kw.12      ['$32call_function_kw.12', 'self']
    $38load_global.14 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$38load_global.14']
    $40load_attr.15 = getattr(value=$38load_global.14, attr=empty) ['$38load_global.14', '$40load_attr.15']
    $44load_global.17 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$44load_global.17']
    $46load_attr.18 = getattr(value=$44load_global.17, attr=float64) ['$44load_global.17', '$46load_attr.18']
    $50call_function_kw.20 = call $40load_attr.15(temporary_v_packet_bins, func=$40load_attr.15, args=[Var(temporary_v_packet_bins, numba_interface.py:217)], kws=[('dtype', Var($46load_attr.18, numba_interface.py:221))], vararg=None) ['$40load_attr.15', '$46load_attr.18', '$50call_function_kw.20', 'temporary_v_packet_bins']
    (self).energies = $50call_function_kw.20 ['$50call_function_kw.20', 'self']
    (self).number_of_vpackets = number_of_vpackets ['number_of_vpackets', 'self']
    $62load_global.24 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$62load_global.24']
    $64load_attr.25 = getattr(value=$62load_global.24, attr=zeros) ['$62load_global.24', '$64load_attr.25']
    $68load_global.27 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$68load_global.27']
    $70load_attr.28 = getattr(value=$68load_global.27, attr=float64) ['$68load_global.27', '$70load_attr.28']
    $74call_function_kw.30 = call $64load_attr.25(temporary_v_packet_bins, func=$64load_attr.25, args=[Var(temporary_v_packet_bins, numba_interface.py:217)], kws=[('dtype', Var($70load_attr.28, numba_interface.py:223))], vararg=None) ['$64load_attr.25', '$70load_attr.28', '$74call_function_kw.30', 'temporary_v_packet_bins']
    (self).last_interaction_in_nu = $74call_function_kw.30 ['$74call_function_kw.30', 'self']
    $const80.32 = const(int, -1)             ['$const80.32']
    $82load_global.33 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$82load_global.33']
    $84load_attr.34 = getattr(value=$82load_global.33, attr=ones) ['$82load_global.33', '$84load_attr.34']
    $88load_global.36 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$88load_global.36']
    $90load_attr.37 = getattr(value=$88load_global.36, attr=int64) ['$88load_global.36', '$90load_attr.37']
    $94call_function_kw.39 = call $84load_attr.34(temporary_v_packet_bins, func=$84load_attr.34, args=[Var(temporary_v_packet_bins, numba_interface.py:217)], kws=[('dtype', Var($90load_attr.37, numba_interface.py:224))], vararg=None) ['$84load_attr.34', '$90load_attr.37', '$94call_function_kw.39', 'temporary_v_packet_bins']
    $96binary_multiply.40 = $const80.32 * $94call_function_kw.39 ['$94call_function_kw.39', '$96binary_multiply.40', '$const80.32']
    (self).last_interaction_type = $96binary_multiply.40 ['$96binary_multiply.40', 'self']
    $const102.42 = const(int, -1)            ['$const102.42']
    $104load_global.43 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$104load_global.43']
    $106load_attr.44 = getattr(value=$104load_global.43, attr=ones) ['$104load_global.43', '$106load_attr.44']
    $110load_global.46 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$110load_global.46']
    $112load_attr.47 = getattr(value=$110load_global.46, attr=int64) ['$110load_global.46', '$112load_attr.47']
    $116call_function_kw.49 = call $106load_attr.44(temporary_v_packet_bins, func=$106load_attr.44, args=[Var(temporary_v_packet_bins, numba_interface.py:217)], kws=[('dtype', Var($112load_attr.47, numba_interface.py:225))], vararg=None) ['$106load_attr.44', '$112load_attr.47', '$116call_function_kw.49', 'temporary_v_packet_bins']
    $118binary_multiply.50 = $const102.42 * $116call_function_kw.49 ['$116call_function_kw.49', '$118binary_multiply.50', '$const102.42']
    (self).last_interaction_in_id = $118binary_multiply.50 ['$118binary_multiply.50', 'self']
    $const124.52 = const(int, -1)            ['$const124.52']
    $126load_global.53 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$126load_global.53']
    $128load_attr.54 = getattr(value=$126load_global.53, attr=ones) ['$126load_global.53', '$128load_attr.54']
    $132load_global.56 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$132load_global.56']
    $134load_attr.57 = getattr(value=$132load_global.56, attr=int64) ['$132load_global.56', '$134load_attr.57']
    $138call_function_kw.59 = call $128load_attr.54(temporary_v_packet_bins, func=$128load_attr.54, args=[Var(temporary_v_packet_bins, numba_interface.py:217)], kws=[('dtype', Var($134load_attr.57, numba_interface.py:226))], vararg=None) ['$128load_attr.54', '$134load_attr.57', '$138call_function_kw.59', 'temporary_v_packet_bins']
    $140binary_multiply.60 = $const124.52 * $138call_function_kw.59 ['$138call_function_kw.59', '$140binary_multiply.60', '$const124.52']
    (self).last_interaction_out_id = $140binary_multiply.60 ['$140binary_multiply.60', 'self']
    $const146.62 = const(int, 0)             ['$const146.62']
    (self).idx = $const146.62                ['$const146.62', 'self']
    (self).rpacket_index = rpacket_index     ['rpacket_index', 'self']
    (self).length = temporary_v_packet_bins  ['self', 'temporary_v_packet_bins']
    $const164.68 = const(NoneType, None)     ['$const164.68']
    $166return_value.69 = cast(value=$const164.68) ['$166return_value.69', '$const164.68']
    return $166return_value.69               ['$166return_value.69']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46480e10>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: rpacket_index = arg(1, name=rpacket_index)
DEBUG:numba.core.ssa:on stmt: spectrum_frequency = arg(2, name=spectrum_frequency)
DEBUG:numba.core.ssa:on stmt: v_packet_spawn_start_frequency = arg(3, name=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: v_packet_spawn_end_frequency = arg(4, name=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: number_of_vpackets = arg(5, name=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: temporary_v_packet_bins = arg(6, name=temporary_v_packet_bins)
DEBUG:numba.core.ssa:on stmt: (self).spectrum_frequency = spectrum_frequency
DEBUG:numba.core.ssa:on stmt: (self).v_packet_spawn_start_frequency = v_packet_spawn_start_frequency
DEBUG:numba.core.ssa:on stmt: (self).v_packet_spawn_end_frequency = v_packet_spawn_end_frequency
DEBUG:numba.core.ssa:on stmt: $20load_global.6 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.7 = getattr(value=$20load_global.6, attr=empty)
DEBUG:numba.core.ssa:on stmt: $26load_global.9 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $28load_attr.10 = getattr(value=$26load_global.9, attr=float64)
DEBUG:numba.core.ssa:on stmt: $32call_function_kw.12 = call $22load_attr.7(temporary_v_packet_bins, func=$22load_attr.7, args=[Var(temporary_v_packet_bins, numba_interface.py:217)], kws=[('dtype', Var($28load_attr.10, numba_interface.py:220))], vararg=None)
DEBUG:numba.core.ssa:on stmt: (self).nus = $32call_function_kw.12
DEBUG:numba.core.ssa:on stmt: $38load_global.14 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.15 = getattr(value=$38load_global.14, attr=empty)
DEBUG:numba.core.ssa:on stmt: $44load_global.17 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $46load_attr.18 = getattr(value=$44load_global.17, attr=float64)
DEBUG:numba.core.ssa:on stmt: $50call_function_kw.20 = call $40load_attr.15(temporary_v_packet_bins, func=$40load_attr.15, args=[Var(temporary_v_packet_bins, numba_interface.py:217)], kws=[('dtype', Var($46load_attr.18, numba_interface.py:221))], vararg=None)
DEBUG:numba.core.ssa:on stmt: (self).energies = $50call_function_kw.20
DEBUG:numba.core.ssa:on stmt: (self).number_of_vpackets = number_of_vpackets
DEBUG:numba.core.ssa:on stmt: $62load_global.24 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $64load_attr.25 = getattr(value=$62load_global.24, attr=zeros)
DEBUG:numba.core.ssa:on stmt: $68load_global.27 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.28 = getattr(value=$68load_global.27, attr=float64)
DEBUG:numba.core.ssa:on stmt: $74call_function_kw.30 = call $64load_attr.25(temporary_v_packet_bins, func=$64load_attr.25, args=[Var(temporary_v_packet_bins, numba_interface.py:217)], kws=[('dtype', Var($70load_attr.28, numba_interface.py:223))], vararg=None)
DEBUG:numba.core.ssa:on stmt: (self).last_interaction_in_nu = $74call_function_kw.30
DEBUG:numba.core.ssa:on stmt: $const80.32 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $82load_global.33 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $84load_attr.34 = getattr(value=$82load_global.33, attr=ones)
DEBUG:numba.core.ssa:on stmt: $88load_global.36 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $90load_attr.37 = getattr(value=$88load_global.36, attr=int64)
DEBUG:numba.core.ssa:on stmt: $94call_function_kw.39 = call $84load_attr.34(temporary_v_packet_bins, func=$84load_attr.34, args=[Var(temporary_v_packet_bins, numba_interface.py:217)], kws=[('dtype', Var($90load_attr.37, numba_interface.py:224))], vararg=None)
DEBUG:numba.core.ssa:on stmt: $96binary_multiply.40 = $const80.32 * $94call_function_kw.39
DEBUG:numba.core.ssa:on stmt: (self).last_interaction_type = $96binary_multiply.40
DEBUG:numba.core.ssa:on stmt: $const102.42 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $104load_global.43 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_attr.44 = getattr(value=$104load_global.43, attr=ones)
DEBUG:numba.core.ssa:on stmt: $110load_global.46 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $112load_attr.47 = getattr(value=$110load_global.46, attr=int64)
DEBUG:numba.core.ssa:on stmt: $116call_function_kw.49 = call $106load_attr.44(temporary_v_packet_bins, func=$106load_attr.44, args=[Var(temporary_v_packet_bins, numba_interface.py:217)], kws=[('dtype', Var($112load_attr.47, numba_interface.py:225))], vararg=None)
DEBUG:numba.core.ssa:on stmt: $118binary_multiply.50 = $const102.42 * $116call_function_kw.49
DEBUG:numba.core.ssa:on stmt: (self).last_interaction_in_id = $118binary_multiply.50
DEBUG:numba.core.ssa:on stmt: $const124.52 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $126load_global.53 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.54 = getattr(value=$126load_global.53, attr=ones)
DEBUG:numba.core.ssa:on stmt: $132load_global.56 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $134load_attr.57 = getattr(value=$132load_global.56, attr=int64)
DEBUG:numba.core.ssa:on stmt: $138call_function_kw.59 = call $128load_attr.54(temporary_v_packet_bins, func=$128load_attr.54, args=[Var(temporary_v_packet_bins, numba_interface.py:217)], kws=[('dtype', Var($134load_attr.57, numba_interface.py:226))], vararg=None)
DEBUG:numba.core.ssa:on stmt: $140binary_multiply.60 = $const124.52 * $138call_function_kw.59
DEBUG:numba.core.ssa:on stmt: (self).last_interaction_out_id = $140binary_multiply.60
DEBUG:numba.core.ssa:on stmt: $const146.62 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: (self).idx = $const146.62
DEBUG:numba.core.ssa:on stmt: (self).rpacket_index = rpacket_index
DEBUG:numba.core.ssa:on stmt: (self).length = temporary_v_packet_bins
DEBUG:numba.core.ssa:on stmt: $const164.68 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $166return_value.69 = cast(value=$const164.68)
DEBUG:numba.core.ssa:on stmt: return $166return_value.69
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$104load_global.43': [<numba.core.ir.Assign object at 0x7f6e46468750>],
             '$106load_attr.44': [<numba.core.ir.Assign object at 0x7f6e46468650>],
             '$110load_global.46': [<numba.core.ir.Assign object at 0x7f6e45f294d0>],
             '$112load_attr.47': [<numba.core.ir.Assign object at 0x7f6e45f297d0>],
             '$116call_function_kw.49': [<numba.core.ir.Assign object at 0x7f6e46448450>],
             '$118binary_multiply.50': [<numba.core.ir.Assign object at 0x7f6e45d11a50>],
             '$126load_global.53': [<numba.core.ir.Assign object at 0x7f6e46468cd0>],
             '$128load_attr.54': [<numba.core.ir.Assign object at 0x7f6e46468410>],
             '$132load_global.56': [<numba.core.ir.Assign object at 0x7f6e46468710>],
             '$134load_attr.57': [<numba.core.ir.Assign object at 0x7f6e46453f10>],
             '$138call_function_kw.59': [<numba.core.ir.Assign object at 0x7f6e46453550>],
             '$140binary_multiply.60': [<numba.core.ir.Assign object at 0x7f6e46453050>],
             '$166return_value.69': [<numba.core.ir.Assign object at 0x7f6e46453110>],
             '$20load_global.6': [<numba.core.ir.Assign object at 0x7f6e45f23e90>],
             '$22load_attr.7': [<numba.core.ir.Assign object at 0x7f6e45f237d0>],
             '$26load_global.9': [<numba.core.ir.Assign object at 0x7f6e4643d190>],
             '$28load_attr.10': [<numba.core.ir.Assign object at 0x7f6e4643d150>],
             '$32call_function_kw.12': [<numba.core.ir.Assign object at 0x7f6e4643d550>],
             '$38load_global.14': [<numba.core.ir.Assign object at 0x7f6e4643da90>],
             '$40load_attr.15': [<numba.core.ir.Assign object at 0x7f6e4643d910>],
             '$44load_global.17': [<numba.core.ir.Assign object at 0x7f6e4643dc10>],
             '$46load_attr.18': [<numba.core.ir.Assign object at 0x7f6e4643dd10>],
             '$50call_function_kw.20': [<numba.core.ir.Assign object at 0x7f6e4643d750>],
             '$62load_global.24': [<numba.core.ir.Assign object at 0x7f6e45f12ad0>],
             '$64load_attr.25': [<numba.core.ir.Assign object at 0x7f6e45f12510>],
             '$68load_global.27': [<numba.core.ir.Assign object at 0x7f6e45f12150>],
             '$70load_attr.28': [<numba.core.ir.Assign object at 0x7f6e45f12250>],
             '$74call_function_kw.30': [<numba.core.ir.Assign object at 0x7f6e45f12490>],
             '$82load_global.33': [<numba.core.ir.Assign object at 0x7f6e45f12b50>],
             '$84load_attr.34': [<numba.core.ir.Assign object at 0x7f6e45f12310>],
             '$88load_global.36': [<numba.core.ir.Assign object at 0x7f6e46468f10>],
             '$90load_attr.37': [<numba.core.ir.Assign object at 0x7f6e46468b90>],
             '$94call_function_kw.39': [<numba.core.ir.Assign object at 0x7f6e46468450>],
             '$96binary_multiply.40': [<numba.core.ir.Assign object at 0x7f6e46468bd0>],
             '$const102.42': [<numba.core.ir.Assign object at 0x7f6e464680d0>],
             '$const124.52': [<numba.core.ir.Assign object at 0x7f6e46468c90>],
             '$const146.62': [<numba.core.ir.Assign object at 0x7f6e46453bd0>],
             '$const164.68': [<numba.core.ir.Assign object at 0x7f6e46453190>],
             '$const80.32': [<numba.core.ir.Assign object at 0x7f6e45f12f50>],
             'number_of_vpackets': [<numba.core.ir.Assign object at 0x7f6e45f29fd0>],
             'rpacket_index': [<numba.core.ir.Assign object at 0x7f6e45f29350>],
             'self': [<numba.core.ir.Assign object at 0x7f6e45f29550>],
             'spectrum_frequency': [<numba.core.ir.Assign object at 0x7f6e45f29710>],
             'temporary_v_packet_bins': [<numba.core.ir.Assign object at 0x7f6e45f29cd0>],
             'v_packet_spawn_end_frequency': [<numba.core.ir.Assign object at 0x7f6e45f29850>],
             'v_packet_spawn_start_frequency': [<numba.core.ir.Assign object at 0x7f6e45f29ad0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3605)
           2	LOAD_GLOBAL(arg=0, lineno=3605)
           4	LOAD_METHOD(arg=1, lineno=3605)
           6	LOAD_FAST(arg=0, lineno=3605)
           8	LOAD_FAST(arg=1, lineno=3605)
          10	CALL_METHOD(arg=2, lineno=3605)
          12	STORE_FAST(arg=2, lineno=3605)
          14	SETUP_LOOP(arg=28, lineno=3606)
          16	LOAD_GLOBAL(arg=0, lineno=3606)
          18	LOAD_METHOD(arg=2, lineno=3606)
          20	LOAD_FAST(arg=2, lineno=3606)
          22	LOAD_ATTR(arg=3, lineno=3606)
          24	CALL_METHOD(arg=1, lineno=3606)
          26	GET_ITER(arg=None, lineno=3606)
>         28	FOR_ITER(arg=12, lineno=3606)
          30	STORE_FAST(arg=3, lineno=3606)
          32	LOAD_CONST(arg=1, lineno=3607)
          34	LOAD_FAST(arg=2, lineno=3607)
          36	LOAD_FAST(arg=3, lineno=3607)
          38	STORE_SUBSCR(arg=None, lineno=3607)
          40	JUMP_ABSOLUTE(arg=28, lineno=3607)
>         42	POP_BLOCK(arg=None, lineno=3607)
>         44	LOAD_FAST(arg=2, lineno=3608)
          46	RETURN_VALUE(arg=None, lineno=3608)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3605)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3605)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$shape6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$shape6.2', '$dtype8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_FAST(arg=2, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$10call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=14, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=SETUP_LOOP(arg=28, lineno=3606)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=0, lineno=3606)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=3606)
DEBUG:numba.core.byteflow:stack ['$16load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=3606)
DEBUG:numba.core.byteflow:stack ['$18load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=3606)
DEBUG:numba.core.byteflow:stack ['$18load_method.1', '$arr20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_METHOD(arg=1, lineno=3606)
DEBUG:numba.core.byteflow:stack ['$18load_method.1', '$22load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=GET_ITER(arg=None, lineno=3606)
DEBUG:numba.core.byteflow:stack ['$24call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=('$26get_iter.5',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi28.0']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=FOR_ITER(arg=12, lineno=3606)
DEBUG:numba.core.byteflow:stack ['$phi28.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=30, stack=('$phi28.0', '$28for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=30 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_BLOCK(arg=None, lineno=3607)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=2), State(pc_initial=44 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0', '$phi30.1']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=3, lineno=3606)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$phi30.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=3607)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=3607)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$const32.2']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=3, lineno=3607)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$const32.2', '$arr34.3']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_SUBSCR(arg=None, lineno=3607)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$const32.2', '$arr34.3', '$idx36.4']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=JUMP_ABSOLUTE(arg=28, lineno=3607)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=('$phi30.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=2, lineno=3608)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=3608)
DEBUG:numba.core.byteflow:stack ['$arr44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=1): {'$phi28.0'},
             State(pc_initial=30 nstack_initial=2): {'$phi30.1'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi28.0': State(pc_initial=14 nstack_initial=0),
 '$phi30.1': State(pc_initial=28 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=2))},
             '$phi30.0': {('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0)),
                          ('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi28.0': {('$26get_iter.5', State(pc_initial=14 nstack_initial=0))},
 '$phi30.1': {('$28for_iter.2', State(pc_initial=28 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=14 nstack_initial=0): {'$phi28.0': '$26get_iter.5'},
             State(pc_initial=28 nstack_initial=1): {'$phi30.1': '$28for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'func': '$4load_method.1', 'args': ['$shape6.2', '$dtype8.3'], 'res': '$10call_method.4'}), (12, {'value': '$10call_method.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={14: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$16load_global.0'}), (18, {'item': '$16load_global.0', 'res': '$18load_method.1'}), (20, {'res': '$arr20.2'}), (22, {'item': '$arr20.2', 'res': '$22load_attr.3'}), (24, {'func': '$18load_method.1', 'args': ['$22load_attr.3'], 'res': '$24call_method.4'}), (26, {'value': '$24call_method.4', 'res': '$26get_iter.5'})), outgoing_phis={'$phi28.0': '$26get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$26get_iter.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=1):
AdaptBlockInfo(insts=((28, {'iterator': '$phi28.0', 'pair': '$28for_iter.1', 'indval': '$28for_iter.2', 'pred': '$28for_iter.3'}),), outgoing_phis={'$phi30.1': '$28for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={42: (), 30: ('$phi28.0', '$28for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=2):
AdaptBlockInfo(insts=((30, {'value': '$phi30.1'}), (32, {'res': '$const32.2'}), (34, {'res': '$arr34.3'}), (36, {'res': '$idx36.4'}), (38, {'target': '$arr34.3', 'index': '$idx36.4', 'value': '$const32.2'}), (40, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={28: ('$phi30.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={44: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$arr44.0'}), (46, {'retval': '$arr44.0', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_method.1']
    $10call_method.4 = call $4load_method.1(shape, dtype, func=$4load_method.1, args=[Var(shape, arrayobj.py:3605), Var(dtype, arrayobj.py:3605)], kws=(), vararg=None) ['$10call_method.4', '$4load_method.1', 'dtype', 'shape']
    arr = $10call_method.4                   ['$10call_method.4', 'arr']
    jump 14                                  []
label 14:
    $16load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$16load_global.0']
    $18load_method.1 = getattr(value=$16load_global.0, attr=ndindex) ['$16load_global.0', '$18load_method.1']
    $22load_attr.3 = getattr(value=arr, attr=shape) ['$22load_attr.3', 'arr']
    $24call_method.4 = call $18load_method.1($22load_attr.3, func=$18load_method.1, args=[Var($22load_attr.3, arrayobj.py:3606)], kws=(), vararg=None) ['$18load_method.1', '$22load_attr.3', '$24call_method.4']
    $26get_iter.5 = getiter(value=$24call_method.4) ['$24call_method.4', '$26get_iter.5']
    $phi28.0 = $26get_iter.5                 ['$26get_iter.5', '$phi28.0']
    jump 28                                  []
label 28:
    $28for_iter.1 = iternext(value=$phi28.0) ['$28for_iter.1', '$phi28.0']
    $28for_iter.2 = pair_first(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.2']
    $28for_iter.3 = pair_second(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.3']
    $phi30.1 = $28for_iter.2                 ['$28for_iter.2', '$phi30.1']
    branch $28for_iter.3, 30, 42             ['$28for_iter.3']
label 30:
    idx = $phi30.1                           ['$phi30.1', 'idx']
    $const32.2 = const(int, 1)               ['$const32.2']
    arr[idx] = $const32.2                    ['$const32.2', 'arr', 'idx']
    jump 28                                  []
label 42:
    jump 44                                  []
label 44:
    $46return_value.1 = cast(value=arr)      ['$46return_value.1', 'arr']
    return $46return_value.1                 ['$46return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461c91d0>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: dtype = arg(1, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=empty)
DEBUG:numba.core.ssa:on stmt: $10call_method.4 = call $4load_method.1(shape, dtype, func=$4load_method.1, args=[Var(shape, arrayobj.py:3605), Var(dtype, arrayobj.py:3605)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: arr = $10call_method.4
DEBUG:numba.core.ssa:on stmt: jump 14
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461c91d0>
DEBUG:numba.core.ssa:on stmt: $16load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_method.1 = getattr(value=$16load_global.0, attr=ndindex)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=arr, attr=shape)
DEBUG:numba.core.ssa:on stmt: $24call_method.4 = call $18load_method.1($22load_attr.3, func=$18load_method.1, args=[Var($22load_attr.3, arrayobj.py:3606)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.5 = getiter(value=$24call_method.4)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461c91d0>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461c91d0>
DEBUG:numba.core.ssa:on stmt: idx = $phi30.1
DEBUG:numba.core.ssa:on stmt: $const32.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: arr[idx] = $const32.2
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461c91d0>
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461c91d0>
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=arr)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_method.4': [<numba.core.ir.Assign object at 0x7f6e45f527d0>],
             '$16load_global.0': [<numba.core.ir.Assign object at 0x7f6e45f52050>],
             '$18load_method.1': [<numba.core.ir.Assign object at 0x7f6e45f52a90>],
             '$22load_attr.3': [<numba.core.ir.Assign object at 0x7f6e45f52950>],
             '$24call_method.4': [<numba.core.ir.Assign object at 0x7f6e45f52190>],
             '$26get_iter.5': [<numba.core.ir.Assign object at 0x7f6e45f524d0>],
             '$28for_iter.1': [<numba.core.ir.Assign object at 0x7f6e45f52890>],
             '$28for_iter.2': [<numba.core.ir.Assign object at 0x7f6e45f52cd0>],
             '$28for_iter.3': [<numba.core.ir.Assign object at 0x7f6e45f52d90>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e46272d50>],
             '$46return_value.1': [<numba.core.ir.Assign object at 0x7f6e45f64a90>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7f6e462726d0>],
             '$const32.2': [<numba.core.ir.Assign object at 0x7f6e45f5bdd0>],
             '$phi28.0': [<numba.core.ir.Assign object at 0x7f6e45f52fd0>],
             '$phi30.1': [<numba.core.ir.Assign object at 0x7f6e45f52c10>],
             'arr': [<numba.core.ir.Assign object at 0x7f6e45f52810>],
             'dtype': [<numba.core.ir.Assign object at 0x7f6e46272b10>],
             'idx': [<numba.core.ir.Assign object at 0x7f6e45f52390>],
             'shape': [<numba.core.ir.Assign object at 0x7f6e46272bd0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_CONST(arg=1, lineno=1)
           4	LOAD_FAST(arg=0, lineno=224)
           6	BINARY_MULTIPLY(arg=None, lineno=224)
           8	RETURN_VALUE(arg=None, lineno=224)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=224)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_MULTIPLY(arg=None, lineno=224)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$_94call_function_kw_39_14.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=224)
DEBUG:numba.core.byteflow:stack ['$6binary_multiply.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'res': '$_94call_function_kw_39_14.1'}), (6, {'lhs': '$const2.0', 'rhs': '$_94call_function_kw_39_14.1', 'res': '$6binary_multiply.2'}), (8, {'retval': '$6binary_multiply.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    _94call_function_kw_39_1 = arg(0, name=_94call_function_kw_39_1) ['_94call_function_kw_39_1']
    $const2.0 = const(int, -1)               ['$const2.0']
    $6binary_multiply.2 = $const2.0 * _94call_function_kw_39_1 ['$6binary_multiply.2', '$const2.0', '_94call_function_kw_39_1']
    $8return_value.3 = cast(value=$6binary_multiply.2) ['$6binary_multiply.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f1ea10>
DEBUG:numba.core.ssa:on stmt: _94call_function_kw_39_1 = arg(0, name=_94call_function_kw_39_1)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $6binary_multiply.2 = $const2.0 * _94call_function_kw_39_1
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6binary_multiply.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$6binary_multiply.2': [<numba.core.ir.Assign object at 0x7f6e466a1190>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x7f6e466a1310>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e466a17d0>],
             '_94call_function_kw_39_1': [<numba.core.ir.Assign object at 0x7f6e466a15d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=203)
           2	LOAD_FAST(arg=0, lineno=203)
           4	LOAD_FAST(arg=2, lineno=203)
           6	COMPARE_OP(arg=4, lineno=203)
           8	POP_JUMP_IF_FALSE(arg=14, lineno=203)
          10	LOAD_CONST(arg=1, lineno=206)
          12	RETURN_VALUE(arg=None, lineno=206)
>         14	LOAD_CONST(arg=1, lineno=208)
          16	STORE_FAST(arg=4, lineno=208)
          18	LOAD_FAST(arg=2, lineno=209)
          20	LOAD_FAST(arg=0, lineno=209)
          22	BINARY_SUBTRACT(arg=None, lineno=209)
          24	STORE_FAST(arg=5, lineno=209)
          26	SETUP_LOOP(arg=96, lineno=210)
>         28	LOAD_FAST(arg=4, lineno=210)
          30	LOAD_FAST(arg=0, lineno=210)
          32	COMPARE_OP(arg=0, lineno=210)
          34	POP_JUMP_IF_FALSE(arg=122, lineno=210)
          36	LOAD_FAST(arg=1, lineno=211)
          38	LOAD_FAST(arg=4, lineno=211)
          40	BINARY_SUBSCR(arg=None, lineno=211)
          42	STORE_FAST(arg=6, lineno=211)
          44	LOAD_FAST(arg=3, lineno=212)
          46	LOAD_FAST(arg=5, lineno=212)
          48	BINARY_SUBSCR(arg=None, lineno=212)
          50	STORE_FAST(arg=7, lineno=212)
          52	LOAD_FAST(arg=7, lineno=215)
          54	LOAD_CONST(arg=2, lineno=215)
          56	COMPARE_OP(arg=3, lineno=215)
          58	POP_JUMP_IF_FALSE(arg=88, lineno=215)
          60	LOAD_FAST(arg=6, lineno=219)
          62	LOAD_FAST(arg=7, lineno=219)
          64	COMPARE_OP(arg=3, lineno=219)
          66	POP_JUMP_IF_FALSE(arg=104, lineno=219)
          68	LOAD_FAST(arg=6, lineno=219)
          70	LOAD_CONST(arg=2, lineno=219)
          72	COMPARE_OP(arg=3, lineno=219)
          74	POP_JUMP_IF_FALSE(arg=104, lineno=219)
          76	LOAD_FAST(arg=5, lineno=220)
          78	LOAD_CONST(arg=2, lineno=220)
          80	BINARY_ADD(arg=None, lineno=220)
          82	UNARY_NEGATIVE(arg=None, lineno=220)
          84	RETURN_VALUE(arg=None, lineno=220)
          86	JUMP_FORWARD(arg=16, lineno=220)
>         88	LOAD_FAST(arg=6, lineno=221)
          90	LOAD_CONST(arg=2, lineno=221)
          92	COMPARE_OP(arg=3, lineno=221)
          94	POP_JUMP_IF_FALSE(arg=104, lineno=221)
          96	LOAD_FAST(arg=6, lineno=223)
          98	LOAD_FAST(arg=3, lineno=223)
         100	LOAD_FAST(arg=5, lineno=223)
         102	STORE_SUBSCR(arg=None, lineno=223)
>        104	LOAD_FAST(arg=4, lineno=224)
         106	LOAD_CONST(arg=2, lineno=224)
         108	INPLACE_ADD(arg=None, lineno=224)
         110	STORE_FAST(arg=4, lineno=224)
         112	LOAD_FAST(arg=5, lineno=225)
         114	LOAD_CONST(arg=2, lineno=225)
         116	INPLACE_ADD(arg=None, lineno=225)
         118	STORE_FAST(arg=5, lineno=225)
         120	JUMP_ABSOLUTE(arg=28, lineno=225)
>        122	POP_BLOCK(arg=None, lineno=225)
>        124	LOAD_FAST(arg=5, lineno=226)
         126	RETURN_VALUE(arg=None, lineno=226)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=203)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=203)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=2, lineno=203)
DEBUG:numba.core.byteflow:stack ['$src_ndim2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=203)
DEBUG:numba.core.byteflow:stack ['$src_ndim2.0', '$dest_ndim4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=POP_JUMP_IF_FALSE(arg=14, lineno=203)
DEBUG:numba.core.byteflow:stack ['$6compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=10, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=10 nstack_initial=0), State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=206)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=206)
DEBUG:numba.core.byteflow:stack ['$const10.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=208)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=4, lineno=208)
DEBUG:numba.core.byteflow:stack ['$const14.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=209)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=209)
DEBUG:numba.core.byteflow:stack ['$dest_ndim18.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_SUBTRACT(arg=None, lineno=209)
DEBUG:numba.core.byteflow:stack ['$dest_ndim18.1', '$src_ndim20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_FAST(arg=5, lineno=209)
DEBUG:numba.core.byteflow:stack ['$22binary_subtract.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=SETUP_LOOP(arg=96, lineno=210)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=4, lineno=210)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=210)
DEBUG:numba.core.byteflow:stack ['$src_index28.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=210)
DEBUG:numba.core.byteflow:stack ['$src_index28.0', '$src_ndim30.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=POP_JUMP_IF_FALSE(arg=122, lineno=210)
DEBUG:numba.core.byteflow:stack ['$32compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=36, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=122, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=1, lineno=211)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=4, lineno=211)
DEBUG:numba.core.byteflow:stack ['$src_shape36.0']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=211)
DEBUG:numba.core.byteflow:stack ['$src_shape36.0', '$src_index38.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=6, lineno=211)
DEBUG:numba.core.byteflow:stack ['$40binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=3, lineno=212)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=5, lineno=212)
DEBUG:numba.core.byteflow:stack ['$dest_shape44.3']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=212)
DEBUG:numba.core.byteflow:stack ['$dest_shape44.3', '$dest_index46.4']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=STORE_FAST(arg=7, lineno=212)
DEBUG:numba.core.byteflow:stack ['$48binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=7, lineno=215)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=215)
DEBUG:numba.core.byteflow:stack ['$dest_dim_size52.6']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=COMPARE_OP(arg=3, lineno=215)
DEBUG:numba.core.byteflow:stack ['$dest_dim_size52.6', '$const54.7']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=88, lineno=215)
DEBUG:numba.core.byteflow:stack ['$56compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=60, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=88, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=88 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=122, inst=POP_BLOCK(arg=None, lineno=225)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=124, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=88 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=6, lineno=219)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=7, lineno=219)
DEBUG:numba.core.byteflow:stack ['$src_dim_size60.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=COMPARE_OP(arg=3, lineno=219)
DEBUG:numba.core.byteflow:stack ['$src_dim_size60.0', '$dest_dim_size62.1']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=104, lineno=219)
DEBUG:numba.core.byteflow:stack ['$64compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=68, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=104, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=88 nstack_initial=0), State(pc_initial=124 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=221)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=2, lineno=221)
DEBUG:numba.core.byteflow:stack ['$src_dim_size88.0']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=COMPARE_OP(arg=3, lineno=221)
DEBUG:numba.core.byteflow:stack ['$src_dim_size88.0', '$const90.1']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=POP_JUMP_IF_FALSE(arg=104, lineno=221)
DEBUG:numba.core.byteflow:stack ['$92compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=96, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=104, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=104 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=5, lineno=226)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=RETURN_VALUE(arg=None, lineno=226)
DEBUG:numba.core.byteflow:stack ['$dest_index124.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=104 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=6, lineno=219)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_CONST(arg=2, lineno=219)
DEBUG:numba.core.byteflow:stack ['$src_dim_size68.0']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=COMPARE_OP(arg=3, lineno=219)
DEBUG:numba.core.byteflow:stack ['$src_dim_size68.0', '$const70.1']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=POP_JUMP_IF_FALSE(arg=104, lineno=219)
DEBUG:numba.core.byteflow:stack ['$72compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=76, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=104, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=104 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=4, lineno=224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=224)
DEBUG:numba.core.byteflow:stack ['$src_index104.0']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=INPLACE_ADD(arg=None, lineno=224)
DEBUG:numba.core.byteflow:stack ['$src_index104.0', '$const106.1']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=STORE_FAST(arg=4, lineno=224)
DEBUG:numba.core.byteflow:stack ['$108inplace_add.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=225)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=2, lineno=225)
DEBUG:numba.core.byteflow:stack ['$dest_index112.3']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=INPLACE_ADD(arg=None, lineno=225)
DEBUG:numba.core.byteflow:stack ['$dest_index112.3', '$const114.4']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_FAST(arg=5, lineno=225)
DEBUG:numba.core.byteflow:stack ['$116inplace_add.5']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=JUMP_ABSOLUTE(arg=28, lineno=225)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=104 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=104 nstack_initial=0), State(pc_initial=28 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=6, lineno=223)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=3, lineno=223)
DEBUG:numba.core.byteflow:stack ['$src_dim_size96.0']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=5, lineno=223)
DEBUG:numba.core.byteflow:stack ['$src_dim_size96.0', '$dest_shape98.1']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=STORE_SUBSCR(arg=None, lineno=223)
DEBUG:numba.core.byteflow:stack ['$src_dim_size96.0', '$dest_shape98.1', '$dest_index100.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=104 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=104 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=5, lineno=220)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=220)
DEBUG:numba.core.byteflow:stack ['$dest_index76.0']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=BINARY_ADD(arg=None, lineno=220)
DEBUG:numba.core.byteflow:stack ['$dest_index76.0', '$const78.1']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=UNARY_NEGATIVE(arg=None, lineno=220)
DEBUG:numba.core.byteflow:stack ['$80binary_add.2']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RETURN_VALUE(arg=None, lineno=220)
DEBUG:numba.core.byteflow:stack ['$82unary_negative.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=10 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=88 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$src_ndim2.0'}), (4, {'res': '$dest_ndim4.1'}), (6, {'lhs': '$src_ndim2.0', 'rhs': '$dest_ndim4.1', 'res': '$6compare_op.2'}), (8, {'pred': '$6compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={10: (), 14: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=10 nstack_initial=0):
AdaptBlockInfo(insts=((10, {'res': '$const10.0'}), (12, {'retval': '$const10.0', 'castval': '$12return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$const14.0'}), (16, {'value': '$const14.0'}), (18, {'res': '$dest_ndim18.1'}), (20, {'res': '$src_ndim20.2'}), (22, {'lhs': '$dest_ndim18.1', 'rhs': '$src_ndim20.2', 'res': '$22binary_subtract.3'}), (24, {'value': '$22binary_subtract.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$src_index28.0'}), (30, {'res': '$src_ndim30.1'}), (32, {'lhs': '$src_index28.0', 'rhs': '$src_ndim30.1', 'res': '$32compare_op.2'}), (34, {'pred': '$32compare_op.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={36: (), 122: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$src_shape36.0'}), (38, {'res': '$src_index38.1'}), (40, {'index': '$src_index38.1', 'target': '$src_shape36.0', 'res': '$40binary_subscr.2'}), (42, {'value': '$40binary_subscr.2'}), (44, {'res': '$dest_shape44.3'}), (46, {'res': '$dest_index46.4'}), (48, {'index': '$dest_index46.4', 'target': '$dest_shape44.3', 'res': '$48binary_subscr.5'}), (50, {'value': '$48binary_subscr.5'}), (52, {'res': '$dest_dim_size52.6'}), (54, {'res': '$const54.7'}), (56, {'lhs': '$dest_dim_size52.6', 'rhs': '$const54.7', 'res': '$56compare_op.8'}), (58, {'pred': '$56compare_op.8'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={60: (), 88: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$src_dim_size60.0'}), (62, {'res': '$dest_dim_size62.1'}), (64, {'lhs': '$src_dim_size60.0', 'rhs': '$dest_dim_size62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={68: (), 104: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$src_dim_size68.0'}), (70, {'res': '$const70.1'}), (72, {'lhs': '$src_dim_size68.0', 'rhs': '$const70.1', 'res': '$72compare_op.2'}), (74, {'pred': '$72compare_op.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={76: (), 104: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$dest_index76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$dest_index76.0', 'rhs': '$const78.1', 'res': '$80binary_add.2'}), (82, {'value': '$80binary_add.2', 'res': '$82unary_negative.3'}), (84, {'retval': '$82unary_negative.3', 'castval': '$84return_value.4'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$src_dim_size88.0'}), (90, {'res': '$const90.1'}), (92, {'lhs': '$src_dim_size88.0', 'rhs': '$const90.1', 'res': '$92compare_op.2'}), (94, {'pred': '$92compare_op.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={96: (), 104: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'res': '$src_dim_size96.0'}), (98, {'res': '$dest_shape98.1'}), (100, {'res': '$dest_index100.2'}), (102, {'target': '$dest_shape98.1', 'index': '$dest_index100.2', 'value': '$src_dim_size96.0'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={104: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$src_index104.0'}), (106, {'res': '$const106.1'}), (108, {'lhs': '$src_index104.0', 'rhs': '$const106.1', 'res': '$108inplace_add.2'}), (110, {'value': '$108inplace_add.2'}), (112, {'res': '$dest_index112.3'}), (114, {'res': '$const114.4'}), (116, {'lhs': '$dest_index112.3', 'rhs': '$const114.4', 'res': '$116inplace_add.5'}), (118, {'value': '$116inplace_add.5'}), (120, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={28: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 124, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={124: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$dest_index124.0'}), (126, {'retval': '$dest_index124.0', 'castval': '$126return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    src_ndim = arg(0, name=src_ndim)         ['src_ndim']
    src_shape = arg(1, name=src_shape)       ['src_shape']
    dest_ndim = arg(2, name=dest_ndim)       ['dest_ndim']
    dest_shape = arg(3, name=dest_shape)     ['dest_shape']
    $6compare_op.2 = src_ndim > dest_ndim    ['$6compare_op.2', 'dest_ndim', 'src_ndim']
    bool8 = global(bool: <class 'bool'>)     ['bool8']
    $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:203),), kws=(), vararg=None) ['$6compare_op.2', '$8pred', 'bool8']
    branch $8pred, 10, 14                    ['$8pred']
label 10:
    $const10.0 = const(int, 0)               ['$const10.0']
    $12return_value.1 = cast(value=$const10.0) ['$12return_value.1', '$const10.0']
    return $12return_value.1                 ['$12return_value.1']
label 14:
    $const14.0 = const(int, 0)               ['$const14.0']
    src_index = $const14.0                   ['$const14.0', 'src_index']
    $22binary_subtract.3 = dest_ndim - src_ndim ['$22binary_subtract.3', 'dest_ndim', 'src_ndim']
    dest_index = $22binary_subtract.3        ['$22binary_subtract.3', 'dest_index']
    jump 26                                  []
label 26:
    jump 28                                  []
label 28:
    $32compare_op.2 = src_index < src_ndim   ['$32compare_op.2', 'src_index', 'src_ndim']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($32compare_op.2, func=bool34, args=(Var($32compare_op.2, npyimpl.py:210),), kws=(), vararg=None) ['$32compare_op.2', '$34pred', 'bool34']
    branch $34pred, 36, 122                  ['$34pred']
label 36:
    $40binary_subscr.2 = getitem(value=src_shape, index=src_index) ['$40binary_subscr.2', 'src_index', 'src_shape']
    src_dim_size = $40binary_subscr.2        ['$40binary_subscr.2', 'src_dim_size']
    $48binary_subscr.5 = getitem(value=dest_shape, index=dest_index) ['$48binary_subscr.5', 'dest_index', 'dest_shape']
    dest_dim_size = $48binary_subscr.5       ['$48binary_subscr.5', 'dest_dim_size']
    $const54.7 = const(int, 1)               ['$const54.7']
    $56compare_op.8 = dest_dim_size != $const54.7 ['$56compare_op.8', '$const54.7', 'dest_dim_size']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.8, func=bool58, args=(Var($56compare_op.8, npyimpl.py:215),), kws=(), vararg=None) ['$56compare_op.8', '$58pred', 'bool58']
    branch $58pred, 60, 88                   ['$58pred']
label 60:
    $64compare_op.2 = src_dim_size != dest_dim_size ['$64compare_op.2', 'dest_dim_size', 'src_dim_size']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, npyimpl.py:219),), kws=(), vararg=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 104                  ['$66pred']
label 68:
    $const70.1 = const(int, 1)               ['$const70.1']
    $72compare_op.2 = src_dim_size != $const70.1 ['$72compare_op.2', '$const70.1', 'src_dim_size']
    bool74 = global(bool: <class 'bool'>)    ['bool74']
    $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, npyimpl.py:219),), kws=(), vararg=None) ['$72compare_op.2', '$74pred', 'bool74']
    branch $74pred, 76, 104                  ['$74pred']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80binary_add.2 = dest_index + $const78.1 ['$80binary_add.2', '$const78.1', 'dest_index']
    $82unary_negative.3 = unary(fn=<built-in function neg>, value=$80binary_add.2) ['$80binary_add.2', '$82unary_negative.3']
    $84return_value.4 = cast(value=$82unary_negative.3) ['$82unary_negative.3', '$84return_value.4']
    return $84return_value.4                 ['$84return_value.4']
label 88:
    $const90.1 = const(int, 1)               ['$const90.1']
    $92compare_op.2 = src_dim_size != $const90.1 ['$92compare_op.2', '$const90.1', 'src_dim_size']
    bool94 = global(bool: <class 'bool'>)    ['bool94']
    $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, npyimpl.py:221),), kws=(), vararg=None) ['$92compare_op.2', '$94pred', 'bool94']
    branch $94pred, 96, 104                  ['$94pred']
label 96:
    dest_shape[dest_index] = src_dim_size    ['dest_index', 'dest_shape', 'src_dim_size']
    jump 104                                 []
label 104:
    $const106.1 = const(int, 1)              ['$const106.1']
    $108inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const106.1, static_lhs=Undefined, static_rhs=Undefined) ['$108inplace_add.2', '$const106.1', 'src_index']
    src_index = $108inplace_add.2            ['$108inplace_add.2', 'src_index']
    $const114.4 = const(int, 1)              ['$const114.4']
    $116inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const114.4, static_lhs=Undefined, static_rhs=Undefined) ['$116inplace_add.5', '$const114.4', 'dest_index']
    dest_index = $116inplace_add.5           ['$116inplace_add.5', 'dest_index']
    jump 28                                  []
label 122:
    jump 124                                 []
label 124:
    $126return_value.1 = cast(value=dest_index) ['$126return_value.1', 'dest_index']
    return $126return_value.1                ['$126return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:203),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block analysis pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: $const10.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: $const14.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: src_index = $const14.0
DEBUG:numba.core.ssa:on stmt: $22binary_subtract.3 = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: dest_index = $22binary_subtract.3
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: $32compare_op.2 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool34 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $34pred = call bool34($32compare_op.2, func=bool34, args=(Var($32compare_op.2, npyimpl.py:210),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $34pred, 36, 122
DEBUG:numba.core.ssa:==== SSA block analysis pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.2 = getitem(value=src_shape, index=src_index)
DEBUG:numba.core.ssa:on stmt: src_dim_size = $40binary_subscr.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = getitem(value=dest_shape, index=dest_index)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = $48binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const54.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56compare_op.8 = dest_dim_size != $const54.7
DEBUG:numba.core.ssa:on stmt: bool58 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $58pred = call bool58($56compare_op.8, func=bool58, args=(Var($56compare_op.8, npyimpl.py:215),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $58pred, 60, 88
DEBUG:numba.core.ssa:==== SSA block analysis pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: $64compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool66 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, npyimpl.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $66pred, 68, 104
DEBUG:numba.core.ssa:==== SSA block analysis pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: $const70.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $72compare_op.2 = src_dim_size != $const70.1
DEBUG:numba.core.ssa:on stmt: bool74 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, npyimpl.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $74pred, 76, 104
DEBUG:numba.core.ssa:==== SSA block analysis pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: $const78.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $80binary_add.2 = dest_index + $const78.1
DEBUG:numba.core.ssa:on stmt: $82unary_negative.3 = unary(fn=<built-in function neg>, value=$80binary_add.2)
DEBUG:numba.core.ssa:on stmt: $84return_value.4 = cast(value=$82unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $84return_value.4
DEBUG:numba.core.ssa:==== SSA block analysis pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: $const90.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = src_dim_size != $const90.1
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, npyimpl.py:221),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 104
DEBUG:numba.core.ssa:==== SSA block analysis pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: $const106.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $108inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const106.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index = $108inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const114.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $116inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const114.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index = $116inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 122
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:==== SSA block analysis pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4641ba50>
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$108inplace_add.2': [<numba.core.ir.Assign object at 0x7f6e46456a50>],
             '$116inplace_add.5': [<numba.core.ir.Assign object at 0x7f6e46456950>],
             '$126return_value.1': [<numba.core.ir.Assign object at 0x7f6e4649f550>],
             '$12return_value.1': [<numba.core.ir.Assign object at 0x7f6e464e6550>],
             '$22binary_subtract.3': [<numba.core.ir.Assign object at 0x7f6e45f79750>],
             '$32compare_op.2': [<numba.core.ir.Assign object at 0x7f6e466aabd0>],
             '$34pred': [<numba.core.ir.Assign object at 0x7f6e45dae250>],
             '$40binary_subscr.2': [<numba.core.ir.Assign object at 0x7f6e467b1f10>],
             '$48binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e466a1ad0>],
             '$56compare_op.8': [<numba.core.ir.Assign object at 0x7f6e466a1d10>],
             '$58pred': [<numba.core.ir.Assign object at 0x7f6e466a1fd0>],
             '$64compare_op.2': [<numba.core.ir.Assign object at 0x7f6e466a1250>],
             '$66pred': [<numba.core.ir.Assign object at 0x7f6e45f1e6d0>],
             '$6compare_op.2': [<numba.core.ir.Assign object at 0x7f6e45f790d0>],
             '$72compare_op.2': [<numba.core.ir.Assign object at 0x7f6e45f1ee50>],
             '$74pred': [<numba.core.ir.Assign object at 0x7f6e45f1ec50>],
             '$80binary_add.2': [<numba.core.ir.Assign object at 0x7f6e45f1edd0>],
             '$82unary_negative.3': [<numba.core.ir.Assign object at 0x7f6e4673c990>],
             '$84return_value.4': [<numba.core.ir.Assign object at 0x7f6e4673cc90>],
             '$8pred': [<numba.core.ir.Assign object at 0x7f6e464e6bd0>],
             '$92compare_op.2': [<numba.core.ir.Assign object at 0x7f6e4673c650>],
             '$94pred': [<numba.core.ir.Assign object at 0x7f6e46456550>],
             '$const10.0': [<numba.core.ir.Assign object at 0x7f6e464e60d0>],
             '$const106.1': [<numba.core.ir.Assign object at 0x7f6e46456fd0>],
             '$const114.4': [<numba.core.ir.Assign object at 0x7f6e46456d10>],
             '$const14.0': [<numba.core.ir.Assign object at 0x7f6e464e6d10>],
             '$const54.7': [<numba.core.ir.Assign object at 0x7f6e466a16d0>],
             '$const70.1': [<numba.core.ir.Assign object at 0x7f6e45f1e910>],
             '$const78.1': [<numba.core.ir.Assign object at 0x7f6e45f1e8d0>],
             '$const90.1': [<numba.core.ir.Assign object at 0x7f6e4673ce10>],
             'bool34': [<numba.core.ir.Assign object at 0x7f6e466aac90>],
             'bool58': [<numba.core.ir.Assign object at 0x7f6e466a1490>],
             'bool66': [<numba.core.ir.Assign object at 0x7f6e45f1e290>],
             'bool74': [<numba.core.ir.Assign object at 0x7f6e45f1e090>],
             'bool8': [<numba.core.ir.Assign object at 0x7f6e464e6ad0>],
             'bool94': [<numba.core.ir.Assign object at 0x7f6e46456e10>],
             'dest_dim_size': [<numba.core.ir.Assign object at 0x7f6e466a1510>],
             'dest_index': [<numba.core.ir.Assign object at 0x7f6e46675650>,
                            <numba.core.ir.Assign object at 0x7f6e464569d0>],
             'dest_ndim': [<numba.core.ir.Assign object at 0x7f6e45f79d90>],
             'dest_shape': [<numba.core.ir.Assign object at 0x7f6e45f79e50>],
             'src_dim_size': [<numba.core.ir.Assign object at 0x7f6e467b1e10>],
             'src_index': [<numba.core.ir.Assign object at 0x7f6e464e6650>,
                           <numba.core.ir.Assign object at 0x7f6e466a1910>],
             'src_ndim': [<numba.core.ir.Assign object at 0x7f6e45f79610>],
             'src_shape': [<numba.core.ir.Assign object at 0x7f6e45f79f90>]})
DEBUG:numba.core.ssa:SSA violators {'src_index', 'dest_index'}
DEBUG:numba.core.ssa:Fix SSA violator on var src_index
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:203),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: $const10.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: $const14.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: src_index = $const14.0
DEBUG:numba.core.ssa:first assign: src_index
DEBUG:numba.core.ssa:replaced with: src_index = $const14.0
DEBUG:numba.core.ssa:on stmt: $22binary_subtract.3 = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: dest_index = $22binary_subtract.3
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: $32compare_op.2 = src_index < src_ndim
DEBUG:numba.core.ssa:on stmt: bool34 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $34pred = call bool34($32compare_op.2, func=bool34, args=(Var($32compare_op.2, npyimpl.py:210),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $34pred, 36, 122
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.2 = getitem(value=src_shape, index=src_index)
DEBUG:numba.core.ssa:on stmt: src_dim_size = $40binary_subscr.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = getitem(value=dest_shape, index=dest_index)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = $48binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const54.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56compare_op.8 = dest_dim_size != $const54.7
DEBUG:numba.core.ssa:on stmt: bool58 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $58pred = call bool58($56compare_op.8, func=bool58, args=(Var($56compare_op.8, npyimpl.py:215),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $58pred, 60, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: $64compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool66 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, npyimpl.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $66pred, 68, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: $const70.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $72compare_op.2 = src_dim_size != $const70.1
DEBUG:numba.core.ssa:on stmt: bool74 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, npyimpl.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $74pred, 76, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: $const78.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $80binary_add.2 = dest_index + $const78.1
DEBUG:numba.core.ssa:on stmt: $82unary_negative.3 = unary(fn=<built-in function neg>, value=$80binary_add.2)
DEBUG:numba.core.ssa:on stmt: $84return_value.4 = cast(value=$82unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $84return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: $const90.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = src_dim_size != $const90.1
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, npyimpl.py:221),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: $const106.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $108inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const106.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index = $108inplace_add.2
DEBUG:numba.core.ssa:replaced with: src_index.1 = $108inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const114.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $116inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const114.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index = $116inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 122
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46456850>
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x7f6e46424f50>],
             104: [<numba.core.ir.Assign object at 0x7f6e46424190>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:203),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: $const10.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: $const14.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: src_index = $const14.0
DEBUG:numba.core.ssa:on stmt: $22binary_subtract.3 = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: dest_index = $22binary_subtract.3
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: $32compare_op.2 = src_index < src_ndim
DEBUG:numba.core.ssa:find_def var='src_index' stmt=$32compare_op.2 = src_index < src_ndim
DEBUG:numba.core.ssa:find_def_from_top label 28
DEBUG:numba.core.ssa:insert phi node src_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
DEBUG:numba.core.ssa:find_def_from_bottom label 104
DEBUG:numba.core.ssa:incoming_def src_index.1 = $108inplace_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:find_def_from_top label 26
DEBUG:numba.core.ssa:idom 14 from label 26
DEBUG:numba.core.ssa:find_def_from_bottom label 14
DEBUG:numba.core.ssa:incoming_def src_index = $const14.0
DEBUG:numba.core.ssa:replaced with: $32compare_op.2 = src_index.2 < src_ndim
DEBUG:numba.core.ssa:on stmt: bool34 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $34pred = call bool34($32compare_op.2, func=bool34, args=(Var($32compare_op.2, npyimpl.py:210),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $34pred, 36, 122
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.2 = getitem(value=src_shape, index=src_index)
DEBUG:numba.core.ssa:find_def var='src_index' stmt=$40binary_subscr.2 = getitem(value=src_shape, index=src_index)
DEBUG:numba.core.ssa:find_def_from_top label 36
DEBUG:numba.core.ssa:idom 28 from label 36
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $40binary_subscr.2 = getitem(value=src_shape, index=src_index.2)
DEBUG:numba.core.ssa:on stmt: src_dim_size = $40binary_subscr.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = getitem(value=dest_shape, index=dest_index)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = $48binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const54.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56compare_op.8 = dest_dim_size != $const54.7
DEBUG:numba.core.ssa:on stmt: bool58 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $58pred = call bool58($56compare_op.8, func=bool58, args=(Var($56compare_op.8, npyimpl.py:215),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $58pred, 60, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: $64compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool66 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, npyimpl.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $66pred, 68, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: $const70.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $72compare_op.2 = src_dim_size != $const70.1
DEBUG:numba.core.ssa:on stmt: bool74 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, npyimpl.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $74pred, 76, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: $const78.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $80binary_add.2 = dest_index + $const78.1
DEBUG:numba.core.ssa:on stmt: $82unary_negative.3 = unary(fn=<built-in function neg>, value=$80binary_add.2)
DEBUG:numba.core.ssa:on stmt: $84return_value.4 = cast(value=$82unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $84return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: $const90.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = src_dim_size != $const90.1
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, npyimpl.py:221),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: $const106.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $108inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const106.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='src_index' stmt=$108inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index, rhs=$const106.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 104
DEBUG:numba.core.ssa:idom 36 from label 104
DEBUG:numba.core.ssa:find_def_from_bottom label 36
DEBUG:numba.core.ssa:find_def_from_top label 36
DEBUG:numba.core.ssa:idom 28 from label 36
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $108inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const106.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index.1 = $108inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const114.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $116inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const114.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index = $116inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 122
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424d90>
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var dest_index
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:203),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: $const10.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: $const14.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: src_index = $const14.0
DEBUG:numba.core.ssa:on stmt: $22binary_subtract.3 = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: dest_index = $22binary_subtract.3
DEBUG:numba.core.ssa:first assign: dest_index
DEBUG:numba.core.ssa:replaced with: dest_index = $22binary_subtract.3
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: src_index.2 = phi(incoming_values=[Var(src_index.1, npyimpl.py:224), Var(src_index, npyimpl.py:208)], incoming_blocks=[104, 26])
DEBUG:numba.core.ssa:on stmt: $32compare_op.2 = src_index.2 < src_ndim
DEBUG:numba.core.ssa:on stmt: bool34 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $34pred = call bool34($32compare_op.2, func=bool34, args=(Var($32compare_op.2, npyimpl.py:210),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $34pred, 36, 122
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.2 = getitem(value=src_shape, index=src_index.2)
DEBUG:numba.core.ssa:on stmt: src_dim_size = $40binary_subscr.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = getitem(value=dest_shape, index=dest_index)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = $48binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const54.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56compare_op.8 = dest_dim_size != $const54.7
DEBUG:numba.core.ssa:on stmt: bool58 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $58pred = call bool58($56compare_op.8, func=bool58, args=(Var($56compare_op.8, npyimpl.py:215),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $58pred, 60, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: $64compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool66 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, npyimpl.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $66pred, 68, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: $const70.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $72compare_op.2 = src_dim_size != $const70.1
DEBUG:numba.core.ssa:on stmt: bool74 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, npyimpl.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $74pred, 76, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: $const78.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $80binary_add.2 = dest_index + $const78.1
DEBUG:numba.core.ssa:on stmt: $82unary_negative.3 = unary(fn=<built-in function neg>, value=$80binary_add.2)
DEBUG:numba.core.ssa:on stmt: $84return_value.4 = cast(value=$82unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $84return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: $const90.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = src_dim_size != $const90.1
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, npyimpl.py:221),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: $const106.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $108inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const106.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index.1 = $108inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const114.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $116inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const114.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index = $116inplace_add.5
DEBUG:numba.core.ssa:replaced with: dest_index.1 = $116inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 122
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46424790>
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x7f6e46424cd0>],
             104: [<numba.core.ir.Assign object at 0x7f6e4641bc90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: src_ndim = arg(0, name=src_ndim)
DEBUG:numba.core.ssa:on stmt: src_shape = arg(1, name=src_shape)
DEBUG:numba.core.ssa:on stmt: dest_ndim = arg(2, name=dest_ndim)
DEBUG:numba.core.ssa:on stmt: dest_shape = arg(3, name=dest_shape)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = src_ndim > dest_ndim
DEBUG:numba.core.ssa:on stmt: bool8 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $8pred = call bool8($6compare_op.2, func=bool8, args=(Var($6compare_op.2, npyimpl.py:203),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $8pred, 10, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: $const10.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $12return_value.1 = cast(value=$const10.0)
DEBUG:numba.core.ssa:on stmt: return $12return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: $const14.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: src_index = $const14.0
DEBUG:numba.core.ssa:on stmt: $22binary_subtract.3 = dest_ndim - src_ndim
DEBUG:numba.core.ssa:on stmt: dest_index = $22binary_subtract.3
DEBUG:numba.core.ssa:on stmt: jump 26
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: src_index.2 = phi(incoming_values=[Var(src_index.1, npyimpl.py:224), Var(src_index, npyimpl.py:208)], incoming_blocks=[104, 26])
DEBUG:numba.core.ssa:on stmt: $32compare_op.2 = src_index.2 < src_ndim
DEBUG:numba.core.ssa:on stmt: bool34 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $34pred = call bool34($32compare_op.2, func=bool34, args=(Var($32compare_op.2, npyimpl.py:210),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $34pred, 36, 122
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.2 = getitem(value=src_shape, index=src_index.2)
DEBUG:numba.core.ssa:on stmt: src_dim_size = $40binary_subscr.2
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.5 = getitem(value=dest_shape, index=dest_index)
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=$48binary_subscr.5 = getitem(value=dest_shape, index=dest_index)
DEBUG:numba.core.ssa:find_def_from_top label 36
DEBUG:numba.core.ssa:idom 28 from label 36
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:find_def_from_top label 28
DEBUG:numba.core.ssa:insert phi node dest_index.2 = phi(incoming_values=[], incoming_blocks=[]) at 28
DEBUG:numba.core.ssa:find_def_from_bottom label 104
DEBUG:numba.core.ssa:incoming_def dest_index.1 = $116inplace_add.5
DEBUG:numba.core.ssa:find_def_from_bottom label 26
DEBUG:numba.core.ssa:find_def_from_top label 26
DEBUG:numba.core.ssa:idom 14 from label 26
DEBUG:numba.core.ssa:find_def_from_bottom label 14
DEBUG:numba.core.ssa:incoming_def dest_index = $22binary_subtract.3
DEBUG:numba.core.ssa:replaced with: $48binary_subscr.5 = getitem(value=dest_shape, index=dest_index.2)
DEBUG:numba.core.ssa:on stmt: dest_dim_size = $48binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const54.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56compare_op.8 = dest_dim_size != $const54.7
DEBUG:numba.core.ssa:on stmt: bool58 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $58pred = call bool58($56compare_op.8, func=bool58, args=(Var($56compare_op.8, npyimpl.py:215),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $58pred, 60, 88
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: $64compare_op.2 = src_dim_size != dest_dim_size
DEBUG:numba.core.ssa:on stmt: bool66 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, npyimpl.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $66pred, 68, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: $const70.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $72compare_op.2 = src_dim_size != $const70.1
DEBUG:numba.core.ssa:on stmt: bool74 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $74pred = call bool74($72compare_op.2, func=bool74, args=(Var($72compare_op.2, npyimpl.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $74pred, 76, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: $const78.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $80binary_add.2 = dest_index + $const78.1
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=$80binary_add.2 = dest_index + $const78.1
DEBUG:numba.core.ssa:find_def_from_top label 76
DEBUG:numba.core.ssa:idom 68 from label 76
DEBUG:numba.core.ssa:find_def_from_bottom label 68
DEBUG:numba.core.ssa:find_def_from_top label 68
DEBUG:numba.core.ssa:idom 60 from label 68
DEBUG:numba.core.ssa:find_def_from_bottom label 60
DEBUG:numba.core.ssa:find_def_from_top label 60
DEBUG:numba.core.ssa:idom 36 from label 60
DEBUG:numba.core.ssa:find_def_from_bottom label 36
DEBUG:numba.core.ssa:find_def_from_top label 36
DEBUG:numba.core.ssa:idom 28 from label 36
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $80binary_add.2 = dest_index.2 + $const78.1
DEBUG:numba.core.ssa:on stmt: $82unary_negative.3 = unary(fn=<built-in function neg>, value=$80binary_add.2)
DEBUG:numba.core.ssa:on stmt: $84return_value.4 = cast(value=$82unary_negative.3)
DEBUG:numba.core.ssa:on stmt: return $84return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: $const90.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = src_dim_size != $const90.1
DEBUG:numba.core.ssa:on stmt: bool94 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $94pred = call bool94($92compare_op.2, func=bool94, args=(Var($92compare_op.2, npyimpl.py:221),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $94pred, 96, 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=dest_shape[dest_index] = src_dim_size
DEBUG:numba.core.ssa:find_def_from_top label 96
DEBUG:numba.core.ssa:idom 88 from label 96
DEBUG:numba.core.ssa:find_def_from_bottom label 88
DEBUG:numba.core.ssa:find_def_from_top label 88
DEBUG:numba.core.ssa:idom 36 from label 88
DEBUG:numba.core.ssa:find_def_from_bottom label 36
DEBUG:numba.core.ssa:find_def_from_top label 36
DEBUG:numba.core.ssa:idom 28 from label 36
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: dest_shape[dest_index.2] = src_dim_size
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: $const106.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $108inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=src_index.2, rhs=$const106.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: src_index.1 = $108inplace_add.2
DEBUG:numba.core.ssa:on stmt: $const114.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $116inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const114.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=$116inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index, rhs=$const114.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 104
DEBUG:numba.core.ssa:idom 36 from label 104
DEBUG:numba.core.ssa:find_def_from_bottom label 36
DEBUG:numba.core.ssa:find_def_from_top label 36
DEBUG:numba.core.ssa:idom 28 from label 36
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $116inplace_add.5 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=dest_index.2, rhs=$const114.4, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: dest_index.1 = $116inplace_add.5
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 122
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: jump 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46424f10>
DEBUG:numba.core.ssa:on stmt: $126return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:find_def var='dest_index' stmt=$126return_value.1 = cast(value=dest_index)
DEBUG:numba.core.ssa:find_def_from_top label 124
DEBUG:numba.core.ssa:idom 122 from label 124
DEBUG:numba.core.ssa:find_def_from_bottom label 122
DEBUG:numba.core.ssa:find_def_from_top label 122
DEBUG:numba.core.ssa:idom 28 from label 122
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:replaced with: $126return_value.1 = cast(value=dest_index.2)
DEBUG:numba.core.ssa:on stmt: return $126return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_CONST(arg=1, lineno=1)
           4	LOAD_FAST(arg=0, lineno=225)
           6	BINARY_MULTIPLY(arg=None, lineno=225)
           8	RETURN_VALUE(arg=None, lineno=225)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=225)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_MULTIPLY(arg=None, lineno=225)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$_116call_function_kw_49_14.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=225)
DEBUG:numba.core.byteflow:stack ['$6binary_multiply.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'res': '$_116call_function_kw_49_14.1'}), (6, {'lhs': '$const2.0', 'rhs': '$_116call_function_kw_49_14.1', 'res': '$6binary_multiply.2'}), (8, {'retval': '$6binary_multiply.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    _116call_function_kw_49_1 = arg(0, name=_116call_function_kw_49_1) ['_116call_function_kw_49_1']
    $const2.0 = const(int, -1)               ['$const2.0']
    $6binary_multiply.2 = $const2.0 * _116call_function_kw_49_1 ['$6binary_multiply.2', '$const2.0', '_116call_function_kw_49_1']
    $8return_value.3 = cast(value=$6binary_multiply.2) ['$6binary_multiply.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e466e9d90>
DEBUG:numba.core.ssa:on stmt: _116call_function_kw_49_1 = arg(0, name=_116call_function_kw_49_1)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $6binary_multiply.2 = $const2.0 * _116call_function_kw_49_1
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6binary_multiply.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$6binary_multiply.2': [<numba.core.ir.Assign object at 0x7f6e4668d810>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x7f6e4668dcd0>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e4668d910>],
             '_116call_function_kw_49_1': [<numba.core.ir.Assign object at 0x7f6e468bbe50>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_CONST(arg=1, lineno=1)
           4	LOAD_FAST(arg=0, lineno=226)
           6	BINARY_MULTIPLY(arg=None, lineno=226)
           8	RETURN_VALUE(arg=None, lineno=226)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=226)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_MULTIPLY(arg=None, lineno=226)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$_138call_function_kw_59_14.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=226)
DEBUG:numba.core.byteflow:stack ['$6binary_multiply.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'res': '$_138call_function_kw_59_14.1'}), (6, {'lhs': '$const2.0', 'rhs': '$_138call_function_kw_59_14.1', 'res': '$6binary_multiply.2'}), (8, {'retval': '$6binary_multiply.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    _138call_function_kw_59_1 = arg(0, name=_138call_function_kw_59_1) ['_138call_function_kw_59_1']
    $const2.0 = const(int, -1)               ['$const2.0']
    $6binary_multiply.2 = $const2.0 * _138call_function_kw_59_1 ['$6binary_multiply.2', '$const2.0', '_138call_function_kw_59_1']
    $8return_value.3 = cast(value=$6binary_multiply.2) ['$6binary_multiply.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f5b6d0>
DEBUG:numba.core.ssa:on stmt: _138call_function_kw_59_1 = arg(0, name=_138call_function_kw_59_1)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $6binary_multiply.2 = $const2.0 * _138call_function_kw_59_1
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6binary_multiply.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$6binary_multiply.2': [<numba.core.ir.Assign object at 0x7f6e45f3e650>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x7f6e45f3ebd0>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e45f3e690>],
             '_138call_function_kw_59_1': [<numba.core.ir.Assign object at 0x7f6e45f3ec10>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=54)
           2	LOAD_GLOBAL(arg=0, lineno=54)
           4	LOAD_ATTR(arg=1, lineno=54)
           6	STORE_FAST(arg=5, lineno=54)
           8	LOAD_GLOBAL(arg=0, lineno=56)
          10	LOAD_ATTR(arg=2, lineno=56)
          12	POP_JUMP_IF_FALSE(arg=26, lineno=56)
          14	LOAD_GLOBAL(arg=3, lineno=57)
          16	LOAD_FAST(arg=0, lineno=57)
          18	LOAD_FAST(arg=1, lineno=57)
          20	CALL_FUNCTION(arg=2, lineno=57)
          22	POP_TOP(arg=None, lineno=57)
          24	JUMP_FORWARD(arg=10, lineno=57)
>         26	LOAD_GLOBAL(arg=4, lineno=59)
          28	LOAD_FAST(arg=0, lineno=59)
          30	LOAD_FAST(arg=1, lineno=59)
          32	CALL_FUNCTION(arg=2, lineno=59)
          34	POP_TOP(arg=None, lineno=59)
>         36	LOAD_FAST(arg=0, lineno=60)
          38	LOAD_METHOD(arg=5, lineno=60)
          40	LOAD_FAST(arg=2, lineno=60)
          42	LOAD_FAST(arg=1, lineno=60)
          44	CALL_METHOD(arg=2, lineno=60)
          46	POP_TOP(arg=None, lineno=60)
          48	LOAD_GLOBAL(arg=6, lineno=62)
          50	LOAD_FAST(arg=0, lineno=63)
          52	LOAD_FAST(arg=4, lineno=63)
          54	LOAD_FAST(arg=1, lineno=63)
          56	LOAD_FAST(arg=2, lineno=63)
          58	CALL_FUNCTION(arg=4, lineno=63)
          60	POP_TOP(arg=None, lineno=63)
          62	LOAD_GLOBAL(arg=7, lineno=66)
          64	LOAD_ATTR(arg=8, lineno=66)
          66	POP_JUMP_IF_FALSE(arg=106, lineno=66)
          68	LOAD_FAST(arg=0, lineno=67)
          70	LOAD_ATTR(arg=9, lineno=67)
          72	BUILD_LIST(arg=1, lineno=67)
          74	STORE_FAST(arg=6, lineno=67)
          76	LOAD_FAST(arg=0, lineno=68)
          78	LOAD_ATTR(arg=10, lineno=68)
          80	BUILD_LIST(arg=1, lineno=68)
          82	STORE_FAST(arg=7, lineno=68)
          84	LOAD_FAST(arg=0, lineno=69)
          86	LOAD_ATTR(arg=11, lineno=69)
          88	BUILD_LIST(arg=1, lineno=69)
          90	STORE_FAST(arg=8, lineno=69)
          92	LOAD_GLOBAL(arg=12, lineno=70)
          94	LOAD_ATTR(arg=13, lineno=70)
          96	BUILD_LIST(arg=1, lineno=70)
          98	STORE_FAST(arg=9, lineno=70)
         100	LOAD_CONST(arg=1, lineno=71)
         102	BUILD_LIST(arg=1, lineno=71)
         104	STORE_FAST(arg=10, lineno=71)
>        106	SETUP_LOOP(arg=270, lineno=73)
>        110	LOAD_FAST(arg=0, lineno=73)
         112	LOAD_ATTR(arg=14, lineno=73)
         114	LOAD_GLOBAL(arg=15, lineno=73)
         116	LOAD_ATTR(arg=16, lineno=73)
         118	COMPARE_OP(arg=2, lineno=73)
         120	POP_JUMP_IF_FALSE(arg=378, lineno=73)
         124	LOAD_GLOBAL(arg=17, lineno=74)
         126	LOAD_FAST(arg=0, lineno=75)
         128	LOAD_FAST(arg=1, lineno=75)
         130	LOAD_FAST(arg=2, lineno=75)
         132	LOAD_FAST(arg=3, lineno=75)
         134	CALL_FUNCTION(arg=4, lineno=75)
         136	UNPACK_SEQUENCE(arg=3, lineno=75)
         138	STORE_FAST(arg=11, lineno=75)
         140	STORE_FAST(arg=12, lineno=75)
         142	STORE_FAST(arg=13, lineno=75)
         144	LOAD_FAST(arg=12, lineno=78)
         146	LOAD_GLOBAL(arg=12, lineno=78)
         148	LOAD_ATTR(arg=13, lineno=78)
         150	COMPARE_OP(arg=2, lineno=78)
         152	POP_JUMP_IF_FALSE(arg=190, lineno=78)
         154	LOAD_GLOBAL(arg=18, lineno=79)
         156	LOAD_FAST(arg=0, lineno=80)
         158	LOAD_FAST(arg=11, lineno=80)
         160	LOAD_FAST(arg=1, lineno=80)
         162	LOAD_ATTR(arg=19, lineno=80)
         164	LOAD_FAST(arg=3, lineno=80)
         166	CALL_FUNCTION(arg=4, lineno=80)
         168	POP_TOP(arg=None, lineno=80)
         170	LOAD_GLOBAL(arg=20, lineno=82)
         172	LOAD_FAST(arg=0, lineno=83)
         174	LOAD_FAST(arg=13, lineno=83)
         176	LOAD_GLOBAL(arg=21, lineno=83)
         178	LOAD_FAST(arg=1, lineno=83)
         180	LOAD_ATTR(arg=22, lineno=83)
         182	CALL_FUNCTION(arg=1, lineno=83)
         184	CALL_FUNCTION(arg=3, lineno=83)
         186	POP_TOP(arg=None, lineno=83)
         188	JUMP_FORWARD(arg=124, lineno=83)
>        190	LOAD_FAST(arg=12, lineno=86)
         192	LOAD_GLOBAL(arg=12, lineno=86)
         194	LOAD_ATTR(arg=23, lineno=86)
         196	COMPARE_OP(arg=2, lineno=86)
         198	POP_JUMP_IF_FALSE(arg=254, lineno=86)
         200	LOAD_CONST(arg=2, lineno=87)
         202	LOAD_FAST(arg=0, lineno=87)
         204	STORE_ATTR(arg=24, lineno=87)
         206	LOAD_GLOBAL(arg=18, lineno=89)
         208	LOAD_FAST(arg=0, lineno=90)
         210	LOAD_FAST(arg=11, lineno=90)
         212	LOAD_FAST(arg=1, lineno=90)
         214	LOAD_ATTR(arg=19, lineno=90)
         216	LOAD_FAST(arg=3, lineno=90)
         218	CALL_FUNCTION(arg=4, lineno=90)
         220	POP_TOP(arg=None, lineno=90)
         222	LOAD_GLOBAL(arg=25, lineno=92)
         224	LOAD_FAST(arg=0, lineno=93)
         226	LOAD_FAST(arg=1, lineno=94)
         228	LOAD_ATTR(arg=19, lineno=94)
         230	LOAD_FAST(arg=5, lineno=95)
         232	LOAD_FAST(arg=2, lineno=96)
         234	CALL_FUNCTION(arg=4, lineno=96)
         236	POP_TOP(arg=None, lineno=96)
         238	LOAD_GLOBAL(arg=6, lineno=98)
         240	LOAD_FAST(arg=0, lineno=99)
         242	LOAD_FAST(arg=4, lineno=99)
         244	LOAD_FAST(arg=1, lineno=99)
         246	LOAD_FAST(arg=2, lineno=99)
         248	CALL_FUNCTION(arg=4, lineno=99)
         250	POP_TOP(arg=None, lineno=99)
         252	JUMP_FORWARD(arg=60, lineno=99)
>        254	LOAD_FAST(arg=12, lineno=102)
         256	LOAD_GLOBAL(arg=12, lineno=102)
         258	LOAD_ATTR(arg=26, lineno=102)
         260	COMPARE_OP(arg=2, lineno=102)
         262	POP_JUMP_IF_FALSE(arg=314, lineno=102)
         266	LOAD_CONST(arg=3, lineno=103)
         268	LOAD_FAST(arg=0, lineno=103)
         270	STORE_ATTR(arg=24, lineno=103)
         272	LOAD_GLOBAL(arg=18, lineno=105)
         274	LOAD_FAST(arg=0, lineno=106)
         276	LOAD_FAST(arg=11, lineno=106)
         278	LOAD_FAST(arg=1, lineno=106)
         280	LOAD_ATTR(arg=19, lineno=106)
         282	LOAD_FAST(arg=3, lineno=106)
         284	CALL_FUNCTION(arg=4, lineno=106)
         286	POP_TOP(arg=None, lineno=106)
         288	LOAD_GLOBAL(arg=27, lineno=108)
         290	LOAD_FAST(arg=0, lineno=108)
         292	LOAD_FAST(arg=1, lineno=108)
         294	LOAD_ATTR(arg=19, lineno=108)
         296	CALL_FUNCTION(arg=2, lineno=108)
         298	POP_TOP(arg=None, lineno=108)
         300	LOAD_GLOBAL(arg=6, lineno=110)
         302	LOAD_FAST(arg=0, lineno=111)
         304	LOAD_FAST(arg=4, lineno=111)
         306	LOAD_FAST(arg=1, lineno=111)
         308	LOAD_FAST(arg=2, lineno=111)
         310	CALL_FUNCTION(arg=4, lineno=111)
         312	POP_TOP(arg=None, lineno=111)
>        314	LOAD_GLOBAL(arg=7, lineno=113)
         316	LOAD_ATTR(arg=8, lineno=113)
         318	POP_JUMP_IF_FALSE(arg=110, lineno=113)
         320	LOAD_FAST(arg=6, lineno=114)
         322	LOAD_METHOD(arg=28, lineno=114)
         324	LOAD_FAST(arg=0, lineno=114)
         326	LOAD_ATTR(arg=9, lineno=114)
         328	CALL_METHOD(arg=1, lineno=114)
         330	POP_TOP(arg=None, lineno=114)
         332	LOAD_FAST(arg=7, lineno=115)
         334	LOAD_METHOD(arg=28, lineno=115)
         336	LOAD_FAST(arg=0, lineno=115)
         338	LOAD_ATTR(arg=10, lineno=115)
         340	CALL_METHOD(arg=1, lineno=115)
         342	POP_TOP(arg=None, lineno=115)
         344	LOAD_FAST(arg=8, lineno=116)
         346	LOAD_METHOD(arg=28, lineno=116)
         348	LOAD_FAST(arg=0, lineno=116)
         350	LOAD_ATTR(arg=11, lineno=116)
         352	CALL_METHOD(arg=1, lineno=116)
         354	POP_TOP(arg=None, lineno=116)
         356	LOAD_FAST(arg=9, lineno=117)
         358	LOAD_METHOD(arg=28, lineno=117)
         360	LOAD_FAST(arg=12, lineno=117)
         362	CALL_METHOD(arg=1, lineno=117)
         364	POP_TOP(arg=None, lineno=117)
         366	LOAD_FAST(arg=10, lineno=118)
         368	LOAD_METHOD(arg=28, lineno=118)
         370	LOAD_FAST(arg=11, lineno=118)
         372	CALL_METHOD(arg=1, lineno=118)
         374	POP_TOP(arg=None, lineno=118)
         376	JUMP_ABSOLUTE(arg=110, lineno=118)
>        378	POP_BLOCK(arg=None, lineno=118)
>        380	LOAD_GLOBAL(arg=7, lineno=120)
         382	LOAD_ATTR(arg=8, lineno=120)
         384	POP_JUMP_IF_FALSE(arg=402, lineno=120)
         388	LOAD_FAST(arg=6, lineno=122)
         390	LOAD_FAST(arg=7, lineno=123)
         392	LOAD_FAST(arg=8, lineno=124)
         394	LOAD_FAST(arg=9, lineno=125)
         396	LOAD_FAST(arg=10, lineno=126)
         398	BUILD_TUPLE(arg=5, lineno=126)
         400	RETURN_VALUE(arg=None, lineno=126)
>        402	LOAD_CONST(arg=4, lineno=126)
         404	RETURN_VALUE(arg=None, lineno=126)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=54)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=54)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=54)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_FAST(arg=5, lineno=54)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_GLOBAL(arg=0, lineno=56)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=56)
DEBUG:numba.core.byteflow:stack ['$8load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=POP_JUMP_IF_FALSE(arg=26, lineno=56)
DEBUG:numba.core.byteflow:stack ['$10load_attr.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=14, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_GLOBAL(arg=3, lineno=57)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=57)
DEBUG:numba.core.byteflow:stack ['$14load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=57)
DEBUG:numba.core.byteflow:stack ['$14load_global.0', '$r_packet16.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_FUNCTION(arg=2, lineno=57)
DEBUG:numba.core.byteflow:stack ['$14load_global.0', '$r_packet16.1', '$numba_model18.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=POP_TOP(arg=None, lineno=57)
DEBUG:numba.core.byteflow:stack ['$20call_function.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=JUMP_FORWARD(arg=10, lineno=57)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_GLOBAL(arg=4, lineno=59)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=59)
DEBUG:numba.core.byteflow:stack ['$26load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=59)
DEBUG:numba.core.byteflow:stack ['$26load_global.0', '$r_packet28.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=CALL_FUNCTION(arg=2, lineno=59)
DEBUG:numba.core.byteflow:stack ['$26load_global.0', '$r_packet28.1', '$numba_model30.2']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=POP_TOP(arg=None, lineno=59)
DEBUG:numba.core.byteflow:stack ['$32call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=60)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_METHOD(arg=5, lineno=60)
DEBUG:numba.core.byteflow:stack ['$r_packet36.0']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=2, lineno=60)
DEBUG:numba.core.byteflow:stack ['$38load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=60)
DEBUG:numba.core.byteflow:stack ['$38load_method.1', '$numba_plasma40.2']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=CALL_METHOD(arg=2, lineno=60)
DEBUG:numba.core.byteflow:stack ['$38load_method.1', '$numba_plasma40.2', '$numba_model42.3']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=POP_TOP(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$44call_method.4']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_GLOBAL(arg=6, lineno=62)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=0, lineno=63)
DEBUG:numba.core.byteflow:stack ['$48load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=63)
DEBUG:numba.core.byteflow:stack ['$48load_global.5', '$r_packet50.6']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=63)
DEBUG:numba.core.byteflow:stack ['$48load_global.5', '$r_packet50.6', '$vpacket_collection52.7']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=63)
DEBUG:numba.core.byteflow:stack ['$48load_global.5', '$r_packet50.6', '$vpacket_collection52.7', '$numba_model54.8']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=CALL_FUNCTION(arg=4, lineno=63)
DEBUG:numba.core.byteflow:stack ['$48load_global.5', '$r_packet50.6', '$vpacket_collection52.7', '$numba_model54.8', '$numba_plasma56.9']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=POP_TOP(arg=None, lineno=63)
DEBUG:numba.core.byteflow:stack ['$58call_function.10']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_GLOBAL(arg=7, lineno=66)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_ATTR(arg=8, lineno=66)
DEBUG:numba.core.byteflow:stack ['$62load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=106, lineno=66)
DEBUG:numba.core.byteflow:stack ['$64load_attr.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=0, lineno=67)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_ATTR(arg=9, lineno=67)
DEBUG:numba.core.byteflow:stack ['$r_packet68.0']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BUILD_LIST(arg=1, lineno=67)
DEBUG:numba.core.byteflow:stack ['$70load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_FAST(arg=6, lineno=67)
DEBUG:numba.core.byteflow:stack ['$72build_list.2']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=68)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_ATTR(arg=10, lineno=68)
DEBUG:numba.core.byteflow:stack ['$r_packet76.3']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=BUILD_LIST(arg=1, lineno=68)
DEBUG:numba.core.byteflow:stack ['$78load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=STORE_FAST(arg=7, lineno=68)
DEBUG:numba.core.byteflow:stack ['$80build_list.5']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=69)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_ATTR(arg=11, lineno=69)
DEBUG:numba.core.byteflow:stack ['$r_packet84.6']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=BUILD_LIST(arg=1, lineno=69)
DEBUG:numba.core.byteflow:stack ['$86load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=STORE_FAST(arg=8, lineno=69)
DEBUG:numba.core.byteflow:stack ['$88build_list.8']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_GLOBAL(arg=12, lineno=70)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_ATTR(arg=13, lineno=70)
DEBUG:numba.core.byteflow:stack ['$92load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=BUILD_LIST(arg=1, lineno=70)
DEBUG:numba.core.byteflow:stack ['$94load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=STORE_FAST(arg=9, lineno=70)
DEBUG:numba.core.byteflow:stack ['$96build_list.11']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=71)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_LIST(arg=1, lineno=71)
DEBUG:numba.core.byteflow:stack ['$const100.12']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_FAST(arg=10, lineno=71)
DEBUG:numba.core.byteflow:stack ['$102build_list.13']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=SETUP_LOOP(arg=270, lineno=73)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=110, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=110 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=110 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=0, lineno=73)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_ATTR(arg=14, lineno=73)
DEBUG:numba.core.byteflow:stack ['$r_packet110.0']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_GLOBAL(arg=15, lineno=73)
DEBUG:numba.core.byteflow:stack ['$112load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_ATTR(arg=16, lineno=73)
DEBUG:numba.core.byteflow:stack ['$112load_attr.1', '$114load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=COMPARE_OP(arg=2, lineno=73)
DEBUG:numba.core.byteflow:stack ['$112load_attr.1', '$116load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=POP_JUMP_IF_FALSE(arg=378, lineno=73)
DEBUG:numba.core.byteflow:stack ['$118compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=124, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=378, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=378 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_GLOBAL(arg=17, lineno=74)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=0, lineno=75)
DEBUG:numba.core.byteflow:stack ['$124load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=1, lineno=75)
DEBUG:numba.core.byteflow:stack ['$124load_global.0', '$r_packet126.1']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=2, lineno=75)
DEBUG:numba.core.byteflow:stack ['$124load_global.0', '$r_packet126.1', '$numba_model128.2']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_FAST(arg=3, lineno=75)
DEBUG:numba.core.byteflow:stack ['$124load_global.0', '$r_packet126.1', '$numba_model128.2', '$numba_plasma130.3']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=CALL_FUNCTION(arg=4, lineno=75)
DEBUG:numba.core.byteflow:stack ['$124load_global.0', '$r_packet126.1', '$numba_model128.2', '$numba_plasma130.3', '$estimators132.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=UNPACK_SEQUENCE(arg=3, lineno=75)
DEBUG:numba.core.byteflow:stack ['$134call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=STORE_FAST(arg=11, lineno=75)
DEBUG:numba.core.byteflow:stack ['$136unpack_sequence.8', '$136unpack_sequence.7', '$136unpack_sequence.6']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=STORE_FAST(arg=12, lineno=75)
DEBUG:numba.core.byteflow:stack ['$136unpack_sequence.8', '$136unpack_sequence.7']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=STORE_FAST(arg=13, lineno=75)
DEBUG:numba.core.byteflow:stack ['$136unpack_sequence.8']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=LOAD_FAST(arg=12, lineno=78)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=12, lineno=78)
DEBUG:numba.core.byteflow:stack ['$interaction_type144.10']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_ATTR(arg=13, lineno=78)
DEBUG:numba.core.byteflow:stack ['$interaction_type144.10', '$146load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=COMPARE_OP(arg=2, lineno=78)
DEBUG:numba.core.byteflow:stack ['$interaction_type144.10', '$148load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=POP_JUMP_IF_FALSE(arg=190, lineno=78)
DEBUG:numba.core.byteflow:stack ['$150compare_op.13']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=154, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=190, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=378 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=378, inst=POP_BLOCK(arg=None, lineno=118)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=380, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=380 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_GLOBAL(arg=18, lineno=79)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=0, lineno=80)
DEBUG:numba.core.byteflow:stack ['$154load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_FAST(arg=11, lineno=80)
DEBUG:numba.core.byteflow:stack ['$154load_global.0', '$r_packet156.1']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_FAST(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack ['$154load_global.0', '$r_packet156.1', '$distance158.2']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_ATTR(arg=19, lineno=80)
DEBUG:numba.core.byteflow:stack ['$154load_global.0', '$r_packet156.1', '$distance158.2', '$numba_model160.3']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=3, lineno=80)
DEBUG:numba.core.byteflow:stack ['$154load_global.0', '$r_packet156.1', '$distance158.2', '$162load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=CALL_FUNCTION(arg=4, lineno=80)
DEBUG:numba.core.byteflow:stack ['$154load_global.0', '$r_packet156.1', '$distance158.2', '$162load_attr.4', '$estimators164.5']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=POP_TOP(arg=None, lineno=80)
DEBUG:numba.core.byteflow:stack ['$166call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_GLOBAL(arg=20, lineno=82)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=0, lineno=83)
DEBUG:numba.core.byteflow:stack ['$170load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_FAST(arg=13, lineno=83)
DEBUG:numba.core.byteflow:stack ['$170load_global.7', '$r_packet172.8']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_GLOBAL(arg=21, lineno=83)
DEBUG:numba.core.byteflow:stack ['$170load_global.7', '$r_packet172.8', '$delta_shell174.9']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=LOAD_FAST(arg=1, lineno=83)
DEBUG:numba.core.byteflow:stack ['$170load_global.7', '$r_packet172.8', '$delta_shell174.9', '$176load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_ATTR(arg=22, lineno=83)
DEBUG:numba.core.byteflow:stack ['$170load_global.7', '$r_packet172.8', '$delta_shell174.9', '$176load_global.10', '$numba_model178.11']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=CALL_FUNCTION(arg=1, lineno=83)
DEBUG:numba.core.byteflow:stack ['$170load_global.7', '$r_packet172.8', '$delta_shell174.9', '$176load_global.10', '$180load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=CALL_FUNCTION(arg=3, lineno=83)
DEBUG:numba.core.byteflow:stack ['$170load_global.7', '$r_packet172.8', '$delta_shell174.9', '$182call_function.13']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=POP_TOP(arg=None, lineno=83)
DEBUG:numba.core.byteflow:stack ['$184call_function.14']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=JUMP_FORWARD(arg=124, lineno=83)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=314, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=380 nstack_initial=0), State(pc_initial=314 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_FAST(arg=12, lineno=86)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_GLOBAL(arg=12, lineno=86)
DEBUG:numba.core.byteflow:stack ['$interaction_type190.0']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_ATTR(arg=23, lineno=86)
DEBUG:numba.core.byteflow:stack ['$interaction_type190.0', '$192load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=COMPARE_OP(arg=2, lineno=86)
DEBUG:numba.core.byteflow:stack ['$interaction_type190.0', '$194load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=POP_JUMP_IF_FALSE(arg=254, lineno=86)
DEBUG:numba.core.byteflow:stack ['$196compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=200, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=254, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=380 nstack_initial=0), State(pc_initial=314 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=254 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=380, inst=LOAD_GLOBAL(arg=7, lineno=120)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=382, inst=LOAD_ATTR(arg=8, lineno=120)
DEBUG:numba.core.byteflow:stack ['$380load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=POP_JUMP_IF_FALSE(arg=402, lineno=120)
DEBUG:numba.core.byteflow:stack ['$382load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=388, stack=(), blockstack=(), npush=0), Edge(pc=402, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=314 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=254 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=402 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_GLOBAL(arg=7, lineno=113)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=316, inst=LOAD_ATTR(arg=8, lineno=113)
DEBUG:numba.core.byteflow:stack ['$314load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=318, inst=POP_JUMP_IF_FALSE(arg=110, lineno=113)
DEBUG:numba.core.byteflow:stack ['$316load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=320, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=110, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=254 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=402 nstack_initial=0), State(pc_initial=320 nstack_initial=0), State(pc_initial=110 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_CONST(arg=2, lineno=87)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=0, lineno=87)
DEBUG:numba.core.byteflow:stack ['$const200.0']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=STORE_ATTR(arg=24, lineno=87)
DEBUG:numba.core.byteflow:stack ['$const200.0', '$r_packet202.1']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_GLOBAL(arg=18, lineno=89)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=90)
DEBUG:numba.core.byteflow:stack ['$206load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_FAST(arg=11, lineno=90)
DEBUG:numba.core.byteflow:stack ['$206load_global.2', '$r_packet208.3']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=1, lineno=90)
DEBUG:numba.core.byteflow:stack ['$206load_global.2', '$r_packet208.3', '$distance210.4']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=LOAD_ATTR(arg=19, lineno=90)
DEBUG:numba.core.byteflow:stack ['$206load_global.2', '$r_packet208.3', '$distance210.4', '$numba_model212.5']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=3, lineno=90)
DEBUG:numba.core.byteflow:stack ['$206load_global.2', '$r_packet208.3', '$distance210.4', '$214load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL_FUNCTION(arg=4, lineno=90)
DEBUG:numba.core.byteflow:stack ['$206load_global.2', '$r_packet208.3', '$distance210.4', '$214load_attr.6', '$estimators216.7']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=POP_TOP(arg=None, lineno=90)
DEBUG:numba.core.byteflow:stack ['$218call_function.8']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_GLOBAL(arg=25, lineno=92)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_FAST(arg=0, lineno=93)
DEBUG:numba.core.byteflow:stack ['$222load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_FAST(arg=1, lineno=94)
DEBUG:numba.core.byteflow:stack ['$222load_global.9', '$r_packet224.10']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=LOAD_ATTR(arg=19, lineno=94)
DEBUG:numba.core.byteflow:stack ['$222load_global.9', '$r_packet224.10', '$numba_model226.11']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_FAST(arg=5, lineno=95)
DEBUG:numba.core.byteflow:stack ['$222load_global.9', '$r_packet224.10', '$228load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_FAST(arg=2, lineno=96)
DEBUG:numba.core.byteflow:stack ['$222load_global.9', '$r_packet224.10', '$228load_attr.12', '$line_interaction_type230.13']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=CALL_FUNCTION(arg=4, lineno=96)
DEBUG:numba.core.byteflow:stack ['$222load_global.9', '$r_packet224.10', '$228load_attr.12', '$line_interaction_type230.13', '$numba_plasma232.14']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=POP_TOP(arg=None, lineno=96)
DEBUG:numba.core.byteflow:stack ['$234call_function.15']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=LOAD_GLOBAL(arg=6, lineno=98)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=0, lineno=99)
DEBUG:numba.core.byteflow:stack ['$238load_global.16']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_FAST(arg=4, lineno=99)
DEBUG:numba.core.byteflow:stack ['$238load_global.16', '$r_packet240.17']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=1, lineno=99)
DEBUG:numba.core.byteflow:stack ['$238load_global.16', '$r_packet240.17', '$vpacket_collection242.18']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=LOAD_FAST(arg=2, lineno=99)
DEBUG:numba.core.byteflow:stack ['$238load_global.16', '$r_packet240.17', '$vpacket_collection242.18', '$numba_model244.19']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=CALL_FUNCTION(arg=4, lineno=99)
DEBUG:numba.core.byteflow:stack ['$238load_global.16', '$r_packet240.17', '$vpacket_collection242.18', '$numba_model244.19', '$numba_plasma246.20']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=POP_TOP(arg=None, lineno=99)
DEBUG:numba.core.byteflow:stack ['$248call_function.21']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=JUMP_FORWARD(arg=60, lineno=99)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=314, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=254 nstack_initial=0), State(pc_initial=388 nstack_initial=0), State(pc_initial=402 nstack_initial=0), State(pc_initial=320 nstack_initial=0), State(pc_initial=110 nstack_initial=0), State(pc_initial=314 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=254, inst=LOAD_FAST(arg=12, lineno=102)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_GLOBAL(arg=12, lineno=102)
DEBUG:numba.core.byteflow:stack ['$interaction_type254.0']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=LOAD_ATTR(arg=26, lineno=102)
DEBUG:numba.core.byteflow:stack ['$interaction_type254.0', '$256load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=COMPARE_OP(arg=2, lineno=102)
DEBUG:numba.core.byteflow:stack ['$interaction_type254.0', '$258load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=POP_JUMP_IF_FALSE(arg=314, lineno=102)
DEBUG:numba.core.byteflow:stack ['$260compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=266, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=314, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=388 nstack_initial=0), State(pc_initial=402 nstack_initial=0), State(pc_initial=320 nstack_initial=0), State(pc_initial=110 nstack_initial=0), State(pc_initial=314 nstack_initial=0), State(pc_initial=266 nstack_initial=0), State(pc_initial=314 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=388, inst=LOAD_FAST(arg=6, lineno=122)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=390, inst=LOAD_FAST(arg=7, lineno=123)
DEBUG:numba.core.byteflow:stack ['$r_packet_track_nu388.0']
DEBUG:numba.core.byteflow:dispatch pc=392, inst=LOAD_FAST(arg=8, lineno=124)
DEBUG:numba.core.byteflow:stack ['$r_packet_track_nu388.0', '$r_packet_track_mu390.1']
DEBUG:numba.core.byteflow:dispatch pc=394, inst=LOAD_FAST(arg=9, lineno=125)
DEBUG:numba.core.byteflow:stack ['$r_packet_track_nu388.0', '$r_packet_track_mu390.1', '$r_packet_track_r392.2']
DEBUG:numba.core.byteflow:dispatch pc=396, inst=LOAD_FAST(arg=10, lineno=126)
DEBUG:numba.core.byteflow:stack ['$r_packet_track_nu388.0', '$r_packet_track_mu390.1', '$r_packet_track_r392.2', '$r_packet_track_interaction394.3']
DEBUG:numba.core.byteflow:dispatch pc=398, inst=BUILD_TUPLE(arg=5, lineno=126)
DEBUG:numba.core.byteflow:stack ['$r_packet_track_nu388.0', '$r_packet_track_mu390.1', '$r_packet_track_r392.2', '$r_packet_track_interaction394.3', '$r_packet_track_distance396.4']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=RETURN_VALUE(arg=None, lineno=126)
DEBUG:numba.core.byteflow:stack ['$398build_tuple.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=402 nstack_initial=0), State(pc_initial=320 nstack_initial=0), State(pc_initial=110 nstack_initial=0), State(pc_initial=314 nstack_initial=0), State(pc_initial=266 nstack_initial=0), State(pc_initial=314 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=402, inst=LOAD_CONST(arg=4, lineno=126)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=404, inst=RETURN_VALUE(arg=None, lineno=126)
DEBUG:numba.core.byteflow:stack ['$const402.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=320 nstack_initial=0), State(pc_initial=110 nstack_initial=0), State(pc_initial=314 nstack_initial=0), State(pc_initial=266 nstack_initial=0), State(pc_initial=314 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=320, inst=LOAD_FAST(arg=6, lineno=114)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=322, inst=LOAD_METHOD(arg=28, lineno=114)
DEBUG:numba.core.byteflow:stack ['$r_packet_track_nu320.0']
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_FAST(arg=0, lineno=114)
DEBUG:numba.core.byteflow:stack ['$322load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=LOAD_ATTR(arg=9, lineno=114)
DEBUG:numba.core.byteflow:stack ['$322load_method.1', '$r_packet324.2']
DEBUG:numba.core.byteflow:dispatch pc=328, inst=CALL_METHOD(arg=1, lineno=114)
DEBUG:numba.core.byteflow:stack ['$322load_method.1', '$326load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=330, inst=POP_TOP(arg=None, lineno=114)
DEBUG:numba.core.byteflow:stack ['$328call_method.4']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=LOAD_FAST(arg=7, lineno=115)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=334, inst=LOAD_METHOD(arg=28, lineno=115)
DEBUG:numba.core.byteflow:stack ['$r_packet_track_mu332.5']
DEBUG:numba.core.byteflow:dispatch pc=336, inst=LOAD_FAST(arg=0, lineno=115)
DEBUG:numba.core.byteflow:stack ['$334load_method.6']
DEBUG:numba.core.byteflow:dispatch pc=338, inst=LOAD_ATTR(arg=10, lineno=115)
DEBUG:numba.core.byteflow:stack ['$334load_method.6', '$r_packet336.7']
DEBUG:numba.core.byteflow:dispatch pc=340, inst=CALL_METHOD(arg=1, lineno=115)
DEBUG:numba.core.byteflow:stack ['$334load_method.6', '$338load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=POP_TOP(arg=None, lineno=115)
DEBUG:numba.core.byteflow:stack ['$340call_method.9']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=LOAD_FAST(arg=8, lineno=116)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=346, inst=LOAD_METHOD(arg=28, lineno=116)
DEBUG:numba.core.byteflow:stack ['$r_packet_track_r344.10']
DEBUG:numba.core.byteflow:dispatch pc=348, inst=LOAD_FAST(arg=0, lineno=116)
DEBUG:numba.core.byteflow:stack ['$346load_method.11']
DEBUG:numba.core.byteflow:dispatch pc=350, inst=LOAD_ATTR(arg=11, lineno=116)
DEBUG:numba.core.byteflow:stack ['$346load_method.11', '$r_packet348.12']
DEBUG:numba.core.byteflow:dispatch pc=352, inst=CALL_METHOD(arg=1, lineno=116)
DEBUG:numba.core.byteflow:stack ['$346load_method.11', '$350load_attr.13']
DEBUG:numba.core.byteflow:dispatch pc=354, inst=POP_TOP(arg=None, lineno=116)
DEBUG:numba.core.byteflow:stack ['$352call_method.14']
DEBUG:numba.core.byteflow:dispatch pc=356, inst=LOAD_FAST(arg=9, lineno=117)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=358, inst=LOAD_METHOD(arg=28, lineno=117)
DEBUG:numba.core.byteflow:stack ['$r_packet_track_interaction356.15']
DEBUG:numba.core.byteflow:dispatch pc=360, inst=LOAD_FAST(arg=12, lineno=117)
DEBUG:numba.core.byteflow:stack ['$358load_method.16']
DEBUG:numba.core.byteflow:dispatch pc=362, inst=CALL_METHOD(arg=1, lineno=117)
DEBUG:numba.core.byteflow:stack ['$358load_method.16', '$interaction_type360.17']
DEBUG:numba.core.byteflow:dispatch pc=364, inst=POP_TOP(arg=None, lineno=117)
DEBUG:numba.core.byteflow:stack ['$362call_method.18']
DEBUG:numba.core.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=10, lineno=118)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=368, inst=LOAD_METHOD(arg=28, lineno=118)
DEBUG:numba.core.byteflow:stack ['$r_packet_track_distance366.19']
DEBUG:numba.core.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=11, lineno=118)
DEBUG:numba.core.byteflow:stack ['$368load_method.20']
DEBUG:numba.core.byteflow:dispatch pc=372, inst=CALL_METHOD(arg=1, lineno=118)
DEBUG:numba.core.byteflow:stack ['$368load_method.20', '$distance370.21']
DEBUG:numba.core.byteflow:dispatch pc=374, inst=POP_TOP(arg=None, lineno=118)
DEBUG:numba.core.byteflow:stack ['$372call_method.22']
DEBUG:numba.core.byteflow:dispatch pc=376, inst=JUMP_ABSOLUTE(arg=110, lineno=118)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=110, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=110 nstack_initial=0), State(pc_initial=314 nstack_initial=0), State(pc_initial=266 nstack_initial=0), State(pc_initial=314 nstack_initial=0), State(pc_initial=110 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=314 nstack_initial=0), State(pc_initial=266 nstack_initial=0), State(pc_initial=314 nstack_initial=0), State(pc_initial=110 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=266 nstack_initial=0), State(pc_initial=314 nstack_initial=0), State(pc_initial=110 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=266, inst=LOAD_CONST(arg=3, lineno=103)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=268, inst=LOAD_FAST(arg=0, lineno=103)
DEBUG:numba.core.byteflow:stack ['$const266.0']
DEBUG:numba.core.byteflow:dispatch pc=270, inst=STORE_ATTR(arg=24, lineno=103)
DEBUG:numba.core.byteflow:stack ['$const266.0', '$r_packet268.1']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_GLOBAL(arg=18, lineno=105)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_FAST(arg=0, lineno=106)
DEBUG:numba.core.byteflow:stack ['$272load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=LOAD_FAST(arg=11, lineno=106)
DEBUG:numba.core.byteflow:stack ['$272load_global.2', '$r_packet274.3']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=LOAD_FAST(arg=1, lineno=106)
DEBUG:numba.core.byteflow:stack ['$272load_global.2', '$r_packet274.3', '$distance276.4']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=LOAD_ATTR(arg=19, lineno=106)
DEBUG:numba.core.byteflow:stack ['$272load_global.2', '$r_packet274.3', '$distance276.4', '$numba_model278.5']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=LOAD_FAST(arg=3, lineno=106)
DEBUG:numba.core.byteflow:stack ['$272load_global.2', '$r_packet274.3', '$distance276.4', '$280load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=CALL_FUNCTION(arg=4, lineno=106)
DEBUG:numba.core.byteflow:stack ['$272load_global.2', '$r_packet274.3', '$distance276.4', '$280load_attr.6', '$estimators282.7']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=POP_TOP(arg=None, lineno=106)
DEBUG:numba.core.byteflow:stack ['$284call_function.8']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=LOAD_GLOBAL(arg=27, lineno=108)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=290, inst=LOAD_FAST(arg=0, lineno=108)
DEBUG:numba.core.byteflow:stack ['$288load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=1, lineno=108)
DEBUG:numba.core.byteflow:stack ['$288load_global.9', '$r_packet290.10']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_ATTR(arg=19, lineno=108)
DEBUG:numba.core.byteflow:stack ['$288load_global.9', '$r_packet290.10', '$numba_model292.11']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=CALL_FUNCTION(arg=2, lineno=108)
DEBUG:numba.core.byteflow:stack ['$288load_global.9', '$r_packet290.10', '$294load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=298, inst=POP_TOP(arg=None, lineno=108)
DEBUG:numba.core.byteflow:stack ['$296call_function.13']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=LOAD_GLOBAL(arg=6, lineno=110)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=0, lineno=111)
DEBUG:numba.core.byteflow:stack ['$300load_global.14']
DEBUG:numba.core.byteflow:dispatch pc=304, inst=LOAD_FAST(arg=4, lineno=111)
DEBUG:numba.core.byteflow:stack ['$300load_global.14', '$r_packet302.15']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=LOAD_FAST(arg=1, lineno=111)
DEBUG:numba.core.byteflow:stack ['$300load_global.14', '$r_packet302.15', '$vpacket_collection304.16']
DEBUG:numba.core.byteflow:dispatch pc=308, inst=LOAD_FAST(arg=2, lineno=111)
DEBUG:numba.core.byteflow:stack ['$300load_global.14', '$r_packet302.15', '$vpacket_collection304.16', '$numba_model306.17']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=CALL_FUNCTION(arg=4, lineno=111)
DEBUG:numba.core.byteflow:stack ['$300load_global.14', '$r_packet302.15', '$vpacket_collection304.16', '$numba_model306.17', '$numba_plasma308.18']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=POP_TOP(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$310call_function.19']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=314, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=314 nstack_initial=0), State(pc_initial=110 nstack_initial=0), State(pc_initial=314 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=110 nstack_initial=0), State(pc_initial=314 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=314 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=110 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set(),
             State(pc_initial=254 nstack_initial=0): set(),
             State(pc_initial=266 nstack_initial=0): set(),
             State(pc_initial=314 nstack_initial=0): set(),
             State(pc_initial=320 nstack_initial=0): set(),
             State(pc_initial=378 nstack_initial=0): set(),
             State(pc_initial=380 nstack_initial=0): set(),
             State(pc_initial=388 nstack_initial=0): set(),
             State(pc_initial=402 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'pred': '$10load_attr.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={14: (), 26: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$14load_global.0'}), (16, {'res': '$r_packet16.1'}), (18, {'res': '$numba_model18.2'}), (20, {'func': '$14load_global.0', 'args': ['$r_packet16.1', '$numba_model18.2'], 'res': '$20call_function.3'}), (24, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$26load_global.0'}), (28, {'res': '$r_packet28.1'}), (30, {'res': '$numba_model30.2'}), (32, {'func': '$26load_global.0', 'args': ['$r_packet28.1', '$numba_model30.2'], 'res': '$32call_function.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$r_packet36.0'}), (38, {'item': '$r_packet36.0', 'res': '$38load_method.1'}), (40, {'res': '$numba_plasma40.2'}), (42, {'res': '$numba_model42.3'}), (44, {'func': '$38load_method.1', 'args': ['$numba_plasma40.2', '$numba_model42.3'], 'res': '$44call_method.4'}), (48, {'res': '$48load_global.5'}), (50, {'res': '$r_packet50.6'}), (52, {'res': '$vpacket_collection52.7'}), (54, {'res': '$numba_model54.8'}), (56, {'res': '$numba_plasma56.9'}), (58, {'func': '$48load_global.5', 'args': ['$r_packet50.6', '$vpacket_collection52.7', '$numba_model54.8', '$numba_plasma56.9'], 'res': '$58call_function.10'}), (62, {'res': '$62load_global.11'}), (64, {'item': '$62load_global.11', 'res': '$64load_attr.12'}), (66, {'pred': '$64load_attr.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 106: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$r_packet68.0'}), (70, {'item': '$r_packet68.0', 'res': '$70load_attr.1'}), (72, {'items': ['$70load_attr.1'], 'res': '$72build_list.2'}), (74, {'value': '$72build_list.2'}), (76, {'res': '$r_packet76.3'}), (78, {'item': '$r_packet76.3', 'res': '$78load_attr.4'}), (80, {'items': ['$78load_attr.4'], 'res': '$80build_list.5'}), (82, {'value': '$80build_list.5'}), (84, {'res': '$r_packet84.6'}), (86, {'item': '$r_packet84.6', 'res': '$86load_attr.7'}), (88, {'items': ['$86load_attr.7'], 'res': '$88build_list.8'}), (90, {'value': '$88build_list.8'}), (92, {'res': '$92load_global.9'}), (94, {'item': '$92load_global.9', 'res': '$94load_attr.10'}), (96, {'items': ['$94load_attr.10'], 'res': '$96build_list.11'}), (98, {'value': '$96build_list.11'}), (100, {'res': '$const100.12'}), (102, {'items': ['$const100.12'], 'res': '$102build_list.13'}), (104, {'value': '$102build_list.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={110: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=110 nstack_initial=0):
AdaptBlockInfo(insts=((110, {'res': '$r_packet110.0'}), (112, {'item': '$r_packet110.0', 'res': '$112load_attr.1'}), (114, {'res': '$114load_global.2'}), (116, {'item': '$114load_global.2', 'res': '$116load_attr.3'}), (118, {'lhs': '$112load_attr.1', 'rhs': '$116load_attr.3', 'res': '$118compare_op.4'}), (120, {'pred': '$118compare_op.4'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={124: (), 378: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$124load_global.0'}), (126, {'res': '$r_packet126.1'}), (128, {'res': '$numba_model128.2'}), (130, {'res': '$numba_plasma130.3'}), (132, {'res': '$estimators132.4'}), (134, {'func': '$124load_global.0', 'args': ['$r_packet126.1', '$numba_model128.2', '$numba_plasma130.3', '$estimators132.4'], 'res': '$134call_function.5'}), (136, {'iterable': '$134call_function.5', 'stores': ['$136unpack_sequence.6', '$136unpack_sequence.7', '$136unpack_sequence.8'], 'tupleobj': '$136unpack_sequence.9'}), (138, {'value': '$136unpack_sequence.6'}), (140, {'value': '$136unpack_sequence.7'}), (142, {'value': '$136unpack_sequence.8'}), (144, {'res': '$interaction_type144.10'}), (146, {'res': '$146load_global.11'}), (148, {'item': '$146load_global.11', 'res': '$148load_attr.12'}), (150, {'lhs': '$interaction_type144.10', 'rhs': '$148load_attr.12', 'res': '$150compare_op.13'}), (152, {'pred': '$150compare_op.13'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={154: (), 190: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$154load_global.0'}), (156, {'res': '$r_packet156.1'}), (158, {'res': '$distance158.2'}), (160, {'res': '$numba_model160.3'}), (162, {'item': '$numba_model160.3', 'res': '$162load_attr.4'}), (164, {'res': '$estimators164.5'}), (166, {'func': '$154load_global.0', 'args': ['$r_packet156.1', '$distance158.2', '$162load_attr.4', '$estimators164.5'], 'res': '$166call_function.6'}), (170, {'res': '$170load_global.7'}), (172, {'res': '$r_packet172.8'}), (174, {'res': '$delta_shell174.9'}), (176, {'res': '$176load_global.10'}), (178, {'res': '$numba_model178.11'}), (180, {'item': '$numba_model178.11', 'res': '$180load_attr.12'}), (182, {'func': '$176load_global.10', 'args': ['$180load_attr.12'], 'res': '$182call_function.13'}), (184, {'func': '$170load_global.7', 'args': ['$r_packet172.8', '$delta_shell174.9', '$182call_function.13'], 'res': '$184call_function.14'}), (188, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={314: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$interaction_type190.0'}), (192, {'res': '$192load_global.1'}), (194, {'item': '$192load_global.1', 'res': '$194load_attr.2'}), (196, {'lhs': '$interaction_type190.0', 'rhs': '$194load_attr.2', 'res': '$196compare_op.3'}), (198, {'pred': '$196compare_op.3'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={200: (), 254: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'res': '$const200.0'}), (202, {'res': '$r_packet202.1'}), (204, {'target': '$r_packet202.1', 'value': '$const200.0'}), (206, {'res': '$206load_global.2'}), (208, {'res': '$r_packet208.3'}), (210, {'res': '$distance210.4'}), (212, {'res': '$numba_model212.5'}), (214, {'item': '$numba_model212.5', 'res': '$214load_attr.6'}), (216, {'res': '$estimators216.7'}), (218, {'func': '$206load_global.2', 'args': ['$r_packet208.3', '$distance210.4', '$214load_attr.6', '$estimators216.7'], 'res': '$218call_function.8'}), (222, {'res': '$222load_global.9'}), (224, {'res': '$r_packet224.10'}), (226, {'res': '$numba_model226.11'}), (228, {'item': '$numba_model226.11', 'res': '$228load_attr.12'}), (230, {'res': '$line_interaction_type230.13'}), (232, {'res': '$numba_plasma232.14'}), (234, {'func': '$222load_global.9', 'args': ['$r_packet224.10', '$228load_attr.12', '$line_interaction_type230.13', '$numba_plasma232.14'], 'res': '$234call_function.15'}), (238, {'res': '$238load_global.16'}), (240, {'res': '$r_packet240.17'}), (242, {'res': '$vpacket_collection242.18'}), (244, {'res': '$numba_model244.19'}), (246, {'res': '$numba_plasma246.20'}), (248, {'func': '$238load_global.16', 'args': ['$r_packet240.17', '$vpacket_collection242.18', '$numba_model244.19', '$numba_plasma246.20'], 'res': '$248call_function.21'}), (252, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={314: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=254 nstack_initial=0):
AdaptBlockInfo(insts=((254, {'res': '$interaction_type254.0'}), (256, {'res': '$256load_global.1'}), (258, {'item': '$256load_global.1', 'res': '$258load_attr.2'}), (260, {'lhs': '$interaction_type254.0', 'rhs': '$258load_attr.2', 'res': '$260compare_op.3'}), (262, {'pred': '$260compare_op.3'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={266: (), 314: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=266 nstack_initial=0):
AdaptBlockInfo(insts=((266, {'res': '$const266.0'}), (268, {'res': '$r_packet268.1'}), (270, {'target': '$r_packet268.1', 'value': '$const266.0'}), (272, {'res': '$272load_global.2'}), (274, {'res': '$r_packet274.3'}), (276, {'res': '$distance276.4'}), (278, {'res': '$numba_model278.5'}), (280, {'item': '$numba_model278.5', 'res': '$280load_attr.6'}), (282, {'res': '$estimators282.7'}), (284, {'func': '$272load_global.2', 'args': ['$r_packet274.3', '$distance276.4', '$280load_attr.6', '$estimators282.7'], 'res': '$284call_function.8'}), (288, {'res': '$288load_global.9'}), (290, {'res': '$r_packet290.10'}), (292, {'res': '$numba_model292.11'}), (294, {'item': '$numba_model292.11', 'res': '$294load_attr.12'}), (296, {'func': '$288load_global.9', 'args': ['$r_packet290.10', '$294load_attr.12'], 'res': '$296call_function.13'}), (300, {'res': '$300load_global.14'}), (302, {'res': '$r_packet302.15'}), (304, {'res': '$vpacket_collection304.16'}), (306, {'res': '$numba_model306.17'}), (308, {'res': '$numba_plasma308.18'}), (310, {'func': '$300load_global.14', 'args': ['$r_packet302.15', '$vpacket_collection304.16', '$numba_model306.17', '$numba_plasma308.18'], 'res': '$310call_function.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={314: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=314 nstack_initial=0):
AdaptBlockInfo(insts=((314, {'res': '$314load_global.0'}), (316, {'item': '$314load_global.0', 'res': '$316load_attr.1'}), (318, {'pred': '$316load_attr.1'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={320: (), 110: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=320 nstack_initial=0):
AdaptBlockInfo(insts=((320, {'res': '$r_packet_track_nu320.0'}), (322, {'item': '$r_packet_track_nu320.0', 'res': '$322load_method.1'}), (324, {'res': '$r_packet324.2'}), (326, {'item': '$r_packet324.2', 'res': '$326load_attr.3'}), (328, {'func': '$322load_method.1', 'args': ['$326load_attr.3'], 'res': '$328call_method.4'}), (332, {'res': '$r_packet_track_mu332.5'}), (334, {'item': '$r_packet_track_mu332.5', 'res': '$334load_method.6'}), (336, {'res': '$r_packet336.7'}), (338, {'item': '$r_packet336.7', 'res': '$338load_attr.8'}), (340, {'func': '$334load_method.6', 'args': ['$338load_attr.8'], 'res': '$340call_method.9'}), (344, {'res': '$r_packet_track_r344.10'}), (346, {'item': '$r_packet_track_r344.10', 'res': '$346load_method.11'}), (348, {'res': '$r_packet348.12'}), (350, {'item': '$r_packet348.12', 'res': '$350load_attr.13'}), (352, {'func': '$346load_method.11', 'args': ['$350load_attr.13'], 'res': '$352call_method.14'}), (356, {'res': '$r_packet_track_interaction356.15'}), (358, {'item': '$r_packet_track_interaction356.15', 'res': '$358load_method.16'}), (360, {'res': '$interaction_type360.17'}), (362, {'func': '$358load_method.16', 'args': ['$interaction_type360.17'], 'res': '$362call_method.18'}), (366, {'res': '$r_packet_track_distance366.19'}), (368, {'item': '$r_packet_track_distance366.19', 'res': '$368load_method.20'}), (370, {'res': '$distance370.21'}), (372, {'func': '$368load_method.20', 'args': ['$distance370.21'], 'res': '$372call_method.22'}), (376, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={110: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=378 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 380, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={380: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=380 nstack_initial=0):
AdaptBlockInfo(insts=((380, {'res': '$380load_global.0'}), (382, {'item': '$380load_global.0', 'res': '$382load_attr.1'}), (384, {'pred': '$382load_attr.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={388: (), 402: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=388 nstack_initial=0):
AdaptBlockInfo(insts=((388, {'res': '$r_packet_track_nu388.0'}), (390, {'res': '$r_packet_track_mu390.1'}), (392, {'res': '$r_packet_track_r392.2'}), (394, {'res': '$r_packet_track_interaction394.3'}), (396, {'res': '$r_packet_track_distance396.4'}), (398, {'items': ['$r_packet_track_nu388.0', '$r_packet_track_mu390.1', '$r_packet_track_r392.2', '$r_packet_track_interaction394.3', '$r_packet_track_distance396.4'], 'res': '$398build_tuple.5'}), (400, {'retval': '$398build_tuple.5', 'castval': '$400return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=402 nstack_initial=0):
AdaptBlockInfo(insts=((402, {'res': '$const402.0'}), (404, {'retval': '$const402.0', 'castval': '$404return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    numba_model = arg(1, name=numba_model)   ['numba_model']
    numba_plasma = arg(2, name=numba_plasma) ['numba_plasma']
    estimators = arg(3, name=estimators)     ['estimators']
    vpacket_collection = arg(4, name=vpacket_collection) ['vpacket_collection']
    $2load_global.0 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=line_interaction_type) ['$2load_global.0', '$4load_attr.1']
    line_interaction_type = $4load_attr.1    ['$4load_attr.1', 'line_interaction_type']
    $8load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=full_relativity) ['$10load_attr.3', '$8load_global.2']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
    $12pred = call bool12($10load_attr.3, func=bool12, args=(Var($10load_attr.3, single_packet_loop.py:56),), kws=(), vararg=None) ['$10load_attr.3', '$12pred', 'bool12']
    branch $12pred, 14, 26                   ['$12pred']
label 14:
    $14load_global.0 = global(set_packet_props_full_relativity: CPUDispatcher(<function set_packet_props_full_relativity at 0x7f6e4a0beef0>)) ['$14load_global.0']
    $20call_function.3 = call $14load_global.0(r_packet, numba_model, func=$14load_global.0, args=[Var(r_packet, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54)], kws=(), vararg=None) ['$14load_global.0', '$20call_function.3', 'numba_model', 'r_packet']
    jump 36                                  []
label 26:
    $26load_global.0 = global(set_packet_props_partial_relativity: CPUDispatcher(<function set_packet_props_partial_relativity at 0x7f6e4a0bee60>)) ['$26load_global.0']
    $32call_function.3 = call $26load_global.0(r_packet, numba_model, func=$26load_global.0, args=[Var(r_packet, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54)], kws=(), vararg=None) ['$26load_global.0', '$32call_function.3', 'numba_model', 'r_packet']
    jump 36                                  []
label 36:
    $38load_method.1 = getattr(value=r_packet, attr=initialize_line_id) ['$38load_method.1', 'r_packet']
    $44call_method.4 = call $38load_method.1(numba_plasma, numba_model, func=$38load_method.1, args=[Var(numba_plasma, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54)], kws=(), vararg=None) ['$38load_method.1', '$44call_method.4', 'numba_model', 'numba_plasma']
    $48load_global.5 = global(trace_vpacket_volley: CPUDispatcher(<function trace_vpacket_volley at 0x7f6e4a0be7a0>)) ['$48load_global.5']
    $58call_function.10 = call $48load_global.5(r_packet, vpacket_collection, numba_model, numba_plasma, func=$48load_global.5, args=[Var(r_packet, single_packet_loop.py:54), Var(vpacket_collection, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54), Var(numba_plasma, single_packet_loop.py:54)], kws=(), vararg=None) ['$48load_global.5', '$58call_function.10', 'numba_model', 'numba_plasma', 'r_packet', 'vpacket_collection']
    $62load_global.11 = global(mc_logger: <module 'tardis.montecarlo.montecarlo_numba.montecarlo_logger' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/montecarlo_logger.py'>) ['$62load_global.11']
    $64load_attr.12 = getattr(value=$62load_global.11, attr=DEBUG_MODE) ['$62load_global.11', '$64load_attr.12']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64load_attr.12, func=bool66, args=(Var($64load_attr.12, single_packet_loop.py:66),), kws=(), vararg=None) ['$64load_attr.12', '$66pred', 'bool66']
    branch $66pred, 68, 106                  ['$66pred']
label 68:
    $70load_attr.1 = getattr(value=r_packet, attr=nu) ['$70load_attr.1', 'r_packet']
    $72build_list.2 = build_list(items=[Var($70load_attr.1, single_packet_loop.py:67)]) ['$70load_attr.1', '$72build_list.2']
    r_packet_track_nu = $72build_list.2      ['$72build_list.2', 'r_packet_track_nu']
    $78load_attr.4 = getattr(value=r_packet, attr=mu) ['$78load_attr.4', 'r_packet']
    $80build_list.5 = build_list(items=[Var($78load_attr.4, single_packet_loop.py:68)]) ['$78load_attr.4', '$80build_list.5']
    r_packet_track_mu = $80build_list.5      ['$80build_list.5', 'r_packet_track_mu']
    $86load_attr.7 = getattr(value=r_packet, attr=r) ['$86load_attr.7', 'r_packet']
    $88build_list.8 = build_list(items=[Var($86load_attr.7, single_packet_loop.py:69)]) ['$86load_attr.7', '$88build_list.8']
    r_packet_track_r = $88build_list.8       ['$88build_list.8', 'r_packet_track_r']
    $92load_global.9 = global(InteractionType: <enum 'InteractionType'>) ['$92load_global.9']
    $94load_attr.10 = getattr(value=$92load_global.9, attr=BOUNDARY) ['$92load_global.9', '$94load_attr.10']
    $96build_list.11 = build_list(items=[Var($94load_attr.10, single_packet_loop.py:70)]) ['$94load_attr.10', '$96build_list.11']
    r_packet_track_interaction = $96build_list.11 ['$96build_list.11', 'r_packet_track_interaction']
    $const100.12 = const(float, 0.0)         ['$const100.12']
    $102build_list.13 = build_list(items=[Var($const100.12, single_packet_loop.py:71)]) ['$102build_list.13', '$const100.12']
    r_packet_track_distance = $102build_list.13 ['$102build_list.13', 'r_packet_track_distance']
    jump 106                                 []
label 106:
    jump 110                                 []
label 110:
    $112load_attr.1 = getattr(value=r_packet, attr=status) ['$112load_attr.1', 'r_packet']
    $114load_global.2 = global(PacketStatus: <enum 'PacketStatus'>) ['$114load_global.2']
    $116load_attr.3 = getattr(value=$114load_global.2, attr=IN_PROCESS) ['$114load_global.2', '$116load_attr.3']
    $118compare_op.4 = $112load_attr.1 == $116load_attr.3 ['$112load_attr.1', '$116load_attr.3', '$118compare_op.4']
    bool120 = global(bool: <class 'bool'>)   ['bool120']
    $120pred = call bool120($118compare_op.4, func=bool120, args=(Var($118compare_op.4, single_packet_loop.py:73),), kws=(), vararg=None) ['$118compare_op.4', '$120pred', 'bool120']
    branch $120pred, 124, 378                ['$120pred']
label 124:
    $124load_global.0 = global(trace_packet: CPUDispatcher(<function trace_packet at 0x7f6e4a0ff3b0>)) ['$124load_global.0']
    $134call_function.5 = call $124load_global.0(r_packet, numba_model, numba_plasma, estimators, func=$124load_global.0, args=[Var(r_packet, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54), Var(numba_plasma, single_packet_loop.py:54), Var(estimators, single_packet_loop.py:54)], kws=(), vararg=None) ['$124load_global.0', '$134call_function.5', 'estimators', 'numba_model', 'numba_plasma', 'r_packet']
    $136unpack_sequence.9 = exhaust_iter(value=$134call_function.5, count=3) ['$134call_function.5', '$136unpack_sequence.9']
    $136unpack_sequence.6 = static_getitem(value=$136unpack_sequence.9, index=0, index_var=None) ['$136unpack_sequence.6', '$136unpack_sequence.9']
    $136unpack_sequence.7 = static_getitem(value=$136unpack_sequence.9, index=1, index_var=None) ['$136unpack_sequence.7', '$136unpack_sequence.9']
    $136unpack_sequence.8 = static_getitem(value=$136unpack_sequence.9, index=2, index_var=None) ['$136unpack_sequence.8', '$136unpack_sequence.9']
    distance = $136unpack_sequence.6         ['$136unpack_sequence.6', 'distance']
    interaction_type = $136unpack_sequence.7 ['$136unpack_sequence.7', 'interaction_type']
    delta_shell = $136unpack_sequence.8      ['$136unpack_sequence.8', 'delta_shell']
    $146load_global.11 = global(InteractionType: <enum 'InteractionType'>) ['$146load_global.11']
    $148load_attr.12 = getattr(value=$146load_global.11, attr=BOUNDARY) ['$146load_global.11', '$148load_attr.12']
    $150compare_op.13 = interaction_type == $148load_attr.12 ['$148load_attr.12', '$150compare_op.13', 'interaction_type']
    bool152 = global(bool: <class 'bool'>)   ['bool152']
    $152pred = call bool152($150compare_op.13, func=bool152, args=(Var($150compare_op.13, single_packet_loop.py:78),), kws=(), vararg=None) ['$150compare_op.13', '$152pred', 'bool152']
    branch $152pred, 154, 190                ['$152pred']
label 154:
    $154load_global.0 = global(move_r_packet: CPUDispatcher(<function move_r_packet at 0x7f6e4a0ff680>)) ['$154load_global.0']
    $162load_attr.4 = getattr(value=numba_model, attr=time_explosion) ['$162load_attr.4', 'numba_model']
    $166call_function.6 = call $154load_global.0(r_packet, distance, $162load_attr.4, estimators, func=$154load_global.0, args=[Var(r_packet, single_packet_loop.py:54), Var(distance, single_packet_loop.py:75), Var($162load_attr.4, single_packet_loop.py:80), Var(estimators, single_packet_loop.py:54)], kws=(), vararg=None) ['$154load_global.0', '$162load_attr.4', '$166call_function.6', 'distance', 'estimators', 'r_packet']
    $170load_global.7 = global(move_packet_across_shell_boundary: CPUDispatcher(<function move_packet_across_shell_boundary at 0x7f6e4a0ffef0>)) ['$170load_global.7']
    $176load_global.10 = global(len: <built-in function len>) ['$176load_global.10']
    $180load_attr.12 = getattr(value=numba_model, attr=r_inner) ['$180load_attr.12', 'numba_model']
    $182call_function.13 = call $176load_global.10($180load_attr.12, func=$176load_global.10, args=[Var($180load_attr.12, single_packet_loop.py:83)], kws=(), vararg=None) ['$176load_global.10', '$180load_attr.12', '$182call_function.13']
    $184call_function.14 = call $170load_global.7(r_packet, delta_shell, $182call_function.13, func=$170load_global.7, args=[Var(r_packet, single_packet_loop.py:54), Var(delta_shell, single_packet_loop.py:75), Var($182call_function.13, single_packet_loop.py:83)], kws=(), vararg=None) ['$170load_global.7', '$182call_function.13', '$184call_function.14', 'delta_shell', 'r_packet']
    jump 314                                 []
label 190:
    $192load_global.1 = global(InteractionType: <enum 'InteractionType'>) ['$192load_global.1']
    $194load_attr.2 = getattr(value=$192load_global.1, attr=LINE) ['$192load_global.1', '$194load_attr.2']
    $196compare_op.3 = interaction_type == $194load_attr.2 ['$194load_attr.2', '$196compare_op.3', 'interaction_type']
    bool198 = global(bool: <class 'bool'>)   ['bool198']
    $198pred = call bool198($196compare_op.3, func=bool198, args=(Var($196compare_op.3, single_packet_loop.py:86),), kws=(), vararg=None) ['$196compare_op.3', '$198pred', 'bool198']
    branch $198pred, 200, 254                ['$198pred']
label 200:
    $const200.0 = const(int, 2)              ['$const200.0']
    (r_packet).last_interaction_type = $const200.0 ['$const200.0', 'r_packet']
    $206load_global.2 = global(move_r_packet: CPUDispatcher(<function move_r_packet at 0x7f6e4a0ff680>)) ['$206load_global.2']
    $214load_attr.6 = getattr(value=numba_model, attr=time_explosion) ['$214load_attr.6', 'numba_model']
    $218call_function.8 = call $206load_global.2(r_packet, distance, $214load_attr.6, estimators, func=$206load_global.2, args=[Var(r_packet, single_packet_loop.py:54), Var(distance, single_packet_loop.py:75), Var($214load_attr.6, single_packet_loop.py:90), Var(estimators, single_packet_loop.py:54)], kws=(), vararg=None) ['$206load_global.2', '$214load_attr.6', '$218call_function.8', 'distance', 'estimators', 'r_packet']
    $222load_global.9 = global(line_scatter: CPUDispatcher(<function line_scatter at 0x7f6e4a0a9cb0>)) ['$222load_global.9']
    $228load_attr.12 = getattr(value=numba_model, attr=time_explosion) ['$228load_attr.12', 'numba_model']
    $234call_function.15 = call $222load_global.9(r_packet, $228load_attr.12, line_interaction_type, numba_plasma, func=$222load_global.9, args=[Var(r_packet, single_packet_loop.py:54), Var($228load_attr.12, single_packet_loop.py:94), Var(line_interaction_type, single_packet_loop.py:54), Var(numba_plasma, single_packet_loop.py:54)], kws=(), vararg=None) ['$222load_global.9', '$228load_attr.12', '$234call_function.15', 'line_interaction_type', 'numba_plasma', 'r_packet']
    $238load_global.16 = global(trace_vpacket_volley: CPUDispatcher(<function trace_vpacket_volley at 0x7f6e4a0be7a0>)) ['$238load_global.16']
    $248call_function.21 = call $238load_global.16(r_packet, vpacket_collection, numba_model, numba_plasma, func=$238load_global.16, args=[Var(r_packet, single_packet_loop.py:54), Var(vpacket_collection, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54), Var(numba_plasma, single_packet_loop.py:54)], kws=(), vararg=None) ['$238load_global.16', '$248call_function.21', 'numba_model', 'numba_plasma', 'r_packet', 'vpacket_collection']
    jump 314                                 []
label 254:
    $256load_global.1 = global(InteractionType: <enum 'InteractionType'>) ['$256load_global.1']
    $258load_attr.2 = getattr(value=$256load_global.1, attr=ESCATTERING) ['$256load_global.1', '$258load_attr.2']
    $260compare_op.3 = interaction_type == $258load_attr.2 ['$258load_attr.2', '$260compare_op.3', 'interaction_type']
    bool262 = global(bool: <class 'bool'>)   ['bool262']
    $262pred = call bool262($260compare_op.3, func=bool262, args=(Var($260compare_op.3, single_packet_loop.py:102),), kws=(), vararg=None) ['$260compare_op.3', '$262pred', 'bool262']
    branch $262pred, 266, 314                ['$262pred']
label 266:
    $const266.0 = const(int, 1)              ['$const266.0']
    (r_packet).last_interaction_type = $const266.0 ['$const266.0', 'r_packet']
    $272load_global.2 = global(move_r_packet: CPUDispatcher(<function move_r_packet at 0x7f6e4a0ff680>)) ['$272load_global.2']
    $280load_attr.6 = getattr(value=numba_model, attr=time_explosion) ['$280load_attr.6', 'numba_model']
    $284call_function.8 = call $272load_global.2(r_packet, distance, $280load_attr.6, estimators, func=$272load_global.2, args=[Var(r_packet, single_packet_loop.py:54), Var(distance, single_packet_loop.py:75), Var($280load_attr.6, single_packet_loop.py:106), Var(estimators, single_packet_loop.py:54)], kws=(), vararg=None) ['$272load_global.2', '$280load_attr.6', '$284call_function.8', 'distance', 'estimators', 'r_packet']
    $288load_global.9 = global(thomson_scatter: CPUDispatcher(<function thomson_scatter at 0x7f6e4a0a9ef0>)) ['$288load_global.9']
    $294load_attr.12 = getattr(value=numba_model, attr=time_explosion) ['$294load_attr.12', 'numba_model']
    $296call_function.13 = call $288load_global.9(r_packet, $294load_attr.12, func=$288load_global.9, args=[Var(r_packet, single_packet_loop.py:54), Var($294load_attr.12, single_packet_loop.py:108)], kws=(), vararg=None) ['$288load_global.9', '$294load_attr.12', '$296call_function.13', 'r_packet']
    $300load_global.14 = global(trace_vpacket_volley: CPUDispatcher(<function trace_vpacket_volley at 0x7f6e4a0be7a0>)) ['$300load_global.14']
    $310call_function.19 = call $300load_global.14(r_packet, vpacket_collection, numba_model, numba_plasma, func=$300load_global.14, args=[Var(r_packet, single_packet_loop.py:54), Var(vpacket_collection, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54), Var(numba_plasma, single_packet_loop.py:54)], kws=(), vararg=None) ['$300load_global.14', '$310call_function.19', 'numba_model', 'numba_plasma', 'r_packet', 'vpacket_collection']
    jump 314                                 []
label 314:
    $314load_global.0 = global(mc_logger: <module 'tardis.montecarlo.montecarlo_numba.montecarlo_logger' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/montecarlo_logger.py'>) ['$314load_global.0']
    $316load_attr.1 = getattr(value=$314load_global.0, attr=DEBUG_MODE) ['$314load_global.0', '$316load_attr.1']
    bool318 = global(bool: <class 'bool'>)   ['bool318']
    $318pred = call bool318($316load_attr.1, func=bool318, args=(Var($316load_attr.1, single_packet_loop.py:113),), kws=(), vararg=None) ['$316load_attr.1', '$318pred', 'bool318']
    branch $318pred, 320, 110                ['$318pred']
label 320:
    $322load_method.1 = getattr(value=r_packet_track_nu, attr=append) ['$322load_method.1', 'r_packet_track_nu']
    $326load_attr.3 = getattr(value=r_packet, attr=nu) ['$326load_attr.3', 'r_packet']
    $328call_method.4 = call $322load_method.1($326load_attr.3, func=$322load_method.1, args=[Var($326load_attr.3, single_packet_loop.py:114)], kws=(), vararg=None) ['$322load_method.1', '$326load_attr.3', '$328call_method.4']
    $334load_method.6 = getattr(value=r_packet_track_mu, attr=append) ['$334load_method.6', 'r_packet_track_mu']
    $338load_attr.8 = getattr(value=r_packet, attr=mu) ['$338load_attr.8', 'r_packet']
    $340call_method.9 = call $334load_method.6($338load_attr.8, func=$334load_method.6, args=[Var($338load_attr.8, single_packet_loop.py:115)], kws=(), vararg=None) ['$334load_method.6', '$338load_attr.8', '$340call_method.9']
    $346load_method.11 = getattr(value=r_packet_track_r, attr=append) ['$346load_method.11', 'r_packet_track_r']
    $350load_attr.13 = getattr(value=r_packet, attr=r) ['$350load_attr.13', 'r_packet']
    $352call_method.14 = call $346load_method.11($350load_attr.13, func=$346load_method.11, args=[Var($350load_attr.13, single_packet_loop.py:116)], kws=(), vararg=None) ['$346load_method.11', '$350load_attr.13', '$352call_method.14']
    $358load_method.16 = getattr(value=r_packet_track_interaction, attr=append) ['$358load_method.16', 'r_packet_track_interaction']
    $362call_method.18 = call $358load_method.16(interaction_type, func=$358load_method.16, args=[Var(interaction_type, single_packet_loop.py:75)], kws=(), vararg=None) ['$358load_method.16', '$362call_method.18', 'interaction_type']
    $368load_method.20 = getattr(value=r_packet_track_distance, attr=append) ['$368load_method.20', 'r_packet_track_distance']
    $372call_method.22 = call $368load_method.20(distance, func=$368load_method.20, args=[Var(distance, single_packet_loop.py:75)], kws=(), vararg=None) ['$368load_method.20', '$372call_method.22', 'distance']
    jump 110                                 []
label 378:
    jump 380                                 []
label 380:
    $380load_global.0 = global(mc_logger: <module 'tardis.montecarlo.montecarlo_numba.montecarlo_logger' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/montecarlo_logger.py'>) ['$380load_global.0']
    $382load_attr.1 = getattr(value=$380load_global.0, attr=DEBUG_MODE) ['$380load_global.0', '$382load_attr.1']
    bool384 = global(bool: <class 'bool'>)   ['bool384']
    $384pred = call bool384($382load_attr.1, func=bool384, args=(Var($382load_attr.1, single_packet_loop.py:120),), kws=(), vararg=None) ['$382load_attr.1', '$384pred', 'bool384']
    branch $384pred, 388, 402                ['$384pred']
label 388:
    $398build_tuple.5 = build_tuple(items=[Var(r_packet_track_nu, single_packet_loop.py:67), Var(r_packet_track_mu, single_packet_loop.py:68), Var(r_packet_track_r, single_packet_loop.py:69), Var(r_packet_track_interaction, single_packet_loop.py:70), Var(r_packet_track_distance, single_packet_loop.py:71)]) ['$398build_tuple.5', 'r_packet_track_distance', 'r_packet_track_interaction', 'r_packet_track_mu', 'r_packet_track_nu', 'r_packet_track_r']
    $400return_value.6 = cast(value=$398build_tuple.5) ['$398build_tuple.5', '$400return_value.6']
    return $400return_value.6                ['$400return_value.6']
label 402:
    $const402.0 = const(NoneType, None)      ['$const402.0']
    $404return_value.1 = cast(value=$const402.0) ['$404return_value.1', '$const402.0']
    return $404return_value.1                ['$404return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = arg(4, name=vpacket_collection)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=line_interaction_type)
DEBUG:numba.core.ssa:on stmt: line_interaction_type = $4load_attr.1
DEBUG:numba.core.ssa:on stmt: $8load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $10load_attr.3 = getattr(value=$8load_global.2, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10load_attr.3, func=bool12, args=(Var($10load_attr.3, single_packet_loop.py:56),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 14, 26
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $14load_global.0 = global(set_packet_props_full_relativity: CPUDispatcher(<function set_packet_props_full_relativity at 0x7f6e4a0beef0>))
DEBUG:numba.core.ssa:on stmt: $20call_function.3 = call $14load_global.0(r_packet, numba_model, func=$14load_global.0, args=[Var(r_packet, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 36
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $26load_global.0 = global(set_packet_props_partial_relativity: CPUDispatcher(<function set_packet_props_partial_relativity at 0x7f6e4a0bee60>))
DEBUG:numba.core.ssa:on stmt: $32call_function.3 = call $26load_global.0(r_packet, numba_model, func=$26load_global.0, args=[Var(r_packet, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 36
DEBUG:numba.core.ssa:==== SSA block analysis pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $38load_method.1 = getattr(value=r_packet, attr=initialize_line_id)
DEBUG:numba.core.ssa:on stmt: $44call_method.4 = call $38load_method.1(numba_plasma, numba_model, func=$38load_method.1, args=[Var(numba_plasma, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $48load_global.5 = global(trace_vpacket_volley: CPUDispatcher(<function trace_vpacket_volley at 0x7f6e4a0be7a0>))
DEBUG:numba.core.ssa:on stmt: $58call_function.10 = call $48load_global.5(r_packet, vpacket_collection, numba_model, numba_plasma, func=$48load_global.5, args=[Var(r_packet, single_packet_loop.py:54), Var(vpacket_collection, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54), Var(numba_plasma, single_packet_loop.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $62load_global.11 = global(mc_logger: <module 'tardis.montecarlo.montecarlo_numba.montecarlo_logger' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/montecarlo_logger.py'>)
DEBUG:numba.core.ssa:on stmt: $64load_attr.12 = getattr(value=$62load_global.11, attr=DEBUG_MODE)
DEBUG:numba.core.ssa:on stmt: bool66 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $66pred = call bool66($64load_attr.12, func=bool66, args=(Var($64load_attr.12, single_packet_loop.py:66),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $66pred, 68, 106
DEBUG:numba.core.ssa:==== SSA block analysis pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $70load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $72build_list.2 = build_list(items=[Var($70load_attr.1, single_packet_loop.py:67)])
DEBUG:numba.core.ssa:on stmt: r_packet_track_nu = $72build_list.2
DEBUG:numba.core.ssa:on stmt: $78load_attr.4 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $80build_list.5 = build_list(items=[Var($78load_attr.4, single_packet_loop.py:68)])
DEBUG:numba.core.ssa:on stmt: r_packet_track_mu = $80build_list.5
DEBUG:numba.core.ssa:on stmt: $86load_attr.7 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $88build_list.8 = build_list(items=[Var($86load_attr.7, single_packet_loop.py:69)])
DEBUG:numba.core.ssa:on stmt: r_packet_track_r = $88build_list.8
DEBUG:numba.core.ssa:on stmt: $92load_global.9 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $94load_attr.10 = getattr(value=$92load_global.9, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: $96build_list.11 = build_list(items=[Var($94load_attr.10, single_packet_loop.py:70)])
DEBUG:numba.core.ssa:on stmt: r_packet_track_interaction = $96build_list.11
DEBUG:numba.core.ssa:on stmt: $const100.12 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $102build_list.13 = build_list(items=[Var($const100.12, single_packet_loop.py:71)])
DEBUG:numba.core.ssa:on stmt: r_packet_track_distance = $102build_list.13
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block analysis pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: jump 110
DEBUG:numba.core.ssa:==== SSA block analysis pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $112load_attr.1 = getattr(value=r_packet, attr=status)
DEBUG:numba.core.ssa:on stmt: $114load_global.2 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=$114load_global.2, attr=IN_PROCESS)
DEBUG:numba.core.ssa:on stmt: $118compare_op.4 = $112load_attr.1 == $116load_attr.3
DEBUG:numba.core.ssa:on stmt: bool120 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $120pred = call bool120($118compare_op.4, func=bool120, args=(Var($118compare_op.4, single_packet_loop.py:73),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $120pred, 124, 378
DEBUG:numba.core.ssa:==== SSA block analysis pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(trace_packet: CPUDispatcher(<function trace_packet at 0x7f6e4a0ff3b0>))
DEBUG:numba.core.ssa:on stmt: $134call_function.5 = call $124load_global.0(r_packet, numba_model, numba_plasma, estimators, func=$124load_global.0, args=[Var(r_packet, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54), Var(numba_plasma, single_packet_loop.py:54), Var(estimators, single_packet_loop.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $136unpack_sequence.9 = exhaust_iter(value=$134call_function.5, count=3)
DEBUG:numba.core.ssa:on stmt: $136unpack_sequence.6 = static_getitem(value=$136unpack_sequence.9, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $136unpack_sequence.7 = static_getitem(value=$136unpack_sequence.9, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: $136unpack_sequence.8 = static_getitem(value=$136unpack_sequence.9, index=2, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance = $136unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: interaction_type = $136unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: delta_shell = $136unpack_sequence.8
DEBUG:numba.core.ssa:on stmt: $146load_global.11 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $148load_attr.12 = getattr(value=$146load_global.11, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: $150compare_op.13 = interaction_type == $148load_attr.12
DEBUG:numba.core.ssa:on stmt: bool152 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $152pred = call bool152($150compare_op.13, func=bool152, args=(Var($150compare_op.13, single_packet_loop.py:78),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $152pred, 154, 190
DEBUG:numba.core.ssa:==== SSA block analysis pass on 154
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $154load_global.0 = global(move_r_packet: CPUDispatcher(<function move_r_packet at 0x7f6e4a0ff680>))
DEBUG:numba.core.ssa:on stmt: $162load_attr.4 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $166call_function.6 = call $154load_global.0(r_packet, distance, $162load_attr.4, estimators, func=$154load_global.0, args=[Var(r_packet, single_packet_loop.py:54), Var(distance, single_packet_loop.py:75), Var($162load_attr.4, single_packet_loop.py:80), Var(estimators, single_packet_loop.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $170load_global.7 = global(move_packet_across_shell_boundary: CPUDispatcher(<function move_packet_across_shell_boundary at 0x7f6e4a0ffef0>))
DEBUG:numba.core.ssa:on stmt: $176load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.12 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $182call_function.13 = call $176load_global.10($180load_attr.12, func=$176load_global.10, args=[Var($180load_attr.12, single_packet_loop.py:83)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $184call_function.14 = call $170load_global.7(r_packet, delta_shell, $182call_function.13, func=$170load_global.7, args=[Var(r_packet, single_packet_loop.py:54), Var(delta_shell, single_packet_loop.py:75), Var($182call_function.13, single_packet_loop.py:83)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 314
DEBUG:numba.core.ssa:==== SSA block analysis pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $192load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $194load_attr.2 = getattr(value=$192load_global.1, attr=LINE)
DEBUG:numba.core.ssa:on stmt: $196compare_op.3 = interaction_type == $194load_attr.2
DEBUG:numba.core.ssa:on stmt: bool198 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $198pred = call bool198($196compare_op.3, func=bool198, args=(Var($196compare_op.3, single_packet_loop.py:86),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $198pred, 200, 254
DEBUG:numba.core.ssa:==== SSA block analysis pass on 200
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $const200.0 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_type = $const200.0
DEBUG:numba.core.ssa:on stmt: $206load_global.2 = global(move_r_packet: CPUDispatcher(<function move_r_packet at 0x7f6e4a0ff680>))
DEBUG:numba.core.ssa:on stmt: $214load_attr.6 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $218call_function.8 = call $206load_global.2(r_packet, distance, $214load_attr.6, estimators, func=$206load_global.2, args=[Var(r_packet, single_packet_loop.py:54), Var(distance, single_packet_loop.py:75), Var($214load_attr.6, single_packet_loop.py:90), Var(estimators, single_packet_loop.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $222load_global.9 = global(line_scatter: CPUDispatcher(<function line_scatter at 0x7f6e4a0a9cb0>))
DEBUG:numba.core.ssa:on stmt: $228load_attr.12 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $234call_function.15 = call $222load_global.9(r_packet, $228load_attr.12, line_interaction_type, numba_plasma, func=$222load_global.9, args=[Var(r_packet, single_packet_loop.py:54), Var($228load_attr.12, single_packet_loop.py:94), Var(line_interaction_type, single_packet_loop.py:54), Var(numba_plasma, single_packet_loop.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.16 = global(trace_vpacket_volley: CPUDispatcher(<function trace_vpacket_volley at 0x7f6e4a0be7a0>))
DEBUG:numba.core.ssa:on stmt: $248call_function.21 = call $238load_global.16(r_packet, vpacket_collection, numba_model, numba_plasma, func=$238load_global.16, args=[Var(r_packet, single_packet_loop.py:54), Var(vpacket_collection, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54), Var(numba_plasma, single_packet_loop.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 314
DEBUG:numba.core.ssa:==== SSA block analysis pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $256load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $258load_attr.2 = getattr(value=$256load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: $260compare_op.3 = interaction_type == $258load_attr.2
DEBUG:numba.core.ssa:on stmt: bool262 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $262pred = call bool262($260compare_op.3, func=bool262, args=(Var($260compare_op.3, single_packet_loop.py:102),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $262pred, 266, 314
DEBUG:numba.core.ssa:==== SSA block analysis pass on 266
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $const266.0 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_type = $const266.0
DEBUG:numba.core.ssa:on stmt: $272load_global.2 = global(move_r_packet: CPUDispatcher(<function move_r_packet at 0x7f6e4a0ff680>))
DEBUG:numba.core.ssa:on stmt: $280load_attr.6 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $284call_function.8 = call $272load_global.2(r_packet, distance, $280load_attr.6, estimators, func=$272load_global.2, args=[Var(r_packet, single_packet_loop.py:54), Var(distance, single_packet_loop.py:75), Var($280load_attr.6, single_packet_loop.py:106), Var(estimators, single_packet_loop.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $288load_global.9 = global(thomson_scatter: CPUDispatcher(<function thomson_scatter at 0x7f6e4a0a9ef0>))
DEBUG:numba.core.ssa:on stmt: $294load_attr.12 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $296call_function.13 = call $288load_global.9(r_packet, $294load_attr.12, func=$288load_global.9, args=[Var(r_packet, single_packet_loop.py:54), Var($294load_attr.12, single_packet_loop.py:108)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $300load_global.14 = global(trace_vpacket_volley: CPUDispatcher(<function trace_vpacket_volley at 0x7f6e4a0be7a0>))
DEBUG:numba.core.ssa:on stmt: $310call_function.19 = call $300load_global.14(r_packet, vpacket_collection, numba_model, numba_plasma, func=$300load_global.14, args=[Var(r_packet, single_packet_loop.py:54), Var(vpacket_collection, single_packet_loop.py:54), Var(numba_model, single_packet_loop.py:54), Var(numba_plasma, single_packet_loop.py:54)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 314
DEBUG:numba.core.ssa:==== SSA block analysis pass on 314
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $314load_global.0 = global(mc_logger: <module 'tardis.montecarlo.montecarlo_numba.montecarlo_logger' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/montecarlo_logger.py'>)
DEBUG:numba.core.ssa:on stmt: $316load_attr.1 = getattr(value=$314load_global.0, attr=DEBUG_MODE)
DEBUG:numba.core.ssa:on stmt: bool318 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $318pred = call bool318($316load_attr.1, func=bool318, args=(Var($316load_attr.1, single_packet_loop.py:113),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $318pred, 320, 403
DEBUG:numba.core.ssa:==== SSA block analysis pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $322load_method.1 = getattr(value=r_packet_track_nu, attr=append)
DEBUG:numba.core.ssa:on stmt: $326load_attr.3 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $328call_method.4 = call $322load_method.1($326load_attr.3, func=$322load_method.1, args=[Var($326load_attr.3, single_packet_loop.py:114)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $334load_method.6 = getattr(value=r_packet_track_mu, attr=append)
DEBUG:numba.core.ssa:on stmt: $338load_attr.8 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $340call_method.9 = call $334load_method.6($338load_attr.8, func=$334load_method.6, args=[Var($338load_attr.8, single_packet_loop.py:115)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $346load_method.11 = getattr(value=r_packet_track_r, attr=append)
DEBUG:numba.core.ssa:on stmt: $350load_attr.13 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $352call_method.14 = call $346load_method.11($350load_attr.13, func=$346load_method.11, args=[Var($350load_attr.13, single_packet_loop.py:116)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $358load_method.16 = getattr(value=r_packet_track_interaction, attr=append)
DEBUG:numba.core.ssa:on stmt: $362call_method.18 = call $358load_method.16(interaction_type, func=$358load_method.16, args=[Var(interaction_type, single_packet_loop.py:75)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $368load_method.20 = getattr(value=r_packet_track_distance, attr=append)
DEBUG:numba.core.ssa:on stmt: $372call_method.22 = call $368load_method.20(distance, func=$368load_method.20, args=[Var(distance, single_packet_loop.py:75)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 403
DEBUG:numba.core.ssa:==== SSA block analysis pass on 378
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: jump 380
DEBUG:numba.core.ssa:==== SSA block analysis pass on 380
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $380load_global.0 = global(mc_logger: <module 'tardis.montecarlo.montecarlo_numba.montecarlo_logger' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/montecarlo_logger.py'>)
DEBUG:numba.core.ssa:on stmt: $382load_attr.1 = getattr(value=$380load_global.0, attr=DEBUG_MODE)
DEBUG:numba.core.ssa:on stmt: bool384 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $384pred = call bool384($382load_attr.1, func=bool384, args=(Var($382load_attr.1, single_packet_loop.py:120),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $384pred, 388, 402
DEBUG:numba.core.ssa:==== SSA block analysis pass on 388
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $398build_tuple.5 = build_tuple(items=[Var(r_packet_track_nu, single_packet_loop.py:67), Var(r_packet_track_mu, single_packet_loop.py:68), Var(r_packet_track_r, single_packet_loop.py:69), Var(r_packet_track_interaction, single_packet_loop.py:70), Var(r_packet_track_distance, single_packet_loop.py:71)])
DEBUG:numba.core.ssa:on stmt: $400return_value.6 = cast(value=$398build_tuple.5)
DEBUG:numba.core.ssa:on stmt: return $400return_value.6
DEBUG:numba.core.ssa:==== SSA block analysis pass on 402
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: $const402.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $404return_value.1 = cast(value=$const402.0)
DEBUG:numba.core.ssa:on stmt: return $404return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 403
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f360d0>
DEBUG:numba.core.ssa:on stmt: jump 110
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102build_list.13': [<numba.core.ir.Assign object at 0x7f6e46410150>],
             '$10load_attr.3': [<numba.core.ir.Assign object at 0x7f6e46620cd0>],
             '$112load_attr.1': [<numba.core.ir.Assign object at 0x7f6e464109d0>],
             '$114load_global.2': [<numba.core.ir.Assign object at 0x7f6e464100d0>],
             '$116load_attr.3': [<numba.core.ir.Assign object at 0x7f6e46410dd0>],
             '$118compare_op.4': [<numba.core.ir.Assign object at 0x7f6e46410f90>],
             '$120pred': [<numba.core.ir.Assign object at 0x7f6e468d3510>],
             '$124load_global.0': [<numba.core.ir.Assign object at 0x7f6e464107d0>],
             '$12pred': [<numba.core.ir.Assign object at 0x7f6e46620d90>],
             '$134call_function.5': [<numba.core.ir.Assign object at 0x7f6e46410510>],
             '$136unpack_sequence.6': [<numba.core.ir.Assign object at 0x7f6e465e2690>],
             '$136unpack_sequence.7': [<numba.core.ir.Assign object at 0x7f6e465e2150>],
             '$136unpack_sequence.8': [<numba.core.ir.Assign object at 0x7f6e465e2990>],
             '$136unpack_sequence.9': [<numba.core.ir.Assign object at 0x7f6e46410d10>],
             '$146load_global.11': [<numba.core.ir.Assign object at 0x7f6e465e2410>],
             '$148load_attr.12': [<numba.core.ir.Assign object at 0x7f6e465e2b10>],
             '$14load_global.0': [<numba.core.ir.Assign object at 0x7f6e46620310>],
             '$150compare_op.13': [<numba.core.ir.Assign object at 0x7f6e465e29d0>],
             '$152pred': [<numba.core.ir.Assign object at 0x7f6e465e2110>],
             '$154load_global.0': [<numba.core.ir.Assign object at 0x7f6e464f5e10>],
             '$162load_attr.4': [<numba.core.ir.Assign object at 0x7f6e464f5cd0>],
             '$166call_function.6': [<numba.core.ir.Assign object at 0x7f6e464f5390>],
             '$170load_global.7': [<numba.core.ir.Assign object at 0x7f6e464f5890>],
             '$176load_global.10': [<numba.core.ir.Assign object at 0x7f6e464f5590>],
             '$180load_attr.12': [<numba.core.ir.Assign object at 0x7f6e464f59d0>],
             '$182call_function.13': [<numba.core.ir.Assign object at 0x7f6e464f5b90>],
             '$184call_function.14': [<numba.core.ir.Assign object at 0x7f6e464f5d50>],
             '$192load_global.1': [<numba.core.ir.Assign object at 0x7f6e464f5750>],
             '$194load_attr.2': [<numba.core.ir.Assign object at 0x7f6e464f5910>],
             '$196compare_op.3': [<numba.core.ir.Assign object at 0x7f6e464f5b50>],
             '$198pred': [<numba.core.ir.Assign object at 0x7f6e46508a90>],
             '$206load_global.2': [<numba.core.ir.Assign object at 0x7f6e46508210>],
             '$20call_function.3': [<numba.core.ir.Assign object at 0x7f6e46620d10>],
             '$214load_attr.6': [<numba.core.ir.Assign object at 0x7f6e46508710>],
             '$218call_function.8': [<numba.core.ir.Assign object at 0x7f6e46508650>],
             '$222load_global.9': [<numba.core.ir.Assign object at 0x7f6e46508bd0>],
             '$228load_attr.12': [<numba.core.ir.Assign object at 0x7f6e46797510>],
             '$234call_function.15': [<numba.core.ir.Assign object at 0x7f6e4658a2d0>],
             '$238load_global.16': [<numba.core.ir.Assign object at 0x7f6e4658ab10>],
             '$248call_function.21': [<numba.core.ir.Assign object at 0x7f6e46859490>],
             '$256load_global.1': [<numba.core.ir.Assign object at 0x7f6e4658aed0>],
             '$258load_attr.2': [<numba.core.ir.Assign object at 0x7f6e464f5c90>],
             '$260compare_op.3': [<numba.core.ir.Assign object at 0x7f6e46859910>],
             '$262pred': [<numba.core.ir.Assign object at 0x7f6e46859890>],
             '$26load_global.0': [<numba.core.ir.Assign object at 0x7f6e46620990>],
             '$272load_global.2': [<numba.core.ir.Assign object at 0x7f6e4684a290>],
             '$280load_attr.6': [<numba.core.ir.Assign object at 0x7f6e4684ac10>],
             '$284call_function.8': [<numba.core.ir.Assign object at 0x7f6e4684af90>],
             '$288load_global.9': [<numba.core.ir.Assign object at 0x7f6e45e61150>],
             '$294load_attr.12': [<numba.core.ir.Assign object at 0x7f6e45e61f90>],
             '$296call_function.13': [<numba.core.ir.Assign object at 0x7f6e45e61690>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e468d3d90>],
             '$300load_global.14': [<numba.core.ir.Assign object at 0x7f6e4645f210>],
             '$310call_function.19': [<numba.core.ir.Assign object at 0x7f6e4645f390>],
             '$314load_global.0': [<numba.core.ir.Assign object at 0x7f6e4645f250>],
             '$316load_attr.1': [<numba.core.ir.Assign object at 0x7f6e4645f290>],
             '$318pred': [<numba.core.ir.Assign object at 0x7f6e4645f7d0>],
             '$322load_method.1': [<numba.core.ir.Assign object at 0x7f6e45db9110>],
             '$326load_attr.3': [<numba.core.ir.Assign object at 0x7f6e45db9250>],
             '$328call_method.4': [<numba.core.ir.Assign object at 0x7f6e4687a450>],
             '$32call_function.3': [<numba.core.ir.Assign object at 0x7f6e46620510>],
             '$334load_method.6': [<numba.core.ir.Assign object at 0x7f6e4695f210>],
             '$338load_attr.8': [<numba.core.ir.Assign object at 0x7f6e45dc68d0>],
             '$340call_method.9': [<numba.core.ir.Assign object at 0x7f6e45dc6610>],
             '$346load_method.11': [<numba.core.ir.Assign object at 0x7f6e45dc6390>],
             '$350load_attr.13': [<numba.core.ir.Assign object at 0x7f6e45dc6190>],
             '$352call_method.14': [<numba.core.ir.Assign object at 0x7f6e45dc6050>],
             '$358load_method.16': [<numba.core.ir.Assign object at 0x7f6e45dc6a10>],
             '$362call_method.18': [<numba.core.ir.Assign object at 0x7f6e45dc6cd0>],
             '$368load_method.20': [<numba.core.ir.Assign object at 0x7f6e45dc6e10>],
             '$372call_method.22': [<numba.core.ir.Assign object at 0x7f6e46459090>],
             '$380load_global.0': [<numba.core.ir.Assign object at 0x7f6e45dc6ed0>],
             '$382load_attr.1': [<numba.core.ir.Assign object at 0x7f6e46459190>],
             '$384pred': [<numba.core.ir.Assign object at 0x7f6e464593d0>],
             '$38load_method.1': [<numba.core.ir.Assign object at 0x7f6e46620050>],
             '$398build_tuple.5': [<numba.core.ir.Assign object at 0x7f6e46459a90>],
             '$400return_value.6': [<numba.core.ir.Assign object at 0x7f6e46459b90>],
             '$404return_value.1': [<numba.core.ir.Assign object at 0x7f6e46459cd0>],
             '$44call_method.4': [<numba.core.ir.Assign object at 0x7f6e4638c910>],
             '$48load_global.5': [<numba.core.ir.Assign object at 0x7f6e4638ccd0>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e465fcc10>],
             '$58call_function.10': [<numba.core.ir.Assign object at 0x7f6e4638c0d0>],
             '$62load_global.11': [<numba.core.ir.Assign object at 0x7f6e4638c710>],
             '$64load_attr.12': [<numba.core.ir.Assign object at 0x7f6e4638c210>],
             '$66pred': [<numba.core.ir.Assign object at 0x7f6e4638cc90>],
             '$70load_attr.1': [<numba.core.ir.Assign object at 0x7f6e4638ca10>],
             '$72build_list.2': [<numba.core.ir.Assign object at 0x7f6e4638cd10>],
             '$78load_attr.4': [<numba.core.ir.Assign object at 0x7f6e463a2810>],
             '$80build_list.5': [<numba.core.ir.Assign object at 0x7f6e463a29d0>],
             '$86load_attr.7': [<numba.core.ir.Assign object at 0x7f6e463a2110>],
             '$88build_list.8': [<numba.core.ir.Assign object at 0x7f6e463a2090>],
             '$8load_global.2': [<numba.core.ir.Assign object at 0x7f6e46620c50>],
             '$92load_global.9': [<numba.core.ir.Assign object at 0x7f6e463a25d0>],
             '$94load_attr.10': [<numba.core.ir.Assign object at 0x7f6e463a2ad0>],
             '$96build_list.11': [<numba.core.ir.Assign object at 0x7f6e463a2750>],
             '$const100.12': [<numba.core.ir.Assign object at 0x7f6e463a28d0>],
             '$const200.0': [<numba.core.ir.Assign object at 0x7f6e46508e10>],
             '$const266.0': [<numba.core.ir.Assign object at 0x7f6e4684a050>],
             '$const402.0': [<numba.core.ir.Assign object at 0x7f6e46459890>],
             'bool12': [<numba.core.ir.Assign object at 0x7f6e46620ad0>],
             'bool120': [<numba.core.ir.Assign object at 0x7f6e46410990>],
             'bool152': [<numba.core.ir.Assign object at 0x7f6e465e2e10>],
             'bool198': [<numba.core.ir.Assign object at 0x7f6e46508490>],
             'bool262': [<numba.core.ir.Assign object at 0x7f6e46859950>],
             'bool318': [<numba.core.ir.Assign object at 0x7f6e4645f2d0>],
             'bool384': [<numba.core.ir.Assign object at 0x7f6e464592d0>],
             'bool66': [<numba.core.ir.Assign object at 0x7f6e4638c6d0>],
             'delta_shell': [<numba.core.ir.Assign object at 0x7f6e465e2e50>],
             'distance': [<numba.core.ir.Assign object at 0x7f6e465e2a90>],
             'estimators': [<numba.core.ir.Assign object at 0x7f6e468d3cd0>],
             'interaction_type': [<numba.core.ir.Assign object at 0x7f6e465e2f50>],
             'line_interaction_type': [<numba.core.ir.Assign object at 0x7f6e465fc410>],
             'numba_model': [<numba.core.ir.Assign object at 0x7f6e465d6e90>],
             'numba_plasma': [<numba.core.ir.Assign object at 0x7f6e465d67d0>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e465d6110>],
             'r_packet_track_distance': [<numba.core.ir.Assign object at 0x7f6e46410a10>],
             'r_packet_track_interaction': [<numba.core.ir.Assign object at 0x7f6e463a2b10>],
             'r_packet_track_mu': [<numba.core.ir.Assign object at 0x7f6e463a24d0>],
             'r_packet_track_nu': [<numba.core.ir.Assign object at 0x7f6e4638cbd0>],
             'r_packet_track_r': [<numba.core.ir.Assign object at 0x7f6e463a2410>],
             'vpacket_collection': [<numba.core.ir.Assign object at 0x7f6e468d3ad0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=145)
           2	LOAD_FAST(arg=0, lineno=145)
           4	LOAD_ATTR(arg=0, lineno=145)
           6	LOAD_FAST(arg=1, lineno=145)
           8	LOAD_ATTR(arg=1, lineno=145)
          10	BINARY_TRUE_DIVIDE(arg=None, lineno=145)
          12	LOAD_GLOBAL(arg=2, lineno=145)
          14	BINARY_TRUE_DIVIDE(arg=None, lineno=145)
          16	STORE_FAST(arg=2, lineno=145)
          18	LOAD_GLOBAL(arg=3, lineno=147)
          20	LOAD_FAST(arg=0, lineno=148)
          22	LOAD_ATTR(arg=0, lineno=148)
          24	LOAD_FAST(arg=0, lineno=149)
          26	LOAD_ATTR(arg=4, lineno=149)
          28	LOAD_FAST(arg=1, lineno=150)
          30	LOAD_ATTR(arg=1, lineno=150)
          32	CALL_FUNCTION(arg=3, lineno=150)
          34	STORE_FAST(arg=3, lineno=150)
          36	LOAD_FAST(arg=0, lineno=153)
          38	DUP_TOP(arg=None, lineno=153)
          40	LOAD_ATTR(arg=5, lineno=153)
          42	LOAD_FAST(arg=3, lineno=153)
          44	INPLACE_MULTIPLY(arg=None, lineno=153)
          46	ROT_TWO(arg=None, lineno=153)
          48	STORE_ATTR(arg=5, lineno=153)
          50	LOAD_FAST(arg=0, lineno=154)
          52	DUP_TOP(arg=None, lineno=154)
          54	LOAD_ATTR(arg=6, lineno=154)
          56	LOAD_FAST(arg=3, lineno=154)
          58	INPLACE_MULTIPLY(arg=None, lineno=154)
          60	ROT_TWO(arg=None, lineno=154)
          62	STORE_ATTR(arg=6, lineno=154)
          64	LOAD_FAST(arg=0, lineno=155)
          66	LOAD_ATTR(arg=4, lineno=155)
          68	LOAD_FAST(arg=2, lineno=155)
          70	BINARY_ADD(arg=None, lineno=155)
          72	LOAD_CONST(arg=1, lineno=155)
          74	LOAD_FAST(arg=2, lineno=155)
          76	LOAD_FAST(arg=0, lineno=155)
          78	LOAD_ATTR(arg=4, lineno=155)
          80	BINARY_MULTIPLY(arg=None, lineno=155)
          82	BINARY_ADD(arg=None, lineno=155)
          84	BINARY_TRUE_DIVIDE(arg=None, lineno=155)
          86	LOAD_FAST(arg=0, lineno=155)
          88	STORE_ATTR(arg=4, lineno=155)
          90	LOAD_CONST(arg=0, lineno=155)
          92	RETURN_VALUE(arg=None, lineno=155)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=145)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=145)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=145)
DEBUG:numba.core.byteflow:stack ['$r_packet2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=145)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=145)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$numba_model6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=145)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=2, lineno=145)
DEBUG:numba.core.byteflow:stack ['$10binary_true_divide.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=145)
DEBUG:numba.core.byteflow:stack ['$10binary_true_divide.4', '$12load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=2, lineno=145)
DEBUG:numba.core.byteflow:stack ['$14binary_true_divide.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=147)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=148)
DEBUG:numba.core.byteflow:stack ['$18load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=0, lineno=148)
DEBUG:numba.core.byteflow:stack ['$18load_global.7', '$r_packet20.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=149)
DEBUG:numba.core.byteflow:stack ['$18load_global.7', '$22load_attr.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_ATTR(arg=4, lineno=149)
DEBUG:numba.core.byteflow:stack ['$18load_global.7', '$22load_attr.9', '$r_packet24.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=150)
DEBUG:numba.core.byteflow:stack ['$18load_global.7', '$22load_attr.9', '$26load_attr.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=150)
DEBUG:numba.core.byteflow:stack ['$18load_global.7', '$22load_attr.9', '$26load_attr.11', '$numba_model28.12']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=CALL_FUNCTION(arg=3, lineno=150)
DEBUG:numba.core.byteflow:stack ['$18load_global.7', '$22load_attr.9', '$26load_attr.11', '$30load_attr.13']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=3, lineno=150)
DEBUG:numba.core.byteflow:stack ['$32call_function.14']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=153)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=DUP_TOP(arg=None, lineno=153)
DEBUG:numba.core.byteflow:stack ['$r_packet36.15']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_ATTR(arg=5, lineno=153)
DEBUG:numba.core.byteflow:stack ['$r_packet36.15', '$38dup_top.16']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=153)
DEBUG:numba.core.byteflow:stack ['$r_packet36.15', '$40load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=INPLACE_MULTIPLY(arg=None, lineno=153)
DEBUG:numba.core.byteflow:stack ['$r_packet36.15', '$40load_attr.17', '$inverse_doppler_factor42.18']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=ROT_TWO(arg=None, lineno=153)
DEBUG:numba.core.byteflow:stack ['$r_packet36.15', '$44inplace_multiply.19']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=STORE_ATTR(arg=5, lineno=153)
DEBUG:numba.core.byteflow:stack ['$44inplace_multiply.19', '$r_packet36.15']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=0, lineno=154)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=DUP_TOP(arg=None, lineno=154)
DEBUG:numba.core.byteflow:stack ['$r_packet50.20']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_ATTR(arg=6, lineno=154)
DEBUG:numba.core.byteflow:stack ['$r_packet50.20', '$52dup_top.21']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=3, lineno=154)
DEBUG:numba.core.byteflow:stack ['$r_packet50.20', '$54load_attr.22']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=INPLACE_MULTIPLY(arg=None, lineno=154)
DEBUG:numba.core.byteflow:stack ['$r_packet50.20', '$54load_attr.22', '$inverse_doppler_factor56.23']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=ROT_TWO(arg=None, lineno=154)
DEBUG:numba.core.byteflow:stack ['$r_packet50.20', '$58inplace_multiply.24']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_ATTR(arg=6, lineno=154)
DEBUG:numba.core.byteflow:stack ['$58inplace_multiply.24', '$r_packet50.20']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=155)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=4, lineno=155)
DEBUG:numba.core.byteflow:stack ['$r_packet64.25']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=155)
DEBUG:numba.core.byteflow:stack ['$66load_attr.26']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BINARY_ADD(arg=None, lineno=155)
DEBUG:numba.core.byteflow:stack ['$66load_attr.26', '$beta68.27']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_CONST(arg=1, lineno=155)
DEBUG:numba.core.byteflow:stack ['$70binary_add.28']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=155)
DEBUG:numba.core.byteflow:stack ['$70binary_add.28', '$const72.29']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=155)
DEBUG:numba.core.byteflow:stack ['$70binary_add.28', '$const72.29', '$beta74.30']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_ATTR(arg=4, lineno=155)
DEBUG:numba.core.byteflow:stack ['$70binary_add.28', '$const72.29', '$beta74.30', '$r_packet76.31']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=BINARY_MULTIPLY(arg=None, lineno=155)
DEBUG:numba.core.byteflow:stack ['$70binary_add.28', '$const72.29', '$beta74.30', '$78load_attr.32']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_ADD(arg=None, lineno=155)
DEBUG:numba.core.byteflow:stack ['$70binary_add.28', '$const72.29', '$80binary_multiply.33']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=155)
DEBUG:numba.core.byteflow:stack ['$70binary_add.28', '$82binary_add.34']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=155)
DEBUG:numba.core.byteflow:stack ['$84binary_true_divide.35']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=STORE_ATTR(arg=4, lineno=155)
DEBUG:numba.core.byteflow:stack ['$84binary_true_divide.35', '$r_packet86.36']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=0, lineno=155)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=155)
DEBUG:numba.core.byteflow:stack ['$const90.37']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$r_packet2.0'}), (4, {'item': '$r_packet2.0', 'res': '$4load_attr.1'}), (6, {'res': '$numba_model6.2'}), (8, {'item': '$numba_model6.2', 'res': '$8load_attr.3'}), (10, {'lhs': '$4load_attr.1', 'rhs': '$8load_attr.3', 'res': '$10binary_true_divide.4'}), (12, {'res': '$12load_global.5'}), (14, {'lhs': '$10binary_true_divide.4', 'rhs': '$12load_global.5', 'res': '$14binary_true_divide.6'}), (16, {'value': '$14binary_true_divide.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$r_packet20.8'}), (22, {'item': '$r_packet20.8', 'res': '$22load_attr.9'}), (24, {'res': '$r_packet24.10'}), (26, {'item': '$r_packet24.10', 'res': '$26load_attr.11'}), (28, {'res': '$numba_model28.12'}), (30, {'item': '$numba_model28.12', 'res': '$30load_attr.13'}), (32, {'func': '$18load_global.7', 'args': ['$22load_attr.9', '$26load_attr.11', '$30load_attr.13'], 'res': '$32call_function.14'}), (34, {'value': '$32call_function.14'}), (36, {'res': '$r_packet36.15'}), (38, {'orig': ['$r_packet36.15'], 'duped': ['$38dup_top.16']}), (40, {'item': '$38dup_top.16', 'res': '$40load_attr.17'}), (42, {'res': '$inverse_doppler_factor42.18'}), (44, {'lhs': '$40load_attr.17', 'rhs': '$inverse_doppler_factor42.18', 'res': '$44inplace_multiply.19'}), (48, {'target': '$r_packet36.15', 'value': '$44inplace_multiply.19'}), (50, {'res': '$r_packet50.20'}), (52, {'orig': ['$r_packet50.20'], 'duped': ['$52dup_top.21']}), (54, {'item': '$52dup_top.21', 'res': '$54load_attr.22'}), (56, {'res': '$inverse_doppler_factor56.23'}), (58, {'lhs': '$54load_attr.22', 'rhs': '$inverse_doppler_factor56.23', 'res': '$58inplace_multiply.24'}), (62, {'target': '$r_packet50.20', 'value': '$58inplace_multiply.24'}), (64, {'res': '$r_packet64.25'}), (66, {'item': '$r_packet64.25', 'res': '$66load_attr.26'}), (68, {'res': '$beta68.27'}), (70, {'lhs': '$66load_attr.26', 'rhs': '$beta68.27', 'res': '$70binary_add.28'}), (72, {'res': '$const72.29'}), (74, {'res': '$beta74.30'}), (76, {'res': '$r_packet76.31'}), (78, {'item': '$r_packet76.31', 'res': '$78load_attr.32'}), (80, {'lhs': '$beta74.30', 'rhs': '$78load_attr.32', 'res': '$80binary_multiply.33'}), (82, {'lhs': '$const72.29', 'rhs': '$80binary_multiply.33', 'res': '$82binary_add.34'}), (84, {'lhs': '$70binary_add.28', 'rhs': '$82binary_add.34', 'res': '$84binary_true_divide.35'}), (86, {'res': '$r_packet86.36'}), (88, {'target': '$r_packet86.36', 'value': '$84binary_true_divide.35'}), (90, {'res': '$const90.37'}), (92, {'retval': '$const90.37', 'castval': '$92return_value.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    numba_model = arg(1, name=numba_model)   ['numba_model']
    $4load_attr.1 = getattr(value=r_packet, attr=r) ['$4load_attr.1', 'r_packet']
    $8load_attr.3 = getattr(value=numba_model, attr=time_explosion) ['$8load_attr.3', 'numba_model']
    $10binary_true_divide.4 = $4load_attr.1 / $8load_attr.3 ['$10binary_true_divide.4', '$4load_attr.1', '$8load_attr.3']
    $12load_global.5 = global(C_SPEED_OF_LIGHT: 29979245800.0) ['$12load_global.5']
    $14binary_true_divide.6 = $10binary_true_divide.4 / $12load_global.5 ['$10binary_true_divide.4', '$12load_global.5', '$14binary_true_divide.6']
    beta = $14binary_true_divide.6           ['$14binary_true_divide.6', 'beta']
    $18load_global.7 = global(get_inverse_doppler_factor: CPUDispatcher(<function get_inverse_doppler_factor at 0x7f6e4a0eff80>)) ['$18load_global.7']
    $22load_attr.9 = getattr(value=r_packet, attr=r) ['$22load_attr.9', 'r_packet']
    $26load_attr.11 = getattr(value=r_packet, attr=mu) ['$26load_attr.11', 'r_packet']
    $30load_attr.13 = getattr(value=numba_model, attr=time_explosion) ['$30load_attr.13', 'numba_model']
    $32call_function.14 = call $18load_global.7($22load_attr.9, $26load_attr.11, $30load_attr.13, func=$18load_global.7, args=[Var($22load_attr.9, single_packet_loop.py:148), Var($26load_attr.11, single_packet_loop.py:149), Var($30load_attr.13, single_packet_loop.py:150)], kws=(), vararg=None) ['$18load_global.7', '$22load_attr.9', '$26load_attr.11', '$30load_attr.13', '$32call_function.14']
    inverse_doppler_factor = $32call_function.14 ['$32call_function.14', 'inverse_doppler_factor']
    $40load_attr.17 = getattr(value=r_packet, attr=nu) ['$40load_attr.17', 'r_packet']
    $44inplace_multiply.19 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$40load_attr.17, rhs=inverse_doppler_factor, static_lhs=Undefined, static_rhs=Undefined) ['$40load_attr.17', '$44inplace_multiply.19', 'inverse_doppler_factor']
    (r_packet).nu = $44inplace_multiply.19   ['$44inplace_multiply.19', 'r_packet']
    $54load_attr.22 = getattr(value=r_packet, attr=energy) ['$54load_attr.22', 'r_packet']
    $58inplace_multiply.24 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$54load_attr.22, rhs=inverse_doppler_factor, static_lhs=Undefined, static_rhs=Undefined) ['$54load_attr.22', '$58inplace_multiply.24', 'inverse_doppler_factor']
    (r_packet).energy = $58inplace_multiply.24 ['$58inplace_multiply.24', 'r_packet']
    $66load_attr.26 = getattr(value=r_packet, attr=mu) ['$66load_attr.26', 'r_packet']
    $70binary_add.28 = $66load_attr.26 + beta ['$66load_attr.26', '$70binary_add.28', 'beta']
    $const72.29 = const(int, 1)              ['$const72.29']
    $78load_attr.32 = getattr(value=r_packet, attr=mu) ['$78load_attr.32', 'r_packet']
    $80binary_multiply.33 = beta * $78load_attr.32 ['$78load_attr.32', '$80binary_multiply.33', 'beta']
    $82binary_add.34 = $const72.29 + $80binary_multiply.33 ['$80binary_multiply.33', '$82binary_add.34', '$const72.29']
    $84binary_true_divide.35 = $70binary_add.28 / $82binary_add.34 ['$70binary_add.28', '$82binary_add.34', '$84binary_true_divide.35']
    (r_packet).mu = $84binary_true_divide.35 ['$84binary_true_divide.35', 'r_packet']
    $const90.37 = const(NoneType, None)      ['$const90.37']
    $92return_value.38 = cast(value=$const90.37) ['$92return_value.38', '$const90.37']
    return $92return_value.38                ['$92return_value.38']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46100e50>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $10binary_true_divide.4 = $4load_attr.1 / $8load_attr.3
DEBUG:numba.core.ssa:on stmt: $12load_global.5 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $14binary_true_divide.6 = $10binary_true_divide.4 / $12load_global.5
DEBUG:numba.core.ssa:on stmt: beta = $14binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: $18load_global.7 = global(get_inverse_doppler_factor: CPUDispatcher(<function get_inverse_doppler_factor at 0x7f6e4a0eff80>))
DEBUG:numba.core.ssa:on stmt: $22load_attr.9 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $26load_attr.11 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $30load_attr.13 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $32call_function.14 = call $18load_global.7($22load_attr.9, $26load_attr.11, $30load_attr.13, func=$18load_global.7, args=[Var($22load_attr.9, single_packet_loop.py:148), Var($26load_attr.11, single_packet_loop.py:149), Var($30load_attr.13, single_packet_loop.py:150)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: inverse_doppler_factor = $32call_function.14
DEBUG:numba.core.ssa:on stmt: $40load_attr.17 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $44inplace_multiply.19 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$40load_attr.17, rhs=inverse_doppler_factor, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (r_packet).nu = $44inplace_multiply.19
DEBUG:numba.core.ssa:on stmt: $54load_attr.22 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $58inplace_multiply.24 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$54load_attr.22, rhs=inverse_doppler_factor, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (r_packet).energy = $58inplace_multiply.24
DEBUG:numba.core.ssa:on stmt: $66load_attr.26 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $70binary_add.28 = $66load_attr.26 + beta
DEBUG:numba.core.ssa:on stmt: $const72.29 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $78load_attr.32 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $80binary_multiply.33 = beta * $78load_attr.32
DEBUG:numba.core.ssa:on stmt: $82binary_add.34 = $const72.29 + $80binary_multiply.33
DEBUG:numba.core.ssa:on stmt: $84binary_true_divide.35 = $70binary_add.28 / $82binary_add.34
DEBUG:numba.core.ssa:on stmt: (r_packet).mu = $84binary_true_divide.35
DEBUG:numba.core.ssa:on stmt: $const90.37 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $92return_value.38 = cast(value=$const90.37)
DEBUG:numba.core.ssa:on stmt: return $92return_value.38
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_true_divide.4': [<numba.core.ir.Assign object at 0x7f6e4610ca10>],
             '$12load_global.5': [<numba.core.ir.Assign object at 0x7f6e4610cb10>],
             '$14binary_true_divide.6': [<numba.core.ir.Assign object at 0x7f6e4610cc10>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f6e4610cd90>],
             '$22load_attr.9': [<numba.core.ir.Assign object at 0x7f6e4610cf50>],
             '$26load_attr.11': [<numba.core.ir.Assign object at 0x7f6e4613f150>],
             '$30load_attr.13': [<numba.core.ir.Assign object at 0x7f6e4613f310>],
             '$32call_function.14': [<numba.core.ir.Assign object at 0x7f6e4613f450>],
             '$40load_attr.17': [<numba.core.ir.Assign object at 0x7f6e4613f7d0>],
             '$44inplace_multiply.19': [<numba.core.ir.Assign object at 0x7f6e4613f990>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e4610c710>],
             '$54load_attr.22': [<numba.core.ir.Assign object at 0x7f6e4613fcd0>],
             '$58inplace_multiply.24': [<numba.core.ir.Assign object at 0x7f6e4613fe90>],
             '$66load_attr.26': [<numba.core.ir.Assign object at 0x7f6e460ca110>],
             '$70binary_add.28': [<numba.core.ir.Assign object at 0x7f6e460ca310>],
             '$78load_attr.32': [<numba.core.ir.Assign object at 0x7f6e460ca650>],
             '$80binary_multiply.33': [<numba.core.ir.Assign object at 0x7f6e460ca750>],
             '$82binary_add.34': [<numba.core.ir.Assign object at 0x7f6e460ca850>],
             '$84binary_true_divide.35': [<numba.core.ir.Assign object at 0x7f6e460ca950>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f6e4610c910>],
             '$92return_value.38': [<numba.core.ir.Assign object at 0x7f6e460cac90>],
             '$const72.29': [<numba.core.ir.Assign object at 0x7f6e460ca410>],
             '$const90.37': [<numba.core.ir.Assign object at 0x7f6e460cab90>],
             'beta': [<numba.core.ir.Assign object at 0x7f6e4610cc90>],
             'inverse_doppler_factor': [<numba.core.ir.Assign object at 0x7f6e4613f4d0>],
             'numba_model': [<numba.core.ir.Assign object at 0x7f6e4610c510>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e4610c490>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=264)
           2	LOAD_CONST(arg=1, lineno=264)
           4	LOAD_GLOBAL(arg=0, lineno=264)
           6	BINARY_TRUE_DIVIDE(arg=None, lineno=264)
           8	STORE_FAST(arg=3, lineno=264)
          10	LOAD_CONST(arg=1, lineno=265)
          12	LOAD_FAST(arg=2, lineno=265)
          14	BINARY_TRUE_DIVIDE(arg=None, lineno=265)
          16	STORE_FAST(arg=4, lineno=265)
          18	LOAD_FAST(arg=0, lineno=266)
          20	LOAD_FAST(arg=4, lineno=266)
          22	BINARY_MULTIPLY(arg=None, lineno=266)
          24	LOAD_FAST(arg=3, lineno=266)
          26	BINARY_MULTIPLY(arg=None, lineno=266)
          28	STORE_FAST(arg=5, lineno=266)
          30	LOAD_GLOBAL(arg=1, lineno=267)
          32	LOAD_ATTR(arg=2, lineno=267)
          34	POP_JUMP_IF_TRUE(arg=46, lineno=267)
          36	LOAD_GLOBAL(arg=3, lineno=268)
          38	LOAD_FAST(arg=1, lineno=268)
          40	LOAD_FAST(arg=5, lineno=268)
          42	CALL_FUNCTION(arg=2, lineno=268)
          44	RETURN_VALUE(arg=None, lineno=268)
>         46	LOAD_GLOBAL(arg=4, lineno=270)
          48	LOAD_FAST(arg=1, lineno=270)
          50	LOAD_FAST(arg=5, lineno=270)
          52	CALL_FUNCTION(arg=2, lineno=270)
          54	RETURN_VALUE(arg=None, lineno=270)
          56	LOAD_CONST(arg=2, lineno=270)
          58	RETURN_VALUE(arg=None, lineno=270)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=264)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=264)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=264)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=264)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$4load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=264)
DEBUG:numba.core.byteflow:stack ['$6binary_true_divide.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=265)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=265)
DEBUG:numba.core.byteflow:stack ['$const10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=265)
DEBUG:numba.core.byteflow:stack ['$const10.3', '$time_explosion12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=4, lineno=265)
DEBUG:numba.core.byteflow:stack ['$14binary_true_divide.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=266)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=4, lineno=266)
DEBUG:numba.core.byteflow:stack ['$r18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_MULTIPLY(arg=None, lineno=266)
DEBUG:numba.core.byteflow:stack ['$r18.6', '$inv_t20.7']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=266)
DEBUG:numba.core.byteflow:stack ['$22binary_multiply.8']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_MULTIPLY(arg=None, lineno=266)
DEBUG:numba.core.byteflow:stack ['$22binary_multiply.8', '$inv_c24.9']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_FAST(arg=5, lineno=266)
DEBUG:numba.core.byteflow:stack ['$26binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=267)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_ATTR(arg=2, lineno=267)
DEBUG:numba.core.byteflow:stack ['$30load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=POP_JUMP_IF_TRUE(arg=46, lineno=267)
DEBUG:numba.core.byteflow:stack ['$32load_attr.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0), Edge(pc=46, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=46 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_GLOBAL(arg=3, lineno=268)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=268)
DEBUG:numba.core.byteflow:stack ['$36load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=5, lineno=268)
DEBUG:numba.core.byteflow:stack ['$36load_global.0', '$mu38.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=CALL_FUNCTION(arg=2, lineno=268)
DEBUG:numba.core.byteflow:stack ['$36load_global.0', '$mu38.1', '$beta40.2']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=268)
DEBUG:numba.core.byteflow:stack ['$42call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=46 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_GLOBAL(arg=4, lineno=270)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=270)
DEBUG:numba.core.byteflow:stack ['$46load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=270)
DEBUG:numba.core.byteflow:stack ['$46load_global.0', '$mu48.1']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=CALL_FUNCTION(arg=2, lineno=270)
DEBUG:numba.core.byteflow:stack ['$46load_global.0', '$mu48.1', '$beta50.2']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=270)
DEBUG:numba.core.byteflow:stack ['$52call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=46 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'res': '$4load_global.1'}), (6, {'lhs': '$const2.0', 'rhs': '$4load_global.1', 'res': '$6binary_true_divide.2'}), (8, {'value': '$6binary_true_divide.2'}), (10, {'res': '$const10.3'}), (12, {'res': '$time_explosion12.4'}), (14, {'lhs': '$const10.3', 'rhs': '$time_explosion12.4', 'res': '$14binary_true_divide.5'}), (16, {'value': '$14binary_true_divide.5'}), (18, {'res': '$r18.6'}), (20, {'res': '$inv_t20.7'}), (22, {'lhs': '$r18.6', 'rhs': '$inv_t20.7', 'res': '$22binary_multiply.8'}), (24, {'res': '$inv_c24.9'}), (26, {'lhs': '$22binary_multiply.8', 'rhs': '$inv_c24.9', 'res': '$26binary_multiply.10'}), (28, {'value': '$26binary_multiply.10'}), (30, {'res': '$30load_global.11'}), (32, {'item': '$30load_global.11', 'res': '$32load_attr.12'}), (34, {'pred': '$32load_attr.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: (), 46: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$36load_global.0'}), (38, {'res': '$mu38.1'}), (40, {'res': '$beta40.2'}), (42, {'func': '$36load_global.0', 'args': ['$mu38.1', '$beta40.2'], 'res': '$42call_function.3'}), (44, {'retval': '$42call_function.3', 'castval': '$44return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=46 nstack_initial=0):
AdaptBlockInfo(insts=((46, {'res': '$46load_global.0'}), (48, {'res': '$mu48.1'}), (50, {'res': '$beta50.2'}), (52, {'func': '$46load_global.0', 'args': ['$mu48.1', '$beta50.2'], 'res': '$52call_function.3'}), (54, {'retval': '$52call_function.3', 'castval': '$54return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r = arg(0, name=r)                       ['r']
    mu = arg(1, name=mu)                     ['mu']
    time_explosion = arg(2, name=time_explosion) ['time_explosion']
    $const2.0 = const(int, 1)                ['$const2.0']
    $4load_global.1 = global(C_SPEED_OF_LIGHT: 29979245800.0) ['$4load_global.1']
    $6binary_true_divide.2 = $const2.0 / $4load_global.1 ['$4load_global.1', '$6binary_true_divide.2', '$const2.0']
    inv_c = $6binary_true_divide.2           ['$6binary_true_divide.2', 'inv_c']
    $const10.3 = const(int, 1)               ['$const10.3']
    $14binary_true_divide.5 = $const10.3 / time_explosion ['$14binary_true_divide.5', '$const10.3', 'time_explosion']
    inv_t = $14binary_true_divide.5          ['$14binary_true_divide.5', 'inv_t']
    $22binary_multiply.8 = r * inv_t         ['$22binary_multiply.8', 'inv_t', 'r']
    $26binary_multiply.10 = $22binary_multiply.8 * inv_c ['$22binary_multiply.8', '$26binary_multiply.10', 'inv_c']
    beta = $26binary_multiply.10             ['$26binary_multiply.10', 'beta']
    $30load_global.11 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>) ['$30load_global.11']
    $32load_attr.12 = getattr(value=$30load_global.11, attr=ENABLE_FULL_RELATIVITY) ['$30load_global.11', '$32load_attr.12']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($32load_attr.12, func=bool34, args=(Var($32load_attr.12, r_packet.py:267),), kws=(), vararg=None) ['$32load_attr.12', '$34pred', 'bool34']
    branch $34pred, 46, 36                   ['$34pred']
label 36:
    $36load_global.0 = global(get_inverse_doppler_factor_partial_relativity: CPUDispatcher(<function get_inverse_doppler_factor_partial_relativity at 0x7f6e4a0f6290>)) ['$36load_global.0']
    $42call_function.3 = call $36load_global.0(mu, beta, func=$36load_global.0, args=[Var(mu, r_packet.py:264), Var(beta, r_packet.py:266)], kws=(), vararg=None) ['$36load_global.0', '$42call_function.3', 'beta', 'mu']
    $44return_value.4 = cast(value=$42call_function.3) ['$42call_function.3', '$44return_value.4']
    return $44return_value.4                 ['$44return_value.4']
label 46:
    $46load_global.0 = global(get_inverse_doppler_factor_full_relativity: CPUDispatcher(<function get_inverse_doppler_factor_full_relativity at 0x7f6e4a0f6560>)) ['$46load_global.0']
    $52call_function.3 = call $46load_global.0(mu, beta, func=$46load_global.0, args=[Var(mu, r_packet.py:264), Var(beta, r_packet.py:266)], kws=(), vararg=None) ['$46load_global.0', '$52call_function.3', 'beta', 'mu']
    $54return_value.4 = cast(value=$52call_function.3) ['$52call_function.3', '$54return_value.4']
    return $54return_value.4                 ['$54return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d12650>
DEBUG:numba.core.ssa:on stmt: r = arg(0, name=r)
DEBUG:numba.core.ssa:on stmt: mu = arg(1, name=mu)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(2, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $4load_global.1 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $6binary_true_divide.2 = $const2.0 / $4load_global.1
DEBUG:numba.core.ssa:on stmt: inv_c = $6binary_true_divide.2
DEBUG:numba.core.ssa:on stmt: $const10.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $14binary_true_divide.5 = $const10.3 / time_explosion
DEBUG:numba.core.ssa:on stmt: inv_t = $14binary_true_divide.5
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.8 = r * inv_t
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = $22binary_multiply.8 * inv_c
DEBUG:numba.core.ssa:on stmt: beta = $26binary_multiply.10
DEBUG:numba.core.ssa:on stmt: $30load_global.11 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $32load_attr.12 = getattr(value=$30load_global.11, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool34 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $34pred = call bool34($32load_attr.12, func=bool34, args=(Var($32load_attr.12, r_packet.py:267),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $34pred, 46, 36
DEBUG:numba.core.ssa:==== SSA block analysis pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d12650>
DEBUG:numba.core.ssa:on stmt: $36load_global.0 = global(get_inverse_doppler_factor_partial_relativity: CPUDispatcher(<function get_inverse_doppler_factor_partial_relativity at 0x7f6e4a0f6290>))
DEBUG:numba.core.ssa:on stmt: $42call_function.3 = call $36load_global.0(mu, beta, func=$36load_global.0, args=[Var(mu, r_packet.py:264), Var(beta, r_packet.py:266)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $44return_value.4 = cast(value=$42call_function.3)
DEBUG:numba.core.ssa:on stmt: return $44return_value.4
DEBUG:numba.core.ssa:==== SSA block analysis pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d12650>
DEBUG:numba.core.ssa:on stmt: $46load_global.0 = global(get_inverse_doppler_factor_full_relativity: CPUDispatcher(<function get_inverse_doppler_factor_full_relativity at 0x7f6e4a0f6560>))
DEBUG:numba.core.ssa:on stmt: $52call_function.3 = call $46load_global.0(mu, beta, func=$46load_global.0, args=[Var(mu, r_packet.py:264), Var(beta, r_packet.py:266)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $54return_value.4 = cast(value=$52call_function.3)
DEBUG:numba.core.ssa:on stmt: return $54return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$14binary_true_divide.5': [<numba.core.ir.Assign object at 0x7f6e46103e90>],
             '$22binary_multiply.8': [<numba.core.ir.Assign object at 0x7f6e46103990>],
             '$26binary_multiply.10': [<numba.core.ir.Assign object at 0x7f6e46103890>],
             '$30load_global.11': [<numba.core.ir.Assign object at 0x7f6e46103a50>],
             '$32load_attr.12': [<numba.core.ir.Assign object at 0x7f6e46103b50>],
             '$34pred': [<numba.core.ir.Assign object at 0x7f6e46103c90>],
             '$36load_global.0': [<numba.core.ir.Assign object at 0x7f6e46103e10>],
             '$42call_function.3': [<numba.core.ir.Assign object at 0x7f6e45d12e90>],
             '$44return_value.4': [<numba.core.ir.Assign object at 0x7f6e45d127d0>],
             '$46load_global.0': [<numba.core.ir.Assign object at 0x7f6e45d121d0>],
             '$4load_global.1': [<numba.core.ir.Assign object at 0x7f6e46100d50>],
             '$52call_function.3': [<numba.core.ir.Assign object at 0x7f6e45d12950>],
             '$54return_value.4': [<numba.core.ir.Assign object at 0x7f6e45d128d0>],
             '$6binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f6e46100d90>],
             '$const10.3': [<numba.core.ir.Assign object at 0x7f6e46143490>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e461009d0>],
             'beta': [<numba.core.ir.Assign object at 0x7f6e461031d0>],
             'bool34': [<numba.core.ir.Assign object at 0x7f6e46103cd0>],
             'inv_c': [<numba.core.ir.Assign object at 0x7f6e46100750>],
             'inv_t': [<numba.core.ir.Assign object at 0x7f6e46103050>],
             'mu': [<numba.core.ir.Assign object at 0x7f6e46122990>],
             'r': [<numba.core.ir.Assign object at 0x7f6e46122b50>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e46122fd0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=275)
           2	LOAD_CONST(arg=1, lineno=275)
           4	LOAD_CONST(arg=1, lineno=275)
           6	LOAD_FAST(arg=0, lineno=275)
           8	LOAD_FAST(arg=1, lineno=275)
          10	BINARY_MULTIPLY(arg=None, lineno=275)
          12	BINARY_SUBTRACT(arg=None, lineno=275)
          14	BINARY_TRUE_DIVIDE(arg=None, lineno=275)
          16	RETURN_VALUE(arg=None, lineno=275)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=275)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=275)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=275)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=275)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$const4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=275)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$const4.1', '$mu6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_MULTIPLY(arg=None, lineno=275)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$const4.1', '$mu6.2', '$beta8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBTRACT(arg=None, lineno=275)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$const4.1', '$10binary_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=275)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$12binary_subtract.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=RETURN_VALUE(arg=None, lineno=275)
DEBUG:numba.core.byteflow:stack ['$14binary_true_divide.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$mu6.2'}), (8, {'res': '$beta8.3'}), (10, {'lhs': '$mu6.2', 'rhs': '$beta8.3', 'res': '$10binary_multiply.4'}), (12, {'lhs': '$const4.1', 'rhs': '$10binary_multiply.4', 'res': '$12binary_subtract.5'}), (14, {'lhs': '$const2.0', 'rhs': '$12binary_subtract.5', 'res': '$14binary_true_divide.6'}), (16, {'retval': '$14binary_true_divide.6', 'castval': '$16return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    mu = arg(0, name=mu)                     ['mu']
    beta = arg(1, name=beta)                 ['beta']
    $const2.0 = const(float, 1.0)            ['$const2.0']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    $10binary_multiply.4 = mu * beta         ['$10binary_multiply.4', 'beta', 'mu']
    $12binary_subtract.5 = $const4.1 - $10binary_multiply.4 ['$10binary_multiply.4', '$12binary_subtract.5', '$const4.1']
    $14binary_true_divide.6 = $const2.0 / $12binary_subtract.5 ['$12binary_subtract.5', '$14binary_true_divide.6', '$const2.0']
    $16return_value.7 = cast(value=$14binary_true_divide.6) ['$14binary_true_divide.6', '$16return_value.7']
    return $16return_value.7                 ['$16return_value.7']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d12310>
DEBUG:numba.core.ssa:on stmt: mu = arg(0, name=mu)
DEBUG:numba.core.ssa:on stmt: beta = arg(1, name=beta)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $const4.1 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $10binary_multiply.4 = mu * beta
DEBUG:numba.core.ssa:on stmt: $12binary_subtract.5 = $const4.1 - $10binary_multiply.4
DEBUG:numba.core.ssa:on stmt: $14binary_true_divide.6 = $const2.0 / $12binary_subtract.5
DEBUG:numba.core.ssa:on stmt: $16return_value.7 = cast(value=$14binary_true_divide.6)
DEBUG:numba.core.ssa:on stmt: return $16return_value.7
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_multiply.4': [<numba.core.ir.Assign object at 0x7f6e45d25ed0>],
             '$12binary_subtract.5': [<numba.core.ir.Assign object at 0x7f6e46102ed0>],
             '$14binary_true_divide.6': [<numba.core.ir.Assign object at 0x7f6e46102d50>],
             '$16return_value.7': [<numba.core.ir.Assign object at 0x7f6e46102250>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e45d31610>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f6e45d314d0>],
             'beta': [<numba.core.ir.Assign object at 0x7f6e45d317d0>],
             'mu': [<numba.core.ir.Assign object at 0x7f6e45d31890>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=280)
           2	LOAD_CONST(arg=1, lineno=280)
           4	LOAD_FAST(arg=0, lineno=280)
           6	LOAD_FAST(arg=1, lineno=280)
           8	BINARY_MULTIPLY(arg=None, lineno=280)
          10	BINARY_ADD(arg=None, lineno=280)
          12	LOAD_GLOBAL(arg=0, lineno=280)
          14	LOAD_METHOD(arg=1, lineno=280)
          16	LOAD_CONST(arg=2, lineno=280)
          18	LOAD_FAST(arg=1, lineno=280)
          20	LOAD_FAST(arg=1, lineno=280)
          22	BINARY_MULTIPLY(arg=None, lineno=280)
          24	BINARY_SUBTRACT(arg=None, lineno=280)
          26	CALL_METHOD(arg=1, lineno=280)
          28	BINARY_TRUE_DIVIDE(arg=None, lineno=280)
          30	RETURN_VALUE(arg=None, lineno=280)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=280)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=280)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=280)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=280)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$mu4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_MULTIPLY(arg=None, lineno=280)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$mu4.1', '$beta6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_ADD(arg=None, lineno=280)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$8binary_multiply.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=0, lineno=280)
DEBUG:numba.core.byteflow:stack ['$10binary_add.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_METHOD(arg=1, lineno=280)
DEBUG:numba.core.byteflow:stack ['$10binary_add.4', '$12load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_CONST(arg=2, lineno=280)
DEBUG:numba.core.byteflow:stack ['$10binary_add.4', '$14load_method.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=280)
DEBUG:numba.core.byteflow:stack ['$10binary_add.4', '$14load_method.6', '$const16.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=280)
DEBUG:numba.core.byteflow:stack ['$10binary_add.4', '$14load_method.6', '$const16.7', '$beta18.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_MULTIPLY(arg=None, lineno=280)
DEBUG:numba.core.byteflow:stack ['$10binary_add.4', '$14load_method.6', '$const16.7', '$beta18.8', '$beta20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_SUBTRACT(arg=None, lineno=280)
DEBUG:numba.core.byteflow:stack ['$10binary_add.4', '$14load_method.6', '$const16.7', '$22binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=280)
DEBUG:numba.core.byteflow:stack ['$10binary_add.4', '$14load_method.6', '$24binary_subtract.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=280)
DEBUG:numba.core.byteflow:stack ['$10binary_add.4', '$26call_method.12']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=RETURN_VALUE(arg=None, lineno=280)
DEBUG:numba.core.byteflow:stack ['$28binary_true_divide.13']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'res': '$mu4.1'}), (6, {'res': '$beta6.2'}), (8, {'lhs': '$mu4.1', 'rhs': '$beta6.2', 'res': '$8binary_multiply.3'}), (10, {'lhs': '$const2.0', 'rhs': '$8binary_multiply.3', 'res': '$10binary_add.4'}), (12, {'res': '$12load_global.5'}), (14, {'item': '$12load_global.5', 'res': '$14load_method.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$beta18.8'}), (20, {'res': '$beta20.9'}), (22, {'lhs': '$beta18.8', 'rhs': '$beta20.9', 'res': '$22binary_multiply.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_multiply.10', 'res': '$24binary_subtract.11'}), (26, {'func': '$14load_method.6', 'args': ['$24binary_subtract.11'], 'res': '$26call_method.12'}), (28, {'lhs': '$10binary_add.4', 'rhs': '$26call_method.12', 'res': '$28binary_true_divide.13'}), (30, {'retval': '$28binary_true_divide.13', 'castval': '$30return_value.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    mu = arg(0, name=mu)                     ['mu']
    beta = arg(1, name=beta)                 ['beta']
    $const2.0 = const(float, 1.0)            ['$const2.0']
    $8binary_multiply.3 = mu * beta          ['$8binary_multiply.3', 'beta', 'mu']
    $10binary_add.4 = $const2.0 + $8binary_multiply.3 ['$10binary_add.4', '$8binary_multiply.3', '$const2.0']
    $12load_global.5 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>) ['$12load_global.5']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sqrt) ['$12load_global.5', '$14load_method.6']
    $const16.7 = const(int, 1)               ['$const16.7']
    $22binary_multiply.10 = beta * beta      ['$22binary_multiply.10', 'beta', 'beta']
    $24binary_subtract.11 = $const16.7 - $22binary_multiply.10 ['$22binary_multiply.10', '$24binary_subtract.11', '$const16.7']
    $26call_method.12 = call $14load_method.6($24binary_subtract.11, func=$14load_method.6, args=[Var($24binary_subtract.11, r_packet.py:280)], kws=(), vararg=None) ['$14load_method.6', '$24binary_subtract.11', '$26call_method.12']
    $28binary_true_divide.13 = $10binary_add.4 / $26call_method.12 ['$10binary_add.4', '$26call_method.12', '$28binary_true_divide.13']
    $30return_value.14 = cast(value=$28binary_true_divide.13) ['$28binary_true_divide.13', '$30return_value.14']
    return $30return_value.14                ['$30return_value.14']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e463a4b90>
DEBUG:numba.core.ssa:on stmt: mu = arg(0, name=mu)
DEBUG:numba.core.ssa:on stmt: beta = arg(1, name=beta)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $8binary_multiply.3 = mu * beta
DEBUG:numba.core.ssa:on stmt: $10binary_add.4 = $const2.0 + $8binary_multiply.3
DEBUG:numba.core.ssa:on stmt: $12load_global.5 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $14load_method.6 = getattr(value=$12load_global.5, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const16.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.10 = beta * beta
DEBUG:numba.core.ssa:on stmt: $24binary_subtract.11 = $const16.7 - $22binary_multiply.10
DEBUG:numba.core.ssa:on stmt: $26call_method.12 = call $14load_method.6($24binary_subtract.11, func=$14load_method.6, args=[Var($24binary_subtract.11, r_packet.py:280)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $28binary_true_divide.13 = $10binary_add.4 / $26call_method.12
DEBUG:numba.core.ssa:on stmt: $30return_value.14 = cast(value=$28binary_true_divide.13)
DEBUG:numba.core.ssa:on stmt: return $30return_value.14
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_add.4': [<numba.core.ir.Assign object at 0x7f6e45d12b10>],
             '$12load_global.5': [<numba.core.ir.Assign object at 0x7f6e463bfc10>],
             '$14load_method.6': [<numba.core.ir.Assign object at 0x7f6e463bf9d0>],
             '$22binary_multiply.10': [<numba.core.ir.Assign object at 0x7f6e463ac710>],
             '$24binary_subtract.11': [<numba.core.ir.Assign object at 0x7f6e463ac7d0>],
             '$26call_method.12': [<numba.core.ir.Assign object at 0x7f6e463ac590>],
             '$28binary_true_divide.13': [<numba.core.ir.Assign object at 0x7f6e463ac510>],
             '$30return_value.14': [<numba.core.ir.Assign object at 0x7f6e463ac3d0>],
             '$8binary_multiply.3': [<numba.core.ir.Assign object at 0x7f6e45d12bd0>],
             '$const16.7': [<numba.core.ir.Assign object at 0x7f6e463bfa10>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e463acd90>],
             'beta': [<numba.core.ir.Assign object at 0x7f6e463acc50>],
             'mu': [<numba.core.ir.Assign object at 0x7f6e463acbd0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=134)
           2	LOAD_GLOBAL(arg=0, lineno=134)
           4	LOAD_FAST(arg=0, lineno=135)
           6	LOAD_ATTR(arg=1, lineno=135)
           8	LOAD_FAST(arg=0, lineno=136)
          10	LOAD_ATTR(arg=2, lineno=136)
          12	LOAD_FAST(arg=1, lineno=137)
          14	LOAD_ATTR(arg=3, lineno=137)
          16	CALL_FUNCTION(arg=3, lineno=137)
          18	STORE_FAST(arg=2, lineno=137)
          20	LOAD_FAST(arg=0, lineno=139)
          22	DUP_TOP(arg=None, lineno=139)
          24	LOAD_ATTR(arg=4, lineno=139)
          26	LOAD_FAST(arg=2, lineno=139)
          28	INPLACE_MULTIPLY(arg=None, lineno=139)
          30	ROT_TWO(arg=None, lineno=139)
          32	STORE_ATTR(arg=4, lineno=139)
          34	LOAD_FAST(arg=0, lineno=140)
          36	DUP_TOP(arg=None, lineno=140)
          38	LOAD_ATTR(arg=5, lineno=140)
          40	LOAD_FAST(arg=2, lineno=140)
          42	INPLACE_MULTIPLY(arg=None, lineno=140)
          44	ROT_TWO(arg=None, lineno=140)
          46	STORE_ATTR(arg=5, lineno=140)
          48	LOAD_CONST(arg=0, lineno=140)
          50	RETURN_VALUE(arg=None, lineno=140)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=134)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=134)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=135)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=135)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$r_packet4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=136)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=136)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$r_packet8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=137)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$10load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_ATTR(arg=3, lineno=137)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$10load_attr.4', '$numba_model12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_FUNCTION(arg=3, lineno=137)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$10load_attr.4', '$14load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=2, lineno=137)
DEBUG:numba.core.byteflow:stack ['$16call_function.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=139)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=DUP_TOP(arg=None, lineno=139)
DEBUG:numba.core.byteflow:stack ['$r_packet20.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_ATTR(arg=4, lineno=139)
DEBUG:numba.core.byteflow:stack ['$r_packet20.8', '$22dup_top.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=139)
DEBUG:numba.core.byteflow:stack ['$r_packet20.8', '$24load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=INPLACE_MULTIPLY(arg=None, lineno=139)
DEBUG:numba.core.byteflow:stack ['$r_packet20.8', '$24load_attr.10', '$inverse_doppler_factor26.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=ROT_TWO(arg=None, lineno=139)
DEBUG:numba.core.byteflow:stack ['$r_packet20.8', '$28inplace_multiply.12']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_ATTR(arg=4, lineno=139)
DEBUG:numba.core.byteflow:stack ['$28inplace_multiply.12', '$r_packet20.8']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=140)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=DUP_TOP(arg=None, lineno=140)
DEBUG:numba.core.byteflow:stack ['$r_packet34.13']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=140)
DEBUG:numba.core.byteflow:stack ['$r_packet34.13', '$36dup_top.14']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=2, lineno=140)
DEBUG:numba.core.byteflow:stack ['$r_packet34.13', '$38load_attr.15']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=INPLACE_MULTIPLY(arg=None, lineno=140)
DEBUG:numba.core.byteflow:stack ['$r_packet34.13', '$38load_attr.15', '$inverse_doppler_factor40.16']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=ROT_TWO(arg=None, lineno=140)
DEBUG:numba.core.byteflow:stack ['$r_packet34.13', '$42inplace_multiply.17']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_ATTR(arg=5, lineno=140)
DEBUG:numba.core.byteflow:stack ['$42inplace_multiply.17', '$r_packet34.13']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=0, lineno=140)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=RETURN_VALUE(arg=None, lineno=140)
DEBUG:numba.core.byteflow:stack ['$const48.18']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$r_packet4.1'}), (6, {'item': '$r_packet4.1', 'res': '$6load_attr.2'}), (8, {'res': '$r_packet8.3'}), (10, {'item': '$r_packet8.3', 'res': '$10load_attr.4'}), (12, {'res': '$numba_model12.5'}), (14, {'item': '$numba_model12.5', 'res': '$14load_attr.6'}), (16, {'func': '$2load_global.0', 'args': ['$6load_attr.2', '$10load_attr.4', '$14load_attr.6'], 'res': '$16call_function.7'}), (18, {'value': '$16call_function.7'}), (20, {'res': '$r_packet20.8'}), (22, {'orig': ['$r_packet20.8'], 'duped': ['$22dup_top.9']}), (24, {'item': '$22dup_top.9', 'res': '$24load_attr.10'}), (26, {'res': '$inverse_doppler_factor26.11'}), (28, {'lhs': '$24load_attr.10', 'rhs': '$inverse_doppler_factor26.11', 'res': '$28inplace_multiply.12'}), (32, {'target': '$r_packet20.8', 'value': '$28inplace_multiply.12'}), (34, {'res': '$r_packet34.13'}), (36, {'orig': ['$r_packet34.13'], 'duped': ['$36dup_top.14']}), (38, {'item': '$36dup_top.14', 'res': '$38load_attr.15'}), (40, {'res': '$inverse_doppler_factor40.16'}), (42, {'lhs': '$38load_attr.15', 'rhs': '$inverse_doppler_factor40.16', 'res': '$42inplace_multiply.17'}), (46, {'target': '$r_packet34.13', 'value': '$42inplace_multiply.17'}), (48, {'res': '$const48.18'}), (50, {'retval': '$const48.18', 'castval': '$50return_value.19'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    numba_model = arg(1, name=numba_model)   ['numba_model']
    $2load_global.0 = global(get_inverse_doppler_factor: CPUDispatcher(<function get_inverse_doppler_factor at 0x7f6e4a0eff80>)) ['$2load_global.0']
    $6load_attr.2 = getattr(value=r_packet, attr=r) ['$6load_attr.2', 'r_packet']
    $10load_attr.4 = getattr(value=r_packet, attr=mu) ['$10load_attr.4', 'r_packet']
    $14load_attr.6 = getattr(value=numba_model, attr=time_explosion) ['$14load_attr.6', 'numba_model']
    $16call_function.7 = call $2load_global.0($6load_attr.2, $10load_attr.4, $14load_attr.6, func=$2load_global.0, args=[Var($6load_attr.2, single_packet_loop.py:135), Var($10load_attr.4, single_packet_loop.py:136), Var($14load_attr.6, single_packet_loop.py:137)], kws=(), vararg=None) ['$10load_attr.4', '$14load_attr.6', '$16call_function.7', '$2load_global.0', '$6load_attr.2']
    inverse_doppler_factor = $16call_function.7 ['$16call_function.7', 'inverse_doppler_factor']
    $24load_attr.10 = getattr(value=r_packet, attr=nu) ['$24load_attr.10', 'r_packet']
    $28inplace_multiply.12 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$24load_attr.10, rhs=inverse_doppler_factor, static_lhs=Undefined, static_rhs=Undefined) ['$24load_attr.10', '$28inplace_multiply.12', 'inverse_doppler_factor']
    (r_packet).nu = $28inplace_multiply.12   ['$28inplace_multiply.12', 'r_packet']
    $38load_attr.15 = getattr(value=r_packet, attr=energy) ['$38load_attr.15', 'r_packet']
    $42inplace_multiply.17 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$38load_attr.15, rhs=inverse_doppler_factor, static_lhs=Undefined, static_rhs=Undefined) ['$38load_attr.15', '$42inplace_multiply.17', 'inverse_doppler_factor']
    (r_packet).energy = $42inplace_multiply.17 ['$42inplace_multiply.17', 'r_packet']
    $const48.18 = const(NoneType, None)      ['$const48.18']
    $50return_value.19 = cast(value=$const48.18) ['$50return_value.19', '$const48.18']
    return $50return_value.19                ['$50return_value.19']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45cdb050>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(get_inverse_doppler_factor: CPUDispatcher(<function get_inverse_doppler_factor at 0x7f6e4a0eff80>))
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $10load_attr.4 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $14load_attr.6 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $16call_function.7 = call $2load_global.0($6load_attr.2, $10load_attr.4, $14load_attr.6, func=$2load_global.0, args=[Var($6load_attr.2, single_packet_loop.py:135), Var($10load_attr.4, single_packet_loop.py:136), Var($14load_attr.6, single_packet_loop.py:137)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: inverse_doppler_factor = $16call_function.7
DEBUG:numba.core.ssa:on stmt: $24load_attr.10 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $28inplace_multiply.12 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$24load_attr.10, rhs=inverse_doppler_factor, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (r_packet).nu = $28inplace_multiply.12
DEBUG:numba.core.ssa:on stmt: $38load_attr.15 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $42inplace_multiply.17 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$38load_attr.15, rhs=inverse_doppler_factor, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (r_packet).energy = $42inplace_multiply.17
DEBUG:numba.core.ssa:on stmt: $const48.18 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $50return_value.19 = cast(value=$const48.18)
DEBUG:numba.core.ssa:on stmt: return $50return_value.19
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10load_attr.4': [<numba.core.ir.Assign object at 0x7f6e464462d0>],
             '$14load_attr.6': [<numba.core.ir.Assign object at 0x7f6e46446490>],
             '$16call_function.7': [<numba.core.ir.Assign object at 0x7f6e46446590>],
             '$24load_attr.10': [<numba.core.ir.Assign object at 0x7f6e46446890>],
             '$28inplace_multiply.12': [<numba.core.ir.Assign object at 0x7f6e46446a50>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e45d64e50>],
             '$38load_attr.15': [<numba.core.ir.Assign object at 0x7f6e46446dd0>],
             '$42inplace_multiply.17': [<numba.core.ir.Assign object at 0x7f6e46446f90>],
             '$50return_value.19': [<numba.core.ir.Assign object at 0x7f6e46419290>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7f6e464460d0>],
             '$const48.18': [<numba.core.ir.Assign object at 0x7f6e46419150>],
             'inverse_doppler_factor': [<numba.core.ir.Assign object at 0x7f6e46446610>],
             'numba_model': [<numba.core.ir.Assign object at 0x7f6e45d64d10>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e45d64c90>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=72)
           2	LOAD_FAST(arg=1, lineno=72)
           4	LOAD_ATTR(arg=0, lineno=72)
           6	LOAD_CONST(arg=0, lineno=72)
           8	LOAD_CONST(arg=0, lineno=72)
          10	LOAD_CONST(arg=1, lineno=72)
          12	BUILD_SLICE(arg=3, lineno=72)
          14	BINARY_SUBSCR(arg=None, lineno=72)
          16	STORE_FAST(arg=3, lineno=72)
          18	LOAD_GLOBAL(arg=1, lineno=73)
          20	LOAD_FAST(arg=0, lineno=74)
          22	LOAD_ATTR(arg=2, lineno=74)
          24	LOAD_FAST(arg=0, lineno=74)
          26	LOAD_ATTR(arg=3, lineno=74)
          28	LOAD_FAST(arg=2, lineno=74)
          30	LOAD_ATTR(arg=4, lineno=74)
          32	CALL_FUNCTION(arg=3, lineno=74)
          34	STORE_FAST(arg=4, lineno=74)
          36	LOAD_FAST(arg=0, lineno=76)
          38	LOAD_ATTR(arg=5, lineno=76)
          40	LOAD_FAST(arg=4, lineno=76)
          42	BINARY_MULTIPLY(arg=None, lineno=76)
          44	STORE_FAST(arg=5, lineno=76)
          46	LOAD_GLOBAL(arg=6, lineno=77)
          48	LOAD_FAST(arg=1, lineno=77)
          50	LOAD_ATTR(arg=0, lineno=77)
          52	CALL_FUNCTION(arg=1, lineno=77)
          54	LOAD_GLOBAL(arg=7, lineno=77)
          56	LOAD_METHOD(arg=8, lineno=77)
          58	LOAD_FAST(arg=3, lineno=78)
          60	LOAD_FAST(arg=5, lineno=78)
          62	CALL_METHOD(arg=2, lineno=78)
          64	BINARY_SUBTRACT(arg=None, lineno=78)
          66	STORE_FAST(arg=6, lineno=78)
          68	LOAD_FAST(arg=6, lineno=80)
          70	LOAD_GLOBAL(arg=6, lineno=80)
          72	LOAD_FAST(arg=1, lineno=80)
          74	LOAD_ATTR(arg=0, lineno=80)
          76	CALL_FUNCTION(arg=1, lineno=80)
          78	COMPARE_OP(arg=2, lineno=80)
          80	POP_JUMP_IF_FALSE(arg=90, lineno=80)
          82	LOAD_FAST(arg=6, lineno=81)
          84	LOAD_CONST(arg=2, lineno=81)
          86	INPLACE_SUBTRACT(arg=None, lineno=81)
          88	STORE_FAST(arg=6, lineno=81)
>         90	LOAD_FAST(arg=6, lineno=82)
          92	LOAD_FAST(arg=0, lineno=82)
          94	STORE_ATTR(arg=9, lineno=82)
          96	LOAD_CONST(arg=0, lineno=82)
          98	RETURN_VALUE(arg=None, lineno=82)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=72)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack ['$numba_plasma2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$const6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$const6.2', '$const8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BUILD_SLICE(arg=3, lineno=72)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$const6.2', '$const8.3', '$const10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_SUBSCR(arg=None, lineno=72)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$12build_slice.6']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=3, lineno=72)
DEBUG:numba.core.byteflow:stack ['$14binary_subscr.7']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=73)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=74)
DEBUG:numba.core.byteflow:stack ['$18load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=74)
DEBUG:numba.core.byteflow:stack ['$18load_global.8', '$self20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=74)
DEBUG:numba.core.byteflow:stack ['$18load_global.8', '$22load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_ATTR(arg=3, lineno=74)
DEBUG:numba.core.byteflow:stack ['$18load_global.8', '$22load_attr.10', '$self24.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=2, lineno=74)
DEBUG:numba.core.byteflow:stack ['$18load_global.8', '$22load_attr.10', '$26load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=4, lineno=74)
DEBUG:numba.core.byteflow:stack ['$18load_global.8', '$22load_attr.10', '$26load_attr.12', '$numba_model28.13']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=CALL_FUNCTION(arg=3, lineno=74)
DEBUG:numba.core.byteflow:stack ['$18load_global.8', '$22load_attr.10', '$26load_attr.12', '$30load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=4, lineno=74)
DEBUG:numba.core.byteflow:stack ['$32call_function.15']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=76)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=76)
DEBUG:numba.core.byteflow:stack ['$self36.16']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=4, lineno=76)
DEBUG:numba.core.byteflow:stack ['$38load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_MULTIPLY(arg=None, lineno=76)
DEBUG:numba.core.byteflow:stack ['$38load_attr.17', '$doppler_factor40.18']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_FAST(arg=5, lineno=76)
DEBUG:numba.core.byteflow:stack ['$42binary_multiply.19']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_GLOBAL(arg=6, lineno=77)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=77)
DEBUG:numba.core.byteflow:stack ['$46load_global.20']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_ATTR(arg=0, lineno=77)
DEBUG:numba.core.byteflow:stack ['$46load_global.20', '$numba_plasma48.21']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=CALL_FUNCTION(arg=1, lineno=77)
DEBUG:numba.core.byteflow:stack ['$46load_global.20', '$50load_attr.22']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=7, lineno=77)
DEBUG:numba.core.byteflow:stack ['$52call_function.23']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_METHOD(arg=8, lineno=77)
DEBUG:numba.core.byteflow:stack ['$52call_function.23', '$54load_global.24']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=3, lineno=78)
DEBUG:numba.core.byteflow:stack ['$52call_function.23', '$56load_method.25']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=5, lineno=78)
DEBUG:numba.core.byteflow:stack ['$52call_function.23', '$56load_method.25', '$inverse_line_list_nu58.26']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=CALL_METHOD(arg=2, lineno=78)
DEBUG:numba.core.byteflow:stack ['$52call_function.23', '$56load_method.25', '$inverse_line_list_nu58.26', '$comov_nu60.27']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=BINARY_SUBTRACT(arg=None, lineno=78)
DEBUG:numba.core.byteflow:stack ['$52call_function.23', '$62call_method.28']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=STORE_FAST(arg=6, lineno=78)
DEBUG:numba.core.byteflow:stack ['$64binary_subtract.29']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=6, lineno=80)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_GLOBAL(arg=6, lineno=80)
DEBUG:numba.core.byteflow:stack ['$next_line_id68.30']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack ['$next_line_id68.30', '$70load_global.31']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_ATTR(arg=0, lineno=80)
DEBUG:numba.core.byteflow:stack ['$next_line_id68.30', '$70load_global.31', '$numba_plasma72.32']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack ['$next_line_id68.30', '$70load_global.31', '$74load_attr.33']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=COMPARE_OP(arg=2, lineno=80)
DEBUG:numba.core.byteflow:stack ['$next_line_id68.30', '$76call_function.34']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=90, lineno=80)
DEBUG:numba.core.byteflow:stack ['$78compare_op.35']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=90, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=90 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=6, lineno=81)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=81)
DEBUG:numba.core.byteflow:stack ['$next_line_id82.0']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=INPLACE_SUBTRACT(arg=None, lineno=81)
DEBUG:numba.core.byteflow:stack ['$next_line_id82.0', '$const84.1']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=STORE_FAST(arg=6, lineno=81)
DEBUG:numba.core.byteflow:stack ['$86inplace_subtract.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=90 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=6, lineno=82)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=0, lineno=82)
DEBUG:numba.core.byteflow:stack ['$next_line_id90.0']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=STORE_ATTR(arg=9, lineno=82)
DEBUG:numba.core.byteflow:stack ['$next_line_id90.0', '$self92.1']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_CONST(arg=0, lineno=82)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=RETURN_VALUE(arg=None, lineno=82)
DEBUG:numba.core.byteflow:stack ['$const96.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=90 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=90 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$numba_plasma2.0'}), (4, {'item': '$numba_plasma2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'res': '$const8.3'}), (10, {'res': '$const10.4'}), (12, {'start': '$const6.2', 'stop': '$const8.3', 'step': '$const10.4', 'res': '$12build_slice.6', 'slicevar': '$12build_slice.5'}), (14, {'index': '$12build_slice.6', 'target': '$4load_attr.1', 'res': '$14binary_subscr.7'}), (16, {'value': '$14binary_subscr.7'}), (18, {'res': '$18load_global.8'}), (20, {'res': '$self20.9'}), (22, {'item': '$self20.9', 'res': '$22load_attr.10'}), (24, {'res': '$self24.11'}), (26, {'item': '$self24.11', 'res': '$26load_attr.12'}), (28, {'res': '$numba_model28.13'}), (30, {'item': '$numba_model28.13', 'res': '$30load_attr.14'}), (32, {'func': '$18load_global.8', 'args': ['$22load_attr.10', '$26load_attr.12', '$30load_attr.14'], 'res': '$32call_function.15'}), (34, {'value': '$32call_function.15'}), (36, {'res': '$self36.16'}), (38, {'item': '$self36.16', 'res': '$38load_attr.17'}), (40, {'res': '$doppler_factor40.18'}), (42, {'lhs': '$38load_attr.17', 'rhs': '$doppler_factor40.18', 'res': '$42binary_multiply.19'}), (44, {'value': '$42binary_multiply.19'}), (46, {'res': '$46load_global.20'}), (48, {'res': '$numba_plasma48.21'}), (50, {'item': '$numba_plasma48.21', 'res': '$50load_attr.22'}), (52, {'func': '$46load_global.20', 'args': ['$50load_attr.22'], 'res': '$52call_function.23'}), (54, {'res': '$54load_global.24'}), (56, {'item': '$54load_global.24', 'res': '$56load_method.25'}), (58, {'res': '$inverse_line_list_nu58.26'}), (60, {'res': '$comov_nu60.27'}), (62, {'func': '$56load_method.25', 'args': ['$inverse_line_list_nu58.26', '$comov_nu60.27'], 'res': '$62call_method.28'}), (64, {'lhs': '$52call_function.23', 'rhs': '$62call_method.28', 'res': '$64binary_subtract.29'}), (66, {'value': '$64binary_subtract.29'}), (68, {'res': '$next_line_id68.30'}), (70, {'res': '$70load_global.31'}), (72, {'res': '$numba_plasma72.32'}), (74, {'item': '$numba_plasma72.32', 'res': '$74load_attr.33'}), (76, {'func': '$70load_global.31', 'args': ['$74load_attr.33'], 'res': '$76call_function.34'}), (78, {'lhs': '$next_line_id68.30', 'rhs': '$76call_function.34', 'res': '$78compare_op.35'}), (80, {'pred': '$78compare_op.35'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 90: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$next_line_id82.0'}), (84, {'res': '$const84.1'}), (86, {'lhs': '$next_line_id82.0', 'rhs': '$const84.1', 'res': '$86inplace_subtract.2'}), (88, {'value': '$86inplace_subtract.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$next_line_id90.0'}), (92, {'res': '$self92.1'}), (94, {'target': '$self92.1', 'value': '$next_line_id90.0'}), (96, {'res': '$const96.2'}), (98, {'retval': '$const96.2', 'castval': '$98return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    self = arg(0, name=self)                 ['self']
    numba_plasma = arg(1, name=numba_plasma) ['numba_plasma']
    numba_model = arg(2, name=numba_model)   ['numba_model']
    $4load_attr.1 = getattr(value=numba_plasma, attr=line_list_nu) ['$4load_attr.1', 'numba_plasma']
    $const6.2 = const(NoneType, None)        ['$const6.2']
    $const8.3 = const(NoneType, None)        ['$const8.3']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12build_slice.5 = global(slice: <class 'slice'>) ['$12build_slice.5']
    $12build_slice.6 = call $12build_slice.5($const6.2, $const8.3, $const10.4, func=$12build_slice.5, args=(Var($const6.2, r_packet.py:72), Var($const8.3, r_packet.py:72), Var($const10.4, r_packet.py:72)), kws=(), vararg=None) ['$12build_slice.5', '$12build_slice.6', '$const10.4', '$const6.2', '$const8.3']
    $14binary_subscr.7 = getitem(value=$4load_attr.1, index=$12build_slice.6) ['$12build_slice.6', '$14binary_subscr.7', '$4load_attr.1']
    inverse_line_list_nu = $14binary_subscr.7 ['$14binary_subscr.7', 'inverse_line_list_nu']
    $18load_global.8 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>)) ['$18load_global.8']
    $22load_attr.10 = getattr(value=self, attr=r) ['$22load_attr.10', 'self']
    $26load_attr.12 = getattr(value=self, attr=mu) ['$26load_attr.12', 'self']
    $30load_attr.14 = getattr(value=numba_model, attr=time_explosion) ['$30load_attr.14', 'numba_model']
    $32call_function.15 = call $18load_global.8($22load_attr.10, $26load_attr.12, $30load_attr.14, func=$18load_global.8, args=[Var($22load_attr.10, r_packet.py:74), Var($26load_attr.12, r_packet.py:74), Var($30load_attr.14, r_packet.py:74)], kws=(), vararg=None) ['$18load_global.8', '$22load_attr.10', '$26load_attr.12', '$30load_attr.14', '$32call_function.15']
    doppler_factor = $32call_function.15     ['$32call_function.15', 'doppler_factor']
    $38load_attr.17 = getattr(value=self, attr=nu) ['$38load_attr.17', 'self']
    $42binary_multiply.19 = $38load_attr.17 * doppler_factor ['$38load_attr.17', '$42binary_multiply.19', 'doppler_factor']
    comov_nu = $42binary_multiply.19         ['$42binary_multiply.19', 'comov_nu']
    $46load_global.20 = global(len: <built-in function len>) ['$46load_global.20']
    $50load_attr.22 = getattr(value=numba_plasma, attr=line_list_nu) ['$50load_attr.22', 'numba_plasma']
    $52call_function.23 = call $46load_global.20($50load_attr.22, func=$46load_global.20, args=[Var($50load_attr.22, r_packet.py:77)], kws=(), vararg=None) ['$46load_global.20', '$50load_attr.22', '$52call_function.23']
    $54load_global.24 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$54load_global.24']
    $56load_method.25 = getattr(value=$54load_global.24, attr=searchsorted) ['$54load_global.24', '$56load_method.25']
    $62call_method.28 = call $56load_method.25(inverse_line_list_nu, comov_nu, func=$56load_method.25, args=[Var(inverse_line_list_nu, r_packet.py:72), Var(comov_nu, r_packet.py:76)], kws=(), vararg=None) ['$56load_method.25', '$62call_method.28', 'comov_nu', 'inverse_line_list_nu']
    $64binary_subtract.29 = $52call_function.23 - $62call_method.28 ['$52call_function.23', '$62call_method.28', '$64binary_subtract.29']
    next_line_id = $64binary_subtract.29     ['$64binary_subtract.29', 'next_line_id']
    $70load_global.31 = global(len: <built-in function len>) ['$70load_global.31']
    $74load_attr.33 = getattr(value=numba_plasma, attr=line_list_nu) ['$74load_attr.33', 'numba_plasma']
    $76call_function.34 = call $70load_global.31($74load_attr.33, func=$70load_global.31, args=[Var($74load_attr.33, r_packet.py:80)], kws=(), vararg=None) ['$70load_global.31', '$74load_attr.33', '$76call_function.34']
    $78compare_op.35 = next_line_id == $76call_function.34 ['$76call_function.34', '$78compare_op.35', 'next_line_id']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80($78compare_op.35, func=bool80, args=(Var($78compare_op.35, r_packet.py:80),), kws=(), vararg=None) ['$78compare_op.35', '$80pred', 'bool80']
    branch $80pred, 82, 90                   ['$80pred']
label 82:
    $const84.1 = const(int, 1)               ['$const84.1']
    $86inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=next_line_id, rhs=$const84.1, static_lhs=Undefined, static_rhs=Undefined) ['$86inplace_subtract.2', '$const84.1', 'next_line_id']
    next_line_id = $86inplace_subtract.2     ['$86inplace_subtract.2', 'next_line_id']
    jump 90                                  []
label 90:
    (self).next_line_id = next_line_id       ['next_line_id', 'self']
    $const96.2 = const(NoneType, None)       ['$const96.2']
    $98return_value.3 = cast(value=$const96.2) ['$98return_value.3', '$const96.2']
    return $98return_value.3                 ['$98return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45c94950>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(1, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(2, name=numba_model)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const6.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const8.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $12build_slice.5 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $12build_slice.6 = call $12build_slice.5($const6.2, $const8.3, $const10.4, func=$12build_slice.5, args=(Var($const6.2, r_packet.py:72), Var($const8.3, r_packet.py:72), Var($const10.4, r_packet.py:72)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $14binary_subscr.7 = static_getitem(value=$4load_attr.1, index=slice(None, None, -1), index_var=$12build_slice.6)
DEBUG:numba.core.ssa:on stmt: inverse_line_list_nu = $14binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $18load_global.8 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $22load_attr.10 = getattr(value=self, attr=r)
DEBUG:numba.core.ssa:on stmt: $26load_attr.12 = getattr(value=self, attr=mu)
DEBUG:numba.core.ssa:on stmt: $30load_attr.14 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $32call_function.15 = call $18load_global.8($22load_attr.10, $26load_attr.12, $30load_attr.14, func=$18load_global.8, args=[Var($22load_attr.10, r_packet.py:74), Var($26load_attr.12, r_packet.py:74), Var($30load_attr.14, r_packet.py:74)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $32call_function.15
DEBUG:numba.core.ssa:on stmt: $38load_attr.17 = getattr(value=self, attr=nu)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.19 = $38load_attr.17 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $42binary_multiply.19
DEBUG:numba.core.ssa:on stmt: $46load_global.20 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $52call_function.23 = call $46load_global.20($50load_attr.22, func=$46load_global.20, args=[Var($50load_attr.22, r_packet.py:77)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $54load_global.24 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.25 = getattr(value=$54load_global.24, attr=searchsorted)
DEBUG:numba.core.ssa:on stmt: $62call_method.28 = call $56load_method.25(inverse_line_list_nu, comov_nu, func=$56load_method.25, args=[Var(inverse_line_list_nu, r_packet.py:72), Var(comov_nu, r_packet.py:76)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $64binary_subtract.29 = $52call_function.23 - $62call_method.28
DEBUG:numba.core.ssa:on stmt: next_line_id = $64binary_subtract.29
DEBUG:numba.core.ssa:on stmt: $70load_global.31 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $74load_attr.33 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $76call_function.34 = call $70load_global.31($74load_attr.33, func=$70load_global.31, args=[Var($74load_attr.33, r_packet.py:80)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $78compare_op.35 = next_line_id == $76call_function.34
DEBUG:numba.core.ssa:on stmt: bool80 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $80pred = call bool80($78compare_op.35, func=bool80, args=(Var($78compare_op.35, r_packet.py:80),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $80pred, 82, 90
DEBUG:numba.core.ssa:==== SSA block analysis pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45c94950>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $86inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=next_line_id, rhs=$const84.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: next_line_id = $86inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: jump 90
DEBUG:numba.core.ssa:==== SSA block analysis pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45c94950>
DEBUG:numba.core.ssa:on stmt: (self).next_line_id = next_line_id
DEBUG:numba.core.ssa:on stmt: $const96.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $98return_value.3 = cast(value=$const96.2)
DEBUG:numba.core.ssa:on stmt: return $98return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12build_slice.5': [<numba.core.ir.Assign object at 0x7f6e45de2250>],
             '$12build_slice.6': [<numba.core.ir.Assign object at 0x7f6e45de2350>],
             '$14binary_subscr.7': [<numba.core.ir.Assign object at 0x7f6e45afa6d0>],
             '$18load_global.8': [<numba.core.ir.Assign object at 0x7f6e45df2f90>],
             '$22load_attr.10': [<numba.core.ir.Assign object at 0x7f6e45df2a10>],
             '$26load_attr.12': [<numba.core.ir.Assign object at 0x7f6e45df2790>],
             '$30load_attr.14': [<numba.core.ir.Assign object at 0x7f6e45df2650>],
             '$32call_function.15': [<numba.core.ir.Assign object at 0x7f6e45df2590>],
             '$38load_attr.17': [<numba.core.ir.Assign object at 0x7f6e45df2290>],
             '$42binary_multiply.19': [<numba.core.ir.Assign object at 0x7f6e45df2c10>],
             '$46load_global.20': [<numba.core.ir.Assign object at 0x7f6e45df2d90>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45de2910>],
             '$50load_attr.22': [<numba.core.ir.Assign object at 0x7f6e45df2810>],
             '$52call_function.23': [<numba.core.ir.Assign object at 0x7f6e45df2090>],
             '$54load_global.24': [<numba.core.ir.Assign object at 0x7f6e45aef0d0>],
             '$56load_method.25': [<numba.core.ir.Assign object at 0x7f6e45aef1d0>],
             '$62call_method.28': [<numba.core.ir.Assign object at 0x7f6e45aef4d0>],
             '$64binary_subtract.29': [<numba.core.ir.Assign object at 0x7f6e45aef550>],
             '$70load_global.31': [<numba.core.ir.Assign object at 0x7f6e45aef790>],
             '$74load_attr.33': [<numba.core.ir.Assign object at 0x7f6e45aef9d0>],
             '$76call_function.34': [<numba.core.ir.Assign object at 0x7f6e45aefb10>],
             '$78compare_op.35': [<numba.core.ir.Assign object at 0x7f6e45aefc10>],
             '$80pred': [<numba.core.ir.Assign object at 0x7f6e45aefe50>],
             '$86inplace_subtract.2': [<numba.core.ir.Assign object at 0x7f6e45aeff10>],
             '$98return_value.3': [<numba.core.ir.Assign object at 0x7f6e45afaad0>],
             '$const10.4': [<numba.core.ir.Assign object at 0x7f6e45de2150>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7f6e45de26d0>],
             '$const8.3': [<numba.core.ir.Assign object at 0x7f6e45de22d0>],
             '$const84.1': [<numba.core.ir.Assign object at 0x7f6e45aef350>],
             '$const96.2': [<numba.core.ir.Assign object at 0x7f6e45afab90>],
             'bool80': [<numba.core.ir.Assign object at 0x7f6e45aefd50>],
             'comov_nu': [<numba.core.ir.Assign object at 0x7f6e45df2c90>],
             'doppler_factor': [<numba.core.ir.Assign object at 0x7f6e45df2490>],
             'inverse_line_list_nu': [<numba.core.ir.Assign object at 0x7f6e45de2e90>],
             'next_line_id': [<numba.core.ir.Assign object at 0x7f6e45aef610>,
                              <numba.core.ir.Assign object at 0x7f6e45aef5d0>],
             'numba_model': [<numba.core.ir.Assign object at 0x7f6e45de2a50>],
             'numba_plasma': [<numba.core.ir.Assign object at 0x7f6e45de25d0>],
             'self': [<numba.core.ir.Assign object at 0x7f6e45de2f10>]})
DEBUG:numba.core.ssa:SSA violators {'next_line_id'}
DEBUG:numba.core.ssa:Fix SSA violator on var next_line_id
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45aef150>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(1, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(2, name=numba_model)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const6.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const8.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $12build_slice.5 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $12build_slice.6 = call $12build_slice.5($const6.2, $const8.3, $const10.4, func=$12build_slice.5, args=(Var($const6.2, r_packet.py:72), Var($const8.3, r_packet.py:72), Var($const10.4, r_packet.py:72)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $14binary_subscr.7 = static_getitem(value=$4load_attr.1, index=slice(None, None, -1), index_var=$12build_slice.6)
DEBUG:numba.core.ssa:on stmt: inverse_line_list_nu = $14binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $18load_global.8 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $22load_attr.10 = getattr(value=self, attr=r)
DEBUG:numba.core.ssa:on stmt: $26load_attr.12 = getattr(value=self, attr=mu)
DEBUG:numba.core.ssa:on stmt: $30load_attr.14 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $32call_function.15 = call $18load_global.8($22load_attr.10, $26load_attr.12, $30load_attr.14, func=$18load_global.8, args=[Var($22load_attr.10, r_packet.py:74), Var($26load_attr.12, r_packet.py:74), Var($30load_attr.14, r_packet.py:74)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $32call_function.15
DEBUG:numba.core.ssa:on stmt: $38load_attr.17 = getattr(value=self, attr=nu)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.19 = $38load_attr.17 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $42binary_multiply.19
DEBUG:numba.core.ssa:on stmt: $46load_global.20 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $52call_function.23 = call $46load_global.20($50load_attr.22, func=$46load_global.20, args=[Var($50load_attr.22, r_packet.py:77)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $54load_global.24 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.25 = getattr(value=$54load_global.24, attr=searchsorted)
DEBUG:numba.core.ssa:on stmt: $62call_method.28 = call $56load_method.25(inverse_line_list_nu, comov_nu, func=$56load_method.25, args=[Var(inverse_line_list_nu, r_packet.py:72), Var(comov_nu, r_packet.py:76)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $64binary_subtract.29 = $52call_function.23 - $62call_method.28
DEBUG:numba.core.ssa:on stmt: next_line_id = $64binary_subtract.29
DEBUG:numba.core.ssa:first assign: next_line_id
DEBUG:numba.core.ssa:replaced with: next_line_id = $64binary_subtract.29
DEBUG:numba.core.ssa:on stmt: $70load_global.31 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $74load_attr.33 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $76call_function.34 = call $70load_global.31($74load_attr.33, func=$70load_global.31, args=[Var($74load_attr.33, r_packet.py:80)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $78compare_op.35 = next_line_id == $76call_function.34
DEBUG:numba.core.ssa:on stmt: bool80 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $80pred = call bool80($78compare_op.35, func=bool80, args=(Var($78compare_op.35, r_packet.py:80),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $80pred, 82, 90
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45aef150>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $86inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=next_line_id, rhs=$const84.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: next_line_id = $86inplace_subtract.2
DEBUG:numba.core.ssa:replaced with: next_line_id.1 = $86inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: jump 90
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45aef150>
DEBUG:numba.core.ssa:on stmt: (self).next_line_id = next_line_id
DEBUG:numba.core.ssa:on stmt: $const96.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $98return_value.3 = cast(value=$const96.2)
DEBUG:numba.core.ssa:on stmt: return $98return_value.3
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e45c94510>],
             82: [<numba.core.ir.Assign object at 0x7f6e45c94310>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45c94490>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(1, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(2, name=numba_model)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const6.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const8.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const10.4 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $12build_slice.5 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $12build_slice.6 = call $12build_slice.5($const6.2, $const8.3, $const10.4, func=$12build_slice.5, args=(Var($const6.2, r_packet.py:72), Var($const8.3, r_packet.py:72), Var($const10.4, r_packet.py:72)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $14binary_subscr.7 = static_getitem(value=$4load_attr.1, index=slice(None, None, -1), index_var=$12build_slice.6)
DEBUG:numba.core.ssa:on stmt: inverse_line_list_nu = $14binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $18load_global.8 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $22load_attr.10 = getattr(value=self, attr=r)
DEBUG:numba.core.ssa:on stmt: $26load_attr.12 = getattr(value=self, attr=mu)
DEBUG:numba.core.ssa:on stmt: $30load_attr.14 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $32call_function.15 = call $18load_global.8($22load_attr.10, $26load_attr.12, $30load_attr.14, func=$18load_global.8, args=[Var($22load_attr.10, r_packet.py:74), Var($26load_attr.12, r_packet.py:74), Var($30load_attr.14, r_packet.py:74)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $32call_function.15
DEBUG:numba.core.ssa:on stmt: $38load_attr.17 = getattr(value=self, attr=nu)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.19 = $38load_attr.17 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $42binary_multiply.19
DEBUG:numba.core.ssa:on stmt: $46load_global.20 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $52call_function.23 = call $46load_global.20($50load_attr.22, func=$46load_global.20, args=[Var($50load_attr.22, r_packet.py:77)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $54load_global.24 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.25 = getattr(value=$54load_global.24, attr=searchsorted)
DEBUG:numba.core.ssa:on stmt: $62call_method.28 = call $56load_method.25(inverse_line_list_nu, comov_nu, func=$56load_method.25, args=[Var(inverse_line_list_nu, r_packet.py:72), Var(comov_nu, r_packet.py:76)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $64binary_subtract.29 = $52call_function.23 - $62call_method.28
DEBUG:numba.core.ssa:on stmt: next_line_id = $64binary_subtract.29
DEBUG:numba.core.ssa:on stmt: $70load_global.31 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $74load_attr.33 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $76call_function.34 = call $70load_global.31($74load_attr.33, func=$70load_global.31, args=[Var($74load_attr.33, r_packet.py:80)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $78compare_op.35 = next_line_id == $76call_function.34
DEBUG:numba.core.ssa:find_def var='next_line_id' stmt=$78compare_op.35 = next_line_id == $76call_function.34
DEBUG:numba.core.ssa:on stmt: bool80 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $80pred = call bool80($78compare_op.35, func=bool80, args=(Var($78compare_op.35, r_packet.py:80),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $80pred, 82, 90
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45c94490>
DEBUG:numba.core.ssa:on stmt: $const84.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $86inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=next_line_id, rhs=$const84.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='next_line_id' stmt=$86inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=next_line_id, rhs=$const84.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 82
DEBUG:numba.core.ssa:idom 0 from label 82
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:on stmt: next_line_id.1 = $86inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: jump 90
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45c94490>
DEBUG:numba.core.ssa:on stmt: (self).next_line_id = next_line_id
DEBUG:numba.core.ssa:find_def var='next_line_id' stmt=(self).next_line_id = next_line_id
DEBUG:numba.core.ssa:find_def_from_top label 90
DEBUG:numba.core.ssa:insert phi node next_line_id.2 = phi(incoming_values=[], incoming_blocks=[]) at 90
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def next_line_id = $64binary_subtract.29
DEBUG:numba.core.ssa:find_def_from_bottom label 82
DEBUG:numba.core.ssa:incoming_def next_line_id.1 = $86inplace_subtract.2
DEBUG:numba.core.ssa:replaced with: (self).next_line_id = next_line_id.2
DEBUG:numba.core.ssa:on stmt: $const96.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $98return_value.3 = cast(value=$const96.2)
DEBUG:numba.core.ssa:on stmt: return $98return_value.3
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=234)
           2	LOAD_CONST(arg=1, lineno=234)
           4	LOAD_GLOBAL(arg=0, lineno=234)
           6	BINARY_TRUE_DIVIDE(arg=None, lineno=234)
           8	STORE_FAST(arg=3, lineno=234)
          10	LOAD_CONST(arg=1, lineno=235)
          12	LOAD_FAST(arg=2, lineno=235)
          14	BINARY_TRUE_DIVIDE(arg=None, lineno=235)
          16	STORE_FAST(arg=4, lineno=235)
          18	LOAD_FAST(arg=0, lineno=236)
          20	LOAD_FAST(arg=4, lineno=236)
          22	BINARY_MULTIPLY(arg=None, lineno=236)
          24	LOAD_FAST(arg=3, lineno=236)
          26	BINARY_MULTIPLY(arg=None, lineno=236)
          28	STORE_FAST(arg=5, lineno=236)
          30	LOAD_GLOBAL(arg=1, lineno=237)
          32	LOAD_ATTR(arg=2, lineno=237)
          34	POP_JUMP_IF_TRUE(arg=46, lineno=237)
          36	LOAD_GLOBAL(arg=3, lineno=238)
          38	LOAD_FAST(arg=1, lineno=238)
          40	LOAD_FAST(arg=5, lineno=238)
          42	CALL_FUNCTION(arg=2, lineno=238)
          44	RETURN_VALUE(arg=None, lineno=238)
>         46	LOAD_GLOBAL(arg=4, lineno=240)
          48	LOAD_FAST(arg=1, lineno=240)
          50	LOAD_FAST(arg=5, lineno=240)
          52	CALL_FUNCTION(arg=2, lineno=240)
          54	RETURN_VALUE(arg=None, lineno=240)
          56	LOAD_CONST(arg=0, lineno=240)
          58	RETURN_VALUE(arg=None, lineno=240)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=234)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=234)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=234)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=234)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$4load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=234)
DEBUG:numba.core.byteflow:stack ['$6binary_true_divide.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=235)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=235)
DEBUG:numba.core.byteflow:stack ['$const10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=235)
DEBUG:numba.core.byteflow:stack ['$const10.3', '$time_explosion12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=4, lineno=235)
DEBUG:numba.core.byteflow:stack ['$14binary_true_divide.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=236)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=4, lineno=236)
DEBUG:numba.core.byteflow:stack ['$r18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_MULTIPLY(arg=None, lineno=236)
DEBUG:numba.core.byteflow:stack ['$r18.6', '$inv_t20.7']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=236)
DEBUG:numba.core.byteflow:stack ['$22binary_multiply.8']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_MULTIPLY(arg=None, lineno=236)
DEBUG:numba.core.byteflow:stack ['$22binary_multiply.8', '$inv_c24.9']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_FAST(arg=5, lineno=236)
DEBUG:numba.core.byteflow:stack ['$26binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=237)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_ATTR(arg=2, lineno=237)
DEBUG:numba.core.byteflow:stack ['$30load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=POP_JUMP_IF_TRUE(arg=46, lineno=237)
DEBUG:numba.core.byteflow:stack ['$32load_attr.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0), Edge(pc=46, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=46 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_GLOBAL(arg=3, lineno=238)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=238)
DEBUG:numba.core.byteflow:stack ['$36load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=5, lineno=238)
DEBUG:numba.core.byteflow:stack ['$36load_global.0', '$mu38.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=CALL_FUNCTION(arg=2, lineno=238)
DEBUG:numba.core.byteflow:stack ['$36load_global.0', '$mu38.1', '$beta40.2']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=238)
DEBUG:numba.core.byteflow:stack ['$42call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=46 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_GLOBAL(arg=4, lineno=240)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=240)
DEBUG:numba.core.byteflow:stack ['$46load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=240)
DEBUG:numba.core.byteflow:stack ['$46load_global.0', '$mu48.1']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=CALL_FUNCTION(arg=2, lineno=240)
DEBUG:numba.core.byteflow:stack ['$46load_global.0', '$mu48.1', '$beta50.2']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=240)
DEBUG:numba.core.byteflow:stack ['$52call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=46 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'res': '$4load_global.1'}), (6, {'lhs': '$const2.0', 'rhs': '$4load_global.1', 'res': '$6binary_true_divide.2'}), (8, {'value': '$6binary_true_divide.2'}), (10, {'res': '$const10.3'}), (12, {'res': '$time_explosion12.4'}), (14, {'lhs': '$const10.3', 'rhs': '$time_explosion12.4', 'res': '$14binary_true_divide.5'}), (16, {'value': '$14binary_true_divide.5'}), (18, {'res': '$r18.6'}), (20, {'res': '$inv_t20.7'}), (22, {'lhs': '$r18.6', 'rhs': '$inv_t20.7', 'res': '$22binary_multiply.8'}), (24, {'res': '$inv_c24.9'}), (26, {'lhs': '$22binary_multiply.8', 'rhs': '$inv_c24.9', 'res': '$26binary_multiply.10'}), (28, {'value': '$26binary_multiply.10'}), (30, {'res': '$30load_global.11'}), (32, {'item': '$30load_global.11', 'res': '$32load_attr.12'}), (34, {'pred': '$32load_attr.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: (), 46: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$36load_global.0'}), (38, {'res': '$mu38.1'}), (40, {'res': '$beta40.2'}), (42, {'func': '$36load_global.0', 'args': ['$mu38.1', '$beta40.2'], 'res': '$42call_function.3'}), (44, {'retval': '$42call_function.3', 'castval': '$44return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=46 nstack_initial=0):
AdaptBlockInfo(insts=((46, {'res': '$46load_global.0'}), (48, {'res': '$mu48.1'}), (50, {'res': '$beta50.2'}), (52, {'func': '$46load_global.0', 'args': ['$mu48.1', '$beta50.2'], 'res': '$52call_function.3'}), (54, {'retval': '$52call_function.3', 'castval': '$54return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r = arg(0, name=r)                       ['r']
    mu = arg(1, name=mu)                     ['mu']
    time_explosion = arg(2, name=time_explosion) ['time_explosion']
    $const2.0 = const(int, 1)                ['$const2.0']
    $4load_global.1 = global(C_SPEED_OF_LIGHT: 29979245800.0) ['$4load_global.1']
    $6binary_true_divide.2 = $const2.0 / $4load_global.1 ['$4load_global.1', '$6binary_true_divide.2', '$const2.0']
    inv_c = $6binary_true_divide.2           ['$6binary_true_divide.2', 'inv_c']
    $const10.3 = const(int, 1)               ['$const10.3']
    $14binary_true_divide.5 = $const10.3 / time_explosion ['$14binary_true_divide.5', '$const10.3', 'time_explosion']
    inv_t = $14binary_true_divide.5          ['$14binary_true_divide.5', 'inv_t']
    $22binary_multiply.8 = r * inv_t         ['$22binary_multiply.8', 'inv_t', 'r']
    $26binary_multiply.10 = $22binary_multiply.8 * inv_c ['$22binary_multiply.8', '$26binary_multiply.10', 'inv_c']
    beta = $26binary_multiply.10             ['$26binary_multiply.10', 'beta']
    $30load_global.11 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>) ['$30load_global.11']
    $32load_attr.12 = getattr(value=$30load_global.11, attr=ENABLE_FULL_RELATIVITY) ['$30load_global.11', '$32load_attr.12']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($32load_attr.12, func=bool34, args=(Var($32load_attr.12, r_packet.py:237),), kws=(), vararg=None) ['$32load_attr.12', '$34pred', 'bool34']
    branch $34pred, 46, 36                   ['$34pred']
label 36:
    $36load_global.0 = global(get_doppler_factor_partial_relativity: CPUDispatcher(<function get_doppler_factor_partial_relativity at 0x7f6e4a0ef9e0>)) ['$36load_global.0']
    $42call_function.3 = call $36load_global.0(mu, beta, func=$36load_global.0, args=[Var(mu, r_packet.py:234), Var(beta, r_packet.py:236)], kws=(), vararg=None) ['$36load_global.0', '$42call_function.3', 'beta', 'mu']
    $44return_value.4 = cast(value=$42call_function.3) ['$42call_function.3', '$44return_value.4']
    return $44return_value.4                 ['$44return_value.4']
label 46:
    $46load_global.0 = global(get_doppler_factor_full_relativity: CPUDispatcher(<function get_doppler_factor_full_relativity at 0x7f6e4a0efcb0>)) ['$46load_global.0']
    $52call_function.3 = call $46load_global.0(mu, beta, func=$46load_global.0, args=[Var(mu, r_packet.py:234), Var(beta, r_packet.py:236)], kws=(), vararg=None) ['$46load_global.0', '$52call_function.3', 'beta', 'mu']
    $54return_value.4 = cast(value=$52call_function.3) ['$52call_function.3', '$54return_value.4']
    return $54return_value.4                 ['$54return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45c94c10>
DEBUG:numba.core.ssa:on stmt: r = arg(0, name=r)
DEBUG:numba.core.ssa:on stmt: mu = arg(1, name=mu)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(2, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $4load_global.1 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $6binary_true_divide.2 = $const2.0 / $4load_global.1
DEBUG:numba.core.ssa:on stmt: inv_c = $6binary_true_divide.2
DEBUG:numba.core.ssa:on stmt: $const10.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $14binary_true_divide.5 = $const10.3 / time_explosion
DEBUG:numba.core.ssa:on stmt: inv_t = $14binary_true_divide.5
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.8 = r * inv_t
DEBUG:numba.core.ssa:on stmt: $26binary_multiply.10 = $22binary_multiply.8 * inv_c
DEBUG:numba.core.ssa:on stmt: beta = $26binary_multiply.10
DEBUG:numba.core.ssa:on stmt: $30load_global.11 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $32load_attr.12 = getattr(value=$30load_global.11, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool34 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $34pred = call bool34($32load_attr.12, func=bool34, args=(Var($32load_attr.12, r_packet.py:237),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $34pred, 46, 36
DEBUG:numba.core.ssa:==== SSA block analysis pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45c94c10>
DEBUG:numba.core.ssa:on stmt: $36load_global.0 = global(get_doppler_factor_partial_relativity: CPUDispatcher(<function get_doppler_factor_partial_relativity at 0x7f6e4a0ef9e0>))
DEBUG:numba.core.ssa:on stmt: $42call_function.3 = call $36load_global.0(mu, beta, func=$36load_global.0, args=[Var(mu, r_packet.py:234), Var(beta, r_packet.py:236)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $44return_value.4 = cast(value=$42call_function.3)
DEBUG:numba.core.ssa:on stmt: return $44return_value.4
DEBUG:numba.core.ssa:==== SSA block analysis pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45c94c10>
DEBUG:numba.core.ssa:on stmt: $46load_global.0 = global(get_doppler_factor_full_relativity: CPUDispatcher(<function get_doppler_factor_full_relativity at 0x7f6e4a0efcb0>))
DEBUG:numba.core.ssa:on stmt: $52call_function.3 = call $46load_global.0(mu, beta, func=$46load_global.0, args=[Var(mu, r_packet.py:234), Var(beta, r_packet.py:236)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $54return_value.4 = cast(value=$52call_function.3)
DEBUG:numba.core.ssa:on stmt: return $54return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$14binary_true_divide.5': [<numba.core.ir.Assign object at 0x7f6e45cc52d0>],
             '$22binary_multiply.8': [<numba.core.ir.Assign object at 0x7f6e45cc5190>],
             '$26binary_multiply.10': [<numba.core.ir.Assign object at 0x7f6e45cc5950>],
             '$30load_global.11': [<numba.core.ir.Assign object at 0x7f6e45cc5810>],
             '$32load_attr.12': [<numba.core.ir.Assign object at 0x7f6e45cc5cd0>],
             '$34pred': [<numba.core.ir.Assign object at 0x7f6e45cc5c10>],
             '$36load_global.0': [<numba.core.ir.Assign object at 0x7f6e45cc5fd0>],
             '$42call_function.3': [<numba.core.ir.Assign object at 0x7f6e45ca90d0>],
             '$44return_value.4': [<numba.core.ir.Assign object at 0x7f6e45ca9190>],
             '$46load_global.0': [<numba.core.ir.Assign object at 0x7f6e45ca92d0>],
             '$4load_global.1': [<numba.core.ir.Assign object at 0x7f6e45afa690>],
             '$52call_function.3': [<numba.core.ir.Assign object at 0x7f6e45ca9590>],
             '$54return_value.4': [<numba.core.ir.Assign object at 0x7f6e45ca9650>],
             '$6binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f6e45afa2d0>],
             '$const10.3': [<numba.core.ir.Assign object at 0x7f6e45cc5210>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e45afad90>],
             'beta': [<numba.core.ir.Assign object at 0x7f6e45cc5510>],
             'bool34': [<numba.core.ir.Assign object at 0x7f6e45cc5ad0>],
             'inv_c': [<numba.core.ir.Assign object at 0x7f6e45afa9d0>],
             'inv_t': [<numba.core.ir.Assign object at 0x7f6e45cc5290>],
             'mu': [<numba.core.ir.Assign object at 0x7f6e45afa550>],
             'r': [<numba.core.ir.Assign object at 0x7f6e45c94690>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e45afafd0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=245)
           2	LOAD_CONST(arg=1, lineno=245)
           4	LOAD_FAST(arg=0, lineno=245)
           6	LOAD_FAST(arg=1, lineno=245)
           8	BINARY_MULTIPLY(arg=None, lineno=245)
          10	BINARY_SUBTRACT(arg=None, lineno=245)
          12	RETURN_VALUE(arg=None, lineno=245)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=245)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=245)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=245)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=245)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$mu4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_MULTIPLY(arg=None, lineno=245)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$mu4.1', '$beta6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=245)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$8binary_multiply.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=245)
DEBUG:numba.core.byteflow:stack ['$10binary_subtract.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'res': '$mu4.1'}), (6, {'res': '$beta6.2'}), (8, {'lhs': '$mu4.1', 'rhs': '$beta6.2', 'res': '$8binary_multiply.3'}), (10, {'lhs': '$const2.0', 'rhs': '$8binary_multiply.3', 'res': '$10binary_subtract.4'}), (12, {'retval': '$10binary_subtract.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    mu = arg(0, name=mu)                     ['mu']
    beta = arg(1, name=beta)                 ['beta']
    $const2.0 = const(float, 1.0)            ['$const2.0']
    $8binary_multiply.3 = mu * beta          ['$8binary_multiply.3', 'beta', 'mu']
    $10binary_subtract.4 = $const2.0 - $8binary_multiply.3 ['$10binary_subtract.4', '$8binary_multiply.3', '$const2.0']
    $12return_value.5 = cast(value=$10binary_subtract.4) ['$10binary_subtract.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46090190>
DEBUG:numba.core.ssa:on stmt: mu = arg(0, name=mu)
DEBUG:numba.core.ssa:on stmt: beta = arg(1, name=beta)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $8binary_multiply.3 = mu * beta
DEBUG:numba.core.ssa:on stmt: $10binary_subtract.4 = $const2.0 - $8binary_multiply.3
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10binary_subtract.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [<numba.core.ir.Assign object at 0x7f6e45d7d510>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x7f6e45cc6710>],
             '$8binary_multiply.3': [<numba.core.ir.Assign object at 0x7f6e45d7d890>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e45cb3a50>],
             'beta': [<numba.core.ir.Assign object at 0x7f6e45cb3190>],
             'mu': [<numba.core.ir.Assign object at 0x7f6e45cb3450>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=250)
           2	LOAD_CONST(arg=1, lineno=250)
           4	LOAD_FAST(arg=0, lineno=250)
           6	LOAD_FAST(arg=1, lineno=250)
           8	BINARY_MULTIPLY(arg=None, lineno=250)
          10	BINARY_SUBTRACT(arg=None, lineno=250)
          12	LOAD_GLOBAL(arg=0, lineno=250)
          14	LOAD_METHOD(arg=1, lineno=250)
          16	LOAD_CONST(arg=2, lineno=250)
          18	LOAD_FAST(arg=1, lineno=250)
          20	LOAD_FAST(arg=1, lineno=250)
          22	BINARY_MULTIPLY(arg=None, lineno=250)
          24	BINARY_SUBTRACT(arg=None, lineno=250)
          26	CALL_METHOD(arg=1, lineno=250)
          28	BINARY_TRUE_DIVIDE(arg=None, lineno=250)
          30	RETURN_VALUE(arg=None, lineno=250)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=250)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=250)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=250)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=250)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$mu4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_MULTIPLY(arg=None, lineno=250)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$mu4.1', '$beta6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=250)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$8binary_multiply.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=0, lineno=250)
DEBUG:numba.core.byteflow:stack ['$10binary_subtract.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_METHOD(arg=1, lineno=250)
DEBUG:numba.core.byteflow:stack ['$10binary_subtract.4', '$12load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_CONST(arg=2, lineno=250)
DEBUG:numba.core.byteflow:stack ['$10binary_subtract.4', '$14load_method.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=250)
DEBUG:numba.core.byteflow:stack ['$10binary_subtract.4', '$14load_method.6', '$const16.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=250)
DEBUG:numba.core.byteflow:stack ['$10binary_subtract.4', '$14load_method.6', '$const16.7', '$beta18.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_MULTIPLY(arg=None, lineno=250)
DEBUG:numba.core.byteflow:stack ['$10binary_subtract.4', '$14load_method.6', '$const16.7', '$beta18.8', '$beta20.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_SUBTRACT(arg=None, lineno=250)
DEBUG:numba.core.byteflow:stack ['$10binary_subtract.4', '$14load_method.6', '$const16.7', '$22binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=250)
DEBUG:numba.core.byteflow:stack ['$10binary_subtract.4', '$14load_method.6', '$24binary_subtract.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=250)
DEBUG:numba.core.byteflow:stack ['$10binary_subtract.4', '$26call_method.12']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=RETURN_VALUE(arg=None, lineno=250)
DEBUG:numba.core.byteflow:stack ['$28binary_true_divide.13']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'res': '$mu4.1'}), (6, {'res': '$beta6.2'}), (8, {'lhs': '$mu4.1', 'rhs': '$beta6.2', 'res': '$8binary_multiply.3'}), (10, {'lhs': '$const2.0', 'rhs': '$8binary_multiply.3', 'res': '$10binary_subtract.4'}), (12, {'res': '$12load_global.5'}), (14, {'item': '$12load_global.5', 'res': '$14load_method.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$beta18.8'}), (20, {'res': '$beta20.9'}), (22, {'lhs': '$beta18.8', 'rhs': '$beta20.9', 'res': '$22binary_multiply.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_multiply.10', 'res': '$24binary_subtract.11'}), (26, {'func': '$14load_method.6', 'args': ['$24binary_subtract.11'], 'res': '$26call_method.12'}), (28, {'lhs': '$10binary_subtract.4', 'rhs': '$26call_method.12', 'res': '$28binary_true_divide.13'}), (30, {'retval': '$28binary_true_divide.13', 'castval': '$30return_value.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    mu = arg(0, name=mu)                     ['mu']
    beta = arg(1, name=beta)                 ['beta']
    $const2.0 = const(float, 1.0)            ['$const2.0']
    $8binary_multiply.3 = mu * beta          ['$8binary_multiply.3', 'beta', 'mu']
    $10binary_subtract.4 = $const2.0 - $8binary_multiply.3 ['$10binary_subtract.4', '$8binary_multiply.3', '$const2.0']
    $12load_global.5 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>) ['$12load_global.5']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sqrt) ['$12load_global.5', '$14load_method.6']
    $const16.7 = const(int, 1)               ['$const16.7']
    $22binary_multiply.10 = beta * beta      ['$22binary_multiply.10', 'beta', 'beta']
    $24binary_subtract.11 = $const16.7 - $22binary_multiply.10 ['$22binary_multiply.10', '$24binary_subtract.11', '$const16.7']
    $26call_method.12 = call $14load_method.6($24binary_subtract.11, func=$14load_method.6, args=[Var($24binary_subtract.11, r_packet.py:250)], kws=(), vararg=None) ['$14load_method.6', '$24binary_subtract.11', '$26call_method.12']
    $28binary_true_divide.13 = $10binary_subtract.4 / $26call_method.12 ['$10binary_subtract.4', '$26call_method.12', '$28binary_true_divide.13']
    $30return_value.14 = cast(value=$28binary_true_divide.13) ['$28binary_true_divide.13', '$30return_value.14']
    return $30return_value.14                ['$30return_value.14']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45dda110>
DEBUG:numba.core.ssa:on stmt: mu = arg(0, name=mu)
DEBUG:numba.core.ssa:on stmt: beta = arg(1, name=beta)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $8binary_multiply.3 = mu * beta
DEBUG:numba.core.ssa:on stmt: $10binary_subtract.4 = $const2.0 - $8binary_multiply.3
DEBUG:numba.core.ssa:on stmt: $12load_global.5 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $14load_method.6 = getattr(value=$12load_global.5, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const16.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.10 = beta * beta
DEBUG:numba.core.ssa:on stmt: $24binary_subtract.11 = $const16.7 - $22binary_multiply.10
DEBUG:numba.core.ssa:on stmt: $26call_method.12 = call $14load_method.6($24binary_subtract.11, func=$14load_method.6, args=[Var($24binary_subtract.11, r_packet.py:250)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $28binary_true_divide.13 = $10binary_subtract.4 / $26call_method.12
DEBUG:numba.core.ssa:on stmt: $30return_value.14 = cast(value=$28binary_true_divide.13)
DEBUG:numba.core.ssa:on stmt: return $30return_value.14
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [<numba.core.ir.Assign object at 0x7f6e45d7d850>],
             '$12load_global.5': [<numba.core.ir.Assign object at 0x7f6e45d7d1d0>],
             '$14load_method.6': [<numba.core.ir.Assign object at 0x7f6e45d7d090>],
             '$22binary_multiply.10': [<numba.core.ir.Assign object at 0x7f6e45ddab50>],
             '$24binary_subtract.11': [<numba.core.ir.Assign object at 0x7f6e45dda810>],
             '$26call_method.12': [<numba.core.ir.Assign object at 0x7f6e45ddae10>],
             '$28binary_true_divide.13': [<numba.core.ir.Assign object at 0x7f6e45dda990>],
             '$30return_value.14': [<numba.core.ir.Assign object at 0x7f6e45dda890>],
             '$8binary_multiply.3': [<numba.core.ir.Assign object at 0x7f6e45d7dd50>],
             '$const16.7': [<numba.core.ir.Assign object at 0x7f6e45dda710>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e45cc5c50>],
             'beta': [<numba.core.ir.Assign object at 0x7f6e45cc6610>],
             'mu': [<numba.core.ir.Assign object at 0x7f6e45cc6190>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3557)
           2	LOAD_DEREF(arg=0, lineno=3557)
           4	LOAD_FAST(arg=0, lineno=3557)
           6	LOAD_FAST(arg=1, lineno=3557)
           8	CALL_FUNCTION(arg=2, lineno=3557)
          10	RETURN_VALUE(arg=None, lineno=3557)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3557)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=3557)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3557)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=3557)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0', '$a4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=3557)
DEBUG:numba.core.byteflow:stack ['$2load_deref.0', '$a4.1', '$v6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=3557)
DEBUG:numba.core.byteflow:stack ['$8call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$a4.1'}), (6, {'res': '$v6.2'}), (8, {'func': '$2load_deref.0', 'args': ['$a4.1', '$v6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    v = arg(1, name=v)                       ['v']
    side = arg(2, name=side)                 ['side']
    $2load_deref.0 = freevar(loop_impl: <function _searchsorted.<locals>.searchsorted_inner at 0x7f6e46c7d3b0>) ['$2load_deref.0']
    $8call_function.3 = call $2load_deref.0(a, v, func=$2load_deref.0, args=[Var(a, arraymath.py:3557), Var(v, arraymath.py:3557)], kws=(), vararg=None) ['$2load_deref.0', '$8call_function.3', 'a', 'v']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461a3c50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: v = arg(1, name=v)
DEBUG:numba.core.ssa:on stmt: side = arg(2, name=side)
DEBUG:numba.core.ssa:on stmt: $2load_deref.0 = freevar(loop_impl: <function _searchsorted.<locals>.searchsorted_inner at 0x7f6e46c7d3b0>)
DEBUG:numba.core.ssa:on stmt: $8call_function.3 = call $2load_deref.0(a, v, func=$2load_deref.0, args=[Var(a, arraymath.py:3557), Var(v, arraymath.py:3557)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $10return_value.4 = cast(value=$8call_function.3)
DEBUG:numba.core.ssa:on stmt: return $10return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10return_value.4': [<numba.core.ir.Assign object at 0x7f6e4618cb90>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f6e4618cf90>],
             '$8call_function.3': [<numba.core.ir.Assign object at 0x7f6e4618cc10>],
             'a': [<numba.core.ir.Assign object at 0x7f6e461a7810>],
             'side': [<numba.core.ir.Assign object at 0x7f6e4618c610>],
             'v': [<numba.core.ir.Assign object at 0x7f6e4618c110>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3499)
           2	LOAD_GLOBAL(arg=0, lineno=3499)
           4	LOAD_FAST(arg=0, lineno=3499)
           6	CALL_FUNCTION(arg=1, lineno=3499)
           8	STORE_FAST(arg=2, lineno=3499)
          10	LOAD_GLOBAL(arg=1, lineno=3500)
          12	LOAD_METHOD(arg=2, lineno=3500)
          14	LOAD_FAST(arg=1, lineno=3500)
          16	CALL_METHOD(arg=1, lineno=3500)
          18	POP_JUMP_IF_FALSE(arg=68, lineno=3500)
          20	SETUP_LOOP(arg=42, lineno=3503)
          22	LOAD_GLOBAL(arg=3, lineno=3503)
          24	LOAD_FAST(arg=2, lineno=3503)
          26	LOAD_CONST(arg=1, lineno=3503)
          28	LOAD_CONST(arg=2, lineno=3503)
          30	CALL_FUNCTION(arg=3, lineno=3503)
          32	GET_ITER(arg=None, lineno=3503)
>         34	FOR_ITER(arg=26, lineno=3503)
          36	STORE_FAST(arg=3, lineno=3503)
          38	LOAD_GLOBAL(arg=1, lineno=3504)
          40	LOAD_METHOD(arg=2, lineno=3504)
          42	LOAD_FAST(arg=0, lineno=3504)
          44	LOAD_FAST(arg=3, lineno=3504)
          46	LOAD_CONST(arg=3, lineno=3504)
          48	BINARY_SUBTRACT(arg=None, lineno=3504)
          50	BINARY_SUBSCR(arg=None, lineno=3504)
          52	CALL_METHOD(arg=1, lineno=3504)
          54	POP_JUMP_IF_TRUE(arg=34, lineno=3504)
          56	LOAD_FAST(arg=3, lineno=3505)
          58	RETURN_VALUE(arg=None, lineno=3505)
          60	JUMP_ABSOLUTE(arg=34, lineno=3505)
>         62	POP_BLOCK(arg=None, lineno=3505)
>         64	LOAD_CONST(arg=1, lineno=3506)
          66	RETURN_VALUE(arg=None, lineno=3506)
>         68	LOAD_CONST(arg=1, lineno=3507)
          70	STORE_FAST(arg=4, lineno=3507)
          72	LOAD_FAST(arg=2, lineno=3508)
          74	STORE_FAST(arg=5, lineno=3508)
          76	SETUP_LOOP(arg=52, lineno=3509)
>         78	LOAD_FAST(arg=5, lineno=3509)
          80	LOAD_FAST(arg=4, lineno=3509)
          82	COMPARE_OP(arg=4, lineno=3509)
          84	POP_JUMP_IF_FALSE(arg=128, lineno=3509)
          86	LOAD_FAST(arg=4, lineno=3510)
          88	LOAD_FAST(arg=5, lineno=3510)
          90	BINARY_ADD(arg=None, lineno=3510)
          92	LOAD_CONST(arg=3, lineno=3510)
          94	BINARY_RSHIFT(arg=None, lineno=3510)
          96	STORE_FAST(arg=6, lineno=3510)
          98	LOAD_DEREF(arg=0, lineno=3511)
         100	LOAD_FAST(arg=0, lineno=3511)
         102	LOAD_FAST(arg=6, lineno=3511)
         104	BINARY_SUBSCR(arg=None, lineno=3511)
         106	LOAD_FAST(arg=1, lineno=3511)
         108	CALL_FUNCTION(arg=2, lineno=3511)
         110	POP_JUMP_IF_FALSE(arg=122, lineno=3511)
         112	LOAD_FAST(arg=6, lineno=3513)
         114	LOAD_CONST(arg=3, lineno=3513)
         116	BINARY_ADD(arg=None, lineno=3513)
         118	STORE_FAST(arg=4, lineno=3513)
         120	JUMP_ABSOLUTE(arg=78, lineno=3513)
>        122	LOAD_FAST(arg=6, lineno=3516)
         124	STORE_FAST(arg=5, lineno=3516)
         126	JUMP_ABSOLUTE(arg=78, lineno=3516)
>        128	POP_BLOCK(arg=None, lineno=3516)
>        130	LOAD_FAST(arg=4, lineno=3517)
         132	RETURN_VALUE(arg=None, lineno=3517)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3499)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3499)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3499)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=3499)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$a4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=2, lineno=3499)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=3500)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_METHOD(arg=2, lineno=3500)
DEBUG:numba.core.byteflow:stack ['$10load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=3500)
DEBUG:numba.core.byteflow:stack ['$12load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=3500)
DEBUG:numba.core.byteflow:stack ['$12load_method.4', '$v14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=POP_JUMP_IF_FALSE(arg=68, lineno=3500)
DEBUG:numba.core.byteflow:stack ['$16call_method.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=20, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=SETUP_LOOP(arg=42, lineno=3503)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_GLOBAL(arg=3, lineno=3503)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=3503)
DEBUG:numba.core.byteflow:stack ['$22load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=3503)
DEBUG:numba.core.byteflow:stack ['$22load_global.0', '$n24.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_CONST(arg=2, lineno=3503)
DEBUG:numba.core.byteflow:stack ['$22load_global.0', '$n24.1', '$const26.2']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=CALL_FUNCTION(arg=3, lineno=3503)
DEBUG:numba.core.byteflow:stack ['$22load_global.0', '$n24.1', '$const26.2', '$const28.3']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=GET_ITER(arg=None, lineno=3503)
DEBUG:numba.core.byteflow:stack ['$30call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=34, stack=('$32get_iter.5',), blockstack=({'kind': BlockKind(LOOP), 'end': 64, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=34 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=1, lineno=3507)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=STORE_FAST(arg=4, lineno=3507)
DEBUG:numba.core.byteflow:stack ['$const68.0']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=2, lineno=3508)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_FAST(arg=5, lineno=3508)
DEBUG:numba.core.byteflow:stack ['$n72.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=76, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=1), State(pc_initial=76 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=FOR_ITER(arg=26, lineno=3503)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=62, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 64, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=36, stack=('$phi34.0', '$34for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 64, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=62 nstack_initial=0), State(pc_initial=36 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=76, inst=SETUP_LOOP(arg=52, lineno=3509)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=78, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 130, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=36 nstack_initial=2), State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=POP_BLOCK(arg=None, lineno=3505)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=2), State(pc_initial=78 nstack_initial=0), State(pc_initial=64 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi36.0', '$phi36.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=3, lineno=3503)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$phi36.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=1, lineno=3504)
DEBUG:numba.core.byteflow:stack ['$phi36.0']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_METHOD(arg=2, lineno=3504)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$38load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=3504)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$40load_method.3']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=3, lineno=3504)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$40load_method.3', '$a42.4']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_CONST(arg=3, lineno=3504)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$40load_method.3', '$a42.4', '$i44.5']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_SUBTRACT(arg=None, lineno=3504)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$40load_method.3', '$a42.4', '$i44.5', '$const46.6']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=3504)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$40load_method.3', '$a42.4', '$48binary_subtract.7']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=CALL_METHOD(arg=1, lineno=3504)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$40load_method.3', '$50binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=POP_JUMP_IF_TRUE(arg=34, lineno=3504)
DEBUG:numba.core.byteflow:stack ['$phi36.0', '$52call_method.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=56, stack=('$phi36.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 64, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi36.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 64, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=56 nstack_initial=1), State(pc_initial=34 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=5, lineno=3509)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=3509)
DEBUG:numba.core.byteflow:stack ['$hi78.0']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=COMPARE_OP(arg=4, lineno=3509)
DEBUG:numba.core.byteflow:stack ['$hi78.0', '$lo80.1']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=POP_JUMP_IF_FALSE(arg=128, lineno=3509)
DEBUG:numba.core.byteflow:stack ['$82compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=86, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 130, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=128, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 130, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=56 nstack_initial=1), State(pc_initial=34 nstack_initial=1), State(pc_initial=86 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=3506)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=3506)
DEBUG:numba.core.byteflow:stack ['$const64.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=1), State(pc_initial=34 nstack_initial=1), State(pc_initial=86 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi56.0']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=3, lineno=3505)
DEBUG:numba.core.byteflow:stack ['$phi56.0']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=RETURN_VALUE(arg=None, lineno=3505)
DEBUG:numba.core.byteflow:stack ['$phi56.0', '$i56.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=1), State(pc_initial=86 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=4, lineno=3510)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=5, lineno=3510)
DEBUG:numba.core.byteflow:stack ['$lo86.0']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=BINARY_ADD(arg=None, lineno=3510)
DEBUG:numba.core.byteflow:stack ['$lo86.0', '$hi88.1']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_CONST(arg=3, lineno=3510)
DEBUG:numba.core.byteflow:stack ['$90binary_add.2']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=BINARY_RSHIFT(arg=None, lineno=3510)
DEBUG:numba.core.byteflow:stack ['$90binary_add.2', '$const92.3']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=STORE_FAST(arg=6, lineno=3510)
DEBUG:numba.core.byteflow:stack ['$94binary_rshift.4']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_DEREF(arg=0, lineno=3511)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=0, lineno=3511)
DEBUG:numba.core.byteflow:stack ['$98load_deref.5']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=6, lineno=3511)
DEBUG:numba.core.byteflow:stack ['$98load_deref.5', '$a100.6']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=BINARY_SUBSCR(arg=None, lineno=3511)
DEBUG:numba.core.byteflow:stack ['$98load_deref.5', '$a100.6', '$mid102.7']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=1, lineno=3511)
DEBUG:numba.core.byteflow:stack ['$98load_deref.5', '$104binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=CALL_FUNCTION(arg=2, lineno=3511)
DEBUG:numba.core.byteflow:stack ['$98load_deref.5', '$104binary_subscr.8', '$v106.9']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=122, lineno=3511)
DEBUG:numba.core.byteflow:stack ['$108call_function.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=112, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 130, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=122, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 130, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=128 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=POP_BLOCK(arg=None, lineno=3516)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=6, lineno=3513)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=3, lineno=3513)
DEBUG:numba.core.byteflow:stack ['$mid112.0']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BINARY_ADD(arg=None, lineno=3513)
DEBUG:numba.core.byteflow:stack ['$mid112.0', '$const114.1']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_FAST(arg=4, lineno=3513)
DEBUG:numba.core.byteflow:stack ['$116binary_add.2']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=JUMP_ABSOLUTE(arg=78, lineno=3513)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=78, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 130, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_FAST(arg=6, lineno=3516)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=124, inst=STORE_FAST(arg=5, lineno=3516)
DEBUG:numba.core.byteflow:stack ['$mid122.0']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=JUMP_ABSOLUTE(arg=78, lineno=3516)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=78, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 130, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=3517)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=132, inst=RETURN_VALUE(arg=None, lineno=3517)
DEBUG:numba.core.byteflow:stack ['$lo130.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=1): {'$phi34.0'},
             State(pc_initial=36 nstack_initial=2): {'$phi36.1'},
             State(pc_initial=56 nstack_initial=1): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=128 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi34.0': State(pc_initial=20 nstack_initial=0),
 '$phi36.1': State(pc_initial=34 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi34.0': {('$32get_iter.5',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$phi36.0', State(pc_initial=36 nstack_initial=2))},
             '$phi36.0': {('$phi34.0', State(pc_initial=34 nstack_initial=1))},
             '$phi36.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi56.0': {('$phi36.0', State(pc_initial=36 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi34.0': {('$32get_iter.5',
                           State(pc_initial=20 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=1))},
             '$phi36.0': {('$32get_iter.5',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi36.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi56.0': {('$32get_iter.5',
                           State(pc_initial=20 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi34.0': {('$32get_iter.5',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi36.0': {('$32get_iter.5',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi36.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi56.0': {('$32get_iter.5',
                           State(pc_initial=20 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi34.0': {('$32get_iter.5',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi36.0': {('$32get_iter.5',
                           State(pc_initial=20 nstack_initial=0))},
             '$phi36.1': {('$34for_iter.2',
                           State(pc_initial=34 nstack_initial=1))},
             '$phi56.0': {('$32get_iter.5',
                           State(pc_initial=20 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi34.0': {('$32get_iter.5', State(pc_initial=20 nstack_initial=0))},
 '$phi36.1': {('$34for_iter.2', State(pc_initial=34 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=20 nstack_initial=0): {'$phi34.0': '$32get_iter.5'},
             State(pc_initial=34 nstack_initial=1): {'$phi36.1': '$34for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$a4.1'}), (6, {'func': '$2load_global.0', 'args': ['$a4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'item': '$10load_global.3', 'res': '$12load_method.4'}), (14, {'res': '$v14.5'}), (16, {'func': '$12load_method.4', 'args': ['$v14.5'], 'res': '$16call_method.6'}), (18, {'pred': '$16call_method.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: (), 68: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$22load_global.0'}), (24, {'res': '$n24.1'}), (26, {'res': '$const26.2'}), (28, {'res': '$const28.3'}), (30, {'func': '$22load_global.0', 'args': ['$n24.1', '$const26.2', '$const28.3'], 'res': '$30call_function.4'}), (32, {'value': '$30call_function.4', 'res': '$32get_iter.5'})), outgoing_phis={'$phi34.0': '$32get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: ('$32get_iter.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=1):
AdaptBlockInfo(insts=((34, {'iterator': '$phi34.0', 'pair': '$34for_iter.1', 'indval': '$34for_iter.2', 'pred': '$34for_iter.3'}),), outgoing_phis={'$phi36.1': '$34for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 64, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={62: (), 36: ('$phi34.0', '$34for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=36 nstack_initial=2):
AdaptBlockInfo(insts=((36, {'value': '$phi36.1'}), (38, {'res': '$38load_global.2'}), (40, {'item': '$38load_global.2', 'res': '$40load_method.3'}), (42, {'res': '$a42.4'}), (44, {'res': '$i44.5'}), (46, {'res': '$const46.6'}), (48, {'lhs': '$i44.5', 'rhs': '$const46.6', 'res': '$48binary_subtract.7'}), (50, {'index': '$48binary_subtract.7', 'target': '$a42.4', 'res': '$50binary_subscr.8'}), (52, {'func': '$40load_method.3', 'args': ['$50binary_subscr.8'], 'res': '$52call_method.9'}), (54, {'pred': '$52call_method.9'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 64, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={56: ('$phi36.0',), 34: ('$phi36.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=1):
AdaptBlockInfo(insts=((56, {'res': '$i56.1'}), (58, {'retval': '$i56.1', 'castval': '$58return_value.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 64, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 64, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={64: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$const64.0'}), (66, {'retval': '$const64.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$const68.0'}), (70, {'value': '$const68.0'}), (72, {'res': '$n72.1'}), (74, {'value': '$n72.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={76: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$hi78.0'}), (80, {'res': '$lo80.1'}), (82, {'lhs': '$hi78.0', 'rhs': '$lo80.1', 'res': '$82compare_op.2'}), (84, {'pred': '$82compare_op.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 130, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={86: (), 128: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$lo86.0'}), (88, {'res': '$hi88.1'}), (90, {'lhs': '$lo86.0', 'rhs': '$hi88.1', 'res': '$90binary_add.2'}), (92, {'res': '$const92.3'}), (94, {'lhs': '$90binary_add.2', 'rhs': '$const92.3', 'res': '$94binary_rshift.4'}), (96, {'value': '$94binary_rshift.4'}), (98, {'res': '$98load_deref.5'}), (100, {'res': '$a100.6'}), (102, {'res': '$mid102.7'}), (104, {'index': '$mid102.7', 'target': '$a100.6', 'res': '$104binary_subscr.8'}), (106, {'res': '$v106.9'}), (108, {'func': '$98load_deref.5', 'args': ['$104binary_subscr.8', '$v106.9'], 'res': '$108call_function.10'}), (110, {'pred': '$108call_function.10'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 130, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={112: (), 122: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$mid112.0'}), (114, {'res': '$const114.1'}), (116, {'lhs': '$mid112.0', 'rhs': '$const114.1', 'res': '$116binary_add.2'}), (118, {'value': '$116binary_add.2'}), (120, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 130, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={78: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$mid122.0'}), (124, {'value': '$mid122.0'}), (126, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 130, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={78: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=128 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 130, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={130: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$lo130.0'}), (132, {'retval': '$lo130.0', 'castval': '$132return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    v = arg(1, name=v)                       ['v']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(a, func=$2load_global.0, args=[Var(a, arraymath.py:3499)], kws=(), vararg=None) ['$2load_global.0', '$6call_function.2', 'a']
    n = $6call_function.2                    ['$6call_function.2', 'n']
    $10load_global.3 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$10load_global.3']
    $12load_method.4 = getattr(value=$10load_global.3, attr=isnan) ['$10load_global.3', '$12load_method.4']
    $16call_method.6 = call $12load_method.4(v, func=$12load_method.4, args=[Var(v, arraymath.py:3499)], kws=(), vararg=None) ['$12load_method.4', '$16call_method.6', 'v']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($16call_method.6, func=bool18, args=(Var($16call_method.6, arraymath.py:3500),), kws=(), vararg=None) ['$16call_method.6', '$18pred', 'bool18']
    branch $18pred, 20, 68                   ['$18pred']
label 20:
    $22load_global.0 = global(range: <class 'range'>) ['$22load_global.0']
    $const26.2 = const(int, 0)               ['$const26.2']
    $const28.3 = const(int, -1)              ['$const28.3']
    $30call_function.4 = call $22load_global.0(n, $const26.2, $const28.3, func=$22load_global.0, args=[Var(n, arraymath.py:3499), Var($const26.2, arraymath.py:3503), Var($const28.3, arraymath.py:3503)], kws=(), vararg=None) ['$22load_global.0', '$30call_function.4', '$const26.2', '$const28.3', 'n']
    $32get_iter.5 = getiter(value=$30call_function.4) ['$30call_function.4', '$32get_iter.5']
    $phi34.0 = $32get_iter.5                 ['$32get_iter.5', '$phi34.0']
    jump 34                                  []
label 34:
    $34for_iter.1 = iternext(value=$phi34.0) ['$34for_iter.1', '$phi34.0']
    $34for_iter.2 = pair_first(value=$34for_iter.1) ['$34for_iter.1', '$34for_iter.2']
    $34for_iter.3 = pair_second(value=$34for_iter.1) ['$34for_iter.1', '$34for_iter.3']
    $phi36.1 = $34for_iter.2                 ['$34for_iter.2', '$phi36.1']
    branch $34for_iter.3, 36, 62             ['$34for_iter.3']
label 36:
    i = $phi36.1                             ['$phi36.1', 'i']
    $38load_global.2 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$38load_global.2']
    $40load_method.3 = getattr(value=$38load_global.2, attr=isnan) ['$38load_global.2', '$40load_method.3']
    $const46.6 = const(int, 1)               ['$const46.6']
    $48binary_subtract.7 = i - $const46.6    ['$48binary_subtract.7', '$const46.6', 'i']
    $50binary_subscr.8 = getitem(value=a, index=$48binary_subtract.7) ['$48binary_subtract.7', '$50binary_subscr.8', 'a']
    $52call_method.9 = call $40load_method.3($50binary_subscr.8, func=$40load_method.3, args=[Var($50binary_subscr.8, arraymath.py:3504)], kws=(), vararg=None) ['$40load_method.3', '$50binary_subscr.8', '$52call_method.9']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($52call_method.9, func=bool54, args=(Var($52call_method.9, arraymath.py:3504),), kws=(), vararg=None) ['$52call_method.9', '$54pred', 'bool54']
    branch $54pred, 34, 56                   ['$54pred']
label 56:
    $58return_value.2 = cast(value=i)        ['$58return_value.2', 'i']
    return $58return_value.2                 ['$58return_value.2']
label 62:
    jump 64                                  []
label 64:
    $const64.0 = const(int, 0)               ['$const64.0']
    $66return_value.1 = cast(value=$const64.0) ['$66return_value.1', '$const64.0']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $const68.0 = const(int, 0)               ['$const68.0']
    lo = $const68.0                          ['$const68.0', 'lo']
    hi = n                                   ['hi', 'n']
    jump 76                                  []
label 76:
    jump 78                                  []
label 78:
    $82compare_op.2 = hi > lo                ['$82compare_op.2', 'hi', 'lo']
    bool84 = global(bool: <class 'bool'>)    ['bool84']
    $84pred = call bool84($82compare_op.2, func=bool84, args=(Var($82compare_op.2, arraymath.py:3509),), kws=(), vararg=None) ['$82compare_op.2', '$84pred', 'bool84']
    branch $84pred, 86, 128                  ['$84pred']
label 86:
    $90binary_add.2 = lo + hi                ['$90binary_add.2', 'hi', 'lo']
    $const92.3 = const(int, 1)               ['$const92.3']
    $94binary_rshift.4 = $90binary_add.2 >> $const92.3 ['$90binary_add.2', '$94binary_rshift.4', '$const92.3']
    mid = $94binary_rshift.4                 ['$94binary_rshift.4', 'mid']
    $98load_deref.5 = freevar(func: <function less_than at 0x7f6e46cfd680>) ['$98load_deref.5']
    $104binary_subscr.8 = getitem(value=a, index=mid) ['$104binary_subscr.8', 'a', 'mid']
    $108call_function.10 = call $98load_deref.5($104binary_subscr.8, v, func=$98load_deref.5, args=[Var($104binary_subscr.8, arraymath.py:3511), Var(v, arraymath.py:3499)], kws=(), vararg=None) ['$104binary_subscr.8', '$108call_function.10', '$98load_deref.5', 'v']
    bool110 = global(bool: <class 'bool'>)   ['bool110']
    $110pred = call bool110($108call_function.10, func=bool110, args=(Var($108call_function.10, arraymath.py:3511),), kws=(), vararg=None) ['$108call_function.10', '$110pred', 'bool110']
    branch $110pred, 112, 122                ['$110pred']
label 112:
    $const114.1 = const(int, 1)              ['$const114.1']
    $116binary_add.2 = mid + $const114.1     ['$116binary_add.2', '$const114.1', 'mid']
    lo = $116binary_add.2                    ['$116binary_add.2', 'lo']
    jump 78                                  []
label 122:
    hi = mid                                 ['hi', 'mid']
    jump 78                                  []
label 128:
    jump 130                                 []
label 130:
    $132return_value.1 = cast(value=lo)      ['$132return_value.1', 'lo']
    return $132return_value.1                ['$132return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: v = arg(1, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_global.0(a, func=$2load_global.0, args=[Var(a, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: n = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $16call_method.6 = call $12load_method.4(v, func=$12load_method.4, args=[Var(v, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool18 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $18pred = call bool18($16call_method.6, func=bool18, args=(Var($16call_method.6, arraymath.py:3500),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $18pred, 20, 68
DEBUG:numba.core.ssa:==== SSA block analysis pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: $22load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const26.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const28.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $30call_function.4 = call $22load_global.0(n, $const26.2, $const28.3, func=$22load_global.0, args=[Var(n, arraymath.py:3499), Var($const26.2, arraymath.py:3503), Var($const28.3, arraymath.py:3503)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $32get_iter.5 = getiter(value=$30call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi34.0 = $32get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: $34for_iter.1 = iternext(value=$phi34.0)
DEBUG:numba.core.ssa:on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi36.1 = $34for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $34for_iter.3, 36, 62
DEBUG:numba.core.ssa:==== SSA block analysis pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: i = $phi36.1
DEBUG:numba.core.ssa:on stmt: $38load_global.2 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.3 = getattr(value=$38load_global.2, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $const46.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $48binary_subtract.7 = i - $const46.6
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.8 = getitem(value=a, index=$48binary_subtract.7)
DEBUG:numba.core.ssa:on stmt: $52call_method.9 = call $40load_method.3($50binary_subscr.8, func=$40load_method.3, args=[Var($50binary_subscr.8, arraymath.py:3504)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($52call_method.9, func=bool54, args=(Var($52call_method.9, arraymath.py:3504),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 34, 56
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: $58return_value.2 = cast(value=i)
DEBUG:numba.core.ssa:on stmt: return $58return_value.2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block analysis pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: $const64.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $66return_value.1 = cast(value=$const64.0)
DEBUG:numba.core.ssa:on stmt: return $66return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: $const68.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: lo = $const68.0
DEBUG:numba.core.ssa:on stmt: hi = n
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block analysis pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:==== SSA block analysis pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: $82compare_op.2 = hi > lo
DEBUG:numba.core.ssa:on stmt: bool84 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $84pred = call bool84($82compare_op.2, func=bool84, args=(Var($82compare_op.2, arraymath.py:3509),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $84pred, 86, 128
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: $90binary_add.2 = lo + hi
DEBUG:numba.core.ssa:on stmt: $const92.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $94binary_rshift.4 = $90binary_add.2 >> $const92.3
DEBUG:numba.core.ssa:on stmt: mid = $94binary_rshift.4
DEBUG:numba.core.ssa:on stmt: $98load_deref.5 = freevar(func: <function less_than at 0x7f6e46cfd680>)
DEBUG:numba.core.ssa:on stmt: $104binary_subscr.8 = getitem(value=a, index=mid)
DEBUG:numba.core.ssa:on stmt: $108call_function.10 = call $98load_deref.5($104binary_subscr.8, v, func=$98load_deref.5, args=[Var($104binary_subscr.8, arraymath.py:3511), Var(v, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool110 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $110pred = call bool110($108call_function.10, func=bool110, args=(Var($108call_function.10, arraymath.py:3511),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $110pred, 112, 122
DEBUG:numba.core.ssa:==== SSA block analysis pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: $const114.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $116binary_add.2 = mid + $const114.1
DEBUG:numba.core.ssa:on stmt: lo = $116binary_add.2
DEBUG:numba.core.ssa:on stmt: jump 131
DEBUG:numba.core.ssa:==== SSA block analysis pass on 122
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: hi = mid
DEBUG:numba.core.ssa:on stmt: jump 131
DEBUG:numba.core.ssa:==== SSA block analysis pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block analysis pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: $132return_value.1 = cast(value=lo)
DEBUG:numba.core.ssa:on stmt: return $132return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 131
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4605d910>
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$104binary_subscr.8': [<numba.core.ir.Assign object at 0x7f6e460658d0>],
             '$108call_function.10': [<numba.core.ir.Assign object at 0x7f6e46065ed0>],
             '$10load_global.3': [<numba.core.ir.Assign object at 0x7f6e461a7710>],
             '$110pred': [<numba.core.ir.Assign object at 0x7f6e460652d0>],
             '$116binary_add.2': [<numba.core.ir.Assign object at 0x7f6e46065cd0>],
             '$12load_method.4': [<numba.core.ir.Assign object at 0x7f6e461a7290>],
             '$132return_value.1': [<numba.core.ir.Assign object at 0x7f6e46052e50>],
             '$16call_method.6': [<numba.core.ir.Assign object at 0x7f6e461a74d0>],
             '$18pred': [<numba.core.ir.Assign object at 0x7f6e461a7d50>],
             '$22load_global.0': [<numba.core.ir.Assign object at 0x7f6e461a7e50>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e4618c790>],
             '$30call_function.4': [<numba.core.ir.Assign object at 0x7f6e463ffcd0>],
             '$32get_iter.5': [<numba.core.ir.Assign object at 0x7f6e463ffc90>],
             '$34for_iter.1': [<numba.core.ir.Assign object at 0x7f6e45d7d110>],
             '$34for_iter.2': [<numba.core.ir.Assign object at 0x7f6e45d7d190>],
             '$34for_iter.3': [<numba.core.ir.Assign object at 0x7f6e4605d890>],
             '$38load_global.2': [<numba.core.ir.Assign object at 0x7f6e4605d250>],
             '$40load_method.3': [<numba.core.ir.Assign object at 0x7f6e4605d410>],
             '$48binary_subtract.7': [<numba.core.ir.Assign object at 0x7f6e461a3f50>],
             '$50binary_subscr.8': [<numba.core.ir.Assign object at 0x7f6e461a3ad0>],
             '$52call_method.9': [<numba.core.ir.Assign object at 0x7f6e461a38d0>],
             '$54pred': [<numba.core.ir.Assign object at 0x7f6e461a3a90>],
             '$58return_value.2': [<numba.core.ir.Assign object at 0x7f6e461c5990>],
             '$66return_value.1': [<numba.core.ir.Assign object at 0x7f6e461c5f90>],
             '$6call_function.2': [<numba.core.ir.Assign object at 0x7f6e4618ca10>],
             '$82compare_op.2': [<numba.core.ir.Assign object at 0x7f6e4605dfd0>],
             '$84pred': [<numba.core.ir.Assign object at 0x7f6e4605ded0>],
             '$90binary_add.2': [<numba.core.ir.Assign object at 0x7f6e46065150>],
             '$94binary_rshift.4': [<numba.core.ir.Assign object at 0x7f6e46065410>],
             '$98load_deref.5': [<numba.core.ir.Assign object at 0x7f6e460656d0>],
             '$const114.1': [<numba.core.ir.Assign object at 0x7f6e460657d0>],
             '$const26.2': [<numba.core.ir.Assign object at 0x7f6e461a7ad0>],
             '$const28.3': [<numba.core.ir.Assign object at 0x7f6e463ff910>],
             '$const46.6': [<numba.core.ir.Assign object at 0x7f6e461a16d0>],
             '$const64.0': [<numba.core.ir.Assign object at 0x7f6e461c5590>],
             '$const68.0': [<numba.core.ir.Assign object at 0x7f6e4605d710>],
             '$const92.3': [<numba.core.ir.Assign object at 0x7f6e46065210>],
             '$phi34.0': [<numba.core.ir.Assign object at 0x7f6e461a1510>],
             '$phi36.1': [<numba.core.ir.Assign object at 0x7f6e4605da10>],
             'a': [<numba.core.ir.Assign object at 0x7f6e4618cd50>],
             'bool110': [<numba.core.ir.Assign object at 0x7f6e46065fd0>],
             'bool18': [<numba.core.ir.Assign object at 0x7f6e461a73d0>],
             'bool54': [<numba.core.ir.Assign object at 0x7f6e461a3c90>],
             'bool84': [<numba.core.ir.Assign object at 0x7f6e4605d750>],
             'hi': [<numba.core.ir.Assign object at 0x7f6e4605d590>,
                    <numba.core.ir.Assign object at 0x7f6e46052890>],
             'i': [<numba.core.ir.Assign object at 0x7f6e4605d190>],
             'lo': [<numba.core.ir.Assign object at 0x7f6e4605dad0>,
                    <numba.core.ir.Assign object at 0x7f6e46065490>],
             'mid': [<numba.core.ir.Assign object at 0x7f6e46065510>],
             'n': [<numba.core.ir.Assign object at 0x7f6e4618c410>],
             'v': [<numba.core.ir.Assign object at 0x7f6e4618cb10>]})
DEBUG:numba.core.ssa:SSA violators {'lo', 'hi'}
DEBUG:numba.core.ssa:Fix SSA violator on var lo
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: v = arg(1, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_global.0(a, func=$2load_global.0, args=[Var(a, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: n = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $16call_method.6 = call $12load_method.4(v, func=$12load_method.4, args=[Var(v, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool18 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $18pred = call bool18($16call_method.6, func=bool18, args=(Var($16call_method.6, arraymath.py:3500),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $18pred, 20, 68
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $22load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const26.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const28.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $30call_function.4 = call $22load_global.0(n, $const26.2, $const28.3, func=$22load_global.0, args=[Var(n, arraymath.py:3499), Var($const26.2, arraymath.py:3503), Var($const28.3, arraymath.py:3503)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $32get_iter.5 = getiter(value=$30call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi34.0 = $32get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $34for_iter.1 = iternext(value=$phi34.0)
DEBUG:numba.core.ssa:on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi36.1 = $34for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $34for_iter.3, 36, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: i = $phi36.1
DEBUG:numba.core.ssa:on stmt: $38load_global.2 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.3 = getattr(value=$38load_global.2, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $const46.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $48binary_subtract.7 = i - $const46.6
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.8 = getitem(value=a, index=$48binary_subtract.7)
DEBUG:numba.core.ssa:on stmt: $52call_method.9 = call $40load_method.3($50binary_subscr.8, func=$40load_method.3, args=[Var($50binary_subscr.8, arraymath.py:3504)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($52call_method.9, func=bool54, args=(Var($52call_method.9, arraymath.py:3504),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 34, 56
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $58return_value.2 = cast(value=i)
DEBUG:numba.core.ssa:on stmt: return $58return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $const64.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $66return_value.1 = cast(value=$const64.0)
DEBUG:numba.core.ssa:on stmt: return $66return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $const68.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: lo = $const68.0
DEBUG:numba.core.ssa:first assign: lo
DEBUG:numba.core.ssa:replaced with: lo = $const68.0
DEBUG:numba.core.ssa:on stmt: hi = n
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $82compare_op.2 = hi > lo
DEBUG:numba.core.ssa:on stmt: bool84 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $84pred = call bool84($82compare_op.2, func=bool84, args=(Var($82compare_op.2, arraymath.py:3509),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $84pred, 86, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $90binary_add.2 = lo + hi
DEBUG:numba.core.ssa:on stmt: $const92.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $94binary_rshift.4 = $90binary_add.2 >> $const92.3
DEBUG:numba.core.ssa:on stmt: mid = $94binary_rshift.4
DEBUG:numba.core.ssa:on stmt: $98load_deref.5 = freevar(func: <function less_than at 0x7f6e46cfd680>)
DEBUG:numba.core.ssa:on stmt: $104binary_subscr.8 = getitem(value=a, index=mid)
DEBUG:numba.core.ssa:on stmt: $108call_function.10 = call $98load_deref.5($104binary_subscr.8, v, func=$98load_deref.5, args=[Var($104binary_subscr.8, arraymath.py:3511), Var(v, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool110 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $110pred = call bool110($108call_function.10, func=bool110, args=(Var($108call_function.10, arraymath.py:3511),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $110pred, 112, 122
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $const114.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $116binary_add.2 = mid + $const114.1
DEBUG:numba.core.ssa:on stmt: lo = $116binary_add.2
DEBUG:numba.core.ssa:replaced with: lo.1 = $116binary_add.2
DEBUG:numba.core.ssa:on stmt: jump 131
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 122
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: hi = mid
DEBUG:numba.core.ssa:on stmt: jump 131
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $132return_value.1 = cast(value=lo)
DEBUG:numba.core.ssa:on stmt: return $132return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 131
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {68: [<numba.core.ir.Assign object at 0x7f6e46005990>],
             112: [<numba.core.ir.Assign object at 0x7f6e460054d0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: v = arg(1, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_global.0(a, func=$2load_global.0, args=[Var(a, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: n = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $16call_method.6 = call $12load_method.4(v, func=$12load_method.4, args=[Var(v, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool18 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $18pred = call bool18($16call_method.6, func=bool18, args=(Var($16call_method.6, arraymath.py:3500),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $18pred, 20, 68
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: $22load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const26.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const28.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $30call_function.4 = call $22load_global.0(n, $const26.2, $const28.3, func=$22load_global.0, args=[Var(n, arraymath.py:3499), Var($const26.2, arraymath.py:3503), Var($const28.3, arraymath.py:3503)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $32get_iter.5 = getiter(value=$30call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi34.0 = $32get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: $34for_iter.1 = iternext(value=$phi34.0)
DEBUG:numba.core.ssa:on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi36.1 = $34for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $34for_iter.3, 36, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: i = $phi36.1
DEBUG:numba.core.ssa:on stmt: $38load_global.2 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.3 = getattr(value=$38load_global.2, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $const46.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $48binary_subtract.7 = i - $const46.6
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.8 = getitem(value=a, index=$48binary_subtract.7)
DEBUG:numba.core.ssa:on stmt: $52call_method.9 = call $40load_method.3($50binary_subscr.8, func=$40load_method.3, args=[Var($50binary_subscr.8, arraymath.py:3504)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($52call_method.9, func=bool54, args=(Var($52call_method.9, arraymath.py:3504),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 34, 56
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: $58return_value.2 = cast(value=i)
DEBUG:numba.core.ssa:on stmt: return $58return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: $const64.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $66return_value.1 = cast(value=$const64.0)
DEBUG:numba.core.ssa:on stmt: return $66return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: $const68.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: lo = $const68.0
DEBUG:numba.core.ssa:on stmt: hi = n
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: $82compare_op.2 = hi > lo
DEBUG:numba.core.ssa:find_def var='lo' stmt=$82compare_op.2 = hi > lo
DEBUG:numba.core.ssa:find_def_from_top label 78
DEBUG:numba.core.ssa:insert phi node lo.2 = phi(incoming_values=[], incoming_blocks=[]) at 78
DEBUG:numba.core.ssa:find_def_from_bottom label 131
DEBUG:numba.core.ssa:find_def_from_top label 131
DEBUG:numba.core.ssa:insert phi node lo.3 = phi(incoming_values=[], incoming_blocks=[]) at 131
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:incoming_def lo.1 = $116binary_add.2
DEBUG:numba.core.ssa:find_def_from_bottom label 122
DEBUG:numba.core.ssa:find_def_from_top label 122
DEBUG:numba.core.ssa:idom 86 from label 122
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:idom 78 from label 86
DEBUG:numba.core.ssa:find_def_from_bottom label 78
DEBUG:numba.core.ssa:incoming_def lo.2 = phi(incoming_values=[], incoming_blocks=[])
DEBUG:numba.core.ssa:incoming_def lo.3 = phi(incoming_values=[Var(lo.1, arraymath.py:3513), Var(lo.2, arraymath.py:3509)], incoming_blocks=[112, 122])
DEBUG:numba.core.ssa:find_def_from_bottom label 76
DEBUG:numba.core.ssa:find_def_from_top label 76
DEBUG:numba.core.ssa:idom 68 from label 76
DEBUG:numba.core.ssa:find_def_from_bottom label 68
DEBUG:numba.core.ssa:incoming_def lo = $const68.0
DEBUG:numba.core.ssa:replaced with: $82compare_op.2 = hi > lo.2
DEBUG:numba.core.ssa:on stmt: bool84 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $84pred = call bool84($82compare_op.2, func=bool84, args=(Var($82compare_op.2, arraymath.py:3509),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $84pred, 86, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: $90binary_add.2 = lo + hi
DEBUG:numba.core.ssa:find_def var='lo' stmt=$90binary_add.2 = lo + hi
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:idom 78 from label 86
DEBUG:numba.core.ssa:find_def_from_bottom label 78
DEBUG:numba.core.ssa:replaced with: $90binary_add.2 = lo.2 + hi
DEBUG:numba.core.ssa:on stmt: $const92.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $94binary_rshift.4 = $90binary_add.2 >> $const92.3
DEBUG:numba.core.ssa:on stmt: mid = $94binary_rshift.4
DEBUG:numba.core.ssa:on stmt: $98load_deref.5 = freevar(func: <function less_than at 0x7f6e46cfd680>)
DEBUG:numba.core.ssa:on stmt: $104binary_subscr.8 = getitem(value=a, index=mid)
DEBUG:numba.core.ssa:on stmt: $108call_function.10 = call $98load_deref.5($104binary_subscr.8, v, func=$98load_deref.5, args=[Var($104binary_subscr.8, arraymath.py:3511), Var(v, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool110 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $110pred = call bool110($108call_function.10, func=bool110, args=(Var($108call_function.10, arraymath.py:3511),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $110pred, 112, 122
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: $const114.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $116binary_add.2 = mid + $const114.1
DEBUG:numba.core.ssa:on stmt: lo.1 = $116binary_add.2
DEBUG:numba.core.ssa:on stmt: jump 131
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 122
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: hi = mid
DEBUG:numba.core.ssa:on stmt: jump 131
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: $132return_value.1 = cast(value=lo)
DEBUG:numba.core.ssa:find_def var='lo' stmt=$132return_value.1 = cast(value=lo)
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:idom 128 from label 130
DEBUG:numba.core.ssa:find_def_from_bottom label 128
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:idom 78 from label 128
DEBUG:numba.core.ssa:find_def_from_bottom label 78
DEBUG:numba.core.ssa:replaced with: $132return_value.1 = cast(value=lo.2)
DEBUG:numba.core.ssa:on stmt: return $132return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 131
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005110>
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:Fix SSA violator on var hi
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: v = arg(1, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_global.0(a, func=$2load_global.0, args=[Var(a, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: n = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $16call_method.6 = call $12load_method.4(v, func=$12load_method.4, args=[Var(v, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool18 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $18pred = call bool18($16call_method.6, func=bool18, args=(Var($16call_method.6, arraymath.py:3500),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $18pred, 20, 68
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $22load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const26.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const28.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $30call_function.4 = call $22load_global.0(n, $const26.2, $const28.3, func=$22load_global.0, args=[Var(n, arraymath.py:3499), Var($const26.2, arraymath.py:3503), Var($const28.3, arraymath.py:3503)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $32get_iter.5 = getiter(value=$30call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi34.0 = $32get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $34for_iter.1 = iternext(value=$phi34.0)
DEBUG:numba.core.ssa:on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi36.1 = $34for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $34for_iter.3, 36, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: i = $phi36.1
DEBUG:numba.core.ssa:on stmt: $38load_global.2 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.3 = getattr(value=$38load_global.2, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $const46.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $48binary_subtract.7 = i - $const46.6
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.8 = getitem(value=a, index=$48binary_subtract.7)
DEBUG:numba.core.ssa:on stmt: $52call_method.9 = call $40load_method.3($50binary_subscr.8, func=$40load_method.3, args=[Var($50binary_subscr.8, arraymath.py:3504)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($52call_method.9, func=bool54, args=(Var($52call_method.9, arraymath.py:3504),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 34, 56
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $58return_value.2 = cast(value=i)
DEBUG:numba.core.ssa:on stmt: return $58return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $const64.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $66return_value.1 = cast(value=$const64.0)
DEBUG:numba.core.ssa:on stmt: return $66return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $const68.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: lo = $const68.0
DEBUG:numba.core.ssa:on stmt: hi = n
DEBUG:numba.core.ssa:first assign: hi
DEBUG:numba.core.ssa:replaced with: hi = n
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: lo.2 = phi(incoming_values=[Var(lo.3, arraymath.py:3509), Var(lo, arraymath.py:3507)], incoming_blocks=[131, 76])
DEBUG:numba.core.ssa:on stmt: $82compare_op.2 = hi > lo.2
DEBUG:numba.core.ssa:on stmt: bool84 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $84pred = call bool84($82compare_op.2, func=bool84, args=(Var($82compare_op.2, arraymath.py:3509),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $84pred, 86, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $90binary_add.2 = lo.2 + hi
DEBUG:numba.core.ssa:on stmt: $const92.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $94binary_rshift.4 = $90binary_add.2 >> $const92.3
DEBUG:numba.core.ssa:on stmt: mid = $94binary_rshift.4
DEBUG:numba.core.ssa:on stmt: $98load_deref.5 = freevar(func: <function less_than at 0x7f6e46cfd680>)
DEBUG:numba.core.ssa:on stmt: $104binary_subscr.8 = getitem(value=a, index=mid)
DEBUG:numba.core.ssa:on stmt: $108call_function.10 = call $98load_deref.5($104binary_subscr.8, v, func=$98load_deref.5, args=[Var($104binary_subscr.8, arraymath.py:3511), Var(v, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool110 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $110pred = call bool110($108call_function.10, func=bool110, args=(Var($108call_function.10, arraymath.py:3511),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $110pred, 112, 122
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $const114.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $116binary_add.2 = mid + $const114.1
DEBUG:numba.core.ssa:on stmt: lo.1 = $116binary_add.2
DEBUG:numba.core.ssa:on stmt: jump 131
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 122
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: hi = mid
DEBUG:numba.core.ssa:replaced with: hi.1 = mid
DEBUG:numba.core.ssa:on stmt: jump 131
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: $132return_value.1 = cast(value=lo.2)
DEBUG:numba.core.ssa:on stmt: return $132return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 131
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463ffa50>
DEBUG:numba.core.ssa:on stmt: lo.3 = phi(incoming_values=[Var(lo.1, arraymath.py:3513), Var(lo.2, arraymath.py:3509)], incoming_blocks=[112, 122])
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {68: [<numba.core.ir.Assign object at 0x7f6e46005d90>],
             122: [<numba.core.ir.Assign object at 0x7f6e45fd0190>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: v = arg(1, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_global.0(a, func=$2load_global.0, args=[Var(a, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: n = $6call_function.2
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $16call_method.6 = call $12load_method.4(v, func=$12load_method.4, args=[Var(v, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool18 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $18pred = call bool18($16call_method.6, func=bool18, args=(Var($16call_method.6, arraymath.py:3500),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $18pred, 20, 68
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: $22load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const26.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const28.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $30call_function.4 = call $22load_global.0(n, $const26.2, $const28.3, func=$22load_global.0, args=[Var(n, arraymath.py:3499), Var($const26.2, arraymath.py:3503), Var($const28.3, arraymath.py:3503)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $32get_iter.5 = getiter(value=$30call_function.4)
DEBUG:numba.core.ssa:on stmt: $phi34.0 = $32get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: $34for_iter.1 = iternext(value=$phi34.0)
DEBUG:numba.core.ssa:on stmt: $34for_iter.2 = pair_first(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $34for_iter.3 = pair_second(value=$34for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi36.1 = $34for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $34for_iter.3, 36, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: i = $phi36.1
DEBUG:numba.core.ssa:on stmt: $38load_global.2 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.3 = getattr(value=$38load_global.2, attr=isnan)
DEBUG:numba.core.ssa:on stmt: $const46.6 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $48binary_subtract.7 = i - $const46.6
DEBUG:numba.core.ssa:on stmt: $50binary_subscr.8 = getitem(value=a, index=$48binary_subtract.7)
DEBUG:numba.core.ssa:on stmt: $52call_method.9 = call $40load_method.3($50binary_subscr.8, func=$40load_method.3, args=[Var($50binary_subscr.8, arraymath.py:3504)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($52call_method.9, func=bool54, args=(Var($52call_method.9, arraymath.py:3504),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 34, 56
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: $58return_value.2 = cast(value=i)
DEBUG:numba.core.ssa:on stmt: return $58return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: $const64.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $66return_value.1 = cast(value=$const64.0)
DEBUG:numba.core.ssa:on stmt: return $66return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: $const68.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: lo = $const68.0
DEBUG:numba.core.ssa:on stmt: hi = n
DEBUG:numba.core.ssa:on stmt: jump 76
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: lo.2 = phi(incoming_values=[Var(lo.3, arraymath.py:3509), Var(lo, arraymath.py:3507)], incoming_blocks=[131, 76])
DEBUG:numba.core.ssa:on stmt: $82compare_op.2 = hi > lo.2
DEBUG:numba.core.ssa:find_def var='hi' stmt=$82compare_op.2 = hi > lo.2
DEBUG:numba.core.ssa:find_def_from_top label 78
DEBUG:numba.core.ssa:insert phi node hi.2 = phi(incoming_values=[], incoming_blocks=[]) at 78
DEBUG:numba.core.ssa:find_def_from_bottom label 131
DEBUG:numba.core.ssa:find_def_from_top label 131
DEBUG:numba.core.ssa:insert phi node hi.3 = phi(incoming_values=[], incoming_blocks=[]) at 131
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:find_def_from_top label 112
DEBUG:numba.core.ssa:idom 86 from label 112
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:idom 78 from label 86
DEBUG:numba.core.ssa:find_def_from_bottom label 78
DEBUG:numba.core.ssa:incoming_def hi.2 = phi(incoming_values=[], incoming_blocks=[])
DEBUG:numba.core.ssa:find_def_from_bottom label 122
DEBUG:numba.core.ssa:incoming_def hi.1 = mid
DEBUG:numba.core.ssa:incoming_def hi.3 = phi(incoming_values=[Var(hi.2, arraymath.py:3509), Var(hi.1, arraymath.py:3516)], incoming_blocks=[112, 122])
DEBUG:numba.core.ssa:find_def_from_bottom label 76
DEBUG:numba.core.ssa:find_def_from_top label 76
DEBUG:numba.core.ssa:idom 68 from label 76
DEBUG:numba.core.ssa:find_def_from_bottom label 68
DEBUG:numba.core.ssa:incoming_def hi = n
DEBUG:numba.core.ssa:replaced with: $82compare_op.2 = hi.2 > lo.2
DEBUG:numba.core.ssa:on stmt: bool84 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $84pred = call bool84($82compare_op.2, func=bool84, args=(Var($82compare_op.2, arraymath.py:3509),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $84pred, 86, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: $90binary_add.2 = lo.2 + hi
DEBUG:numba.core.ssa:find_def var='hi' stmt=$90binary_add.2 = lo.2 + hi
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:idom 78 from label 86
DEBUG:numba.core.ssa:find_def_from_bottom label 78
DEBUG:numba.core.ssa:replaced with: $90binary_add.2 = lo.2 + hi.2
DEBUG:numba.core.ssa:on stmt: $const92.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $94binary_rshift.4 = $90binary_add.2 >> $const92.3
DEBUG:numba.core.ssa:on stmt: mid = $94binary_rshift.4
DEBUG:numba.core.ssa:on stmt: $98load_deref.5 = freevar(func: <function less_than at 0x7f6e46cfd680>)
DEBUG:numba.core.ssa:on stmt: $104binary_subscr.8 = getitem(value=a, index=mid)
DEBUG:numba.core.ssa:on stmt: $108call_function.10 = call $98load_deref.5($104binary_subscr.8, v, func=$98load_deref.5, args=[Var($104binary_subscr.8, arraymath.py:3511), Var(v, arraymath.py:3499)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: bool110 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $110pred = call bool110($108call_function.10, func=bool110, args=(Var($108call_function.10, arraymath.py:3511),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $110pred, 112, 122
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: $const114.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $116binary_add.2 = mid + $const114.1
DEBUG:numba.core.ssa:on stmt: lo.1 = $116binary_add.2
DEBUG:numba.core.ssa:on stmt: jump 131
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 122
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: hi.1 = mid
DEBUG:numba.core.ssa:on stmt: jump 131
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: $132return_value.1 = cast(value=lo.2)
DEBUG:numba.core.ssa:on stmt: return $132return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 131
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46005d10>
DEBUG:numba.core.ssa:on stmt: lo.3 = phi(incoming_values=[Var(lo.1, arraymath.py:3513), Var(lo.2, arraymath.py:3509)], incoming_blocks=[112, 122])
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=815)
           2	LOAD_FAST(arg=0, lineno=815)
           4	LOAD_FAST(arg=1, lineno=815)
           6	COMPARE_OP(arg=0, lineno=815)
           8	RETURN_VALUE(arg=None, lineno=815)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=815)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=815)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=815)
DEBUG:numba.core.byteflow:stack ['$a2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=COMPARE_OP(arg=0, lineno=815)
DEBUG:numba.core.byteflow:stack ['$a2.0', '$b4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=815)
DEBUG:numba.core.byteflow:stack ['$6compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$b4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$b4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $6compare_op.2 = a < b                   ['$6compare_op.2', 'a', 'b']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e460bba50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $6compare_op.2 = a < b
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6compare_op.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [<numba.core.ir.Assign object at 0x7f6e45cb3210>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x7f6e45cb3f10>],
             'a': [<numba.core.ir.Assign object at 0x7f6e45cb3bd0>],
             'b': [<numba.core.ir.Assign object at 0x7f6e45cb3650>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=212)
           2	LOAD_FAST(arg=0, lineno=212)
           4	LOAD_ATTR(arg=0, lineno=212)
           6	LOAD_FAST(arg=1, lineno=212)
           8	LOAD_ATTR(arg=1, lineno=212)
          10	COMPARE_OP(arg=0, lineno=212)
          12	POP_JUMP_IF_TRUE(arg=26, lineno=212)
          14	LOAD_FAST(arg=0, lineno=213)
          16	LOAD_ATTR(arg=0, lineno=213)
          18	LOAD_FAST(arg=1, lineno=213)
          20	LOAD_ATTR(arg=2, lineno=213)
          22	COMPARE_OP(arg=4, lineno=213)
          24	POP_JUMP_IF_FALSE(arg=30, lineno=213)
>         26	LOAD_CONST(arg=1, lineno=216)
          28	RETURN_VALUE(arg=None, lineno=216)
>         30	LOAD_FAST(arg=1, lineno=218)
          32	LOAD_ATTR(arg=3, lineno=218)
          34	STORE_FAST(arg=4, lineno=218)
          36	LOAD_FAST(arg=4, lineno=219)
          38	LOAD_CONST(arg=2, lineno=219)
          40	COMPARE_OP(arg=2, lineno=219)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=219)
          44	LOAD_CONST(arg=1, lineno=220)
          46	RETURN_VALUE(arg=None, lineno=220)
>         48	LOAD_FAST(arg=0, lineno=223)
          50	LOAD_ATTR(arg=4, lineno=223)
          52	LOAD_FAST(arg=2, lineno=223)
          54	LOAD_ATTR(arg=5, lineno=223)
          56	LOAD_CONST(arg=2, lineno=223)
          58	BINARY_SUBSCR(arg=None, lineno=223)
          60	COMPARE_OP(arg=4, lineno=223)
          62	POP_JUMP_IF_FALSE(arg=126, lineno=223)
          64	LOAD_FAST(arg=2, lineno=224)
          66	LOAD_ATTR(arg=5, lineno=224)
          68	LOAD_CONST(arg=2, lineno=224)
          70	BINARY_SUBSCR(arg=None, lineno=224)
          72	LOAD_FAST(arg=0, lineno=224)
          74	LOAD_ATTR(arg=4, lineno=224)
          76	BINARY_TRUE_DIVIDE(arg=None, lineno=224)
          78	STORE_FAST(arg=5, lineno=224)
          80	LOAD_GLOBAL(arg=6, lineno=225)
          82	LOAD_METHOD(arg=7, lineno=225)
          84	LOAD_CONST(arg=3, lineno=225)
          86	LOAD_FAST(arg=5, lineno=225)
          88	LOAD_FAST(arg=5, lineno=225)
          90	BINARY_MULTIPLY(arg=None, lineno=225)
          92	BINARY_SUBTRACT(arg=None, lineno=225)
          94	CALL_METHOD(arg=1, lineno=225)
          96	UNARY_NEGATIVE(arg=None, lineno=225)
          98	STORE_FAST(arg=6, lineno=225)
         100	LOAD_CONST(arg=4, lineno=226)
         102	STORE_FAST(arg=7, lineno=226)
         104	LOAD_GLOBAL(arg=8, lineno=227)
         106	LOAD_ATTR(arg=9, lineno=227)
         108	POP_JUMP_IF_FALSE(arg=134, lineno=227)
         110	LOAD_GLOBAL(arg=10, lineno=228)
         112	LOAD_FAST(arg=0, lineno=229)
         114	LOAD_FAST(arg=2, lineno=229)
         116	LOAD_ATTR(arg=11, lineno=229)
         118	LOAD_FAST(arg=6, lineno=229)
         120	CALL_FUNCTION(arg=3, lineno=229)
         122	STORE_FAST(arg=6, lineno=229)
         124	JUMP_FORWARD(arg=8, lineno=229)
>        126	LOAD_CONST(arg=5, lineno=232)
         128	STORE_FAST(arg=7, lineno=232)
         130	LOAD_CONST(arg=6, lineno=233)
         132	STORE_FAST(arg=6, lineno=233)
>        134	LOAD_CONST(arg=7, lineno=235)
         136	LOAD_FAST(arg=6, lineno=235)
         138	BINARY_SUBTRACT(arg=None, lineno=235)
         140	LOAD_FAST(arg=4, lineno=235)
         142	BINARY_TRUE_DIVIDE(arg=None, lineno=235)
         144	STORE_FAST(arg=8, lineno=235)
         146	LOAD_GLOBAL(arg=12, lineno=236)
         148	LOAD_FAST(arg=0, lineno=237)
         150	LOAD_ATTR(arg=4, lineno=237)
         152	LOAD_FAST(arg=0, lineno=237)
         154	LOAD_ATTR(arg=13, lineno=237)
         156	LOAD_FAST(arg=2, lineno=237)
         158	LOAD_ATTR(arg=11, lineno=237)
         160	CALL_FUNCTION(arg=3, lineno=237)
         162	STORE_FAST(arg=9, lineno=237)
         164	SETUP_LOOP(arg=294, lineno=239)
         168	LOAD_GLOBAL(arg=14, lineno=239)
         170	LOAD_FAST(arg=4, lineno=239)
         172	CALL_FUNCTION(arg=1, lineno=239)
         174	GET_ITER(arg=None, lineno=239)
>        176	FOR_ITER(arg=280, lineno=239)
         180	STORE_FAST(arg=10, lineno=239)
         182	LOAD_FAST(arg=6, lineno=240)
         184	LOAD_FAST(arg=10, lineno=240)
         186	LOAD_FAST(arg=8, lineno=240)
         188	BINARY_MULTIPLY(arg=None, lineno=240)
         190	BINARY_ADD(arg=None, lineno=240)
         192	LOAD_GLOBAL(arg=15, lineno=240)
         194	LOAD_ATTR(arg=16, lineno=240)
         196	LOAD_METHOD(arg=16, lineno=240)
         198	CALL_METHOD(arg=0, lineno=240)
         200	LOAD_FAST(arg=8, lineno=240)
         202	BINARY_MULTIPLY(arg=None, lineno=240)
         204	BINARY_ADD(arg=None, lineno=240)
         206	STORE_FAST(arg=11, lineno=240)
         208	LOAD_FAST(arg=7, lineno=242)
         210	POP_JUMP_IF_FALSE(arg=226, lineno=242)
         212	LOAD_CONST(arg=8, lineno=243)
         214	LOAD_FAST(arg=11, lineno=243)
         216	BINARY_MULTIPLY(arg=None, lineno=243)
         218	LOAD_FAST(arg=4, lineno=243)
         220	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         222	STORE_FAST(arg=12, lineno=243)
         224	JUMP_FORWARD(arg=16, lineno=243)
>        226	LOAD_CONST(arg=3, lineno=245)
         228	LOAD_FAST(arg=6, lineno=245)
         230	BINARY_SUBTRACT(arg=None, lineno=245)
         232	LOAD_CONST(arg=8, lineno=245)
         234	LOAD_FAST(arg=4, lineno=245)
         236	BINARY_MULTIPLY(arg=None, lineno=245)
         238	BINARY_TRUE_DIVIDE(arg=None, lineno=245)
         240	STORE_FAST(arg=12, lineno=245)
>        242	LOAD_GLOBAL(arg=8, lineno=248)
         244	LOAD_ATTR(arg=9, lineno=248)
         246	POP_JUMP_IF_FALSE(arg=264, lineno=248)
         250	LOAD_GLOBAL(arg=17, lineno=249)
         252	LOAD_FAST(arg=0, lineno=250)
         254	LOAD_FAST(arg=2, lineno=250)
         256	LOAD_ATTR(arg=11, lineno=250)
         258	LOAD_FAST(arg=11, lineno=250)
         260	CALL_FUNCTION(arg=3, lineno=250)
         262	STORE_FAST(arg=11, lineno=250)
>        264	LOAD_GLOBAL(arg=12, lineno=252)
         266	LOAD_FAST(arg=0, lineno=253)
         268	LOAD_ATTR(arg=4, lineno=253)
         270	LOAD_FAST(arg=11, lineno=253)
         272	LOAD_FAST(arg=2, lineno=253)
         274	LOAD_ATTR(arg=11, lineno=253)
         276	CALL_FUNCTION(arg=3, lineno=253)
         278	STORE_FAST(arg=13, lineno=253)
         280	LOAD_FAST(arg=9, lineno=258)
         282	LOAD_FAST(arg=13, lineno=258)
         284	BINARY_TRUE_DIVIDE(arg=None, lineno=258)
         286	STORE_FAST(arg=14, lineno=258)
         288	LOAD_FAST(arg=0, lineno=260)
         290	LOAD_ATTR(arg=0, lineno=260)
         292	LOAD_FAST(arg=14, lineno=260)
         294	BINARY_MULTIPLY(arg=None, lineno=260)
         296	STORE_FAST(arg=15, lineno=260)
         298	LOAD_FAST(arg=0, lineno=261)
         300	LOAD_ATTR(arg=18, lineno=261)
         302	LOAD_FAST(arg=12, lineno=261)
         304	BINARY_MULTIPLY(arg=None, lineno=261)
         306	LOAD_FAST(arg=14, lineno=261)
         308	BINARY_MULTIPLY(arg=None, lineno=261)
         310	STORE_FAST(arg=16, lineno=261)
         312	LOAD_GLOBAL(arg=19, lineno=263)
         314	LOAD_FAST(arg=0, lineno=264)
         316	LOAD_ATTR(arg=4, lineno=264)
         318	LOAD_FAST(arg=11, lineno=265)
         320	LOAD_FAST(arg=15, lineno=266)
         322	LOAD_FAST(arg=16, lineno=267)
         324	LOAD_FAST(arg=0, lineno=268)
         326	LOAD_ATTR(arg=20, lineno=268)
         328	LOAD_FAST(arg=0, lineno=269)
         330	LOAD_ATTR(arg=21, lineno=269)
         332	LOAD_FAST(arg=10, lineno=270)
         334	LOAD_FAST(arg=0, lineno=271)
         336	LOAD_ATTR(arg=22, lineno=271)
         338	CALL_FUNCTION(arg=8, lineno=271)
         340	STORE_FAST(arg=17, lineno=271)
         342	LOAD_FAST(arg=0, lineno=274)
         344	LOAD_ATTR(arg=21, lineno=274)
         346	LOAD_GLOBAL(arg=23, lineno=274)
         348	LOAD_FAST(arg=3, lineno=274)
         350	LOAD_ATTR(arg=24, lineno=274)
         352	CALL_FUNCTION(arg=1, lineno=274)
         354	LOAD_CONST(arg=3, lineno=274)
         356	BINARY_SUBTRACT(arg=None, lineno=274)
         358	COMPARE_OP(arg=1, lineno=274)
         360	POP_JUMP_IF_FALSE(arg=392, lineno=274)
         364	LOAD_GLOBAL(arg=25, lineno=275)
         366	LOAD_FAST(arg=17, lineno=276)
         368	LOAD_FAST(arg=0, lineno=277)
         370	LOAD_ATTR(arg=21, lineno=277)
         372	LOAD_FAST(arg=3, lineno=278)
         374	LOAD_ATTR(arg=24, lineno=278)
         376	LOAD_FAST(arg=0, lineno=278)
         378	LOAD_ATTR(arg=21, lineno=278)
         380	LOAD_CONST(arg=3, lineno=278)
         382	BINARY_SUBTRACT(arg=None, lineno=278)
         384	BINARY_SUBSCR(arg=None, lineno=278)
         386	LOAD_FAST(arg=3, lineno=279)
         388	CALL_FUNCTION(arg=4, lineno=279)
         390	POP_TOP(arg=None, lineno=279)
>        392	LOAD_GLOBAL(arg=26, lineno=282)
         394	LOAD_FAST(arg=17, lineno=282)
         396	LOAD_FAST(arg=2, lineno=282)
         398	LOAD_FAST(arg=3, lineno=282)
         400	CALL_FUNCTION(arg=3, lineno=282)
         402	STORE_FAST(arg=18, lineno=282)
         404	LOAD_FAST(arg=17, lineno=284)
         406	DUP_TOP(arg=None, lineno=284)
         408	LOAD_ATTR(arg=18, lineno=284)
         410	LOAD_GLOBAL(arg=6, lineno=284)
         412	LOAD_METHOD(arg=27, lineno=284)
         414	LOAD_FAST(arg=18, lineno=284)
         416	UNARY_NEGATIVE(arg=None, lineno=284)
         418	CALL_METHOD(arg=1, lineno=284)
         420	INPLACE_MULTIPLY(arg=None, lineno=284)
         422	ROT_TWO(arg=None, lineno=284)
         424	STORE_ATTR(arg=18, lineno=284)
         426	LOAD_FAST(arg=1, lineno=286)
         428	LOAD_METHOD(arg=28, lineno=286)
         430	LOAD_FAST(arg=17, lineno=287)
         432	LOAD_ATTR(arg=0, lineno=287)
         434	LOAD_FAST(arg=17, lineno=288)
         436	LOAD_ATTR(arg=18, lineno=288)
         438	LOAD_FAST(arg=0, lineno=289)
         440	LOAD_ATTR(arg=29, lineno=289)
         442	LOAD_FAST(arg=0, lineno=290)
         444	LOAD_ATTR(arg=30, lineno=290)
         446	LOAD_FAST(arg=0, lineno=291)
         448	LOAD_ATTR(arg=31, lineno=291)
         450	LOAD_FAST(arg=0, lineno=292)
         452	LOAD_ATTR(arg=32, lineno=292)
         454	CALL_METHOD(arg=6, lineno=292)
         456	POP_TOP(arg=None, lineno=292)
         458	JUMP_ABSOLUTE(arg=176, lineno=292)
>        460	POP_BLOCK(arg=None, lineno=292)
>        462	LOAD_CONST(arg=1, lineno=292)
         464	RETURN_VALUE(arg=None, lineno=292)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=212)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=212)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=212)
DEBUG:numba.core.byteflow:stack ['$r_packet2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=212)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=212)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$vpacket_collection6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=COMPARE_OP(arg=0, lineno=212)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=POP_JUMP_IF_TRUE(arg=26, lineno=212)
DEBUG:numba.core.byteflow:stack ['$10compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=14, stack=(), blockstack=(), npush=0), Edge(pc=26, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=0), State(pc_initial=26 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_ATTR(arg=0, lineno=213)
DEBUG:numba.core.byteflow:stack ['$r_packet14.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=213)
DEBUG:numba.core.byteflow:stack ['$16load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_ATTR(arg=2, lineno=213)
DEBUG:numba.core.byteflow:stack ['$16load_attr.1', '$vpacket_collection18.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=COMPARE_OP(arg=4, lineno=213)
DEBUG:numba.core.byteflow:stack ['$16load_attr.1', '$20load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=30, lineno=213)
DEBUG:numba.core.byteflow:stack ['$22compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=26 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=RETURN_VALUE(arg=None, lineno=216)
DEBUG:numba.core.byteflow:stack ['$const26.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=218)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_ATTR(arg=3, lineno=218)
DEBUG:numba.core.byteflow:stack ['$vpacket_collection30.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=4, lineno=218)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=219)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=219)
DEBUG:numba.core.byteflow:stack ['$no_of_vpackets36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=2, lineno=219)
DEBUG:numba.core.byteflow:stack ['$no_of_vpackets36.2', '$const38.3']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=219)
DEBUG:numba.core.byteflow:stack ['$40compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=220)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=220)
DEBUG:numba.core.byteflow:stack ['$const44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=223)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_ATTR(arg=4, lineno=223)
DEBUG:numba.core.byteflow:stack ['$r_packet48.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=223)
DEBUG:numba.core.byteflow:stack ['$50load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_ATTR(arg=5, lineno=223)
DEBUG:numba.core.byteflow:stack ['$50load_attr.1', '$numba_model52.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=223)
DEBUG:numba.core.byteflow:stack ['$50load_attr.1', '$54load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=223)
DEBUG:numba.core.byteflow:stack ['$50load_attr.1', '$54load_attr.3', '$const56.4']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=COMPARE_OP(arg=4, lineno=223)
DEBUG:numba.core.byteflow:stack ['$50load_attr.1', '$58binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=126, lineno=223)
DEBUG:numba.core.byteflow:stack ['$60compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=126, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=126 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=2, lineno=224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=5, lineno=224)
DEBUG:numba.core.byteflow:stack ['$numba_model64.0']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=224)
DEBUG:numba.core.byteflow:stack ['$66load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BINARY_SUBSCR(arg=None, lineno=224)
DEBUG:numba.core.byteflow:stack ['$66load_attr.1', '$const68.2']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=0, lineno=224)
DEBUG:numba.core.byteflow:stack ['$70binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_ATTR(arg=4, lineno=224)
DEBUG:numba.core.byteflow:stack ['$70binary_subscr.3', '$r_packet72.4']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=224)
DEBUG:numba.core.byteflow:stack ['$70binary_subscr.3', '$74load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=STORE_FAST(arg=5, lineno=224)
DEBUG:numba.core.byteflow:stack ['$76binary_true_divide.6']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_GLOBAL(arg=6, lineno=225)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_METHOD(arg=7, lineno=225)
DEBUG:numba.core.byteflow:stack ['$80load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=3, lineno=225)
DEBUG:numba.core.byteflow:stack ['$82load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=5, lineno=225)
DEBUG:numba.core.byteflow:stack ['$82load_method.8', '$const84.9']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=5, lineno=225)
DEBUG:numba.core.byteflow:stack ['$82load_method.8', '$const84.9', '$r_inner_over_r86.10']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=BINARY_MULTIPLY(arg=None, lineno=225)
DEBUG:numba.core.byteflow:stack ['$82load_method.8', '$const84.9', '$r_inner_over_r86.10', '$r_inner_over_r88.11']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=BINARY_SUBTRACT(arg=None, lineno=225)
DEBUG:numba.core.byteflow:stack ['$82load_method.8', '$const84.9', '$90binary_multiply.12']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=CALL_METHOD(arg=1, lineno=225)
DEBUG:numba.core.byteflow:stack ['$82load_method.8', '$92binary_subtract.13']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=UNARY_NEGATIVE(arg=None, lineno=225)
DEBUG:numba.core.byteflow:stack ['$94call_method.14']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=STORE_FAST(arg=6, lineno=225)
DEBUG:numba.core.byteflow:stack ['$96unary_negative.15']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=4, lineno=226)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=102, inst=STORE_FAST(arg=7, lineno=226)
DEBUG:numba.core.byteflow:stack ['$const100.16']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=8, lineno=227)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_ATTR(arg=9, lineno=227)
DEBUG:numba.core.byteflow:stack ['$104load_global.17']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=POP_JUMP_IF_FALSE(arg=134, lineno=227)
DEBUG:numba.core.byteflow:stack ['$106load_attr.18']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=110, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=126 nstack_initial=0), State(pc_initial=110 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_CONST(arg=5, lineno=232)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=STORE_FAST(arg=7, lineno=232)
DEBUG:numba.core.byteflow:stack ['$const126.0']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_CONST(arg=6, lineno=233)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=132, inst=STORE_FAST(arg=6, lineno=233)
DEBUG:numba.core.byteflow:stack ['$const130.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=110 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_GLOBAL(arg=10, lineno=228)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack ['$110load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=2, lineno=229)
DEBUG:numba.core.byteflow:stack ['$110load_global.0', '$r_packet112.1']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_ATTR(arg=11, lineno=229)
DEBUG:numba.core.byteflow:stack ['$110load_global.0', '$r_packet112.1', '$numba_model114.2']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=6, lineno=229)
DEBUG:numba.core.byteflow:stack ['$110load_global.0', '$r_packet112.1', '$116load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=CALL_FUNCTION(arg=3, lineno=229)
DEBUG:numba.core.byteflow:stack ['$110load_global.0', '$r_packet112.1', '$116load_attr.3', '$mu_min118.4']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=STORE_FAST(arg=6, lineno=229)
DEBUG:numba.core.byteflow:stack ['$120call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=JUMP_FORWARD(arg=8, lineno=229)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_CONST(arg=7, lineno=235)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=6, lineno=235)
DEBUG:numba.core.byteflow:stack ['$const134.0']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=BINARY_SUBTRACT(arg=None, lineno=235)
DEBUG:numba.core.byteflow:stack ['$const134.0', '$mu_min136.1']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=4, lineno=235)
DEBUG:numba.core.byteflow:stack ['$138binary_subtract.2']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=235)
DEBUG:numba.core.byteflow:stack ['$138binary_subtract.2', '$no_of_vpackets140.3']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=STORE_FAST(arg=8, lineno=235)
DEBUG:numba.core.byteflow:stack ['$142binary_true_divide.4']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=12, lineno=236)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=237)
DEBUG:numba.core.byteflow:stack ['$146load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_ATTR(arg=4, lineno=237)
DEBUG:numba.core.byteflow:stack ['$146load_global.5', '$r_packet148.6']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=237)
DEBUG:numba.core.byteflow:stack ['$146load_global.5', '$150load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_ATTR(arg=13, lineno=237)
DEBUG:numba.core.byteflow:stack ['$146load_global.5', '$150load_attr.7', '$r_packet152.8']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=237)
DEBUG:numba.core.byteflow:stack ['$146load_global.5', '$150load_attr.7', '$154load_attr.9']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_ATTR(arg=11, lineno=237)
DEBUG:numba.core.byteflow:stack ['$146load_global.5', '$150load_attr.7', '$154load_attr.9', '$numba_model156.10']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=CALL_FUNCTION(arg=3, lineno=237)
DEBUG:numba.core.byteflow:stack ['$146load_global.5', '$150load_attr.7', '$154load_attr.9', '$158load_attr.11']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=STORE_FAST(arg=9, lineno=237)
DEBUG:numba.core.byteflow:stack ['$160call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=164 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=164 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=164 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=164, inst=SETUP_LOOP(arg=294, lineno=239)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_GLOBAL(arg=14, lineno=239)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=4, lineno=239)
DEBUG:numba.core.byteflow:stack ['$168load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=CALL_FUNCTION(arg=1, lineno=239)
DEBUG:numba.core.byteflow:stack ['$168load_global.0', '$no_of_vpackets170.1']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=GET_ITER(arg=None, lineno=239)
DEBUG:numba.core.byteflow:stack ['$172call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=176, stack=('$174get_iter.3',), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=176 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi176.0']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=FOR_ITER(arg=280, lineno=239)
DEBUG:numba.core.byteflow:stack ['$phi176.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=460, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=180, stack=('$phi176.0', '$176for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=460 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=460, inst=POP_BLOCK(arg=None, lineno=292)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=462, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=2), State(pc_initial=462 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi180.0', '$phi180.1']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=STORE_FAST(arg=10, lineno=239)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$phi180.1']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_FAST(arg=6, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=LOAD_FAST(arg=10, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$mu_min182.2']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=LOAD_FAST(arg=8, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$mu_min182.2', '$i184.3']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=BINARY_MULTIPLY(arg=None, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$mu_min182.2', '$i184.3', '$mu_bin186.4']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=BINARY_ADD(arg=None, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$mu_min182.2', '$188binary_multiply.5']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_GLOBAL(arg=15, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$190binary_add.6']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_ATTR(arg=16, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$190binary_add.6', '$192load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_METHOD(arg=16, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$190binary_add.6', '$194load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=CALL_METHOD(arg=0, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$190binary_add.6', '$196load_method.9']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=8, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$190binary_add.6', '$198call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=BINARY_MULTIPLY(arg=None, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$190binary_add.6', '$198call_method.10', '$mu_bin200.11']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=BINARY_ADD(arg=None, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$190binary_add.6', '$202binary_multiply.12']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=STORE_FAST(arg=11, lineno=240)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$204binary_add.13']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=7, lineno=242)
DEBUG:numba.core.byteflow:stack ['$phi180.0']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=POP_JUMP_IF_FALSE(arg=226, lineno=242)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$v_packet_on_inner_boundary208.14']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=212, stack=('$phi180.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=226, stack=('$phi180.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=462 nstack_initial=0), State(pc_initial=212 nstack_initial=1), State(pc_initial=226 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=462, inst=LOAD_CONST(arg=1, lineno=292)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=464, inst=RETURN_VALUE(arg=None, lineno=292)
DEBUG:numba.core.byteflow:stack ['$const462.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=212 nstack_initial=1), State(pc_initial=226 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi212.0']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=LOAD_CONST(arg=8, lineno=243)
DEBUG:numba.core.byteflow:stack ['$phi212.0']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=11, lineno=243)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$const212.1']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=BINARY_MULTIPLY(arg=None, lineno=243)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$const212.1', '$v_packet_mu214.2']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=LOAD_FAST(arg=4, lineno=243)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$216binary_multiply.3']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$216binary_multiply.3', '$no_of_vpackets218.4']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=STORE_FAST(arg=12, lineno=243)
DEBUG:numba.core.byteflow:stack ['$phi212.0', '$220binary_true_divide.5']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=JUMP_FORWARD(arg=16, lineno=243)
DEBUG:numba.core.byteflow:stack ['$phi212.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=242, stack=('$phi212.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=226 nstack_initial=1), State(pc_initial=242 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi226.0']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_CONST(arg=3, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi226.0']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=LOAD_FAST(arg=6, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$const226.1']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=BINARY_SUBTRACT(arg=None, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$const226.1', '$mu_min228.2']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_CONST(arg=8, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$230binary_subtract.3']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_FAST(arg=4, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$230binary_subtract.3', '$const232.4']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=BINARY_MULTIPLY(arg=None, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$230binary_subtract.3', '$const232.4', '$no_of_vpackets234.5']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$230binary_subtract.3', '$236binary_multiply.6']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=STORE_FAST(arg=12, lineno=245)
DEBUG:numba.core.byteflow:stack ['$phi226.0', '$238binary_true_divide.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=242, stack=('$phi226.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=242 nstack_initial=1), State(pc_initial=242 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi242.0']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_GLOBAL(arg=8, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi242.0']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_ATTR(arg=9, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi242.0', '$242load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=POP_JUMP_IF_FALSE(arg=264, lineno=248)
DEBUG:numba.core.byteflow:stack ['$phi242.0', '$244load_attr.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=250, stack=('$phi242.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=264, stack=('$phi242.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=242 nstack_initial=1), State(pc_initial=250 nstack_initial=1), State(pc_initial=264 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=250 nstack_initial=1), State(pc_initial=264 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi250.0']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=LOAD_GLOBAL(arg=17, lineno=249)
DEBUG:numba.core.byteflow:stack ['$phi250.0']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=LOAD_FAST(arg=0, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi250.0', '$250load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=LOAD_FAST(arg=2, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi250.0', '$250load_global.1', '$r_packet252.2']
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_ATTR(arg=11, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi250.0', '$250load_global.1', '$r_packet252.2', '$numba_model254.3']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=LOAD_FAST(arg=11, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi250.0', '$250load_global.1', '$r_packet252.2', '$256load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=CALL_FUNCTION(arg=3, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi250.0', '$250load_global.1', '$r_packet252.2', '$256load_attr.4', '$v_packet_mu258.5']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=STORE_FAST(arg=11, lineno=250)
DEBUG:numba.core.byteflow:stack ['$phi250.0', '$260call_function.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=264, stack=('$phi250.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=264 nstack_initial=1), State(pc_initial=264 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi264.0']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=LOAD_GLOBAL(arg=12, lineno=252)
DEBUG:numba.core.byteflow:stack ['$phi264.0']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=LOAD_FAST(arg=0, lineno=253)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$264load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=LOAD_ATTR(arg=4, lineno=253)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$264load_global.1', '$r_packet266.2']
DEBUG:numba.core.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=11, lineno=253)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$264load_global.1', '$268load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_FAST(arg=2, lineno=253)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$264load_global.1', '$268load_attr.3', '$v_packet_mu270.4']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_ATTR(arg=11, lineno=253)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$264load_global.1', '$268load_attr.3', '$v_packet_mu270.4', '$numba_model272.5']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=CALL_FUNCTION(arg=3, lineno=253)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$264load_global.1', '$268load_attr.3', '$v_packet_mu270.4', '$274load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=STORE_FAST(arg=13, lineno=253)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$276call_function.7']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=LOAD_FAST(arg=9, lineno=258)
DEBUG:numba.core.byteflow:stack ['$phi264.0']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=LOAD_FAST(arg=13, lineno=258)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$r_packet_doppler_factor280.8']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=258)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$r_packet_doppler_factor280.8', '$v_packet_doppler_factor282.9']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=STORE_FAST(arg=14, lineno=258)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$284binary_true_divide.10']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=LOAD_FAST(arg=0, lineno=260)
DEBUG:numba.core.byteflow:stack ['$phi264.0']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=LOAD_ATTR(arg=0, lineno=260)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$r_packet288.11']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=14, lineno=260)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$290load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=BINARY_MULTIPLY(arg=None, lineno=260)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$290load_attr.12', '$doppler_factor_ratio292.13']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=STORE_FAST(arg=15, lineno=260)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$294binary_multiply.14']
DEBUG:numba.core.byteflow:dispatch pc=298, inst=LOAD_FAST(arg=0, lineno=261)
DEBUG:numba.core.byteflow:stack ['$phi264.0']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=LOAD_ATTR(arg=18, lineno=261)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$r_packet298.15']
DEBUG:numba.core.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=12, lineno=261)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$300load_attr.16']
DEBUG:numba.core.byteflow:dispatch pc=304, inst=BINARY_MULTIPLY(arg=None, lineno=261)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$300load_attr.16', '$weight302.17']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=LOAD_FAST(arg=14, lineno=261)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$304binary_multiply.18']
DEBUG:numba.core.byteflow:dispatch pc=308, inst=BINARY_MULTIPLY(arg=None, lineno=261)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$304binary_multiply.18', '$doppler_factor_ratio306.19']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=STORE_FAST(arg=16, lineno=261)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$308binary_multiply.20']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_GLOBAL(arg=19, lineno=263)
DEBUG:numba.core.byteflow:stack ['$phi264.0']
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_FAST(arg=0, lineno=264)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=LOAD_ATTR(arg=4, lineno=264)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21', '$r_packet314.22']
DEBUG:numba.core.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=11, lineno=265)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21', '$316load_attr.23']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=LOAD_FAST(arg=15, lineno=266)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21', '$316load_attr.23', '$v_packet_mu318.24']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=LOAD_FAST(arg=16, lineno=267)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21', '$316load_attr.23', '$v_packet_mu318.24', '$v_packet_nu320.25']
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_FAST(arg=0, lineno=268)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21', '$316load_attr.23', '$v_packet_mu318.24', '$v_packet_nu320.25', '$v_packet_energy322.26']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=LOAD_ATTR(arg=20, lineno=268)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21', '$316load_attr.23', '$v_packet_mu318.24', '$v_packet_nu320.25', '$v_packet_energy322.26', '$r_packet324.27']
DEBUG:numba.core.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=0, lineno=269)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21', '$316load_attr.23', '$v_packet_mu318.24', '$v_packet_nu320.25', '$v_packet_energy322.26', '$326load_attr.28']
DEBUG:numba.core.byteflow:dispatch pc=330, inst=LOAD_ATTR(arg=21, lineno=269)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21', '$316load_attr.23', '$v_packet_mu318.24', '$v_packet_nu320.25', '$v_packet_energy322.26', '$326load_attr.28', '$r_packet328.29']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=LOAD_FAST(arg=10, lineno=270)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21', '$316load_attr.23', '$v_packet_mu318.24', '$v_packet_nu320.25', '$v_packet_energy322.26', '$326load_attr.28', '$330load_attr.30']
DEBUG:numba.core.byteflow:dispatch pc=334, inst=LOAD_FAST(arg=0, lineno=271)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21', '$316load_attr.23', '$v_packet_mu318.24', '$v_packet_nu320.25', '$v_packet_energy322.26', '$326load_attr.28', '$330load_attr.30', '$i332.31']
DEBUG:numba.core.byteflow:dispatch pc=336, inst=LOAD_ATTR(arg=22, lineno=271)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21', '$316load_attr.23', '$v_packet_mu318.24', '$v_packet_nu320.25', '$v_packet_energy322.26', '$326load_attr.28', '$330load_attr.30', '$i332.31', '$r_packet334.32']
DEBUG:numba.core.byteflow:dispatch pc=338, inst=CALL_FUNCTION(arg=8, lineno=271)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$312load_global.21', '$316load_attr.23', '$v_packet_mu318.24', '$v_packet_nu320.25', '$v_packet_energy322.26', '$326load_attr.28', '$330load_attr.30', '$i332.31', '$336load_attr.33']
DEBUG:numba.core.byteflow:dispatch pc=340, inst=STORE_FAST(arg=17, lineno=271)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$338call_function.34']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=LOAD_FAST(arg=0, lineno=274)
DEBUG:numba.core.byteflow:stack ['$phi264.0']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=LOAD_ATTR(arg=21, lineno=274)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$r_packet342.35']
DEBUG:numba.core.byteflow:dispatch pc=346, inst=LOAD_GLOBAL(arg=23, lineno=274)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$344load_attr.36']
DEBUG:numba.core.byteflow:dispatch pc=348, inst=LOAD_FAST(arg=3, lineno=274)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$344load_attr.36', '$346load_global.37']
DEBUG:numba.core.byteflow:dispatch pc=350, inst=LOAD_ATTR(arg=24, lineno=274)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$344load_attr.36', '$346load_global.37', '$numba_plasma348.38']
DEBUG:numba.core.byteflow:dispatch pc=352, inst=CALL_FUNCTION(arg=1, lineno=274)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$344load_attr.36', '$346load_global.37', '$350load_attr.39']
DEBUG:numba.core.byteflow:dispatch pc=354, inst=LOAD_CONST(arg=3, lineno=274)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$344load_attr.36', '$352call_function.40']
DEBUG:numba.core.byteflow:dispatch pc=356, inst=BINARY_SUBTRACT(arg=None, lineno=274)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$344load_attr.36', '$352call_function.40', '$const354.41']
DEBUG:numba.core.byteflow:dispatch pc=358, inst=COMPARE_OP(arg=1, lineno=274)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$344load_attr.36', '$356binary_subtract.42']
DEBUG:numba.core.byteflow:dispatch pc=360, inst=POP_JUMP_IF_FALSE(arg=392, lineno=274)
DEBUG:numba.core.byteflow:stack ['$phi264.0', '$358compare_op.43']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=364, stack=('$phi264.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=392, stack=('$phi264.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=264 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=392 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=392 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi364.0']
DEBUG:numba.core.byteflow:dispatch pc=364, inst=LOAD_GLOBAL(arg=25, lineno=275)
DEBUG:numba.core.byteflow:stack ['$phi364.0']
DEBUG:numba.core.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=17, lineno=276)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$364load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=0, lineno=277)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$364load_global.1', '$v_packet366.2']
DEBUG:numba.core.byteflow:dispatch pc=370, inst=LOAD_ATTR(arg=21, lineno=277)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$364load_global.1', '$v_packet366.2', '$r_packet368.3']
DEBUG:numba.core.byteflow:dispatch pc=372, inst=LOAD_FAST(arg=3, lineno=278)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$364load_global.1', '$v_packet366.2', '$370load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=374, inst=LOAD_ATTR(arg=24, lineno=278)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$364load_global.1', '$v_packet366.2', '$370load_attr.4', '$numba_plasma372.5']
DEBUG:numba.core.byteflow:dispatch pc=376, inst=LOAD_FAST(arg=0, lineno=278)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$364load_global.1', '$v_packet366.2', '$370load_attr.4', '$374load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=378, inst=LOAD_ATTR(arg=21, lineno=278)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$364load_global.1', '$v_packet366.2', '$370load_attr.4', '$374load_attr.6', '$r_packet376.7']
DEBUG:numba.core.byteflow:dispatch pc=380, inst=LOAD_CONST(arg=3, lineno=278)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$364load_global.1', '$v_packet366.2', '$370load_attr.4', '$374load_attr.6', '$378load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=382, inst=BINARY_SUBTRACT(arg=None, lineno=278)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$364load_global.1', '$v_packet366.2', '$370load_attr.4', '$374load_attr.6', '$378load_attr.8', '$const380.9']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=BINARY_SUBSCR(arg=None, lineno=278)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$364load_global.1', '$v_packet366.2', '$370load_attr.4', '$374load_attr.6', '$382binary_subtract.10']
DEBUG:numba.core.byteflow:dispatch pc=386, inst=LOAD_FAST(arg=3, lineno=279)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$364load_global.1', '$v_packet366.2', '$370load_attr.4', '$384binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=388, inst=CALL_FUNCTION(arg=4, lineno=279)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$364load_global.1', '$v_packet366.2', '$370load_attr.4', '$384binary_subscr.11', '$numba_plasma386.12']
DEBUG:numba.core.byteflow:dispatch pc=390, inst=POP_TOP(arg=None, lineno=279)
DEBUG:numba.core.byteflow:stack ['$phi364.0', '$388call_function.13']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=392, stack=('$phi364.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=392 nstack_initial=1), State(pc_initial=392 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi392.0']
DEBUG:numba.core.byteflow:dispatch pc=392, inst=LOAD_GLOBAL(arg=26, lineno=282)
DEBUG:numba.core.byteflow:stack ['$phi392.0']
DEBUG:numba.core.byteflow:dispatch pc=394, inst=LOAD_FAST(arg=17, lineno=282)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$392load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=396, inst=LOAD_FAST(arg=2, lineno=282)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$392load_global.1', '$v_packet394.2']
DEBUG:numba.core.byteflow:dispatch pc=398, inst=LOAD_FAST(arg=3, lineno=282)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$392load_global.1', '$v_packet394.2', '$numba_model396.3']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=CALL_FUNCTION(arg=3, lineno=282)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$392load_global.1', '$v_packet394.2', '$numba_model396.3', '$numba_plasma398.4']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=STORE_FAST(arg=18, lineno=282)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$400call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=17, lineno=284)
DEBUG:numba.core.byteflow:stack ['$phi392.0']
DEBUG:numba.core.byteflow:dispatch pc=406, inst=DUP_TOP(arg=None, lineno=284)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$v_packet404.6']
DEBUG:numba.core.byteflow:dispatch pc=408, inst=LOAD_ATTR(arg=18, lineno=284)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$v_packet404.6', '$406dup_top.7']
DEBUG:numba.core.byteflow:dispatch pc=410, inst=LOAD_GLOBAL(arg=6, lineno=284)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$v_packet404.6', '$408load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=412, inst=LOAD_METHOD(arg=27, lineno=284)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$v_packet404.6', '$408load_attr.8', '$410load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=18, lineno=284)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$v_packet404.6', '$408load_attr.8', '$412load_method.10']
DEBUG:numba.core.byteflow:dispatch pc=416, inst=UNARY_NEGATIVE(arg=None, lineno=284)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$v_packet404.6', '$408load_attr.8', '$412load_method.10', '$tau_vpacket414.11']
DEBUG:numba.core.byteflow:dispatch pc=418, inst=CALL_METHOD(arg=1, lineno=284)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$v_packet404.6', '$408load_attr.8', '$412load_method.10', '$416unary_negative.12']
DEBUG:numba.core.byteflow:dispatch pc=420, inst=INPLACE_MULTIPLY(arg=None, lineno=284)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$v_packet404.6', '$408load_attr.8', '$418call_method.13']
DEBUG:numba.core.byteflow:dispatch pc=422, inst=ROT_TWO(arg=None, lineno=284)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$v_packet404.6', '$420inplace_multiply.14']
DEBUG:numba.core.byteflow:dispatch pc=424, inst=STORE_ATTR(arg=18, lineno=284)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$420inplace_multiply.14', '$v_packet404.6']
DEBUG:numba.core.byteflow:dispatch pc=426, inst=LOAD_FAST(arg=1, lineno=286)
DEBUG:numba.core.byteflow:stack ['$phi392.0']
DEBUG:numba.core.byteflow:dispatch pc=428, inst=LOAD_METHOD(arg=28, lineno=286)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$vpacket_collection426.15']
DEBUG:numba.core.byteflow:dispatch pc=430, inst=LOAD_FAST(arg=17, lineno=287)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16']
DEBUG:numba.core.byteflow:dispatch pc=432, inst=LOAD_ATTR(arg=0, lineno=287)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16', '$v_packet430.17']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=LOAD_FAST(arg=17, lineno=288)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16', '$432load_attr.18']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=LOAD_ATTR(arg=18, lineno=288)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16', '$432load_attr.18', '$v_packet434.19']
DEBUG:numba.core.byteflow:dispatch pc=438, inst=LOAD_FAST(arg=0, lineno=289)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16', '$432load_attr.18', '$436load_attr.20']
DEBUG:numba.core.byteflow:dispatch pc=440, inst=LOAD_ATTR(arg=29, lineno=289)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16', '$432load_attr.18', '$436load_attr.20', '$r_packet438.21']
DEBUG:numba.core.byteflow:dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=290)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16', '$432load_attr.18', '$436load_attr.20', '$440load_attr.22']
DEBUG:numba.core.byteflow:dispatch pc=444, inst=LOAD_ATTR(arg=30, lineno=290)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16', '$432load_attr.18', '$436load_attr.20', '$440load_attr.22', '$r_packet442.23']
DEBUG:numba.core.byteflow:dispatch pc=446, inst=LOAD_FAST(arg=0, lineno=291)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16', '$432load_attr.18', '$436load_attr.20', '$440load_attr.22', '$444load_attr.24']
DEBUG:numba.core.byteflow:dispatch pc=448, inst=LOAD_ATTR(arg=31, lineno=291)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16', '$432load_attr.18', '$436load_attr.20', '$440load_attr.22', '$444load_attr.24', '$r_packet446.25']
DEBUG:numba.core.byteflow:dispatch pc=450, inst=LOAD_FAST(arg=0, lineno=292)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16', '$432load_attr.18', '$436load_attr.20', '$440load_attr.22', '$444load_attr.24', '$448load_attr.26']
DEBUG:numba.core.byteflow:dispatch pc=452, inst=LOAD_ATTR(arg=32, lineno=292)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16', '$432load_attr.18', '$436load_attr.20', '$440load_attr.22', '$444load_attr.24', '$448load_attr.26', '$r_packet450.27']
DEBUG:numba.core.byteflow:dispatch pc=454, inst=CALL_METHOD(arg=6, lineno=292)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$428load_method.16', '$432load_attr.18', '$436load_attr.20', '$440load_attr.22', '$444load_attr.24', '$448load_attr.26', '$452load_attr.28']
DEBUG:numba.core.byteflow:dispatch pc=456, inst=POP_TOP(arg=None, lineno=292)
DEBUG:numba.core.byteflow:stack ['$phi392.0', '$454call_method.29']
DEBUG:numba.core.byteflow:dispatch pc=458, inst=JUMP_ABSOLUTE(arg=176, lineno=292)
DEBUG:numba.core.byteflow:stack ['$phi392.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=176, stack=('$phi392.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=392 nstack_initial=1), State(pc_initial=176 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=176 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=110 nstack_initial=0): set(),
             State(pc_initial=126 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): {'$phi176.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=212 nstack_initial=1): set(),
             State(pc_initial=226 nstack_initial=1): set(),
             State(pc_initial=242 nstack_initial=1): set(),
             State(pc_initial=250 nstack_initial=1): set(),
             State(pc_initial=264 nstack_initial=1): set(),
             State(pc_initial=364 nstack_initial=1): set(),
             State(pc_initial=392 nstack_initial=1): set(),
             State(pc_initial=460 nstack_initial=0): set(),
             State(pc_initial=462 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi176.0': State(pc_initial=164 nstack_initial=0),
 '$phi180.1': State(pc_initial=176 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0)),
                           ('$phi392.0',
                            State(pc_initial=392 nstack_initial=1))},
             '$phi180.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi212.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi226.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi242.0': {('$phi212.0',
                            State(pc_initial=212 nstack_initial=1)),
                           ('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi250.0': {('$phi242.0',
                            State(pc_initial=242 nstack_initial=1))},
             '$phi264.0': {('$phi242.0',
                            State(pc_initial=242 nstack_initial=1)),
                           ('$phi250.0',
                            State(pc_initial=250 nstack_initial=1))},
             '$phi364.0': {('$phi264.0',
                            State(pc_initial=264 nstack_initial=1))},
             '$phi392.0': {('$phi264.0',
                            State(pc_initial=264 nstack_initial=1)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0)),
                           ('$phi264.0',
                            State(pc_initial=264 nstack_initial=1)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi180.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0)),
                           ('$phi264.0',
                            State(pc_initial=264 nstack_initial=1)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi212.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0)),
                           ('$phi264.0',
                            State(pc_initial=264 nstack_initial=1)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi226.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0)),
                           ('$phi264.0',
                            State(pc_initial=264 nstack_initial=1)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi242.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0)),
                           ('$phi264.0',
                            State(pc_initial=264 nstack_initial=1)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi250.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0)),
                           ('$phi264.0',
                            State(pc_initial=264 nstack_initial=1)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi264.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0)),
                           ('$phi264.0',
                            State(pc_initial=264 nstack_initial=1)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi364.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0)),
                           ('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi392.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi212.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi226.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi242.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi250.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi364.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi392.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi180.1': {('$176for_iter.2',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi212.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi226.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi242.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi250.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi264.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi364.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))},
             '$phi392.0': {('$174get_iter.3',
                            State(pc_initial=164 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi176.0': {('$174get_iter.3', State(pc_initial=164 nstack_initial=0))},
 '$phi180.1': {('$176for_iter.2', State(pc_initial=176 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=164 nstack_initial=0): {'$phi176.0': '$174get_iter.3'},
             State(pc_initial=176 nstack_initial=1): {'$phi180.1': '$176for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$r_packet2.0'}), (4, {'item': '$r_packet2.0', 'res': '$4load_attr.1'}), (6, {'res': '$vpacket_collection6.2'}), (8, {'item': '$vpacket_collection6.2', 'res': '$8load_attr.3'}), (10, {'lhs': '$4load_attr.1', 'rhs': '$8load_attr.3', 'res': '$10compare_op.4'}), (12, {'pred': '$10compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={14: (), 26: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$r_packet14.0'}), (16, {'item': '$r_packet14.0', 'res': '$16load_attr.1'}), (18, {'res': '$vpacket_collection18.2'}), (20, {'item': '$vpacket_collection18.2', 'res': '$20load_attr.3'}), (22, {'lhs': '$16load_attr.1', 'rhs': '$20load_attr.3', 'res': '$22compare_op.4'}), (24, {'pred': '$22compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 30: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'retval': '$const26.0', 'castval': '$28return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$vpacket_collection30.0'}), (32, {'item': '$vpacket_collection30.0', 'res': '$32load_attr.1'}), (34, {'value': '$32load_attr.1'}), (36, {'res': '$no_of_vpackets36.2'}), (38, {'res': '$const38.3'}), (40, {'lhs': '$no_of_vpackets36.2', 'rhs': '$const38.3', 'res': '$40compare_op.4'}), (42, {'pred': '$40compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0'}), (46, {'retval': '$const44.0', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$r_packet48.0'}), (50, {'item': '$r_packet48.0', 'res': '$50load_attr.1'}), (52, {'res': '$numba_model52.2'}), (54, {'item': '$numba_model52.2', 'res': '$54load_attr.3'}), (56, {'res': '$const56.4'}), (58, {'index': '$const56.4', 'target': '$54load_attr.3', 'res': '$58binary_subscr.5'}), (60, {'lhs': '$50load_attr.1', 'rhs': '$58binary_subscr.5', 'res': '$60compare_op.6'}), (62, {'pred': '$60compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 126: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$numba_model64.0'}), (66, {'item': '$numba_model64.0', 'res': '$66load_attr.1'}), (68, {'res': '$const68.2'}), (70, {'index': '$const68.2', 'target': '$66load_attr.1', 'res': '$70binary_subscr.3'}), (72, {'res': '$r_packet72.4'}), (74, {'item': '$r_packet72.4', 'res': '$74load_attr.5'}), (76, {'lhs': '$70binary_subscr.3', 'rhs': '$74load_attr.5', 'res': '$76binary_true_divide.6'}), (78, {'value': '$76binary_true_divide.6'}), (80, {'res': '$80load_global.7'}), (82, {'item': '$80load_global.7', 'res': '$82load_method.8'}), (84, {'res': '$const84.9'}), (86, {'res': '$r_inner_over_r86.10'}), (88, {'res': '$r_inner_over_r88.11'}), (90, {'lhs': '$r_inner_over_r86.10', 'rhs': '$r_inner_over_r88.11', 'res': '$90binary_multiply.12'}), (92, {'lhs': '$const84.9', 'rhs': '$90binary_multiply.12', 'res': '$92binary_subtract.13'}), (94, {'func': '$82load_method.8', 'args': ['$92binary_subtract.13'], 'res': '$94call_method.14'}), (96, {'value': '$94call_method.14', 'res': '$96unary_negative.15'}), (98, {'value': '$96unary_negative.15'}), (100, {'res': '$const100.16'}), (102, {'value': '$const100.16'}), (104, {'res': '$104load_global.17'}), (106, {'item': '$104load_global.17', 'res': '$106load_attr.18'}), (108, {'pred': '$106load_attr.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={110: (), 134: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=110 nstack_initial=0):
AdaptBlockInfo(insts=((110, {'res': '$110load_global.0'}), (112, {'res': '$r_packet112.1'}), (114, {'res': '$numba_model114.2'}), (116, {'item': '$numba_model114.2', 'res': '$116load_attr.3'}), (118, {'res': '$mu_min118.4'}), (120, {'func': '$110load_global.0', 'args': ['$r_packet112.1', '$116load_attr.3', '$mu_min118.4'], 'res': '$120call_function.5'}), (122, {'value': '$120call_function.5'}), (124, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=126 nstack_initial=0):
AdaptBlockInfo(insts=((126, {'res': '$const126.0'}), (128, {'value': '$const126.0'}), (130, {'res': '$const130.1'}), (132, {'value': '$const130.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$const134.0'}), (136, {'res': '$mu_min136.1'}), (138, {'lhs': '$const134.0', 'rhs': '$mu_min136.1', 'res': '$138binary_subtract.2'}), (140, {'res': '$no_of_vpackets140.3'}), (142, {'lhs': '$138binary_subtract.2', 'rhs': '$no_of_vpackets140.3', 'res': '$142binary_true_divide.4'}), (144, {'value': '$142binary_true_divide.4'}), (146, {'res': '$146load_global.5'}), (148, {'res': '$r_packet148.6'}), (150, {'item': '$r_packet148.6', 'res': '$150load_attr.7'}), (152, {'res': '$r_packet152.8'}), (154, {'item': '$r_packet152.8', 'res': '$154load_attr.9'}), (156, {'res': '$numba_model156.10'}), (158, {'item': '$numba_model156.10', 'res': '$158load_attr.11'}), (160, {'func': '$146load_global.5', 'args': ['$150load_attr.7', '$154load_attr.9', '$158load_attr.11'], 'res': '$160call_function.12'}), (162, {'value': '$160call_function.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((168, {'res': '$168load_global.0'}), (170, {'res': '$no_of_vpackets170.1'}), (172, {'func': '$168load_global.0', 'args': ['$no_of_vpackets170.1'], 'res': '$172call_function.2'}), (174, {'value': '$172call_function.2', 'res': '$174get_iter.3'})), outgoing_phis={'$phi176.0': '$174get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.3',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {'iterator': '$phi176.0', 'pair': '$176for_iter.1', 'indval': '$176for_iter.2', 'pred': '$176for_iter.3'}),), outgoing_phis={'$phi180.1': '$176for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={460: (), 180: ('$phi176.0', '$176for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$mu_min182.2'}), (184, {'res': '$i184.3'}), (186, {'res': '$mu_bin186.4'}), (188, {'lhs': '$i184.3', 'rhs': '$mu_bin186.4', 'res': '$188binary_multiply.5'}), (190, {'lhs': '$mu_min182.2', 'rhs': '$188binary_multiply.5', 'res': '$190binary_add.6'}), (192, {'res': '$192load_global.7'}), (194, {'item': '$192load_global.7', 'res': '$194load_attr.8'}), (196, {'item': '$194load_attr.8', 'res': '$196load_method.9'}), (198, {'func': '$196load_method.9', 'args': [], 'res': '$198call_method.10'}), (200, {'res': '$mu_bin200.11'}), (202, {'lhs': '$198call_method.10', 'rhs': '$mu_bin200.11', 'res': '$202binary_multiply.12'}), (204, {'lhs': '$190binary_add.6', 'rhs': '$202binary_multiply.12', 'res': '$204binary_add.13'}), (206, {'value': '$204binary_add.13'}), (208, {'res': '$v_packet_on_inner_boundary208.14'}), (210, {'pred': '$v_packet_on_inner_boundary208.14'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={212: ('$phi180.0',), 226: ('$phi180.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=212 nstack_initial=1):
AdaptBlockInfo(insts=((212, {'res': '$const212.1'}), (214, {'res': '$v_packet_mu214.2'}), (216, {'lhs': '$const212.1', 'rhs': '$v_packet_mu214.2', 'res': '$216binary_multiply.3'}), (218, {'res': '$no_of_vpackets218.4'}), (220, {'lhs': '$216binary_multiply.3', 'rhs': '$no_of_vpackets218.4', 'res': '$220binary_true_divide.5'}), (222, {'value': '$220binary_true_divide.5'}), (224, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={242: ('$phi212.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=226 nstack_initial=1):
AdaptBlockInfo(insts=((226, {'res': '$const226.1'}), (228, {'res': '$mu_min228.2'}), (230, {'lhs': '$const226.1', 'rhs': '$mu_min228.2', 'res': '$230binary_subtract.3'}), (232, {'res': '$const232.4'}), (234, {'res': '$no_of_vpackets234.5'}), (236, {'lhs': '$const232.4', 'rhs': '$no_of_vpackets234.5', 'res': '$236binary_multiply.6'}), (238, {'lhs': '$230binary_subtract.3', 'rhs': '$236binary_multiply.6', 'res': '$238binary_true_divide.7'}), (240, {'value': '$238binary_true_divide.7'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={242: ('$phi226.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=242 nstack_initial=1):
AdaptBlockInfo(insts=((242, {'res': '$242load_global.1'}), (244, {'item': '$242load_global.1', 'res': '$244load_attr.2'}), (246, {'pred': '$244load_attr.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={250: ('$phi242.0',), 264: ('$phi242.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=250 nstack_initial=1):
AdaptBlockInfo(insts=((250, {'res': '$250load_global.1'}), (252, {'res': '$r_packet252.2'}), (254, {'res': '$numba_model254.3'}), (256, {'item': '$numba_model254.3', 'res': '$256load_attr.4'}), (258, {'res': '$v_packet_mu258.5'}), (260, {'func': '$250load_global.1', 'args': ['$r_packet252.2', '$256load_attr.4', '$v_packet_mu258.5'], 'res': '$260call_function.6'}), (262, {'value': '$260call_function.6'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={264: ('$phi250.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=264 nstack_initial=1):
AdaptBlockInfo(insts=((264, {'res': '$264load_global.1'}), (266, {'res': '$r_packet266.2'}), (268, {'item': '$r_packet266.2', 'res': '$268load_attr.3'}), (270, {'res': '$v_packet_mu270.4'}), (272, {'res': '$numba_model272.5'}), (274, {'item': '$numba_model272.5', 'res': '$274load_attr.6'}), (276, {'func': '$264load_global.1', 'args': ['$268load_attr.3', '$v_packet_mu270.4', '$274load_attr.6'], 'res': '$276call_function.7'}), (278, {'value': '$276call_function.7'}), (280, {'res': '$r_packet_doppler_factor280.8'}), (282, {'res': '$v_packet_doppler_factor282.9'}), (284, {'lhs': '$r_packet_doppler_factor280.8', 'rhs': '$v_packet_doppler_factor282.9', 'res': '$284binary_true_divide.10'}), (286, {'value': '$284binary_true_divide.10'}), (288, {'res': '$r_packet288.11'}), (290, {'item': '$r_packet288.11', 'res': '$290load_attr.12'}), (292, {'res': '$doppler_factor_ratio292.13'}), (294, {'lhs': '$290load_attr.12', 'rhs': '$doppler_factor_ratio292.13', 'res': '$294binary_multiply.14'}), (296, {'value': '$294binary_multiply.14'}), (298, {'res': '$r_packet298.15'}), (300, {'item': '$r_packet298.15', 'res': '$300load_attr.16'}), (302, {'res': '$weight302.17'}), (304, {'lhs': '$300load_attr.16', 'rhs': '$weight302.17', 'res': '$304binary_multiply.18'}), (306, {'res': '$doppler_factor_ratio306.19'}), (308, {'lhs': '$304binary_multiply.18', 'rhs': '$doppler_factor_ratio306.19', 'res': '$308binary_multiply.20'}), (310, {'value': '$308binary_multiply.20'}), (312, {'res': '$312load_global.21'}), (314, {'res': '$r_packet314.22'}), (316, {'item': '$r_packet314.22', 'res': '$316load_attr.23'}), (318, {'res': '$v_packet_mu318.24'}), (320, {'res': '$v_packet_nu320.25'}), (322, {'res': '$v_packet_energy322.26'}), (324, {'res': '$r_packet324.27'}), (326, {'item': '$r_packet324.27', 'res': '$326load_attr.28'}), (328, {'res': '$r_packet328.29'}), (330, {'item': '$r_packet328.29', 'res': '$330load_attr.30'}), (332, {'res': '$i332.31'}), (334, {'res': '$r_packet334.32'}), (336, {'item': '$r_packet334.32', 'res': '$336load_attr.33'}), (338, {'func': '$312load_global.21', 'args': ['$316load_attr.23', '$v_packet_mu318.24', '$v_packet_nu320.25', '$v_packet_energy322.26', '$326load_attr.28', '$330load_attr.30', '$i332.31', '$336load_attr.33'], 'res': '$338call_function.34'}), (340, {'value': '$338call_function.34'}), (342, {'res': '$r_packet342.35'}), (344, {'item': '$r_packet342.35', 'res': '$344load_attr.36'}), (346, {'res': '$346load_global.37'}), (348, {'res': '$numba_plasma348.38'}), (350, {'item': '$numba_plasma348.38', 'res': '$350load_attr.39'}), (352, {'func': '$346load_global.37', 'args': ['$350load_attr.39'], 'res': '$352call_function.40'}), (354, {'res': '$const354.41'}), (356, {'lhs': '$352call_function.40', 'rhs': '$const354.41', 'res': '$356binary_subtract.42'}), (358, {'lhs': '$344load_attr.36', 'rhs': '$356binary_subtract.42', 'res': '$358compare_op.43'}), (360, {'pred': '$358compare_op.43'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={364: ('$phi264.0',), 392: ('$phi264.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=364 nstack_initial=1):
AdaptBlockInfo(insts=((364, {'res': '$364load_global.1'}), (366, {'res': '$v_packet366.2'}), (368, {'res': '$r_packet368.3'}), (370, {'item': '$r_packet368.3', 'res': '$370load_attr.4'}), (372, {'res': '$numba_plasma372.5'}), (374, {'item': '$numba_plasma372.5', 'res': '$374load_attr.6'}), (376, {'res': '$r_packet376.7'}), (378, {'item': '$r_packet376.7', 'res': '$378load_attr.8'}), (380, {'res': '$const380.9'}), (382, {'lhs': '$378load_attr.8', 'rhs': '$const380.9', 'res': '$382binary_subtract.10'}), (384, {'index': '$382binary_subtract.10', 'target': '$374load_attr.6', 'res': '$384binary_subscr.11'}), (386, {'res': '$numba_plasma386.12'}), (388, {'func': '$364load_global.1', 'args': ['$v_packet366.2', '$370load_attr.4', '$384binary_subscr.11', '$numba_plasma386.12'], 'res': '$388call_function.13'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={392: ('$phi364.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=392 nstack_initial=1):
AdaptBlockInfo(insts=((392, {'res': '$392load_global.1'}), (394, {'res': '$v_packet394.2'}), (396, {'res': '$numba_model396.3'}), (398, {'res': '$numba_plasma398.4'}), (400, {'func': '$392load_global.1', 'args': ['$v_packet394.2', '$numba_model396.3', '$numba_plasma398.4'], 'res': '$400call_function.5'}), (402, {'value': '$400call_function.5'}), (404, {'res': '$v_packet404.6'}), (406, {'orig': ['$v_packet404.6'], 'duped': ['$406dup_top.7']}), (408, {'item': '$406dup_top.7', 'res': '$408load_attr.8'}), (410, {'res': '$410load_global.9'}), (412, {'item': '$410load_global.9', 'res': '$412load_method.10'}), (414, {'res': '$tau_vpacket414.11'}), (416, {'value': '$tau_vpacket414.11', 'res': '$416unary_negative.12'}), (418, {'func': '$412load_method.10', 'args': ['$416unary_negative.12'], 'res': '$418call_method.13'}), (420, {'lhs': '$408load_attr.8', 'rhs': '$418call_method.13', 'res': '$420inplace_multiply.14'}), (424, {'target': '$v_packet404.6', 'value': '$420inplace_multiply.14'}), (426, {'res': '$vpacket_collection426.15'}), (428, {'item': '$vpacket_collection426.15', 'res': '$428load_method.16'}), (430, {'res': '$v_packet430.17'}), (432, {'item': '$v_packet430.17', 'res': '$432load_attr.18'}), (434, {'res': '$v_packet434.19'}), (436, {'item': '$v_packet434.19', 'res': '$436load_attr.20'}), (438, {'res': '$r_packet438.21'}), (440, {'item': '$r_packet438.21', 'res': '$440load_attr.22'}), (442, {'res': '$r_packet442.23'}), (444, {'item': '$r_packet442.23', 'res': '$444load_attr.24'}), (446, {'res': '$r_packet446.25'}), (448, {'item': '$r_packet446.25', 'res': '$448load_attr.26'}), (450, {'res': '$r_packet450.27'}), (452, {'item': '$r_packet450.27', 'res': '$452load_attr.28'}), (454, {'func': '$428load_method.16', 'args': ['$432load_attr.18', '$436load_attr.20', '$440load_attr.22', '$444load_attr.24', '$448load_attr.26', '$452load_attr.28'], 'res': '$454call_method.29'}), (458, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={176: ('$phi392.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=460 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 462, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={462: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=462 nstack_initial=0):
AdaptBlockInfo(insts=((462, {'res': '$const462.0'}), (464, {'retval': '$const462.0', 'castval': '$464return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    vpacket_collection = arg(1, name=vpacket_collection) ['vpacket_collection']
    numba_model = arg(2, name=numba_model)   ['numba_model']
    numba_plasma = arg(3, name=numba_plasma) ['numba_plasma']
    $4load_attr.1 = getattr(value=r_packet, attr=nu) ['$4load_attr.1', 'r_packet']
    $8load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_start_frequency) ['$8load_attr.3', 'vpacket_collection']
    $10compare_op.4 = $4load_attr.1 < $8load_attr.3 ['$10compare_op.4', '$4load_attr.1', '$8load_attr.3']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
    $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, vpacket.py:212),), kws=(), vararg=None) ['$10compare_op.4', '$12pred', 'bool12']
    branch $12pred, 26, 14                   ['$12pred']
label 14:
    $16load_attr.1 = getattr(value=r_packet, attr=nu) ['$16load_attr.1', 'r_packet']
    $20load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_end_frequency) ['$20load_attr.3', 'vpacket_collection']
    $22compare_op.4 = $16load_attr.1 > $20load_attr.3 ['$16load_attr.1', '$20load_attr.3', '$22compare_op.4']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.4, func=bool24, args=(Var($22compare_op.4, vpacket.py:213),), kws=(), vararg=None) ['$22compare_op.4', '$24pred', 'bool24']
    branch $24pred, 26, 30                   ['$24pred']
label 26:
    $const26.0 = const(NoneType, None)       ['$const26.0']
    $28return_value.1 = cast(value=$const26.0) ['$28return_value.1', '$const26.0']
    return $28return_value.1                 ['$28return_value.1']
label 30:
    $32load_attr.1 = getattr(value=vpacket_collection, attr=number_of_vpackets) ['$32load_attr.1', 'vpacket_collection']
    no_of_vpackets = $32load_attr.1          ['$32load_attr.1', 'no_of_vpackets']
    $const38.3 = const(int, 0)               ['$const38.3']
    $40compare_op.4 = no_of_vpackets == $const38.3 ['$40compare_op.4', '$const38.3', 'no_of_vpackets']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.4, func=bool42, args=(Var($40compare_op.4, vpacket.py:219),), kws=(), vararg=None) ['$40compare_op.4', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $const44.0 = const(NoneType, None)       ['$const44.0']
    $46return_value.1 = cast(value=$const44.0) ['$46return_value.1', '$const44.0']
    return $46return_value.1                 ['$46return_value.1']
label 48:
    $50load_attr.1 = getattr(value=r_packet, attr=r) ['$50load_attr.1', 'r_packet']
    $54load_attr.3 = getattr(value=numba_model, attr=r_inner) ['$54load_attr.3', 'numba_model']
    $const56.4 = const(int, 0)               ['$const56.4']
    $58binary_subscr.5 = getitem(value=$54load_attr.3, index=$const56.4) ['$54load_attr.3', '$58binary_subscr.5', '$const56.4']
    $60compare_op.6 = $50load_attr.1 > $58binary_subscr.5 ['$50load_attr.1', '$58binary_subscr.5', '$60compare_op.6']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60compare_op.6, func=bool62, args=(Var($60compare_op.6, vpacket.py:223),), kws=(), vararg=None) ['$60compare_op.6', '$62pred', 'bool62']
    branch $62pred, 64, 126                  ['$62pred']
label 64:
    $66load_attr.1 = getattr(value=numba_model, attr=r_inner) ['$66load_attr.1', 'numba_model']
    $const68.2 = const(int, 0)               ['$const68.2']
    $70binary_subscr.3 = getitem(value=$66load_attr.1, index=$const68.2) ['$66load_attr.1', '$70binary_subscr.3', '$const68.2']
    $74load_attr.5 = getattr(value=r_packet, attr=r) ['$74load_attr.5', 'r_packet']
    $76binary_true_divide.6 = $70binary_subscr.3 / $74load_attr.5 ['$70binary_subscr.3', '$74load_attr.5', '$76binary_true_divide.6']
    r_inner_over_r = $76binary_true_divide.6 ['$76binary_true_divide.6', 'r_inner_over_r']
    $80load_global.7 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>) ['$80load_global.7']
    $82load_method.8 = getattr(value=$80load_global.7, attr=sqrt) ['$80load_global.7', '$82load_method.8']
    $const84.9 = const(int, 1)               ['$const84.9']
    $90binary_multiply.12 = r_inner_over_r * r_inner_over_r ['$90binary_multiply.12', 'r_inner_over_r', 'r_inner_over_r']
    $92binary_subtract.13 = $const84.9 - $90binary_multiply.12 ['$90binary_multiply.12', '$92binary_subtract.13', '$const84.9']
    $94call_method.14 = call $82load_method.8($92binary_subtract.13, func=$82load_method.8, args=[Var($92binary_subtract.13, vpacket.py:225)], kws=(), vararg=None) ['$82load_method.8', '$92binary_subtract.13', '$94call_method.14']
    $96unary_negative.15 = unary(fn=<built-in function neg>, value=$94call_method.14) ['$94call_method.14', '$96unary_negative.15']
    mu_min = $96unary_negative.15            ['$96unary_negative.15', 'mu_min']
    $const100.16 = const(bool, False)        ['$const100.16']
    v_packet_on_inner_boundary = $const100.16 ['$const100.16', 'v_packet_on_inner_boundary']
    $104load_global.17 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$104load_global.17']
    $106load_attr.18 = getattr(value=$104load_global.17, attr=full_relativity) ['$104load_global.17', '$106load_attr.18']
    bool108 = global(bool: <class 'bool'>)   ['bool108']
    $108pred = call bool108($106load_attr.18, func=bool108, args=(Var($106load_attr.18, vpacket.py:227),), kws=(), vararg=None) ['$106load_attr.18', '$108pred', 'bool108']
    branch $108pred, 110, 134                ['$108pred']
label 110:
    $110load_global.0 = global(angle_aberration_LF_to_CMF: CPUDispatcher(<function angle_aberration_LF_to_CMF at 0x7f6e4a1074d0>)) ['$110load_global.0']
    $116load_attr.3 = getattr(value=numba_model, attr=time_explosion) ['$116load_attr.3', 'numba_model']
    $120call_function.5 = call $110load_global.0(r_packet, $116load_attr.3, mu_min, func=$110load_global.0, args=[Var(r_packet, vpacket.py:212), Var($116load_attr.3, vpacket.py:229), Var(mu_min, vpacket.py:225)], kws=(), vararg=None) ['$110load_global.0', '$116load_attr.3', '$120call_function.5', 'mu_min', 'r_packet']
    mu_min = $120call_function.5             ['$120call_function.5', 'mu_min']
    jump 134                                 []
label 126:
    $const126.0 = const(bool, True)          ['$const126.0']
    v_packet_on_inner_boundary = $const126.0 ['$const126.0', 'v_packet_on_inner_boundary']
    $const130.1 = const(float, 0.0)          ['$const130.1']
    mu_min = $const130.1                     ['$const130.1', 'mu_min']
    jump 134                                 []
label 134:
    $const134.0 = const(float, 1.0)          ['$const134.0']
    $138binary_subtract.2 = $const134.0 - mu_min ['$138binary_subtract.2', '$const134.0', 'mu_min']
    $142binary_true_divide.4 = $138binary_subtract.2 / no_of_vpackets ['$138binary_subtract.2', '$142binary_true_divide.4', 'no_of_vpackets']
    mu_bin = $142binary_true_divide.4        ['$142binary_true_divide.4', 'mu_bin']
    $146load_global.5 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>)) ['$146load_global.5']
    $150load_attr.7 = getattr(value=r_packet, attr=r) ['$150load_attr.7', 'r_packet']
    $154load_attr.9 = getattr(value=r_packet, attr=mu) ['$154load_attr.9', 'r_packet']
    $158load_attr.11 = getattr(value=numba_model, attr=time_explosion) ['$158load_attr.11', 'numba_model']
    $160call_function.12 = call $146load_global.5($150load_attr.7, $154load_attr.9, $158load_attr.11, func=$146load_global.5, args=[Var($150load_attr.7, vpacket.py:237), Var($154load_attr.9, vpacket.py:237), Var($158load_attr.11, vpacket.py:237)], kws=(), vararg=None) ['$146load_global.5', '$150load_attr.7', '$154load_attr.9', '$158load_attr.11', '$160call_function.12']
    r_packet_doppler_factor = $160call_function.12 ['$160call_function.12', 'r_packet_doppler_factor']
    jump 164                                 []
label 164:
    $168load_global.0 = global(range: <class 'range'>) ['$168load_global.0']
    $172call_function.2 = call $168load_global.0(no_of_vpackets, func=$168load_global.0, args=[Var(no_of_vpackets, vpacket.py:218)], kws=(), vararg=None) ['$168load_global.0', '$172call_function.2', 'no_of_vpackets']
    $174get_iter.3 = getiter(value=$172call_function.2) ['$172call_function.2', '$174get_iter.3']
    $phi176.0 = $174get_iter.3               ['$174get_iter.3', '$phi176.0']
    jump 176                                 []
label 176:
    $176for_iter.1 = iternext(value=$phi176.0) ['$176for_iter.1', '$phi176.0']
    $176for_iter.2 = pair_first(value=$176for_iter.1) ['$176for_iter.1', '$176for_iter.2']
    $176for_iter.3 = pair_second(value=$176for_iter.1) ['$176for_iter.1', '$176for_iter.3']
    $phi180.1 = $176for_iter.2               ['$176for_iter.2', '$phi180.1']
    branch $176for_iter.3, 180, 460          ['$176for_iter.3']
label 180:
    i = $phi180.1                            ['$phi180.1', 'i']
    $188binary_multiply.5 = i * mu_bin       ['$188binary_multiply.5', 'i', 'mu_bin']
    $190binary_add.6 = mu_min + $188binary_multiply.5 ['$188binary_multiply.5', '$190binary_add.6', 'mu_min']
    $192load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$192load_global.7']
    $194load_attr.8 = getattr(value=$192load_global.7, attr=random) ['$192load_global.7', '$194load_attr.8']
    $196load_method.9 = getattr(value=$194load_attr.8, attr=random) ['$194load_attr.8', '$196load_method.9']
    $198call_method.10 = call $196load_method.9(func=$196load_method.9, args=[], kws=(), vararg=None) ['$196load_method.9', '$198call_method.10']
    $202binary_multiply.12 = $198call_method.10 * mu_bin ['$198call_method.10', '$202binary_multiply.12', 'mu_bin']
    $204binary_add.13 = $190binary_add.6 + $202binary_multiply.12 ['$190binary_add.6', '$202binary_multiply.12', '$204binary_add.13']
    v_packet_mu = $204binary_add.13          ['$204binary_add.13', 'v_packet_mu']
    bool210 = global(bool: <class 'bool'>)   ['bool210']
    $210pred = call bool210(v_packet_on_inner_boundary, func=bool210, args=(Var(v_packet_on_inner_boundary, vpacket.py:226),), kws=(), vararg=None) ['$210pred', 'bool210', 'v_packet_on_inner_boundary']
    branch $210pred, 212, 226                ['$210pred']
label 212:
    $const212.1 = const(int, 2)              ['$const212.1']
    $216binary_multiply.3 = $const212.1 * v_packet_mu ['$216binary_multiply.3', '$const212.1', 'v_packet_mu']
    $220binary_true_divide.5 = $216binary_multiply.3 / no_of_vpackets ['$216binary_multiply.3', '$220binary_true_divide.5', 'no_of_vpackets']
    weight = $220binary_true_divide.5        ['$220binary_true_divide.5', 'weight']
    jump 242                                 []
label 226:
    $const226.1 = const(int, 1)              ['$const226.1']
    $230binary_subtract.3 = $const226.1 - mu_min ['$230binary_subtract.3', '$const226.1', 'mu_min']
    $const232.4 = const(int, 2)              ['$const232.4']
    $236binary_multiply.6 = $const232.4 * no_of_vpackets ['$236binary_multiply.6', '$const232.4', 'no_of_vpackets']
    $238binary_true_divide.7 = $230binary_subtract.3 / $236binary_multiply.6 ['$230binary_subtract.3', '$236binary_multiply.6', '$238binary_true_divide.7']
    weight = $238binary_true_divide.7        ['$238binary_true_divide.7', 'weight']
    jump 242                                 []
label 242:
    $242load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$242load_global.1']
    $244load_attr.2 = getattr(value=$242load_global.1, attr=full_relativity) ['$242load_global.1', '$244load_attr.2']
    bool246 = global(bool: <class 'bool'>)   ['bool246']
    $246pred = call bool246($244load_attr.2, func=bool246, args=(Var($244load_attr.2, vpacket.py:248),), kws=(), vararg=None) ['$244load_attr.2', '$246pred', 'bool246']
    branch $246pred, 250, 264                ['$246pred']
label 250:
    $250load_global.1 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>)) ['$250load_global.1']
    $256load_attr.4 = getattr(value=numba_model, attr=time_explosion) ['$256load_attr.4', 'numba_model']
    $260call_function.6 = call $250load_global.1(r_packet, $256load_attr.4, v_packet_mu, func=$250load_global.1, args=[Var(r_packet, vpacket.py:212), Var($256load_attr.4, vpacket.py:250), Var(v_packet_mu, vpacket.py:240)], kws=(), vararg=None) ['$250load_global.1', '$256load_attr.4', '$260call_function.6', 'r_packet', 'v_packet_mu']
    v_packet_mu = $260call_function.6        ['$260call_function.6', 'v_packet_mu']
    jump 264                                 []
label 264:
    $264load_global.1 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>)) ['$264load_global.1']
    $268load_attr.3 = getattr(value=r_packet, attr=r) ['$268load_attr.3', 'r_packet']
    $274load_attr.6 = getattr(value=numba_model, attr=time_explosion) ['$274load_attr.6', 'numba_model']
    $276call_function.7 = call $264load_global.1($268load_attr.3, v_packet_mu, $274load_attr.6, func=$264load_global.1, args=[Var($268load_attr.3, vpacket.py:253), Var(v_packet_mu, vpacket.py:240), Var($274load_attr.6, vpacket.py:253)], kws=(), vararg=None) ['$264load_global.1', '$268load_attr.3', '$274load_attr.6', '$276call_function.7', 'v_packet_mu']
    v_packet_doppler_factor = $276call_function.7 ['$276call_function.7', 'v_packet_doppler_factor']
    $284binary_true_divide.10 = r_packet_doppler_factor / v_packet_doppler_factor ['$284binary_true_divide.10', 'r_packet_doppler_factor', 'v_packet_doppler_factor']
    doppler_factor_ratio = $284binary_true_divide.10 ['$284binary_true_divide.10', 'doppler_factor_ratio']
    $290load_attr.12 = getattr(value=r_packet, attr=nu) ['$290load_attr.12', 'r_packet']
    $294binary_multiply.14 = $290load_attr.12 * doppler_factor_ratio ['$290load_attr.12', '$294binary_multiply.14', 'doppler_factor_ratio']
    v_packet_nu = $294binary_multiply.14     ['$294binary_multiply.14', 'v_packet_nu']
    $300load_attr.16 = getattr(value=r_packet, attr=energy) ['$300load_attr.16', 'r_packet']
    $304binary_multiply.18 = $300load_attr.16 * weight ['$300load_attr.16', '$304binary_multiply.18', 'weight']
    $308binary_multiply.20 = $304binary_multiply.18 * doppler_factor_ratio ['$304binary_multiply.18', '$308binary_multiply.20', 'doppler_factor_ratio']
    v_packet_energy = $308binary_multiply.20 ['$308binary_multiply.20', 'v_packet_energy']
    $312load_global.21 = global(VPacket: <class 'numba.experimental.jitclass.base.VPacket'>) ['$312load_global.21']
    $316load_attr.23 = getattr(value=r_packet, attr=r) ['$316load_attr.23', 'r_packet']
    $326load_attr.28 = getattr(value=r_packet, attr=current_shell_id) ['$326load_attr.28', 'r_packet']
    $330load_attr.30 = getattr(value=r_packet, attr=next_line_id) ['$330load_attr.30', 'r_packet']
    $336load_attr.33 = getattr(value=r_packet, attr=is_close_line) ['$336load_attr.33', 'r_packet']
    $338call_function.34 = call $312load_global.21($316load_attr.23, v_packet_mu, v_packet_nu, v_packet_energy, $326load_attr.28, $330load_attr.30, i, $336load_attr.33, func=$312load_global.21, args=[Var($316load_attr.23, vpacket.py:264), Var(v_packet_mu, vpacket.py:240), Var(v_packet_nu, vpacket.py:260), Var(v_packet_energy, vpacket.py:261), Var($326load_attr.28, vpacket.py:268), Var($330load_attr.30, vpacket.py:269), Var(i, vpacket.py:239), Var($336load_attr.33, vpacket.py:271)], kws=(), vararg=None) ['$312load_global.21', '$316load_attr.23', '$326load_attr.28', '$330load_attr.30', '$336load_attr.33', '$338call_function.34', 'i', 'v_packet_energy', 'v_packet_mu', 'v_packet_nu']
    v_packet = $338call_function.34          ['$338call_function.34', 'v_packet']
    $344load_attr.36 = getattr(value=r_packet, attr=next_line_id) ['$344load_attr.36', 'r_packet']
    $346load_global.37 = global(len: <built-in function len>) ['$346load_global.37']
    $350load_attr.39 = getattr(value=numba_plasma, attr=line_list_nu) ['$350load_attr.39', 'numba_plasma']
    $352call_function.40 = call $346load_global.37($350load_attr.39, func=$346load_global.37, args=[Var($350load_attr.39, vpacket.py:274)], kws=(), vararg=None) ['$346load_global.37', '$350load_attr.39', '$352call_function.40']
    $const354.41 = const(int, 1)             ['$const354.41']
    $356binary_subtract.42 = $352call_function.40 - $const354.41 ['$352call_function.40', '$356binary_subtract.42', '$const354.41']
    $358compare_op.43 = $344load_attr.36 <= $356binary_subtract.42 ['$344load_attr.36', '$356binary_subtract.42', '$358compare_op.43']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($358compare_op.43, func=bool360, args=(Var($358compare_op.43, vpacket.py:274),), kws=(), vararg=None) ['$358compare_op.43', '$360pred', 'bool360']
    branch $360pred, 364, 392                ['$360pred']
label 364:
    $364load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>)) ['$364load_global.1']
    $370load_attr.4 = getattr(value=r_packet, attr=next_line_id) ['$370load_attr.4', 'r_packet']
    $374load_attr.6 = getattr(value=numba_plasma, attr=line_list_nu) ['$374load_attr.6', 'numba_plasma']
    $378load_attr.8 = getattr(value=r_packet, attr=next_line_id) ['$378load_attr.8', 'r_packet']
    $const380.9 = const(int, 1)              ['$const380.9']
    $382binary_subtract.10 = $378load_attr.8 - $const380.9 ['$378load_attr.8', '$382binary_subtract.10', '$const380.9']
    $384binary_subscr.11 = getitem(value=$374load_attr.6, index=$382binary_subtract.10) ['$374load_attr.6', '$382binary_subtract.10', '$384binary_subscr.11']
    $388call_function.13 = call $364load_global.1(v_packet, $370load_attr.4, $384binary_subscr.11, numba_plasma, func=$364load_global.1, args=[Var(v_packet, vpacket.py:271), Var($370load_attr.4, vpacket.py:277), Var($384binary_subscr.11, vpacket.py:278), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None) ['$364load_global.1', '$370load_attr.4', '$384binary_subscr.11', '$388call_function.13', 'numba_plasma', 'v_packet']
    jump 392                                 []
label 392:
    $392load_global.1 = global(trace_vpacket: CPUDispatcher(<function trace_vpacket at 0x7f6e4a0be4d0>)) ['$392load_global.1']
    $400call_function.5 = call $392load_global.1(v_packet, numba_model, numba_plasma, func=$392load_global.1, args=[Var(v_packet, vpacket.py:271), Var(numba_model, vpacket.py:212), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None) ['$392load_global.1', '$400call_function.5', 'numba_model', 'numba_plasma', 'v_packet']
    tau_vpacket = $400call_function.5        ['$400call_function.5', 'tau_vpacket']
    $408load_attr.8 = getattr(value=v_packet, attr=energy) ['$408load_attr.8', 'v_packet']
    $410load_global.9 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>) ['$410load_global.9']
    $412load_method.10 = getattr(value=$410load_global.9, attr=exp) ['$410load_global.9', '$412load_method.10']
    $416unary_negative.12 = unary(fn=<built-in function neg>, value=tau_vpacket) ['$416unary_negative.12', 'tau_vpacket']
    $418call_method.13 = call $412load_method.10($416unary_negative.12, func=$412load_method.10, args=[Var($416unary_negative.12, vpacket.py:284)], kws=(), vararg=None) ['$412load_method.10', '$416unary_negative.12', '$418call_method.13']
    $420inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$408load_attr.8, rhs=$418call_method.13, static_lhs=Undefined, static_rhs=Undefined) ['$408load_attr.8', '$418call_method.13', '$420inplace_multiply.14']
    (v_packet).energy = $420inplace_multiply.14 ['$420inplace_multiply.14', 'v_packet']
    $428load_method.16 = getattr(value=vpacket_collection, attr=set_properties) ['$428load_method.16', 'vpacket_collection']
    $432load_attr.18 = getattr(value=v_packet, attr=nu) ['$432load_attr.18', 'v_packet']
    $436load_attr.20 = getattr(value=v_packet, attr=energy) ['$436load_attr.20', 'v_packet']
    $440load_attr.22 = getattr(value=r_packet, attr=last_interaction_in_nu) ['$440load_attr.22', 'r_packet']
    $444load_attr.24 = getattr(value=r_packet, attr=last_interaction_type) ['$444load_attr.24', 'r_packet']
    $448load_attr.26 = getattr(value=r_packet, attr=last_line_interaction_in_id) ['$448load_attr.26', 'r_packet']
    $452load_attr.28 = getattr(value=r_packet, attr=last_line_interaction_out_id) ['$452load_attr.28', 'r_packet']
    $454call_method.29 = call $428load_method.16($432load_attr.18, $436load_attr.20, $440load_attr.22, $444load_attr.24, $448load_attr.26, $452load_attr.28, func=$428load_method.16, args=[Var($432load_attr.18, vpacket.py:287), Var($436load_attr.20, vpacket.py:288), Var($440load_attr.22, vpacket.py:289), Var($444load_attr.24, vpacket.py:290), Var($448load_attr.26, vpacket.py:291), Var($452load_attr.28, vpacket.py:292)], kws=(), vararg=None) ['$428load_method.16', '$432load_attr.18', '$436load_attr.20', '$440load_attr.22', '$444load_attr.24', '$448load_attr.26', '$452load_attr.28', '$454call_method.29']
    jump 176                                 []
label 460:
    jump 462                                 []
label 462:
    $const462.0 = const(NoneType, None)      ['$const462.0']
    $464return_value.1 = cast(value=$const462.0) ['$464return_value.1', '$const462.0']
    return $464return_value.1                ['$464return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = arg(1, name=vpacket_collection)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(2, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $10compare_op.4 = $4load_attr.1 < $8load_attr.3
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, vpacket.py:212),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 26, 14
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $16load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $20load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $22compare_op.4 = $16load_attr.1 > $20load_attr.3
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.4, func=bool24, args=(Var($22compare_op.4, vpacket.py:213),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=$const26.0)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $32load_attr.1 = getattr(value=vpacket_collection, attr=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: no_of_vpackets = $32load_attr.1
DEBUG:numba.core.ssa:on stmt: $const38.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.4 = no_of_vpackets == $const38.3
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.4, func=bool42, args=(Var($40compare_op.4, vpacket.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $const44.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $50load_attr.1 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $54load_attr.3 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const56.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.5 = static_getitem(value=$54load_attr.3, index=0, index_var=$const56.4)
DEBUG:numba.core.ssa:on stmt: $60compare_op.6 = $50load_attr.1 > $58binary_subscr.5
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($60compare_op.6, func=bool62, args=(Var($60compare_op.6, vpacket.py:223),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 126
DEBUG:numba.core.ssa:==== SSA block analysis pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $66load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.3 = static_getitem(value=$66load_attr.1, index=0, index_var=$const68.2)
DEBUG:numba.core.ssa:on stmt: $74load_attr.5 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $76binary_true_divide.6 = $70binary_subscr.3 / $74load_attr.5
DEBUG:numba.core.ssa:on stmt: r_inner_over_r = $76binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: $80load_global.7 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $82load_method.8 = getattr(value=$80load_global.7, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const84.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.12 = r_inner_over_r * r_inner_over_r
DEBUG:numba.core.ssa:on stmt: $92binary_subtract.13 = $const84.9 - $90binary_multiply.12
DEBUG:numba.core.ssa:on stmt: $94call_method.14 = call $82load_method.8($92binary_subtract.13, func=$82load_method.8, args=[Var($92binary_subtract.13, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $96unary_negative.15 = unary(fn=<built-in function neg>, value=$94call_method.14)
DEBUG:numba.core.ssa:on stmt: mu_min = $96unary_negative.15
DEBUG:numba.core.ssa:on stmt: $const100.16 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const100.16
DEBUG:numba.core.ssa:on stmt: $104load_global.17 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_attr.18 = getattr(value=$104load_global.17, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106load_attr.18, func=bool108, args=(Var($106load_attr.18, vpacket.py:227),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 134
DEBUG:numba.core.ssa:==== SSA block analysis pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $110load_global.0 = global(angle_aberration_LF_to_CMF: CPUDispatcher(<function angle_aberration_LF_to_CMF at 0x7f6e4a1074d0>))
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $120call_function.5 = call $110load_global.0(r_packet, $116load_attr.3, mu_min, func=$110load_global.0, args=[Var(r_packet, vpacket.py:212), Var($116load_attr.3, vpacket.py:229), Var(mu_min, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: mu_min = $120call_function.5
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block analysis pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $const126.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const126.0
DEBUG:numba.core.ssa:on stmt: $const130.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: mu_min = $const130.1
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block analysis pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $const134.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.2 = $const134.0 - mu_min
DEBUG:numba.core.ssa:on stmt: $142binary_true_divide.4 = $138binary_subtract.2 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: mu_bin = $142binary_true_divide.4
DEBUG:numba.core.ssa:on stmt: $146load_global.5 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $150load_attr.7 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $154load_attr.9 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $158load_attr.11 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $160call_function.12 = call $146load_global.5($150load_attr.7, $154load_attr.9, $158load_attr.11, func=$146load_global.5, args=[Var($150load_attr.7, vpacket.py:237), Var($154load_attr.9, vpacket.py:237), Var($158load_attr.11, vpacket.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r_packet_doppler_factor = $160call_function.12
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block analysis pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $168load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $172call_function.2 = call $168load_global.0(no_of_vpackets, func=$168load_global.0, args=[Var(no_of_vpackets, vpacket.py:218)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.3 = getiter(value=$172call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi176.0 = $174get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block analysis pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $176for_iter.1 = iternext(value=$phi176.0)
DEBUG:numba.core.ssa:on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $176for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $176for_iter.3, 180, 460
DEBUG:numba.core.ssa:==== SSA block analysis pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: i = $phi180.1
DEBUG:numba.core.ssa:on stmt: $188binary_multiply.5 = i * mu_bin
DEBUG:numba.core.ssa:on stmt: $190binary_add.6 = mu_min + $188binary_multiply.5
DEBUG:numba.core.ssa:on stmt: $192load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_attr.8 = getattr(value=$192load_global.7, attr=random)
DEBUG:numba.core.ssa:on stmt: $196load_method.9 = getattr(value=$194load_attr.8, attr=random)
DEBUG:numba.core.ssa:on stmt: $198call_method.10 = call $196load_method.9(func=$196load_method.9, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $202binary_multiply.12 = $198call_method.10 * mu_bin
DEBUG:numba.core.ssa:on stmt: $204binary_add.13 = $190binary_add.6 + $202binary_multiply.12
DEBUG:numba.core.ssa:on stmt: v_packet_mu = $204binary_add.13
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210(v_packet_on_inner_boundary, func=bool210, args=(Var(v_packet_on_inner_boundary, vpacket.py:226),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 226
DEBUG:numba.core.ssa:==== SSA block analysis pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $const212.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.3 = $const212.1 * v_packet_mu
DEBUG:numba.core.ssa:on stmt: $220binary_true_divide.5 = $216binary_multiply.3 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: weight = $220binary_true_divide.5
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $const226.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $230binary_subtract.3 = $const226.1 - mu_min
DEBUG:numba.core.ssa:on stmt: $const232.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $236binary_multiply.6 = $const232.4 * no_of_vpackets
DEBUG:numba.core.ssa:on stmt: $238binary_true_divide.7 = $230binary_subtract.3 / $236binary_multiply.6
DEBUG:numba.core.ssa:on stmt: weight = $238binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $242load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $244load_attr.2 = getattr(value=$242load_global.1, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244load_attr.2, func=bool246, args=(Var($244load_attr.2, vpacket.py:248),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 250, 264
DEBUG:numba.core.ssa:==== SSA block analysis pass on 250
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $250load_global.1 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>))
DEBUG:numba.core.ssa:on stmt: $256load_attr.4 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $260call_function.6 = call $250load_global.1(r_packet, $256load_attr.4, v_packet_mu, func=$250load_global.1, args=[Var(r_packet, vpacket.py:212), Var($256load_attr.4, vpacket.py:250), Var(v_packet_mu, vpacket.py:240)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_mu = $260call_function.6
DEBUG:numba.core.ssa:on stmt: jump 264
DEBUG:numba.core.ssa:==== SSA block analysis pass on 264
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $264load_global.1 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $268load_attr.3 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $274load_attr.6 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $276call_function.7 = call $264load_global.1($268load_attr.3, v_packet_mu, $274load_attr.6, func=$264load_global.1, args=[Var($268load_attr.3, vpacket.py:253), Var(v_packet_mu, vpacket.py:240), Var($274load_attr.6, vpacket.py:253)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_doppler_factor = $276call_function.7
DEBUG:numba.core.ssa:on stmt: $284binary_true_divide.10 = r_packet_doppler_factor / v_packet_doppler_factor
DEBUG:numba.core.ssa:on stmt: doppler_factor_ratio = $284binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $290load_attr.12 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $294binary_multiply.14 = $290load_attr.12 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_nu = $294binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $300load_attr.16 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $304binary_multiply.18 = $300load_attr.16 * weight
DEBUG:numba.core.ssa:on stmt: $308binary_multiply.20 = $304binary_multiply.18 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_energy = $308binary_multiply.20
DEBUG:numba.core.ssa:on stmt: $312load_global.21 = global(VPacket: <class 'numba.experimental.jitclass.base.VPacket'>)
DEBUG:numba.core.ssa:on stmt: $316load_attr.23 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $326load_attr.28 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $330load_attr.30 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $336load_attr.33 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: $338call_function.34 = call $312load_global.21($316load_attr.23, v_packet_mu, v_packet_nu, v_packet_energy, $326load_attr.28, $330load_attr.30, i, $336load_attr.33, func=$312load_global.21, args=[Var($316load_attr.23, vpacket.py:264), Var(v_packet_mu, vpacket.py:240), Var(v_packet_nu, vpacket.py:260), Var(v_packet_energy, vpacket.py:261), Var($326load_attr.28, vpacket.py:268), Var($330load_attr.30, vpacket.py:269), Var(i, vpacket.py:239), Var($336load_attr.33, vpacket.py:271)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet = $338call_function.34
DEBUG:numba.core.ssa:on stmt: $344load_attr.36 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $346load_global.37 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $350load_attr.39 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $352call_function.40 = call $346load_global.37($350load_attr.39, func=$346load_global.37, args=[Var($350load_attr.39, vpacket.py:274)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const354.41 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356binary_subtract.42 = $352call_function.40 - $const354.41
DEBUG:numba.core.ssa:on stmt: $358compare_op.43 = $344load_attr.36 <= $356binary_subtract.42
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($358compare_op.43, func=bool360, args=(Var($358compare_op.43, vpacket.py:274),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 364, 392
DEBUG:numba.core.ssa:==== SSA block analysis pass on 364
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $364load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.4 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $374load_attr.6 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $378load_attr.8 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $const380.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $382binary_subtract.10 = $378load_attr.8 - $const380.9
DEBUG:numba.core.ssa:on stmt: $384binary_subscr.11 = getitem(value=$374load_attr.6, index=$382binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: $388call_function.13 = call $364load_global.1(v_packet, $370load_attr.4, $384binary_subscr.11, numba_plasma, func=$364load_global.1, args=[Var(v_packet, vpacket.py:271), Var($370load_attr.4, vpacket.py:277), Var($384binary_subscr.11, vpacket.py:278), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 392
DEBUG:numba.core.ssa:==== SSA block analysis pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $392load_global.1 = global(trace_vpacket: CPUDispatcher(<function trace_vpacket at 0x7f6e4a0be4d0>))
DEBUG:numba.core.ssa:on stmt: $400call_function.5 = call $392load_global.1(v_packet, numba_model, numba_plasma, func=$392load_global.1, args=[Var(v_packet, vpacket.py:271), Var(numba_model, vpacket.py:212), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_vpacket = $400call_function.5
DEBUG:numba.core.ssa:on stmt: $408load_attr.8 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $410load_global.9 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $412load_method.10 = getattr(value=$410load_global.9, attr=exp)
DEBUG:numba.core.ssa:on stmt: $416unary_negative.12 = unary(fn=<built-in function neg>, value=tau_vpacket)
DEBUG:numba.core.ssa:on stmt: $418call_method.13 = call $412load_method.10($416unary_negative.12, func=$412load_method.10, args=[Var($416unary_negative.12, vpacket.py:284)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $420inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$408load_attr.8, rhs=$418call_method.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $420inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: $428load_method.16 = getattr(value=vpacket_collection, attr=set_properties)
DEBUG:numba.core.ssa:on stmt: $432load_attr.18 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $436load_attr.20 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $440load_attr.22 = getattr(value=r_packet, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $444load_attr.24 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $448load_attr.26 = getattr(value=r_packet, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $452load_attr.28 = getattr(value=r_packet, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $454call_method.29 = call $428load_method.16($432load_attr.18, $436load_attr.20, $440load_attr.22, $444load_attr.24, $448load_attr.26, $452load_attr.28, func=$428load_method.16, args=[Var($432load_attr.18, vpacket.py:287), Var($436load_attr.20, vpacket.py:288), Var($440load_attr.22, vpacket.py:289), Var($444load_attr.24, vpacket.py:290), Var($448load_attr.26, vpacket.py:291), Var($452load_attr.28, vpacket.py:292)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block analysis pass on 460
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: jump 462
DEBUG:numba.core.ssa:==== SSA block analysis pass on 462
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46158450>
DEBUG:numba.core.ssa:on stmt: $const462.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $464return_value.1 = cast(value=$const462.0)
DEBUG:numba.core.ssa:on stmt: return $464return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$104load_global.17': [<numba.core.ir.Assign object at 0x7f6e462340d0>],
             '$106load_attr.18': [<numba.core.ir.Assign object at 0x7f6e46234910>],
             '$108pred': [<numba.core.ir.Assign object at 0x7f6e46234310>],
             '$10compare_op.4': [<numba.core.ir.Assign object at 0x7f6e45a3fd50>],
             '$110load_global.0': [<numba.core.ir.Assign object at 0x7f6e46234410>],
             '$116load_attr.3': [<numba.core.ir.Assign object at 0x7f6e4623db90>],
             '$120call_function.5': [<numba.core.ir.Assign object at 0x7f6e4623d450>],
             '$12pred': [<numba.core.ir.Assign object at 0x7f6e45a57090>],
             '$138binary_subtract.2': [<numba.core.ir.Assign object at 0x7f6e4623dad0>],
             '$142binary_true_divide.4': [<numba.core.ir.Assign object at 0x7f6e4623d290>],
             '$146load_global.5': [<numba.core.ir.Assign object at 0x7f6e4623d550>],
             '$150load_attr.7': [<numba.core.ir.Assign object at 0x7f6e462288d0>],
             '$154load_attr.9': [<numba.core.ir.Assign object at 0x7f6e46228690>],
             '$158load_attr.11': [<numba.core.ir.Assign object at 0x7f6e462283d0>],
             '$160call_function.12': [<numba.core.ir.Assign object at 0x7f6e46228550>],
             '$168load_global.0': [<numba.core.ir.Assign object at 0x7f6e46228450>],
             '$16load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45a57290>],
             '$172call_function.2': [<numba.core.ir.Assign object at 0x7f6e46228190>],
             '$174get_iter.3': [<numba.core.ir.Assign object at 0x7f6e46228ad0>],
             '$176for_iter.1': [<numba.core.ir.Assign object at 0x7f6e46228b10>],
             '$176for_iter.2': [<numba.core.ir.Assign object at 0x7f6e46228d50>],
             '$176for_iter.3': [<numba.core.ir.Assign object at 0x7f6e46228bd0>],
             '$188binary_multiply.5': [<numba.core.ir.Assign object at 0x7f6e4622ef10>],
             '$190binary_add.6': [<numba.core.ir.Assign object at 0x7f6e4622ea10>],
             '$192load_global.7': [<numba.core.ir.Assign object at 0x7f6e4622e710>],
             '$194load_attr.8': [<numba.core.ir.Assign object at 0x7f6e4622e6d0>],
             '$196load_method.9': [<numba.core.ir.Assign object at 0x7f6e4622ebd0>],
             '$198call_method.10': [<numba.core.ir.Assign object at 0x7f6e4622ed10>],
             '$202binary_multiply.12': [<numba.core.ir.Assign object at 0x7f6e4622e5d0>],
             '$204binary_add.13': [<numba.core.ir.Assign object at 0x7f6e4622e510>],
             '$20load_attr.3': [<numba.core.ir.Assign object at 0x7f6e45a57450>],
             '$210pred': [<numba.core.ir.Assign object at 0x7f6e4622e050>],
             '$216binary_multiply.3': [<numba.core.ir.Assign object at 0x7f6e46049410>],
             '$220binary_true_divide.5': [<numba.core.ir.Assign object at 0x7f6e460490d0>],
             '$22compare_op.4': [<numba.core.ir.Assign object at 0x7f6e45a57550>],
             '$230binary_subtract.3': [<numba.core.ir.Assign object at 0x7f6e46049d90>],
             '$236binary_multiply.6': [<numba.core.ir.Assign object at 0x7f6e4643d6d0>],
             '$238binary_true_divide.7': [<numba.core.ir.Assign object at 0x7f6e45f0a6d0>],
             '$242load_global.1': [<numba.core.ir.Assign object at 0x7f6e46f3ba90>],
             '$244load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45f09b90>],
             '$246pred': [<numba.core.ir.Assign object at 0x7f6e45f09d10>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f6e45a577d0>],
             '$250load_global.1': [<numba.core.ir.Assign object at 0x7f6e45f09d50>],
             '$256load_attr.4': [<numba.core.ir.Assign object at 0x7f6e45f09750>],
             '$260call_function.6': [<numba.core.ir.Assign object at 0x7f6e45f09fd0>],
             '$264load_global.1': [<numba.core.ir.Assign object at 0x7f6e45f09190>],
             '$268load_attr.3': [<numba.core.ir.Assign object at 0x7f6e45f09290>],
             '$274load_attr.6': [<numba.core.ir.Assign object at 0x7f6e4604d790>],
             '$276call_function.7': [<numba.core.ir.Assign object at 0x7f6e4604d910>],
             '$284binary_true_divide.10': [<numba.core.ir.Assign object at 0x7f6e4604dbd0>],
             '$28return_value.1': [<numba.core.ir.Assign object at 0x7f6e45a57a50>],
             '$290load_attr.12': [<numba.core.ir.Assign object at 0x7f6e4604df90>],
             '$294binary_multiply.14': [<numba.core.ir.Assign object at 0x7f6e4604d890>],
             '$300load_attr.16': [<numba.core.ir.Assign object at 0x7f6e4604d350>],
             '$304binary_multiply.18': [<numba.core.ir.Assign object at 0x7f6e4604d490>],
             '$308binary_multiply.20': [<numba.core.ir.Assign object at 0x7f6e4604d210>],
             '$312load_global.21': [<numba.core.ir.Assign object at 0x7f6e4605dc90>],
             '$316load_attr.23': [<numba.core.ir.Assign object at 0x7f6e4605dfd0>],
             '$326load_attr.28': [<numba.core.ir.Assign object at 0x7f6e461c5a90>],
             '$32load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45a57cd0>],
             '$330load_attr.30': [<numba.core.ir.Assign object at 0x7f6e461c5050>],
             '$336load_attr.33': [<numba.core.ir.Assign object at 0x7f6e46026c90>],
             '$338call_function.34': [<numba.core.ir.Assign object at 0x7f6e46026e10>],
             '$344load_attr.36': [<numba.core.ir.Assign object at 0x7f6e460269d0>],
             '$346load_global.37': [<numba.core.ir.Assign object at 0x7f6e46026750>],
             '$350load_attr.39': [<numba.core.ir.Assign object at 0x7f6e46026a10>],
             '$352call_function.40': [<numba.core.ir.Assign object at 0x7f6e46026650>],
             '$356binary_subtract.42': [<numba.core.ir.Assign object at 0x7f6e46026590>],
             '$358compare_op.43': [<numba.core.ir.Assign object at 0x7f6e460262d0>],
             '$360pred': [<numba.core.ir.Assign object at 0x7f6e46026190>],
             '$364load_global.1': [<numba.core.ir.Assign object at 0x7f6e461c5410>],
             '$370load_attr.4': [<numba.core.ir.Assign object at 0x7f6e460267d0>],
             '$374load_attr.6': [<numba.core.ir.Assign object at 0x7f6e45edd090>],
             '$378load_attr.8': [<numba.core.ir.Assign object at 0x7f6e45edd390>],
             '$382binary_subtract.10': [<numba.core.ir.Assign object at 0x7f6e45edd610>],
             '$384binary_subscr.11': [<numba.core.ir.Assign object at 0x7f6e45edd690>],
             '$388call_function.13': [<numba.core.ir.Assign object at 0x7f6e45edd8d0>],
             '$392load_global.1': [<numba.core.ir.Assign object at 0x7f6e45edd910>],
             '$400call_function.5': [<numba.core.ir.Assign object at 0x7f6e45eddd50>],
             '$408load_attr.8': [<numba.core.ir.Assign object at 0x7f6e45edded0>],
             '$40compare_op.4': [<numba.core.ir.Assign object at 0x7f6e45a5e0d0>],
             '$410load_global.9': [<numba.core.ir.Assign object at 0x7f6e45edd350>],
             '$412load_method.10': [<numba.core.ir.Assign object at 0x7f6e45ef7b10>],
             '$416unary_negative.12': [<numba.core.ir.Assign object at 0x7f6e45ef7210>],
             '$418call_method.13': [<numba.core.ir.Assign object at 0x7f6e45ef7510>],
             '$420inplace_multiply.14': [<numba.core.ir.Assign object at 0x7f6e45ef7650>],
             '$428load_method.16': [<numba.core.ir.Assign object at 0x7f6e45ef7a10>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f6e45a5e310>],
             '$432load_attr.18': [<numba.core.ir.Assign object at 0x7f6e45ef7f90>],
             '$436load_attr.20': [<numba.core.ir.Assign object at 0x7f6e45ef7dd0>],
             '$440load_attr.22': [<numba.core.ir.Assign object at 0x7f6e45ef72d0>],
             '$444load_attr.24': [<numba.core.ir.Assign object at 0x7f6e45ef7950>],
             '$448load_attr.26': [<numba.core.ir.Assign object at 0x7f6e45eced10>],
             '$452load_attr.28': [<numba.core.ir.Assign object at 0x7f6e45ecea50>],
             '$454call_method.29': [<numba.core.ir.Assign object at 0x7f6e45ecee50>],
             '$464return_value.1': [<numba.core.ir.Assign object at 0x7f6e45ecef10>],
             '$46return_value.1': [<numba.core.ir.Assign object at 0x7f6e45a5e550>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45a3fc50>],
             '$50load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45a5e7d0>],
             '$54load_attr.3': [<numba.core.ir.Assign object at 0x7f6e45a5e990>],
             '$58binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e45ed0c10>],
             '$60compare_op.6': [<numba.core.ir.Assign object at 0x7f6e45a3f990>],
             '$62pred': [<numba.core.ir.Assign object at 0x7f6e4621a710>],
             '$66load_attr.1': [<numba.core.ir.Assign object at 0x7f6e4621a910>],
             '$70binary_subscr.3': [<numba.core.ir.Assign object at 0x7f6e45ed0b10>],
             '$74load_attr.5': [<numba.core.ir.Assign object at 0x7f6e4621a550>],
             '$76binary_true_divide.6': [<numba.core.ir.Assign object at 0x7f6e4621a350>],
             '$80load_global.7': [<numba.core.ir.Assign object at 0x7f6e4621a050>],
             '$82load_method.8': [<numba.core.ir.Assign object at 0x7f6e4621a2d0>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f6e45a3fd90>],
             '$90binary_multiply.12': [<numba.core.ir.Assign object at 0x7f6e46234f10>],
             '$92binary_subtract.13': [<numba.core.ir.Assign object at 0x7f6e46234d90>],
             '$94call_method.14': [<numba.core.ir.Assign object at 0x7f6e46234b90>],
             '$96unary_negative.15': [<numba.core.ir.Assign object at 0x7f6e462349d0>],
             '$const100.16': [<numba.core.ir.Assign object at 0x7f6e46234890>],
             '$const126.0': [<numba.core.ir.Assign object at 0x7f6e4623d410>],
             '$const130.1': [<numba.core.ir.Assign object at 0x7f6e4623d4d0>],
             '$const134.0': [<numba.core.ir.Assign object at 0x7f6e4623d890>],
             '$const212.1': [<numba.core.ir.Assign object at 0x7f6e4622e0d0>],
             '$const226.1': [<numba.core.ir.Assign object at 0x7f6e46049e50>],
             '$const232.4': [<numba.core.ir.Assign object at 0x7f6e46049650>],
             '$const26.0': [<numba.core.ir.Assign object at 0x7f6e45a57910>],
             '$const354.41': [<numba.core.ir.Assign object at 0x7f6e46026450>],
             '$const38.3': [<numba.core.ir.Assign object at 0x7f6e45a57f50>],
             '$const380.9': [<numba.core.ir.Assign object at 0x7f6e45edd450>],
             '$const44.0': [<numba.core.ir.Assign object at 0x7f6e45a5e450>],
             '$const462.0': [<numba.core.ir.Assign object at 0x7f6e45ef70d0>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7f6e45a5ea90>],
             '$const68.2': [<numba.core.ir.Assign object at 0x7f6e4621a590>],
             '$const84.9': [<numba.core.ir.Assign object at 0x7f6e4621a390>],
             '$phi176.0': [<numba.core.ir.Assign object at 0x7f6e462282d0>],
             '$phi180.1': [<numba.core.ir.Assign object at 0x7f6e46228c90>],
             'bool108': [<numba.core.ir.Assign object at 0x7f6e46234210>],
             'bool12': [<numba.core.ir.Assign object at 0x7f6e45a3ff90>],
             'bool210': [<numba.core.ir.Assign object at 0x7f6e4622e2d0>],
             'bool24': [<numba.core.ir.Assign object at 0x7f6e45a576d0>],
             'bool246': [<numba.core.ir.Assign object at 0x7f6e45f090d0>],
             'bool360': [<numba.core.ir.Assign object at 0x7f6e46026090>],
             'bool42': [<numba.core.ir.Assign object at 0x7f6e45a5e210>],
             'bool62': [<numba.core.ir.Assign object at 0x7f6e45f06f90>],
             'doppler_factor_ratio': [<numba.core.ir.Assign object at 0x7f6e4604dc50>],
             'i': [<numba.core.ir.Assign object at 0x7f6e46228f10>],
             'mu_bin': [<numba.core.ir.Assign object at 0x7f6e4623d150>],
             'mu_min': [<numba.core.ir.Assign object at 0x7f6e46234810>,
                        <numba.core.ir.Assign object at 0x7f6e462347d0>,
                        <numba.core.ir.Assign object at 0x7f6e4623d7d0>],
             'no_of_vpackets': [<numba.core.ir.Assign object at 0x7f6e45a57d90>],
             'numba_model': [<numba.core.ir.Assign object at 0x7f6e45a3f110>],
             'numba_plasma': [<numba.core.ir.Assign object at 0x7f6e45a3f510>],
             'r_inner_over_r': [<numba.core.ir.Assign object at 0x7f6e4621a190>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e45a3f690>],
             'r_packet_doppler_factor': [<numba.core.ir.Assign object at 0x7f6e46228390>],
             'tau_vpacket': [<numba.core.ir.Assign object at 0x7f6e45eddc10>],
             'v_packet': [<numba.core.ir.Assign object at 0x7f6e46026e90>],
             'v_packet_doppler_factor': [<numba.core.ir.Assign object at 0x7f6e4604d990>],
             'v_packet_energy': [<numba.core.ir.Assign object at 0x7f6e4604d810>],
             'v_packet_mu': [<numba.core.ir.Assign object at 0x7f6e4622e410>,
                             <numba.core.ir.Assign object at 0x7f6e468d3390>],
             'v_packet_nu': [<numba.core.ir.Assign object at 0x7f6e4604d110>],
             'v_packet_on_inner_boundary': [<numba.core.ir.Assign object at 0x7f6e462346d0>,
                                            <numba.core.ir.Assign object at 0x7f6e4623dfd0>],
             'vpacket_collection': [<numba.core.ir.Assign object at 0x7f6e45a3f190>],
             'weight': [<numba.core.ir.Assign object at 0x7f6e46049450>,
                        <numba.core.ir.Assign object at 0x7f6e468d3e50>]})
DEBUG:numba.core.ssa:SSA violators {'v_packet_mu', 'weight', 'mu_min', 'v_packet_on_inner_boundary'}
DEBUG:numba.core.ssa:Fix SSA violator on var v_packet_mu
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = arg(1, name=vpacket_collection)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(2, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $10compare_op.4 = $4load_attr.1 < $8load_attr.3
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, vpacket.py:212),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 26, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $16load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $20load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $22compare_op.4 = $16load_attr.1 > $20load_attr.3
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.4, func=bool24, args=(Var($22compare_op.4, vpacket.py:213),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=$const26.0)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $32load_attr.1 = getattr(value=vpacket_collection, attr=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: no_of_vpackets = $32load_attr.1
DEBUG:numba.core.ssa:on stmt: $const38.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.4 = no_of_vpackets == $const38.3
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.4, func=bool42, args=(Var($40compare_op.4, vpacket.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const44.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $50load_attr.1 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $54load_attr.3 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const56.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.5 = static_getitem(value=$54load_attr.3, index=0, index_var=$const56.4)
DEBUG:numba.core.ssa:on stmt: $60compare_op.6 = $50load_attr.1 > $58binary_subscr.5
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($60compare_op.6, func=bool62, args=(Var($60compare_op.6, vpacket.py:223),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $66load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.3 = static_getitem(value=$66load_attr.1, index=0, index_var=$const68.2)
DEBUG:numba.core.ssa:on stmt: $74load_attr.5 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $76binary_true_divide.6 = $70binary_subscr.3 / $74load_attr.5
DEBUG:numba.core.ssa:on stmt: r_inner_over_r = $76binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: $80load_global.7 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $82load_method.8 = getattr(value=$80load_global.7, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const84.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.12 = r_inner_over_r * r_inner_over_r
DEBUG:numba.core.ssa:on stmt: $92binary_subtract.13 = $const84.9 - $90binary_multiply.12
DEBUG:numba.core.ssa:on stmt: $94call_method.14 = call $82load_method.8($92binary_subtract.13, func=$82load_method.8, args=[Var($92binary_subtract.13, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $96unary_negative.15 = unary(fn=<built-in function neg>, value=$94call_method.14)
DEBUG:numba.core.ssa:on stmt: mu_min = $96unary_negative.15
DEBUG:numba.core.ssa:on stmt: $const100.16 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const100.16
DEBUG:numba.core.ssa:on stmt: $104load_global.17 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_attr.18 = getattr(value=$104load_global.17, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106load_attr.18, func=bool108, args=(Var($106load_attr.18, vpacket.py:227),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $110load_global.0 = global(angle_aberration_LF_to_CMF: CPUDispatcher(<function angle_aberration_LF_to_CMF at 0x7f6e4a1074d0>))
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $120call_function.5 = call $110load_global.0(r_packet, $116load_attr.3, mu_min, func=$110load_global.0, args=[Var(r_packet, vpacket.py:212), Var($116load_attr.3, vpacket.py:229), Var(mu_min, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: mu_min = $120call_function.5
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const126.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const126.0
DEBUG:numba.core.ssa:on stmt: $const130.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: mu_min = $const130.1
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const134.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.2 = $const134.0 - mu_min
DEBUG:numba.core.ssa:on stmt: $142binary_true_divide.4 = $138binary_subtract.2 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: mu_bin = $142binary_true_divide.4
DEBUG:numba.core.ssa:on stmt: $146load_global.5 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $150load_attr.7 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $154load_attr.9 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $158load_attr.11 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $160call_function.12 = call $146load_global.5($150load_attr.7, $154load_attr.9, $158load_attr.11, func=$146load_global.5, args=[Var($150load_attr.7, vpacket.py:237), Var($154load_attr.9, vpacket.py:237), Var($158load_attr.11, vpacket.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r_packet_doppler_factor = $160call_function.12
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $168load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $172call_function.2 = call $168load_global.0(no_of_vpackets, func=$168load_global.0, args=[Var(no_of_vpackets, vpacket.py:218)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.3 = getiter(value=$172call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi176.0 = $174get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $176for_iter.1 = iternext(value=$phi176.0)
DEBUG:numba.core.ssa:on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $176for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $176for_iter.3, 180, 460
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: i = $phi180.1
DEBUG:numba.core.ssa:on stmt: $188binary_multiply.5 = i * mu_bin
DEBUG:numba.core.ssa:on stmt: $190binary_add.6 = mu_min + $188binary_multiply.5
DEBUG:numba.core.ssa:on stmt: $192load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_attr.8 = getattr(value=$192load_global.7, attr=random)
DEBUG:numba.core.ssa:on stmt: $196load_method.9 = getattr(value=$194load_attr.8, attr=random)
DEBUG:numba.core.ssa:on stmt: $198call_method.10 = call $196load_method.9(func=$196load_method.9, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $202binary_multiply.12 = $198call_method.10 * mu_bin
DEBUG:numba.core.ssa:on stmt: $204binary_add.13 = $190binary_add.6 + $202binary_multiply.12
DEBUG:numba.core.ssa:on stmt: v_packet_mu = $204binary_add.13
DEBUG:numba.core.ssa:first assign: v_packet_mu
DEBUG:numba.core.ssa:replaced with: v_packet_mu = $204binary_add.13
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210(v_packet_on_inner_boundary, func=bool210, args=(Var(v_packet_on_inner_boundary, vpacket.py:226),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const212.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.3 = $const212.1 * v_packet_mu
DEBUG:numba.core.ssa:on stmt: $220binary_true_divide.5 = $216binary_multiply.3 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: weight = $220binary_true_divide.5
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const226.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $230binary_subtract.3 = $const226.1 - mu_min
DEBUG:numba.core.ssa:on stmt: $const232.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $236binary_multiply.6 = $const232.4 * no_of_vpackets
DEBUG:numba.core.ssa:on stmt: $238binary_true_divide.7 = $230binary_subtract.3 / $236binary_multiply.6
DEBUG:numba.core.ssa:on stmt: weight = $238binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $242load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $244load_attr.2 = getattr(value=$242load_global.1, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244load_attr.2, func=bool246, args=(Var($244load_attr.2, vpacket.py:248),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 250, 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 250
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $250load_global.1 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>))
DEBUG:numba.core.ssa:on stmt: $256load_attr.4 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $260call_function.6 = call $250load_global.1(r_packet, $256load_attr.4, v_packet_mu, func=$250load_global.1, args=[Var(r_packet, vpacket.py:212), Var($256load_attr.4, vpacket.py:250), Var(v_packet_mu, vpacket.py:240)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_mu = $260call_function.6
DEBUG:numba.core.ssa:replaced with: v_packet_mu.1 = $260call_function.6
DEBUG:numba.core.ssa:on stmt: jump 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 264
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $264load_global.1 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $268load_attr.3 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $274load_attr.6 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $276call_function.7 = call $264load_global.1($268load_attr.3, v_packet_mu, $274load_attr.6, func=$264load_global.1, args=[Var($268load_attr.3, vpacket.py:253), Var(v_packet_mu, vpacket.py:240), Var($274load_attr.6, vpacket.py:253)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_doppler_factor = $276call_function.7
DEBUG:numba.core.ssa:on stmt: $284binary_true_divide.10 = r_packet_doppler_factor / v_packet_doppler_factor
DEBUG:numba.core.ssa:on stmt: doppler_factor_ratio = $284binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $290load_attr.12 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $294binary_multiply.14 = $290load_attr.12 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_nu = $294binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $300load_attr.16 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $304binary_multiply.18 = $300load_attr.16 * weight
DEBUG:numba.core.ssa:on stmt: $308binary_multiply.20 = $304binary_multiply.18 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_energy = $308binary_multiply.20
DEBUG:numba.core.ssa:on stmt: $312load_global.21 = global(VPacket: <class 'numba.experimental.jitclass.base.VPacket'>)
DEBUG:numba.core.ssa:on stmt: $316load_attr.23 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $326load_attr.28 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $330load_attr.30 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $336load_attr.33 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: $338call_function.34 = call $312load_global.21($316load_attr.23, v_packet_mu, v_packet_nu, v_packet_energy, $326load_attr.28, $330load_attr.30, i, $336load_attr.33, func=$312load_global.21, args=[Var($316load_attr.23, vpacket.py:264), Var(v_packet_mu, vpacket.py:240), Var(v_packet_nu, vpacket.py:260), Var(v_packet_energy, vpacket.py:261), Var($326load_attr.28, vpacket.py:268), Var($330load_attr.30, vpacket.py:269), Var(i, vpacket.py:239), Var($336load_attr.33, vpacket.py:271)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet = $338call_function.34
DEBUG:numba.core.ssa:on stmt: $344load_attr.36 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $346load_global.37 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $350load_attr.39 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $352call_function.40 = call $346load_global.37($350load_attr.39, func=$346load_global.37, args=[Var($350load_attr.39, vpacket.py:274)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const354.41 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356binary_subtract.42 = $352call_function.40 - $const354.41
DEBUG:numba.core.ssa:on stmt: $358compare_op.43 = $344load_attr.36 <= $356binary_subtract.42
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($358compare_op.43, func=bool360, args=(Var($358compare_op.43, vpacket.py:274),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 364, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 364
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $364load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.4 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $374load_attr.6 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $378load_attr.8 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $const380.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $382binary_subtract.10 = $378load_attr.8 - $const380.9
DEBUG:numba.core.ssa:on stmt: $384binary_subscr.11 = getitem(value=$374load_attr.6, index=$382binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: $388call_function.13 = call $364load_global.1(v_packet, $370load_attr.4, $384binary_subscr.11, numba_plasma, func=$364load_global.1, args=[Var(v_packet, vpacket.py:271), Var($370load_attr.4, vpacket.py:277), Var($384binary_subscr.11, vpacket.py:278), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $392load_global.1 = global(trace_vpacket: CPUDispatcher(<function trace_vpacket at 0x7f6e4a0be4d0>))
DEBUG:numba.core.ssa:on stmt: $400call_function.5 = call $392load_global.1(v_packet, numba_model, numba_plasma, func=$392load_global.1, args=[Var(v_packet, vpacket.py:271), Var(numba_model, vpacket.py:212), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_vpacket = $400call_function.5
DEBUG:numba.core.ssa:on stmt: $408load_attr.8 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $410load_global.9 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $412load_method.10 = getattr(value=$410load_global.9, attr=exp)
DEBUG:numba.core.ssa:on stmt: $416unary_negative.12 = unary(fn=<built-in function neg>, value=tau_vpacket)
DEBUG:numba.core.ssa:on stmt: $418call_method.13 = call $412load_method.10($416unary_negative.12, func=$412load_method.10, args=[Var($416unary_negative.12, vpacket.py:284)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $420inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$408load_attr.8, rhs=$418call_method.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $420inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: $428load_method.16 = getattr(value=vpacket_collection, attr=set_properties)
DEBUG:numba.core.ssa:on stmt: $432load_attr.18 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $436load_attr.20 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $440load_attr.22 = getattr(value=r_packet, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $444load_attr.24 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $448load_attr.26 = getattr(value=r_packet, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $452load_attr.28 = getattr(value=r_packet, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $454call_method.29 = call $428load_method.16($432load_attr.18, $436load_attr.20, $440load_attr.22, $444load_attr.24, $448load_attr.26, $452load_attr.28, func=$428load_method.16, args=[Var($432load_attr.18, vpacket.py:287), Var($436load_attr.20, vpacket.py:288), Var($440load_attr.22, vpacket.py:289), Var($444load_attr.24, vpacket.py:290), Var($448load_attr.26, vpacket.py:291), Var($452load_attr.28, vpacket.py:292)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 460
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: jump 462
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 462
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const462.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $464return_value.1 = cast(value=$const462.0)
DEBUG:numba.core.ssa:on stmt: return $464return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {180: [<numba.core.ir.Assign object at 0x7f6e45f09d90>],
             250: [<numba.core.ir.Assign object at 0x7f6e46022950>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = arg(1, name=vpacket_collection)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(2, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $10compare_op.4 = $4load_attr.1 < $8load_attr.3
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, vpacket.py:212),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 26, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $16load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $20load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $22compare_op.4 = $16load_attr.1 > $20load_attr.3
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.4, func=bool24, args=(Var($22compare_op.4, vpacket.py:213),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=$const26.0)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $32load_attr.1 = getattr(value=vpacket_collection, attr=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: no_of_vpackets = $32load_attr.1
DEBUG:numba.core.ssa:on stmt: $const38.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.4 = no_of_vpackets == $const38.3
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.4, func=bool42, args=(Var($40compare_op.4, vpacket.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $const44.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $50load_attr.1 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $54load_attr.3 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const56.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.5 = static_getitem(value=$54load_attr.3, index=0, index_var=$const56.4)
DEBUG:numba.core.ssa:on stmt: $60compare_op.6 = $50load_attr.1 > $58binary_subscr.5
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($60compare_op.6, func=bool62, args=(Var($60compare_op.6, vpacket.py:223),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $66load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.3 = static_getitem(value=$66load_attr.1, index=0, index_var=$const68.2)
DEBUG:numba.core.ssa:on stmt: $74load_attr.5 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $76binary_true_divide.6 = $70binary_subscr.3 / $74load_attr.5
DEBUG:numba.core.ssa:on stmt: r_inner_over_r = $76binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: $80load_global.7 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $82load_method.8 = getattr(value=$80load_global.7, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const84.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.12 = r_inner_over_r * r_inner_over_r
DEBUG:numba.core.ssa:on stmt: $92binary_subtract.13 = $const84.9 - $90binary_multiply.12
DEBUG:numba.core.ssa:on stmt: $94call_method.14 = call $82load_method.8($92binary_subtract.13, func=$82load_method.8, args=[Var($92binary_subtract.13, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $96unary_negative.15 = unary(fn=<built-in function neg>, value=$94call_method.14)
DEBUG:numba.core.ssa:on stmt: mu_min = $96unary_negative.15
DEBUG:numba.core.ssa:on stmt: $const100.16 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const100.16
DEBUG:numba.core.ssa:on stmt: $104load_global.17 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_attr.18 = getattr(value=$104load_global.17, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106load_attr.18, func=bool108, args=(Var($106load_attr.18, vpacket.py:227),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $110load_global.0 = global(angle_aberration_LF_to_CMF: CPUDispatcher(<function angle_aberration_LF_to_CMF at 0x7f6e4a1074d0>))
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $120call_function.5 = call $110load_global.0(r_packet, $116load_attr.3, mu_min, func=$110load_global.0, args=[Var(r_packet, vpacket.py:212), Var($116load_attr.3, vpacket.py:229), Var(mu_min, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: mu_min = $120call_function.5
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $const126.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const126.0
DEBUG:numba.core.ssa:on stmt: $const130.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: mu_min = $const130.1
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $const134.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.2 = $const134.0 - mu_min
DEBUG:numba.core.ssa:on stmt: $142binary_true_divide.4 = $138binary_subtract.2 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: mu_bin = $142binary_true_divide.4
DEBUG:numba.core.ssa:on stmt: $146load_global.5 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $150load_attr.7 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $154load_attr.9 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $158load_attr.11 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $160call_function.12 = call $146load_global.5($150load_attr.7, $154load_attr.9, $158load_attr.11, func=$146load_global.5, args=[Var($150load_attr.7, vpacket.py:237), Var($154load_attr.9, vpacket.py:237), Var($158load_attr.11, vpacket.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r_packet_doppler_factor = $160call_function.12
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $168load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $172call_function.2 = call $168load_global.0(no_of_vpackets, func=$168load_global.0, args=[Var(no_of_vpackets, vpacket.py:218)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.3 = getiter(value=$172call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi176.0 = $174get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $176for_iter.1 = iternext(value=$phi176.0)
DEBUG:numba.core.ssa:on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $176for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $176for_iter.3, 180, 460
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: i = $phi180.1
DEBUG:numba.core.ssa:on stmt: $188binary_multiply.5 = i * mu_bin
DEBUG:numba.core.ssa:on stmt: $190binary_add.6 = mu_min + $188binary_multiply.5
DEBUG:numba.core.ssa:on stmt: $192load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_attr.8 = getattr(value=$192load_global.7, attr=random)
DEBUG:numba.core.ssa:on stmt: $196load_method.9 = getattr(value=$194load_attr.8, attr=random)
DEBUG:numba.core.ssa:on stmt: $198call_method.10 = call $196load_method.9(func=$196load_method.9, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $202binary_multiply.12 = $198call_method.10 * mu_bin
DEBUG:numba.core.ssa:on stmt: $204binary_add.13 = $190binary_add.6 + $202binary_multiply.12
DEBUG:numba.core.ssa:on stmt: v_packet_mu = $204binary_add.13
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210(v_packet_on_inner_boundary, func=bool210, args=(Var(v_packet_on_inner_boundary, vpacket.py:226),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $const212.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.3 = $const212.1 * v_packet_mu
DEBUG:numba.core.ssa:find_def var='v_packet_mu' stmt=$216binary_multiply.3 = $const212.1 * v_packet_mu
DEBUG:numba.core.ssa:find_def_from_top label 212
DEBUG:numba.core.ssa:idom 180 from label 212
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:on stmt: $220binary_true_divide.5 = $216binary_multiply.3 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: weight = $220binary_true_divide.5
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $const226.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $230binary_subtract.3 = $const226.1 - mu_min
DEBUG:numba.core.ssa:on stmt: $const232.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $236binary_multiply.6 = $const232.4 * no_of_vpackets
DEBUG:numba.core.ssa:on stmt: $238binary_true_divide.7 = $230binary_subtract.3 / $236binary_multiply.6
DEBUG:numba.core.ssa:on stmt: weight = $238binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $242load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $244load_attr.2 = getattr(value=$242load_global.1, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244load_attr.2, func=bool246, args=(Var($244load_attr.2, vpacket.py:248),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 250, 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 250
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $250load_global.1 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>))
DEBUG:numba.core.ssa:on stmt: $256load_attr.4 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $260call_function.6 = call $250load_global.1(r_packet, $256load_attr.4, v_packet_mu, func=$250load_global.1, args=[Var(r_packet, vpacket.py:212), Var($256load_attr.4, vpacket.py:250), Var(v_packet_mu, vpacket.py:240)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='v_packet_mu' stmt=$260call_function.6 = call $250load_global.1(r_packet, $256load_attr.4, v_packet_mu, func=$250load_global.1, args=[Var(r_packet, vpacket.py:212), Var($256load_attr.4, vpacket.py:250), Var(v_packet_mu, vpacket.py:240)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def_from_top label 250
DEBUG:numba.core.ssa:idom 242 from label 250
DEBUG:numba.core.ssa:find_def_from_bottom label 242
DEBUG:numba.core.ssa:find_def_from_top label 242
DEBUG:numba.core.ssa:idom 180 from label 242
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:on stmt: v_packet_mu.1 = $260call_function.6
DEBUG:numba.core.ssa:on stmt: jump 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 264
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $264load_global.1 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $268load_attr.3 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $274load_attr.6 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $276call_function.7 = call $264load_global.1($268load_attr.3, v_packet_mu, $274load_attr.6, func=$264load_global.1, args=[Var($268load_attr.3, vpacket.py:253), Var(v_packet_mu, vpacket.py:240), Var($274load_attr.6, vpacket.py:253)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='v_packet_mu' stmt=$276call_function.7 = call $264load_global.1($268load_attr.3, v_packet_mu, $274load_attr.6, func=$264load_global.1, args=[Var($268load_attr.3, vpacket.py:253), Var(v_packet_mu, vpacket.py:240), Var($274load_attr.6, vpacket.py:253)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def_from_top label 264
DEBUG:numba.core.ssa:insert phi node v_packet_mu.2 = phi(incoming_values=[], incoming_blocks=[]) at 264
DEBUG:numba.core.ssa:find_def_from_bottom label 242
DEBUG:numba.core.ssa:find_def_from_top label 242
DEBUG:numba.core.ssa:idom 180 from label 242
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:incoming_def v_packet_mu = $204binary_add.13
DEBUG:numba.core.ssa:find_def_from_bottom label 250
DEBUG:numba.core.ssa:incoming_def v_packet_mu.1 = $260call_function.6
DEBUG:numba.core.ssa:replaced with: $276call_function.7 = call $264load_global.1($268load_attr.3, v_packet_mu.2, $274load_attr.6, func=$264load_global.1, args=[Var($268load_attr.3, vpacket.py:253), Var(v_packet_mu.2, vpacket.py:252), Var($274load_attr.6, vpacket.py:253)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_doppler_factor = $276call_function.7
DEBUG:numba.core.ssa:on stmt: $284binary_true_divide.10 = r_packet_doppler_factor / v_packet_doppler_factor
DEBUG:numba.core.ssa:on stmt: doppler_factor_ratio = $284binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $290load_attr.12 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $294binary_multiply.14 = $290load_attr.12 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_nu = $294binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $300load_attr.16 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $304binary_multiply.18 = $300load_attr.16 * weight
DEBUG:numba.core.ssa:on stmt: $308binary_multiply.20 = $304binary_multiply.18 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_energy = $308binary_multiply.20
DEBUG:numba.core.ssa:on stmt: $312load_global.21 = global(VPacket: <class 'numba.experimental.jitclass.base.VPacket'>)
DEBUG:numba.core.ssa:on stmt: $316load_attr.23 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $326load_attr.28 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $330load_attr.30 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $336load_attr.33 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: $338call_function.34 = call $312load_global.21($316load_attr.23, v_packet_mu, v_packet_nu, v_packet_energy, $326load_attr.28, $330load_attr.30, i, $336load_attr.33, func=$312load_global.21, args=[Var($316load_attr.23, vpacket.py:264), Var(v_packet_mu, vpacket.py:240), Var(v_packet_nu, vpacket.py:260), Var(v_packet_energy, vpacket.py:261), Var($326load_attr.28, vpacket.py:268), Var($330load_attr.30, vpacket.py:269), Var(i, vpacket.py:239), Var($336load_attr.33, vpacket.py:271)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='v_packet_mu' stmt=$338call_function.34 = call $312load_global.21($316load_attr.23, v_packet_mu, v_packet_nu, v_packet_energy, $326load_attr.28, $330load_attr.30, i, $336load_attr.33, func=$312load_global.21, args=[Var($316load_attr.23, vpacket.py:264), Var(v_packet_mu, vpacket.py:240), Var(v_packet_nu, vpacket.py:260), Var(v_packet_energy, vpacket.py:261), Var($326load_attr.28, vpacket.py:268), Var($330load_attr.30, vpacket.py:269), Var(i, vpacket.py:239), Var($336load_attr.33, vpacket.py:271)], kws=(), vararg=None)
DEBUG:numba.core.ssa:replaced with: $338call_function.34 = call $312load_global.21($316load_attr.23, v_packet_mu.2, v_packet_nu, v_packet_energy, $326load_attr.28, $330load_attr.30, i, $336load_attr.33, func=$312load_global.21, args=[Var($316load_attr.23, vpacket.py:264), Var(v_packet_mu.2, vpacket.py:252), Var(v_packet_nu, vpacket.py:260), Var(v_packet_energy, vpacket.py:261), Var($326load_attr.28, vpacket.py:268), Var($330load_attr.30, vpacket.py:269), Var(i, vpacket.py:239), Var($336load_attr.33, vpacket.py:271)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet = $338call_function.34
DEBUG:numba.core.ssa:on stmt: $344load_attr.36 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $346load_global.37 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $350load_attr.39 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $352call_function.40 = call $346load_global.37($350load_attr.39, func=$346load_global.37, args=[Var($350load_attr.39, vpacket.py:274)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const354.41 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356binary_subtract.42 = $352call_function.40 - $const354.41
DEBUG:numba.core.ssa:on stmt: $358compare_op.43 = $344load_attr.36 <= $356binary_subtract.42
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($358compare_op.43, func=bool360, args=(Var($358compare_op.43, vpacket.py:274),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 364, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 364
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $364load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.4 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $374load_attr.6 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $378load_attr.8 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $const380.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $382binary_subtract.10 = $378load_attr.8 - $const380.9
DEBUG:numba.core.ssa:on stmt: $384binary_subscr.11 = getitem(value=$374load_attr.6, index=$382binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: $388call_function.13 = call $364load_global.1(v_packet, $370load_attr.4, $384binary_subscr.11, numba_plasma, func=$364load_global.1, args=[Var(v_packet, vpacket.py:271), Var($370load_attr.4, vpacket.py:277), Var($384binary_subscr.11, vpacket.py:278), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $392load_global.1 = global(trace_vpacket: CPUDispatcher(<function trace_vpacket at 0x7f6e4a0be4d0>))
DEBUG:numba.core.ssa:on stmt: $400call_function.5 = call $392load_global.1(v_packet, numba_model, numba_plasma, func=$392load_global.1, args=[Var(v_packet, vpacket.py:271), Var(numba_model, vpacket.py:212), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_vpacket = $400call_function.5
DEBUG:numba.core.ssa:on stmt: $408load_attr.8 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $410load_global.9 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $412load_method.10 = getattr(value=$410load_global.9, attr=exp)
DEBUG:numba.core.ssa:on stmt: $416unary_negative.12 = unary(fn=<built-in function neg>, value=tau_vpacket)
DEBUG:numba.core.ssa:on stmt: $418call_method.13 = call $412load_method.10($416unary_negative.12, func=$412load_method.10, args=[Var($416unary_negative.12, vpacket.py:284)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $420inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$408load_attr.8, rhs=$418call_method.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $420inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: $428load_method.16 = getattr(value=vpacket_collection, attr=set_properties)
DEBUG:numba.core.ssa:on stmt: $432load_attr.18 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $436load_attr.20 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $440load_attr.22 = getattr(value=r_packet, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $444load_attr.24 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $448load_attr.26 = getattr(value=r_packet, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $452load_attr.28 = getattr(value=r_packet, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $454call_method.29 = call $428load_method.16($432load_attr.18, $436load_attr.20, $440load_attr.22, $444load_attr.24, $448load_attr.26, $452load_attr.28, func=$428load_method.16, args=[Var($432load_attr.18, vpacket.py:287), Var($436load_attr.20, vpacket.py:288), Var($440load_attr.22, vpacket.py:289), Var($444load_attr.24, vpacket.py:290), Var($448load_attr.26, vpacket.py:291), Var($452load_attr.28, vpacket.py:292)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 460
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: jump 462
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 462
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022f10>
DEBUG:numba.core.ssa:on stmt: $const462.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $464return_value.1 = cast(value=$const462.0)
DEBUG:numba.core.ssa:on stmt: return $464return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var weight
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = arg(1, name=vpacket_collection)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(2, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $10compare_op.4 = $4load_attr.1 < $8load_attr.3
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, vpacket.py:212),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 26, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $16load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $20load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $22compare_op.4 = $16load_attr.1 > $20load_attr.3
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.4, func=bool24, args=(Var($22compare_op.4, vpacket.py:213),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=$const26.0)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $32load_attr.1 = getattr(value=vpacket_collection, attr=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: no_of_vpackets = $32load_attr.1
DEBUG:numba.core.ssa:on stmt: $const38.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.4 = no_of_vpackets == $const38.3
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.4, func=bool42, args=(Var($40compare_op.4, vpacket.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $const44.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $50load_attr.1 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $54load_attr.3 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const56.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.5 = static_getitem(value=$54load_attr.3, index=0, index_var=$const56.4)
DEBUG:numba.core.ssa:on stmt: $60compare_op.6 = $50load_attr.1 > $58binary_subscr.5
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($60compare_op.6, func=bool62, args=(Var($60compare_op.6, vpacket.py:223),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $66load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.3 = static_getitem(value=$66load_attr.1, index=0, index_var=$const68.2)
DEBUG:numba.core.ssa:on stmt: $74load_attr.5 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $76binary_true_divide.6 = $70binary_subscr.3 / $74load_attr.5
DEBUG:numba.core.ssa:on stmt: r_inner_over_r = $76binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: $80load_global.7 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $82load_method.8 = getattr(value=$80load_global.7, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const84.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.12 = r_inner_over_r * r_inner_over_r
DEBUG:numba.core.ssa:on stmt: $92binary_subtract.13 = $const84.9 - $90binary_multiply.12
DEBUG:numba.core.ssa:on stmt: $94call_method.14 = call $82load_method.8($92binary_subtract.13, func=$82load_method.8, args=[Var($92binary_subtract.13, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $96unary_negative.15 = unary(fn=<built-in function neg>, value=$94call_method.14)
DEBUG:numba.core.ssa:on stmt: mu_min = $96unary_negative.15
DEBUG:numba.core.ssa:on stmt: $const100.16 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const100.16
DEBUG:numba.core.ssa:on stmt: $104load_global.17 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_attr.18 = getattr(value=$104load_global.17, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106load_attr.18, func=bool108, args=(Var($106load_attr.18, vpacket.py:227),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $110load_global.0 = global(angle_aberration_LF_to_CMF: CPUDispatcher(<function angle_aberration_LF_to_CMF at 0x7f6e4a1074d0>))
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $120call_function.5 = call $110load_global.0(r_packet, $116load_attr.3, mu_min, func=$110load_global.0, args=[Var(r_packet, vpacket.py:212), Var($116load_attr.3, vpacket.py:229), Var(mu_min, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: mu_min = $120call_function.5
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $const126.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const126.0
DEBUG:numba.core.ssa:on stmt: $const130.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: mu_min = $const130.1
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $const134.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.2 = $const134.0 - mu_min
DEBUG:numba.core.ssa:on stmt: $142binary_true_divide.4 = $138binary_subtract.2 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: mu_bin = $142binary_true_divide.4
DEBUG:numba.core.ssa:on stmt: $146load_global.5 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $150load_attr.7 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $154load_attr.9 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $158load_attr.11 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $160call_function.12 = call $146load_global.5($150load_attr.7, $154load_attr.9, $158load_attr.11, func=$146load_global.5, args=[Var($150load_attr.7, vpacket.py:237), Var($154load_attr.9, vpacket.py:237), Var($158load_attr.11, vpacket.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r_packet_doppler_factor = $160call_function.12
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $168load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $172call_function.2 = call $168load_global.0(no_of_vpackets, func=$168load_global.0, args=[Var(no_of_vpackets, vpacket.py:218)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.3 = getiter(value=$172call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi176.0 = $174get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $176for_iter.1 = iternext(value=$phi176.0)
DEBUG:numba.core.ssa:on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $176for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $176for_iter.3, 180, 460
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: i = $phi180.1
DEBUG:numba.core.ssa:on stmt: $188binary_multiply.5 = i * mu_bin
DEBUG:numba.core.ssa:on stmt: $190binary_add.6 = mu_min + $188binary_multiply.5
DEBUG:numba.core.ssa:on stmt: $192load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_attr.8 = getattr(value=$192load_global.7, attr=random)
DEBUG:numba.core.ssa:on stmt: $196load_method.9 = getattr(value=$194load_attr.8, attr=random)
DEBUG:numba.core.ssa:on stmt: $198call_method.10 = call $196load_method.9(func=$196load_method.9, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $202binary_multiply.12 = $198call_method.10 * mu_bin
DEBUG:numba.core.ssa:on stmt: $204binary_add.13 = $190binary_add.6 + $202binary_multiply.12
DEBUG:numba.core.ssa:on stmt: v_packet_mu = $204binary_add.13
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210(v_packet_on_inner_boundary, func=bool210, args=(Var(v_packet_on_inner_boundary, vpacket.py:226),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $const212.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.3 = $const212.1 * v_packet_mu
DEBUG:numba.core.ssa:on stmt: $220binary_true_divide.5 = $216binary_multiply.3 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: weight = $220binary_true_divide.5
DEBUG:numba.core.ssa:first assign: weight
DEBUG:numba.core.ssa:replaced with: weight = $220binary_true_divide.5
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $const226.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $230binary_subtract.3 = $const226.1 - mu_min
DEBUG:numba.core.ssa:on stmt: $const232.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $236binary_multiply.6 = $const232.4 * no_of_vpackets
DEBUG:numba.core.ssa:on stmt: $238binary_true_divide.7 = $230binary_subtract.3 / $236binary_multiply.6
DEBUG:numba.core.ssa:on stmt: weight = $238binary_true_divide.7
DEBUG:numba.core.ssa:replaced with: weight.1 = $238binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $242load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $244load_attr.2 = getattr(value=$242load_global.1, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244load_attr.2, func=bool246, args=(Var($244load_attr.2, vpacket.py:248),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 250, 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 250
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $250load_global.1 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>))
DEBUG:numba.core.ssa:on stmt: $256load_attr.4 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $260call_function.6 = call $250load_global.1(r_packet, $256load_attr.4, v_packet_mu, func=$250load_global.1, args=[Var(r_packet, vpacket.py:212), Var($256load_attr.4, vpacket.py:250), Var(v_packet_mu, vpacket.py:240)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_mu.1 = $260call_function.6
DEBUG:numba.core.ssa:on stmt: jump 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 264
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: v_packet_mu.2 = phi(incoming_values=[Var(v_packet_mu, vpacket.py:240), Var(v_packet_mu.1, vpacket.py:250)], incoming_blocks=[242, 250])
DEBUG:numba.core.ssa:on stmt: $264load_global.1 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $268load_attr.3 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $274load_attr.6 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $276call_function.7 = call $264load_global.1($268load_attr.3, v_packet_mu.2, $274load_attr.6, func=$264load_global.1, args=[Var($268load_attr.3, vpacket.py:253), Var(v_packet_mu.2, vpacket.py:252), Var($274load_attr.6, vpacket.py:253)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_doppler_factor = $276call_function.7
DEBUG:numba.core.ssa:on stmt: $284binary_true_divide.10 = r_packet_doppler_factor / v_packet_doppler_factor
DEBUG:numba.core.ssa:on stmt: doppler_factor_ratio = $284binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $290load_attr.12 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $294binary_multiply.14 = $290load_attr.12 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_nu = $294binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $300load_attr.16 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $304binary_multiply.18 = $300load_attr.16 * weight
DEBUG:numba.core.ssa:on stmt: $308binary_multiply.20 = $304binary_multiply.18 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_energy = $308binary_multiply.20
DEBUG:numba.core.ssa:on stmt: $312load_global.21 = global(VPacket: <class 'numba.experimental.jitclass.base.VPacket'>)
DEBUG:numba.core.ssa:on stmt: $316load_attr.23 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $326load_attr.28 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $330load_attr.30 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $336load_attr.33 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: $338call_function.34 = call $312load_global.21($316load_attr.23, v_packet_mu.2, v_packet_nu, v_packet_energy, $326load_attr.28, $330load_attr.30, i, $336load_attr.33, func=$312load_global.21, args=[Var($316load_attr.23, vpacket.py:264), Var(v_packet_mu.2, vpacket.py:252), Var(v_packet_nu, vpacket.py:260), Var(v_packet_energy, vpacket.py:261), Var($326load_attr.28, vpacket.py:268), Var($330load_attr.30, vpacket.py:269), Var(i, vpacket.py:239), Var($336load_attr.33, vpacket.py:271)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet = $338call_function.34
DEBUG:numba.core.ssa:on stmt: $344load_attr.36 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $346load_global.37 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $350load_attr.39 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $352call_function.40 = call $346load_global.37($350load_attr.39, func=$346load_global.37, args=[Var($350load_attr.39, vpacket.py:274)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const354.41 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356binary_subtract.42 = $352call_function.40 - $const354.41
DEBUG:numba.core.ssa:on stmt: $358compare_op.43 = $344load_attr.36 <= $356binary_subtract.42
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($358compare_op.43, func=bool360, args=(Var($358compare_op.43, vpacket.py:274),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 364, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 364
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $364load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.4 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $374load_attr.6 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $378load_attr.8 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $const380.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $382binary_subtract.10 = $378load_attr.8 - $const380.9
DEBUG:numba.core.ssa:on stmt: $384binary_subscr.11 = getitem(value=$374load_attr.6, index=$382binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: $388call_function.13 = call $364load_global.1(v_packet, $370load_attr.4, $384binary_subscr.11, numba_plasma, func=$364load_global.1, args=[Var(v_packet, vpacket.py:271), Var($370load_attr.4, vpacket.py:277), Var($384binary_subscr.11, vpacket.py:278), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $392load_global.1 = global(trace_vpacket: CPUDispatcher(<function trace_vpacket at 0x7f6e4a0be4d0>))
DEBUG:numba.core.ssa:on stmt: $400call_function.5 = call $392load_global.1(v_packet, numba_model, numba_plasma, func=$392load_global.1, args=[Var(v_packet, vpacket.py:271), Var(numba_model, vpacket.py:212), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_vpacket = $400call_function.5
DEBUG:numba.core.ssa:on stmt: $408load_attr.8 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $410load_global.9 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $412load_method.10 = getattr(value=$410load_global.9, attr=exp)
DEBUG:numba.core.ssa:on stmt: $416unary_negative.12 = unary(fn=<built-in function neg>, value=tau_vpacket)
DEBUG:numba.core.ssa:on stmt: $418call_method.13 = call $412load_method.10($416unary_negative.12, func=$412load_method.10, args=[Var($416unary_negative.12, vpacket.py:284)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $420inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$408load_attr.8, rhs=$418call_method.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $420inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: $428load_method.16 = getattr(value=vpacket_collection, attr=set_properties)
DEBUG:numba.core.ssa:on stmt: $432load_attr.18 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $436load_attr.20 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $440load_attr.22 = getattr(value=r_packet, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $444load_attr.24 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $448load_attr.26 = getattr(value=r_packet, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $452load_attr.28 = getattr(value=r_packet, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $454call_method.29 = call $428load_method.16($432load_attr.18, $436load_attr.20, $440load_attr.22, $444load_attr.24, $448load_attr.26, $452load_attr.28, func=$428load_method.16, args=[Var($432load_attr.18, vpacket.py:287), Var($436load_attr.20, vpacket.py:288), Var($440load_attr.22, vpacket.py:289), Var($444load_attr.24, vpacket.py:290), Var($448load_attr.26, vpacket.py:291), Var($452load_attr.28, vpacket.py:292)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 460
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: jump 462
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 462
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46228410>
DEBUG:numba.core.ssa:on stmt: $const462.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $464return_value.1 = cast(value=$const462.0)
DEBUG:numba.core.ssa:on stmt: return $464return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {212: [<numba.core.ir.Assign object at 0x7f6e46022850>],
             226: [<numba.core.ir.Assign object at 0x7f6e46022fd0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = arg(1, name=vpacket_collection)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(2, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $10compare_op.4 = $4load_attr.1 < $8load_attr.3
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, vpacket.py:212),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 26, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $16load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $20load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $22compare_op.4 = $16load_attr.1 > $20load_attr.3
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.4, func=bool24, args=(Var($22compare_op.4, vpacket.py:213),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=$const26.0)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $32load_attr.1 = getattr(value=vpacket_collection, attr=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: no_of_vpackets = $32load_attr.1
DEBUG:numba.core.ssa:on stmt: $const38.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.4 = no_of_vpackets == $const38.3
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.4, func=bool42, args=(Var($40compare_op.4, vpacket.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $const44.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $50load_attr.1 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $54load_attr.3 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const56.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.5 = static_getitem(value=$54load_attr.3, index=0, index_var=$const56.4)
DEBUG:numba.core.ssa:on stmt: $60compare_op.6 = $50load_attr.1 > $58binary_subscr.5
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($60compare_op.6, func=bool62, args=(Var($60compare_op.6, vpacket.py:223),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $66load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.3 = static_getitem(value=$66load_attr.1, index=0, index_var=$const68.2)
DEBUG:numba.core.ssa:on stmt: $74load_attr.5 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $76binary_true_divide.6 = $70binary_subscr.3 / $74load_attr.5
DEBUG:numba.core.ssa:on stmt: r_inner_over_r = $76binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: $80load_global.7 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $82load_method.8 = getattr(value=$80load_global.7, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const84.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.12 = r_inner_over_r * r_inner_over_r
DEBUG:numba.core.ssa:on stmt: $92binary_subtract.13 = $const84.9 - $90binary_multiply.12
DEBUG:numba.core.ssa:on stmt: $94call_method.14 = call $82load_method.8($92binary_subtract.13, func=$82load_method.8, args=[Var($92binary_subtract.13, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $96unary_negative.15 = unary(fn=<built-in function neg>, value=$94call_method.14)
DEBUG:numba.core.ssa:on stmt: mu_min = $96unary_negative.15
DEBUG:numba.core.ssa:on stmt: $const100.16 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const100.16
DEBUG:numba.core.ssa:on stmt: $104load_global.17 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_attr.18 = getattr(value=$104load_global.17, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106load_attr.18, func=bool108, args=(Var($106load_attr.18, vpacket.py:227),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $110load_global.0 = global(angle_aberration_LF_to_CMF: CPUDispatcher(<function angle_aberration_LF_to_CMF at 0x7f6e4a1074d0>))
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $120call_function.5 = call $110load_global.0(r_packet, $116load_attr.3, mu_min, func=$110load_global.0, args=[Var(r_packet, vpacket.py:212), Var($116load_attr.3, vpacket.py:229), Var(mu_min, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: mu_min = $120call_function.5
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $const126.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const126.0
DEBUG:numba.core.ssa:on stmt: $const130.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: mu_min = $const130.1
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $const134.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.2 = $const134.0 - mu_min
DEBUG:numba.core.ssa:on stmt: $142binary_true_divide.4 = $138binary_subtract.2 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: mu_bin = $142binary_true_divide.4
DEBUG:numba.core.ssa:on stmt: $146load_global.5 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $150load_attr.7 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $154load_attr.9 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $158load_attr.11 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $160call_function.12 = call $146load_global.5($150load_attr.7, $154load_attr.9, $158load_attr.11, func=$146load_global.5, args=[Var($150load_attr.7, vpacket.py:237), Var($154load_attr.9, vpacket.py:237), Var($158load_attr.11, vpacket.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r_packet_doppler_factor = $160call_function.12
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $168load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $172call_function.2 = call $168load_global.0(no_of_vpackets, func=$168load_global.0, args=[Var(no_of_vpackets, vpacket.py:218)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.3 = getiter(value=$172call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi176.0 = $174get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $176for_iter.1 = iternext(value=$phi176.0)
DEBUG:numba.core.ssa:on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $176for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $176for_iter.3, 180, 460
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: i = $phi180.1
DEBUG:numba.core.ssa:on stmt: $188binary_multiply.5 = i * mu_bin
DEBUG:numba.core.ssa:on stmt: $190binary_add.6 = mu_min + $188binary_multiply.5
DEBUG:numba.core.ssa:on stmt: $192load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_attr.8 = getattr(value=$192load_global.7, attr=random)
DEBUG:numba.core.ssa:on stmt: $196load_method.9 = getattr(value=$194load_attr.8, attr=random)
DEBUG:numba.core.ssa:on stmt: $198call_method.10 = call $196load_method.9(func=$196load_method.9, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $202binary_multiply.12 = $198call_method.10 * mu_bin
DEBUG:numba.core.ssa:on stmt: $204binary_add.13 = $190binary_add.6 + $202binary_multiply.12
DEBUG:numba.core.ssa:on stmt: v_packet_mu = $204binary_add.13
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210(v_packet_on_inner_boundary, func=bool210, args=(Var(v_packet_on_inner_boundary, vpacket.py:226),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $const212.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.3 = $const212.1 * v_packet_mu
DEBUG:numba.core.ssa:on stmt: $220binary_true_divide.5 = $216binary_multiply.3 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: weight = $220binary_true_divide.5
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $const226.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $230binary_subtract.3 = $const226.1 - mu_min
DEBUG:numba.core.ssa:on stmt: $const232.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $236binary_multiply.6 = $const232.4 * no_of_vpackets
DEBUG:numba.core.ssa:on stmt: $238binary_true_divide.7 = $230binary_subtract.3 / $236binary_multiply.6
DEBUG:numba.core.ssa:on stmt: weight.1 = $238binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $242load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $244load_attr.2 = getattr(value=$242load_global.1, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244load_attr.2, func=bool246, args=(Var($244load_attr.2, vpacket.py:248),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 250, 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 250
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $250load_global.1 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>))
DEBUG:numba.core.ssa:on stmt: $256load_attr.4 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $260call_function.6 = call $250load_global.1(r_packet, $256load_attr.4, v_packet_mu, func=$250load_global.1, args=[Var(r_packet, vpacket.py:212), Var($256load_attr.4, vpacket.py:250), Var(v_packet_mu, vpacket.py:240)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_mu.1 = $260call_function.6
DEBUG:numba.core.ssa:on stmt: jump 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 264
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: v_packet_mu.2 = phi(incoming_values=[Var(v_packet_mu, vpacket.py:240), Var(v_packet_mu.1, vpacket.py:250)], incoming_blocks=[242, 250])
DEBUG:numba.core.ssa:on stmt: $264load_global.1 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $268load_attr.3 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $274load_attr.6 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $276call_function.7 = call $264load_global.1($268load_attr.3, v_packet_mu.2, $274load_attr.6, func=$264load_global.1, args=[Var($268load_attr.3, vpacket.py:253), Var(v_packet_mu.2, vpacket.py:252), Var($274load_attr.6, vpacket.py:253)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_doppler_factor = $276call_function.7
DEBUG:numba.core.ssa:on stmt: $284binary_true_divide.10 = r_packet_doppler_factor / v_packet_doppler_factor
DEBUG:numba.core.ssa:on stmt: doppler_factor_ratio = $284binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $290load_attr.12 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $294binary_multiply.14 = $290load_attr.12 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_nu = $294binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $300load_attr.16 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $304binary_multiply.18 = $300load_attr.16 * weight
DEBUG:numba.core.ssa:find_def var='weight' stmt=$304binary_multiply.18 = $300load_attr.16 * weight
DEBUG:numba.core.ssa:find_def_from_top label 264
DEBUG:numba.core.ssa:idom 242 from label 264
DEBUG:numba.core.ssa:find_def_from_bottom label 242
DEBUG:numba.core.ssa:find_def_from_top label 242
DEBUG:numba.core.ssa:insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 242
DEBUG:numba.core.ssa:find_def_from_bottom label 226
DEBUG:numba.core.ssa:incoming_def weight.1 = $238binary_true_divide.7
DEBUG:numba.core.ssa:find_def_from_bottom label 212
DEBUG:numba.core.ssa:incoming_def weight = $220binary_true_divide.5
DEBUG:numba.core.ssa:replaced with: $304binary_multiply.18 = $300load_attr.16 * weight.2
DEBUG:numba.core.ssa:on stmt: $308binary_multiply.20 = $304binary_multiply.18 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_energy = $308binary_multiply.20
DEBUG:numba.core.ssa:on stmt: $312load_global.21 = global(VPacket: <class 'numba.experimental.jitclass.base.VPacket'>)
DEBUG:numba.core.ssa:on stmt: $316load_attr.23 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $326load_attr.28 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $330load_attr.30 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $336load_attr.33 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: $338call_function.34 = call $312load_global.21($316load_attr.23, v_packet_mu.2, v_packet_nu, v_packet_energy, $326load_attr.28, $330load_attr.30, i, $336load_attr.33, func=$312load_global.21, args=[Var($316load_attr.23, vpacket.py:264), Var(v_packet_mu.2, vpacket.py:252), Var(v_packet_nu, vpacket.py:260), Var(v_packet_energy, vpacket.py:261), Var($326load_attr.28, vpacket.py:268), Var($330load_attr.30, vpacket.py:269), Var(i, vpacket.py:239), Var($336load_attr.33, vpacket.py:271)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet = $338call_function.34
DEBUG:numba.core.ssa:on stmt: $344load_attr.36 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $346load_global.37 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $350load_attr.39 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $352call_function.40 = call $346load_global.37($350load_attr.39, func=$346load_global.37, args=[Var($350load_attr.39, vpacket.py:274)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const354.41 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356binary_subtract.42 = $352call_function.40 - $const354.41
DEBUG:numba.core.ssa:on stmt: $358compare_op.43 = $344load_attr.36 <= $356binary_subtract.42
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($358compare_op.43, func=bool360, args=(Var($358compare_op.43, vpacket.py:274),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 364, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 364
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $364load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.4 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $374load_attr.6 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $378load_attr.8 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $const380.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $382binary_subtract.10 = $378load_attr.8 - $const380.9
DEBUG:numba.core.ssa:on stmt: $384binary_subscr.11 = getitem(value=$374load_attr.6, index=$382binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: $388call_function.13 = call $364load_global.1(v_packet, $370load_attr.4, $384binary_subscr.11, numba_plasma, func=$364load_global.1, args=[Var(v_packet, vpacket.py:271), Var($370load_attr.4, vpacket.py:277), Var($384binary_subscr.11, vpacket.py:278), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $392load_global.1 = global(trace_vpacket: CPUDispatcher(<function trace_vpacket at 0x7f6e4a0be4d0>))
DEBUG:numba.core.ssa:on stmt: $400call_function.5 = call $392load_global.1(v_packet, numba_model, numba_plasma, func=$392load_global.1, args=[Var(v_packet, vpacket.py:271), Var(numba_model, vpacket.py:212), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_vpacket = $400call_function.5
DEBUG:numba.core.ssa:on stmt: $408load_attr.8 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $410load_global.9 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $412load_method.10 = getattr(value=$410load_global.9, attr=exp)
DEBUG:numba.core.ssa:on stmt: $416unary_negative.12 = unary(fn=<built-in function neg>, value=tau_vpacket)
DEBUG:numba.core.ssa:on stmt: $418call_method.13 = call $412load_method.10($416unary_negative.12, func=$412load_method.10, args=[Var($416unary_negative.12, vpacket.py:284)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $420inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$408load_attr.8, rhs=$418call_method.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $420inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: $428load_method.16 = getattr(value=vpacket_collection, attr=set_properties)
DEBUG:numba.core.ssa:on stmt: $432load_attr.18 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $436load_attr.20 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $440load_attr.22 = getattr(value=r_packet, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $444load_attr.24 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $448load_attr.26 = getattr(value=r_packet, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $452load_attr.28 = getattr(value=r_packet, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $454call_method.29 = call $428load_method.16($432load_attr.18, $436load_attr.20, $440load_attr.22, $444load_attr.24, $448load_attr.26, $452load_attr.28, func=$428load_method.16, args=[Var($432load_attr.18, vpacket.py:287), Var($436load_attr.20, vpacket.py:288), Var($440load_attr.22, vpacket.py:289), Var($444load_attr.24, vpacket.py:290), Var($448load_attr.26, vpacket.py:291), Var($452load_attr.28, vpacket.py:292)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 460
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: jump 462
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 462
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022d10>
DEBUG:numba.core.ssa:on stmt: $const462.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $464return_value.1 = cast(value=$const462.0)
DEBUG:numba.core.ssa:on stmt: return $464return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var mu_min
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = arg(1, name=vpacket_collection)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(2, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $10compare_op.4 = $4load_attr.1 < $8load_attr.3
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, vpacket.py:212),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 26, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $16load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $20load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $22compare_op.4 = $16load_attr.1 > $20load_attr.3
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.4, func=bool24, args=(Var($22compare_op.4, vpacket.py:213),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=$const26.0)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $32load_attr.1 = getattr(value=vpacket_collection, attr=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: no_of_vpackets = $32load_attr.1
DEBUG:numba.core.ssa:on stmt: $const38.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.4 = no_of_vpackets == $const38.3
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.4, func=bool42, args=(Var($40compare_op.4, vpacket.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const44.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $50load_attr.1 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $54load_attr.3 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const56.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.5 = static_getitem(value=$54load_attr.3, index=0, index_var=$const56.4)
DEBUG:numba.core.ssa:on stmt: $60compare_op.6 = $50load_attr.1 > $58binary_subscr.5
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($60compare_op.6, func=bool62, args=(Var($60compare_op.6, vpacket.py:223),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $66load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.3 = static_getitem(value=$66load_attr.1, index=0, index_var=$const68.2)
DEBUG:numba.core.ssa:on stmt: $74load_attr.5 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $76binary_true_divide.6 = $70binary_subscr.3 / $74load_attr.5
DEBUG:numba.core.ssa:on stmt: r_inner_over_r = $76binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: $80load_global.7 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $82load_method.8 = getattr(value=$80load_global.7, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const84.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.12 = r_inner_over_r * r_inner_over_r
DEBUG:numba.core.ssa:on stmt: $92binary_subtract.13 = $const84.9 - $90binary_multiply.12
DEBUG:numba.core.ssa:on stmt: $94call_method.14 = call $82load_method.8($92binary_subtract.13, func=$82load_method.8, args=[Var($92binary_subtract.13, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $96unary_negative.15 = unary(fn=<built-in function neg>, value=$94call_method.14)
DEBUG:numba.core.ssa:on stmt: mu_min = $96unary_negative.15
DEBUG:numba.core.ssa:first assign: mu_min
DEBUG:numba.core.ssa:replaced with: mu_min = $96unary_negative.15
DEBUG:numba.core.ssa:on stmt: $const100.16 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const100.16
DEBUG:numba.core.ssa:on stmt: $104load_global.17 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_attr.18 = getattr(value=$104load_global.17, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106load_attr.18, func=bool108, args=(Var($106load_attr.18, vpacket.py:227),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $110load_global.0 = global(angle_aberration_LF_to_CMF: CPUDispatcher(<function angle_aberration_LF_to_CMF at 0x7f6e4a1074d0>))
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $120call_function.5 = call $110load_global.0(r_packet, $116load_attr.3, mu_min, func=$110load_global.0, args=[Var(r_packet, vpacket.py:212), Var($116load_attr.3, vpacket.py:229), Var(mu_min, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: mu_min = $120call_function.5
DEBUG:numba.core.ssa:replaced with: mu_min.1 = $120call_function.5
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const126.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const126.0
DEBUG:numba.core.ssa:on stmt: $const130.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: mu_min = $const130.1
DEBUG:numba.core.ssa:replaced with: mu_min.2 = $const130.1
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const134.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.2 = $const134.0 - mu_min
DEBUG:numba.core.ssa:on stmt: $142binary_true_divide.4 = $138binary_subtract.2 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: mu_bin = $142binary_true_divide.4
DEBUG:numba.core.ssa:on stmt: $146load_global.5 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $150load_attr.7 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $154load_attr.9 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $158load_attr.11 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $160call_function.12 = call $146load_global.5($150load_attr.7, $154load_attr.9, $158load_attr.11, func=$146load_global.5, args=[Var($150load_attr.7, vpacket.py:237), Var($154load_attr.9, vpacket.py:237), Var($158load_attr.11, vpacket.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r_packet_doppler_factor = $160call_function.12
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $168load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $172call_function.2 = call $168load_global.0(no_of_vpackets, func=$168load_global.0, args=[Var(no_of_vpackets, vpacket.py:218)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.3 = getiter(value=$172call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi176.0 = $174get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $176for_iter.1 = iternext(value=$phi176.0)
DEBUG:numba.core.ssa:on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $176for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $176for_iter.3, 180, 460
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: i = $phi180.1
DEBUG:numba.core.ssa:on stmt: $188binary_multiply.5 = i * mu_bin
DEBUG:numba.core.ssa:on stmt: $190binary_add.6 = mu_min + $188binary_multiply.5
DEBUG:numba.core.ssa:on stmt: $192load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_attr.8 = getattr(value=$192load_global.7, attr=random)
DEBUG:numba.core.ssa:on stmt: $196load_method.9 = getattr(value=$194load_attr.8, attr=random)
DEBUG:numba.core.ssa:on stmt: $198call_method.10 = call $196load_method.9(func=$196load_method.9, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $202binary_multiply.12 = $198call_method.10 * mu_bin
DEBUG:numba.core.ssa:on stmt: $204binary_add.13 = $190binary_add.6 + $202binary_multiply.12
DEBUG:numba.core.ssa:on stmt: v_packet_mu = $204binary_add.13
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210(v_packet_on_inner_boundary, func=bool210, args=(Var(v_packet_on_inner_boundary, vpacket.py:226),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const212.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.3 = $const212.1 * v_packet_mu
DEBUG:numba.core.ssa:on stmt: $220binary_true_divide.5 = $216binary_multiply.3 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: weight = $220binary_true_divide.5
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const226.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $230binary_subtract.3 = $const226.1 - mu_min
DEBUG:numba.core.ssa:on stmt: $const232.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $236binary_multiply.6 = $const232.4 * no_of_vpackets
DEBUG:numba.core.ssa:on stmt: $238binary_true_divide.7 = $230binary_subtract.3 / $236binary_multiply.6
DEBUG:numba.core.ssa:on stmt: weight.1 = $238binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: weight.2 = phi(incoming_values=[Var(weight.1, vpacket.py:245), Var(weight, vpacket.py:243)], incoming_blocks=[226, 212])
DEBUG:numba.core.ssa:on stmt: $242load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $244load_attr.2 = getattr(value=$242load_global.1, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244load_attr.2, func=bool246, args=(Var($244load_attr.2, vpacket.py:248),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 250, 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 250
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $250load_global.1 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>))
DEBUG:numba.core.ssa:on stmt: $256load_attr.4 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $260call_function.6 = call $250load_global.1(r_packet, $256load_attr.4, v_packet_mu, func=$250load_global.1, args=[Var(r_packet, vpacket.py:212), Var($256load_attr.4, vpacket.py:250), Var(v_packet_mu, vpacket.py:240)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_mu.1 = $260call_function.6
DEBUG:numba.core.ssa:on stmt: jump 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 264
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: v_packet_mu.2 = phi(incoming_values=[Var(v_packet_mu, vpacket.py:240), Var(v_packet_mu.1, vpacket.py:250)], incoming_blocks=[242, 250])
DEBUG:numba.core.ssa:on stmt: $264load_global.1 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $268load_attr.3 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $274load_attr.6 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $276call_function.7 = call $264load_global.1($268load_attr.3, v_packet_mu.2, $274load_attr.6, func=$264load_global.1, args=[Var($268load_attr.3, vpacket.py:253), Var(v_packet_mu.2, vpacket.py:252), Var($274load_attr.6, vpacket.py:253)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_doppler_factor = $276call_function.7
DEBUG:numba.core.ssa:on stmt: $284binary_true_divide.10 = r_packet_doppler_factor / v_packet_doppler_factor
DEBUG:numba.core.ssa:on stmt: doppler_factor_ratio = $284binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $290load_attr.12 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $294binary_multiply.14 = $290load_attr.12 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_nu = $294binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $300load_attr.16 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $304binary_multiply.18 = $300load_attr.16 * weight.2
DEBUG:numba.core.ssa:on stmt: $308binary_multiply.20 = $304binary_multiply.18 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_energy = $308binary_multiply.20
DEBUG:numba.core.ssa:on stmt: $312load_global.21 = global(VPacket: <class 'numba.experimental.jitclass.base.VPacket'>)
DEBUG:numba.core.ssa:on stmt: $316load_attr.23 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $326load_attr.28 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $330load_attr.30 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $336load_attr.33 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: $338call_function.34 = call $312load_global.21($316load_attr.23, v_packet_mu.2, v_packet_nu, v_packet_energy, $326load_attr.28, $330load_attr.30, i, $336load_attr.33, func=$312load_global.21, args=[Var($316load_attr.23, vpacket.py:264), Var(v_packet_mu.2, vpacket.py:252), Var(v_packet_nu, vpacket.py:260), Var(v_packet_energy, vpacket.py:261), Var($326load_attr.28, vpacket.py:268), Var($330load_attr.30, vpacket.py:269), Var(i, vpacket.py:239), Var($336load_attr.33, vpacket.py:271)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet = $338call_function.34
DEBUG:numba.core.ssa:on stmt: $344load_attr.36 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $346load_global.37 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $350load_attr.39 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $352call_function.40 = call $346load_global.37($350load_attr.39, func=$346load_global.37, args=[Var($350load_attr.39, vpacket.py:274)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const354.41 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356binary_subtract.42 = $352call_function.40 - $const354.41
DEBUG:numba.core.ssa:on stmt: $358compare_op.43 = $344load_attr.36 <= $356binary_subtract.42
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($358compare_op.43, func=bool360, args=(Var($358compare_op.43, vpacket.py:274),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 364, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 364
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $364load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.4 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $374load_attr.6 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $378load_attr.8 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $const380.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $382binary_subtract.10 = $378load_attr.8 - $const380.9
DEBUG:numba.core.ssa:on stmt: $384binary_subscr.11 = getitem(value=$374load_attr.6, index=$382binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: $388call_function.13 = call $364load_global.1(v_packet, $370load_attr.4, $384binary_subscr.11, numba_plasma, func=$364load_global.1, args=[Var(v_packet, vpacket.py:271), Var($370load_attr.4, vpacket.py:277), Var($384binary_subscr.11, vpacket.py:278), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $392load_global.1 = global(trace_vpacket: CPUDispatcher(<function trace_vpacket at 0x7f6e4a0be4d0>))
DEBUG:numba.core.ssa:on stmt: $400call_function.5 = call $392load_global.1(v_packet, numba_model, numba_plasma, func=$392load_global.1, args=[Var(v_packet, vpacket.py:271), Var(numba_model, vpacket.py:212), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_vpacket = $400call_function.5
DEBUG:numba.core.ssa:on stmt: $408load_attr.8 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $410load_global.9 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $412load_method.10 = getattr(value=$410load_global.9, attr=exp)
DEBUG:numba.core.ssa:on stmt: $416unary_negative.12 = unary(fn=<built-in function neg>, value=tau_vpacket)
DEBUG:numba.core.ssa:on stmt: $418call_method.13 = call $412load_method.10($416unary_negative.12, func=$412load_method.10, args=[Var($416unary_negative.12, vpacket.py:284)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $420inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$408load_attr.8, rhs=$418call_method.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $420inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: $428load_method.16 = getattr(value=vpacket_collection, attr=set_properties)
DEBUG:numba.core.ssa:on stmt: $432load_attr.18 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $436load_attr.20 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $440load_attr.22 = getattr(value=r_packet, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $444load_attr.24 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $448load_attr.26 = getattr(value=r_packet, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $452load_attr.28 = getattr(value=r_packet, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $454call_method.29 = call $428load_method.16($432load_attr.18, $436load_attr.20, $440load_attr.22, $444load_attr.24, $448load_attr.26, $452load_attr.28, func=$428load_method.16, args=[Var($432load_attr.18, vpacket.py:287), Var($436load_attr.20, vpacket.py:288), Var($440load_attr.22, vpacket.py:289), Var($444load_attr.24, vpacket.py:290), Var($448load_attr.26, vpacket.py:291), Var($452load_attr.28, vpacket.py:292)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 460
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: jump 462
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 462
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4623de90>
DEBUG:numba.core.ssa:on stmt: $const462.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $464return_value.1 = cast(value=$const462.0)
DEBUG:numba.core.ssa:on stmt: return $464return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {64: [<numba.core.ir.Assign object at 0x7f6e45ece150>],
             110: [<numba.core.ir.Assign object at 0x7f6e46228b90>],
             126: [<numba.core.ir.Assign object at 0x7f6e46022750>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = arg(1, name=vpacket_collection)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(2, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $10compare_op.4 = $4load_attr.1 < $8load_attr.3
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, vpacket.py:212),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 26, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $16load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $20load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $22compare_op.4 = $16load_attr.1 > $20load_attr.3
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.4, func=bool24, args=(Var($22compare_op.4, vpacket.py:213),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=$const26.0)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $32load_attr.1 = getattr(value=vpacket_collection, attr=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: no_of_vpackets = $32load_attr.1
DEBUG:numba.core.ssa:on stmt: $const38.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.4 = no_of_vpackets == $const38.3
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.4, func=bool42, args=(Var($40compare_op.4, vpacket.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $const44.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $50load_attr.1 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $54load_attr.3 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const56.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.5 = static_getitem(value=$54load_attr.3, index=0, index_var=$const56.4)
DEBUG:numba.core.ssa:on stmt: $60compare_op.6 = $50load_attr.1 > $58binary_subscr.5
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($60compare_op.6, func=bool62, args=(Var($60compare_op.6, vpacket.py:223),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $66load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.3 = static_getitem(value=$66load_attr.1, index=0, index_var=$const68.2)
DEBUG:numba.core.ssa:on stmt: $74load_attr.5 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $76binary_true_divide.6 = $70binary_subscr.3 / $74load_attr.5
DEBUG:numba.core.ssa:on stmt: r_inner_over_r = $76binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: $80load_global.7 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $82load_method.8 = getattr(value=$80load_global.7, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const84.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.12 = r_inner_over_r * r_inner_over_r
DEBUG:numba.core.ssa:on stmt: $92binary_subtract.13 = $const84.9 - $90binary_multiply.12
DEBUG:numba.core.ssa:on stmt: $94call_method.14 = call $82load_method.8($92binary_subtract.13, func=$82load_method.8, args=[Var($92binary_subtract.13, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $96unary_negative.15 = unary(fn=<built-in function neg>, value=$94call_method.14)
DEBUG:numba.core.ssa:on stmt: mu_min = $96unary_negative.15
DEBUG:numba.core.ssa:on stmt: $const100.16 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const100.16
DEBUG:numba.core.ssa:on stmt: $104load_global.17 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_attr.18 = getattr(value=$104load_global.17, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106load_attr.18, func=bool108, args=(Var($106load_attr.18, vpacket.py:227),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $110load_global.0 = global(angle_aberration_LF_to_CMF: CPUDispatcher(<function angle_aberration_LF_to_CMF at 0x7f6e4a1074d0>))
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $120call_function.5 = call $110load_global.0(r_packet, $116load_attr.3, mu_min, func=$110load_global.0, args=[Var(r_packet, vpacket.py:212), Var($116load_attr.3, vpacket.py:229), Var(mu_min, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='mu_min' stmt=$120call_function.5 = call $110load_global.0(r_packet, $116load_attr.3, mu_min, func=$110load_global.0, args=[Var(r_packet, vpacket.py:212), Var($116load_attr.3, vpacket.py:229), Var(mu_min, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def_from_top label 110
DEBUG:numba.core.ssa:idom 64 from label 110
DEBUG:numba.core.ssa:find_def_from_bottom label 64
DEBUG:numba.core.ssa:on stmt: mu_min.1 = $120call_function.5
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $const126.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const126.0
DEBUG:numba.core.ssa:on stmt: $const130.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: mu_min.2 = $const130.1
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $const134.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.2 = $const134.0 - mu_min
DEBUG:numba.core.ssa:find_def var='mu_min' stmt=$138binary_subtract.2 = $const134.0 - mu_min
DEBUG:numba.core.ssa:find_def_from_top label 134
DEBUG:numba.core.ssa:insert phi node mu_min.3 = phi(incoming_values=[], incoming_blocks=[]) at 134
DEBUG:numba.core.ssa:find_def_from_bottom label 64
DEBUG:numba.core.ssa:incoming_def mu_min = $96unary_negative.15
DEBUG:numba.core.ssa:find_def_from_bottom label 126
DEBUG:numba.core.ssa:incoming_def mu_min.2 = $const130.1
DEBUG:numba.core.ssa:find_def_from_bottom label 110
DEBUG:numba.core.ssa:incoming_def mu_min.1 = $120call_function.5
DEBUG:numba.core.ssa:replaced with: $138binary_subtract.2 = $const134.0 - mu_min.3
DEBUG:numba.core.ssa:on stmt: $142binary_true_divide.4 = $138binary_subtract.2 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: mu_bin = $142binary_true_divide.4
DEBUG:numba.core.ssa:on stmt: $146load_global.5 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $150load_attr.7 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $154load_attr.9 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $158load_attr.11 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $160call_function.12 = call $146load_global.5($150load_attr.7, $154load_attr.9, $158load_attr.11, func=$146load_global.5, args=[Var($150load_attr.7, vpacket.py:237), Var($154load_attr.9, vpacket.py:237), Var($158load_attr.11, vpacket.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r_packet_doppler_factor = $160call_function.12
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $168load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $172call_function.2 = call $168load_global.0(no_of_vpackets, func=$168load_global.0, args=[Var(no_of_vpackets, vpacket.py:218)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.3 = getiter(value=$172call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi176.0 = $174get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $176for_iter.1 = iternext(value=$phi176.0)
DEBUG:numba.core.ssa:on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $176for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $176for_iter.3, 180, 460
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: i = $phi180.1
DEBUG:numba.core.ssa:on stmt: $188binary_multiply.5 = i * mu_bin
DEBUG:numba.core.ssa:on stmt: $190binary_add.6 = mu_min + $188binary_multiply.5
DEBUG:numba.core.ssa:find_def var='mu_min' stmt=$190binary_add.6 = mu_min + $188binary_multiply.5
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 176 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 176
DEBUG:numba.core.ssa:find_def_from_top label 176
DEBUG:numba.core.ssa:idom 164 from label 176
DEBUG:numba.core.ssa:find_def_from_bottom label 164
DEBUG:numba.core.ssa:find_def_from_top label 164
DEBUG:numba.core.ssa:idom 134 from label 164
DEBUG:numba.core.ssa:find_def_from_bottom label 134
DEBUG:numba.core.ssa:replaced with: $190binary_add.6 = mu_min.3 + $188binary_multiply.5
DEBUG:numba.core.ssa:on stmt: $192load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_attr.8 = getattr(value=$192load_global.7, attr=random)
DEBUG:numba.core.ssa:on stmt: $196load_method.9 = getattr(value=$194load_attr.8, attr=random)
DEBUG:numba.core.ssa:on stmt: $198call_method.10 = call $196load_method.9(func=$196load_method.9, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $202binary_multiply.12 = $198call_method.10 * mu_bin
DEBUG:numba.core.ssa:on stmt: $204binary_add.13 = $190binary_add.6 + $202binary_multiply.12
DEBUG:numba.core.ssa:on stmt: v_packet_mu = $204binary_add.13
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210(v_packet_on_inner_boundary, func=bool210, args=(Var(v_packet_on_inner_boundary, vpacket.py:226),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $const212.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.3 = $const212.1 * v_packet_mu
DEBUG:numba.core.ssa:on stmt: $220binary_true_divide.5 = $216binary_multiply.3 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: weight = $220binary_true_divide.5
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $const226.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $230binary_subtract.3 = $const226.1 - mu_min
DEBUG:numba.core.ssa:find_def var='mu_min' stmt=$230binary_subtract.3 = $const226.1 - mu_min
DEBUG:numba.core.ssa:find_def_from_top label 226
DEBUG:numba.core.ssa:idom 180 from label 226
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 176 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 176
DEBUG:numba.core.ssa:find_def_from_top label 176
DEBUG:numba.core.ssa:idom 164 from label 176
DEBUG:numba.core.ssa:find_def_from_bottom label 164
DEBUG:numba.core.ssa:find_def_from_top label 164
DEBUG:numba.core.ssa:idom 134 from label 164
DEBUG:numba.core.ssa:find_def_from_bottom label 134
DEBUG:numba.core.ssa:replaced with: $230binary_subtract.3 = $const226.1 - mu_min.3
DEBUG:numba.core.ssa:on stmt: $const232.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $236binary_multiply.6 = $const232.4 * no_of_vpackets
DEBUG:numba.core.ssa:on stmt: $238binary_true_divide.7 = $230binary_subtract.3 / $236binary_multiply.6
DEBUG:numba.core.ssa:on stmt: weight.1 = $238binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: weight.2 = phi(incoming_values=[Var(weight.1, vpacket.py:245), Var(weight, vpacket.py:243)], incoming_blocks=[226, 212])
DEBUG:numba.core.ssa:on stmt: $242load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $244load_attr.2 = getattr(value=$242load_global.1, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244load_attr.2, func=bool246, args=(Var($244load_attr.2, vpacket.py:248),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 250, 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 250
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $250load_global.1 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>))
DEBUG:numba.core.ssa:on stmt: $256load_attr.4 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $260call_function.6 = call $250load_global.1(r_packet, $256load_attr.4, v_packet_mu, func=$250load_global.1, args=[Var(r_packet, vpacket.py:212), Var($256load_attr.4, vpacket.py:250), Var(v_packet_mu, vpacket.py:240)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_mu.1 = $260call_function.6
DEBUG:numba.core.ssa:on stmt: jump 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 264
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: v_packet_mu.2 = phi(incoming_values=[Var(v_packet_mu, vpacket.py:240), Var(v_packet_mu.1, vpacket.py:250)], incoming_blocks=[242, 250])
DEBUG:numba.core.ssa:on stmt: $264load_global.1 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $268load_attr.3 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $274load_attr.6 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $276call_function.7 = call $264load_global.1($268load_attr.3, v_packet_mu.2, $274load_attr.6, func=$264load_global.1, args=[Var($268load_attr.3, vpacket.py:253), Var(v_packet_mu.2, vpacket.py:252), Var($274load_attr.6, vpacket.py:253)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_doppler_factor = $276call_function.7
DEBUG:numba.core.ssa:on stmt: $284binary_true_divide.10 = r_packet_doppler_factor / v_packet_doppler_factor
DEBUG:numba.core.ssa:on stmt: doppler_factor_ratio = $284binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $290load_attr.12 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $294binary_multiply.14 = $290load_attr.12 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_nu = $294binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $300load_attr.16 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $304binary_multiply.18 = $300load_attr.16 * weight.2
DEBUG:numba.core.ssa:on stmt: $308binary_multiply.20 = $304binary_multiply.18 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_energy = $308binary_multiply.20
DEBUG:numba.core.ssa:on stmt: $312load_global.21 = global(VPacket: <class 'numba.experimental.jitclass.base.VPacket'>)
DEBUG:numba.core.ssa:on stmt: $316load_attr.23 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $326load_attr.28 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $330load_attr.30 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $336load_attr.33 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: $338call_function.34 = call $312load_global.21($316load_attr.23, v_packet_mu.2, v_packet_nu, v_packet_energy, $326load_attr.28, $330load_attr.30, i, $336load_attr.33, func=$312load_global.21, args=[Var($316load_attr.23, vpacket.py:264), Var(v_packet_mu.2, vpacket.py:252), Var(v_packet_nu, vpacket.py:260), Var(v_packet_energy, vpacket.py:261), Var($326load_attr.28, vpacket.py:268), Var($330load_attr.30, vpacket.py:269), Var(i, vpacket.py:239), Var($336load_attr.33, vpacket.py:271)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet = $338call_function.34
DEBUG:numba.core.ssa:on stmt: $344load_attr.36 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $346load_global.37 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $350load_attr.39 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $352call_function.40 = call $346load_global.37($350load_attr.39, func=$346load_global.37, args=[Var($350load_attr.39, vpacket.py:274)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const354.41 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356binary_subtract.42 = $352call_function.40 - $const354.41
DEBUG:numba.core.ssa:on stmt: $358compare_op.43 = $344load_attr.36 <= $356binary_subtract.42
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($358compare_op.43, func=bool360, args=(Var($358compare_op.43, vpacket.py:274),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 364, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 364
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $364load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.4 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $374load_attr.6 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $378load_attr.8 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $const380.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $382binary_subtract.10 = $378load_attr.8 - $const380.9
DEBUG:numba.core.ssa:on stmt: $384binary_subscr.11 = getitem(value=$374load_attr.6, index=$382binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: $388call_function.13 = call $364load_global.1(v_packet, $370load_attr.4, $384binary_subscr.11, numba_plasma, func=$364load_global.1, args=[Var(v_packet, vpacket.py:271), Var($370load_attr.4, vpacket.py:277), Var($384binary_subscr.11, vpacket.py:278), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $392load_global.1 = global(trace_vpacket: CPUDispatcher(<function trace_vpacket at 0x7f6e4a0be4d0>))
DEBUG:numba.core.ssa:on stmt: $400call_function.5 = call $392load_global.1(v_packet, numba_model, numba_plasma, func=$392load_global.1, args=[Var(v_packet, vpacket.py:271), Var(numba_model, vpacket.py:212), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_vpacket = $400call_function.5
DEBUG:numba.core.ssa:on stmt: $408load_attr.8 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $410load_global.9 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $412load_method.10 = getattr(value=$410load_global.9, attr=exp)
DEBUG:numba.core.ssa:on stmt: $416unary_negative.12 = unary(fn=<built-in function neg>, value=tau_vpacket)
DEBUG:numba.core.ssa:on stmt: $418call_method.13 = call $412load_method.10($416unary_negative.12, func=$412load_method.10, args=[Var($416unary_negative.12, vpacket.py:284)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $420inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$408load_attr.8, rhs=$418call_method.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $420inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: $428load_method.16 = getattr(value=vpacket_collection, attr=set_properties)
DEBUG:numba.core.ssa:on stmt: $432load_attr.18 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $436load_attr.20 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $440load_attr.22 = getattr(value=r_packet, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $444load_attr.24 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $448load_attr.26 = getattr(value=r_packet, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $452load_attr.28 = getattr(value=r_packet, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $454call_method.29 = call $428load_method.16($432load_attr.18, $436load_attr.20, $440load_attr.22, $444load_attr.24, $448load_attr.26, $452load_attr.28, func=$428load_method.16, args=[Var($432load_attr.18, vpacket.py:287), Var($436load_attr.20, vpacket.py:288), Var($440load_attr.22, vpacket.py:289), Var($444load_attr.24, vpacket.py:290), Var($448load_attr.26, vpacket.py:291), Var($452load_attr.28, vpacket.py:292)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 460
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: jump 462
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 462
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46022b10>
DEBUG:numba.core.ssa:on stmt: $const462.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $464return_value.1 = cast(value=$const462.0)
DEBUG:numba.core.ssa:on stmt: return $464return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var v_packet_on_inner_boundary
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = arg(1, name=vpacket_collection)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(2, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $10compare_op.4 = $4load_attr.1 < $8load_attr.3
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, vpacket.py:212),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 26, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $16load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $20load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $22compare_op.4 = $16load_attr.1 > $20load_attr.3
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.4, func=bool24, args=(Var($22compare_op.4, vpacket.py:213),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=$const26.0)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $32load_attr.1 = getattr(value=vpacket_collection, attr=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: no_of_vpackets = $32load_attr.1
DEBUG:numba.core.ssa:on stmt: $const38.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.4 = no_of_vpackets == $const38.3
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.4, func=bool42, args=(Var($40compare_op.4, vpacket.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $const44.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $50load_attr.1 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $54load_attr.3 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const56.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.5 = static_getitem(value=$54load_attr.3, index=0, index_var=$const56.4)
DEBUG:numba.core.ssa:on stmt: $60compare_op.6 = $50load_attr.1 > $58binary_subscr.5
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($60compare_op.6, func=bool62, args=(Var($60compare_op.6, vpacket.py:223),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $66load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.3 = static_getitem(value=$66load_attr.1, index=0, index_var=$const68.2)
DEBUG:numba.core.ssa:on stmt: $74load_attr.5 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $76binary_true_divide.6 = $70binary_subscr.3 / $74load_attr.5
DEBUG:numba.core.ssa:on stmt: r_inner_over_r = $76binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: $80load_global.7 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $82load_method.8 = getattr(value=$80load_global.7, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const84.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.12 = r_inner_over_r * r_inner_over_r
DEBUG:numba.core.ssa:on stmt: $92binary_subtract.13 = $const84.9 - $90binary_multiply.12
DEBUG:numba.core.ssa:on stmt: $94call_method.14 = call $82load_method.8($92binary_subtract.13, func=$82load_method.8, args=[Var($92binary_subtract.13, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $96unary_negative.15 = unary(fn=<built-in function neg>, value=$94call_method.14)
DEBUG:numba.core.ssa:on stmt: mu_min = $96unary_negative.15
DEBUG:numba.core.ssa:on stmt: $const100.16 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const100.16
DEBUG:numba.core.ssa:first assign: v_packet_on_inner_boundary
DEBUG:numba.core.ssa:replaced with: v_packet_on_inner_boundary = $const100.16
DEBUG:numba.core.ssa:on stmt: $104load_global.17 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_attr.18 = getattr(value=$104load_global.17, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106load_attr.18, func=bool108, args=(Var($106load_attr.18, vpacket.py:227),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $110load_global.0 = global(angle_aberration_LF_to_CMF: CPUDispatcher(<function angle_aberration_LF_to_CMF at 0x7f6e4a1074d0>))
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $120call_function.5 = call $110load_global.0(r_packet, $116load_attr.3, mu_min, func=$110load_global.0, args=[Var(r_packet, vpacket.py:212), Var($116load_attr.3, vpacket.py:229), Var(mu_min, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: mu_min.1 = $120call_function.5
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $const126.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const126.0
DEBUG:numba.core.ssa:replaced with: v_packet_on_inner_boundary.1 = $const126.0
DEBUG:numba.core.ssa:on stmt: $const130.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: mu_min.2 = $const130.1
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: mu_min.3 = phi(incoming_values=[Var(mu_min, vpacket.py:225), Var(mu_min.2, vpacket.py:233), Var(mu_min.1, vpacket.py:229)], incoming_blocks=[64, 126, 110])
DEBUG:numba.core.ssa:on stmt: $const134.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.2 = $const134.0 - mu_min.3
DEBUG:numba.core.ssa:on stmt: $142binary_true_divide.4 = $138binary_subtract.2 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: mu_bin = $142binary_true_divide.4
DEBUG:numba.core.ssa:on stmt: $146load_global.5 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $150load_attr.7 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $154load_attr.9 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $158load_attr.11 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $160call_function.12 = call $146load_global.5($150load_attr.7, $154load_attr.9, $158load_attr.11, func=$146load_global.5, args=[Var($150load_attr.7, vpacket.py:237), Var($154load_attr.9, vpacket.py:237), Var($158load_attr.11, vpacket.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r_packet_doppler_factor = $160call_function.12
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $168load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $172call_function.2 = call $168load_global.0(no_of_vpackets, func=$168load_global.0, args=[Var(no_of_vpackets, vpacket.py:218)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.3 = getiter(value=$172call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi176.0 = $174get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $176for_iter.1 = iternext(value=$phi176.0)
DEBUG:numba.core.ssa:on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $176for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $176for_iter.3, 180, 460
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: i = $phi180.1
DEBUG:numba.core.ssa:on stmt: $188binary_multiply.5 = i * mu_bin
DEBUG:numba.core.ssa:on stmt: $190binary_add.6 = mu_min.3 + $188binary_multiply.5
DEBUG:numba.core.ssa:on stmt: $192load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_attr.8 = getattr(value=$192load_global.7, attr=random)
DEBUG:numba.core.ssa:on stmt: $196load_method.9 = getattr(value=$194load_attr.8, attr=random)
DEBUG:numba.core.ssa:on stmt: $198call_method.10 = call $196load_method.9(func=$196load_method.9, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $202binary_multiply.12 = $198call_method.10 * mu_bin
DEBUG:numba.core.ssa:on stmt: $204binary_add.13 = $190binary_add.6 + $202binary_multiply.12
DEBUG:numba.core.ssa:on stmt: v_packet_mu = $204binary_add.13
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210(v_packet_on_inner_boundary, func=bool210, args=(Var(v_packet_on_inner_boundary, vpacket.py:226),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $const212.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.3 = $const212.1 * v_packet_mu
DEBUG:numba.core.ssa:on stmt: $220binary_true_divide.5 = $216binary_multiply.3 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: weight = $220binary_true_divide.5
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $const226.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $230binary_subtract.3 = $const226.1 - mu_min.3
DEBUG:numba.core.ssa:on stmt: $const232.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $236binary_multiply.6 = $const232.4 * no_of_vpackets
DEBUG:numba.core.ssa:on stmt: $238binary_true_divide.7 = $230binary_subtract.3 / $236binary_multiply.6
DEBUG:numba.core.ssa:on stmt: weight.1 = $238binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: weight.2 = phi(incoming_values=[Var(weight.1, vpacket.py:245), Var(weight, vpacket.py:243)], incoming_blocks=[226, 212])
DEBUG:numba.core.ssa:on stmt: $242load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $244load_attr.2 = getattr(value=$242load_global.1, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244load_attr.2, func=bool246, args=(Var($244load_attr.2, vpacket.py:248),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 250, 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 250
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $250load_global.1 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>))
DEBUG:numba.core.ssa:on stmt: $256load_attr.4 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $260call_function.6 = call $250load_global.1(r_packet, $256load_attr.4, v_packet_mu, func=$250load_global.1, args=[Var(r_packet, vpacket.py:212), Var($256load_attr.4, vpacket.py:250), Var(v_packet_mu, vpacket.py:240)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_mu.1 = $260call_function.6
DEBUG:numba.core.ssa:on stmt: jump 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 264
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: v_packet_mu.2 = phi(incoming_values=[Var(v_packet_mu, vpacket.py:240), Var(v_packet_mu.1, vpacket.py:250)], incoming_blocks=[242, 250])
DEBUG:numba.core.ssa:on stmt: $264load_global.1 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $268load_attr.3 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $274load_attr.6 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $276call_function.7 = call $264load_global.1($268load_attr.3, v_packet_mu.2, $274load_attr.6, func=$264load_global.1, args=[Var($268load_attr.3, vpacket.py:253), Var(v_packet_mu.2, vpacket.py:252), Var($274load_attr.6, vpacket.py:253)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_doppler_factor = $276call_function.7
DEBUG:numba.core.ssa:on stmt: $284binary_true_divide.10 = r_packet_doppler_factor / v_packet_doppler_factor
DEBUG:numba.core.ssa:on stmt: doppler_factor_ratio = $284binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $290load_attr.12 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $294binary_multiply.14 = $290load_attr.12 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_nu = $294binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $300load_attr.16 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $304binary_multiply.18 = $300load_attr.16 * weight.2
DEBUG:numba.core.ssa:on stmt: $308binary_multiply.20 = $304binary_multiply.18 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_energy = $308binary_multiply.20
DEBUG:numba.core.ssa:on stmt: $312load_global.21 = global(VPacket: <class 'numba.experimental.jitclass.base.VPacket'>)
DEBUG:numba.core.ssa:on stmt: $316load_attr.23 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $326load_attr.28 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $330load_attr.30 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $336load_attr.33 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: $338call_function.34 = call $312load_global.21($316load_attr.23, v_packet_mu.2, v_packet_nu, v_packet_energy, $326load_attr.28, $330load_attr.30, i, $336load_attr.33, func=$312load_global.21, args=[Var($316load_attr.23, vpacket.py:264), Var(v_packet_mu.2, vpacket.py:252), Var(v_packet_nu, vpacket.py:260), Var(v_packet_energy, vpacket.py:261), Var($326load_attr.28, vpacket.py:268), Var($330load_attr.30, vpacket.py:269), Var(i, vpacket.py:239), Var($336load_attr.33, vpacket.py:271)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet = $338call_function.34
DEBUG:numba.core.ssa:on stmt: $344load_attr.36 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $346load_global.37 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $350load_attr.39 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $352call_function.40 = call $346load_global.37($350load_attr.39, func=$346load_global.37, args=[Var($350load_attr.39, vpacket.py:274)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const354.41 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356binary_subtract.42 = $352call_function.40 - $const354.41
DEBUG:numba.core.ssa:on stmt: $358compare_op.43 = $344load_attr.36 <= $356binary_subtract.42
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($358compare_op.43, func=bool360, args=(Var($358compare_op.43, vpacket.py:274),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 364, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 364
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $364load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.4 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $374load_attr.6 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $378load_attr.8 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $const380.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $382binary_subtract.10 = $378load_attr.8 - $const380.9
DEBUG:numba.core.ssa:on stmt: $384binary_subscr.11 = getitem(value=$374load_attr.6, index=$382binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: $388call_function.13 = call $364load_global.1(v_packet, $370load_attr.4, $384binary_subscr.11, numba_plasma, func=$364load_global.1, args=[Var(v_packet, vpacket.py:271), Var($370load_attr.4, vpacket.py:277), Var($384binary_subscr.11, vpacket.py:278), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $392load_global.1 = global(trace_vpacket: CPUDispatcher(<function trace_vpacket at 0x7f6e4a0be4d0>))
DEBUG:numba.core.ssa:on stmt: $400call_function.5 = call $392load_global.1(v_packet, numba_model, numba_plasma, func=$392load_global.1, args=[Var(v_packet, vpacket.py:271), Var(numba_model, vpacket.py:212), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_vpacket = $400call_function.5
DEBUG:numba.core.ssa:on stmt: $408load_attr.8 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $410load_global.9 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $412load_method.10 = getattr(value=$410load_global.9, attr=exp)
DEBUG:numba.core.ssa:on stmt: $416unary_negative.12 = unary(fn=<built-in function neg>, value=tau_vpacket)
DEBUG:numba.core.ssa:on stmt: $418call_method.13 = call $412load_method.10($416unary_negative.12, func=$412load_method.10, args=[Var($416unary_negative.12, vpacket.py:284)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $420inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$408load_attr.8, rhs=$418call_method.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $420inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: $428load_method.16 = getattr(value=vpacket_collection, attr=set_properties)
DEBUG:numba.core.ssa:on stmt: $432load_attr.18 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $436load_attr.20 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $440load_attr.22 = getattr(value=r_packet, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $444load_attr.24 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $448load_attr.26 = getattr(value=r_packet, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $452load_attr.28 = getattr(value=r_packet, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $454call_method.29 = call $428load_method.16($432load_attr.18, $436load_attr.20, $440load_attr.22, $444load_attr.24, $448load_attr.26, $452load_attr.28, func=$428load_method.16, args=[Var($432load_attr.18, vpacket.py:287), Var($436load_attr.20, vpacket.py:288), Var($440load_attr.22, vpacket.py:289), Var($444load_attr.24, vpacket.py:290), Var($448load_attr.26, vpacket.py:291), Var($452load_attr.28, vpacket.py:292)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 460
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: jump 462
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 462
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0c50>
DEBUG:numba.core.ssa:on stmt: $const462.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $464return_value.1 = cast(value=$const462.0)
DEBUG:numba.core.ssa:on stmt: return $464return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {64: [<numba.core.ir.Assign object at 0x7f6e45ece210>],
             126: [<numba.core.ir.Assign object at 0x7f6e45ece110>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: vpacket_collection = arg(1, name=vpacket_collection)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(2, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $10compare_op.4 = $4load_attr.1 < $8load_attr.3
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, vpacket.py:212),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 26, 14
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $16load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $20load_attr.3 = getattr(value=vpacket_collection, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $22compare_op.4 = $16load_attr.1 > $20load_attr.3
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($22compare_op.4, func=bool24, args=(Var($22compare_op.4, vpacket.py:213),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=$const26.0)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $32load_attr.1 = getattr(value=vpacket_collection, attr=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: no_of_vpackets = $32load_attr.1
DEBUG:numba.core.ssa:on stmt: $const38.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.4 = no_of_vpackets == $const38.3
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($40compare_op.4, func=bool42, args=(Var($40compare_op.4, vpacket.py:219),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $const44.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $50load_attr.1 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $54load_attr.3 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const56.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $58binary_subscr.5 = static_getitem(value=$54load_attr.3, index=0, index_var=$const56.4)
DEBUG:numba.core.ssa:on stmt: $60compare_op.6 = $50load_attr.1 > $58binary_subscr.5
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($60compare_op.6, func=bool62, args=(Var($60compare_op.6, vpacket.py:223),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 126
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $66load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const68.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $70binary_subscr.3 = static_getitem(value=$66load_attr.1, index=0, index_var=$const68.2)
DEBUG:numba.core.ssa:on stmt: $74load_attr.5 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $76binary_true_divide.6 = $70binary_subscr.3 / $74load_attr.5
DEBUG:numba.core.ssa:on stmt: r_inner_over_r = $76binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: $80load_global.7 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $82load_method.8 = getattr(value=$80load_global.7, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $const84.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.12 = r_inner_over_r * r_inner_over_r
DEBUG:numba.core.ssa:on stmt: $92binary_subtract.13 = $const84.9 - $90binary_multiply.12
DEBUG:numba.core.ssa:on stmt: $94call_method.14 = call $82load_method.8($92binary_subtract.13, func=$82load_method.8, args=[Var($92binary_subtract.13, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $96unary_negative.15 = unary(fn=<built-in function neg>, value=$94call_method.14)
DEBUG:numba.core.ssa:on stmt: mu_min = $96unary_negative.15
DEBUG:numba.core.ssa:on stmt: $const100.16 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary = $const100.16
DEBUG:numba.core.ssa:on stmt: $104load_global.17 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $106load_attr.18 = getattr(value=$104load_global.17, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($106load_attr.18, func=bool108, args=(Var($106load_attr.18, vpacket.py:227),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $110load_global.0 = global(angle_aberration_LF_to_CMF: CPUDispatcher(<function angle_aberration_LF_to_CMF at 0x7f6e4a1074d0>))
DEBUG:numba.core.ssa:on stmt: $116load_attr.3 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $120call_function.5 = call $110load_global.0(r_packet, $116load_attr.3, mu_min, func=$110load_global.0, args=[Var(r_packet, vpacket.py:212), Var($116load_attr.3, vpacket.py:229), Var(mu_min, vpacket.py:225)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: mu_min.1 = $120call_function.5
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $const126.0 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: v_packet_on_inner_boundary.1 = $const126.0
DEBUG:numba.core.ssa:on stmt: $const130.1 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: mu_min.2 = $const130.1
DEBUG:numba.core.ssa:on stmt: jump 134
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: mu_min.3 = phi(incoming_values=[Var(mu_min, vpacket.py:225), Var(mu_min.2, vpacket.py:233), Var(mu_min.1, vpacket.py:229)], incoming_blocks=[64, 126, 110])
DEBUG:numba.core.ssa:on stmt: $const134.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $138binary_subtract.2 = $const134.0 - mu_min.3
DEBUG:numba.core.ssa:on stmt: $142binary_true_divide.4 = $138binary_subtract.2 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: mu_bin = $142binary_true_divide.4
DEBUG:numba.core.ssa:on stmt: $146load_global.5 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $150load_attr.7 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $154load_attr.9 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $158load_attr.11 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $160call_function.12 = call $146load_global.5($150load_attr.7, $154load_attr.9, $158load_attr.11, func=$146load_global.5, args=[Var($150load_attr.7, vpacket.py:237), Var($154load_attr.9, vpacket.py:237), Var($158load_attr.11, vpacket.py:237)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: r_packet_doppler_factor = $160call_function.12
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $168load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $172call_function.2 = call $168load_global.0(no_of_vpackets, func=$168load_global.0, args=[Var(no_of_vpackets, vpacket.py:218)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.3 = getiter(value=$172call_function.2)
DEBUG:numba.core.ssa:on stmt: $phi176.0 = $174get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $176for_iter.1 = iternext(value=$phi176.0)
DEBUG:numba.core.ssa:on stmt: $176for_iter.2 = pair_first(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $176for_iter.3 = pair_second(value=$176for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $176for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $176for_iter.3, 180, 460
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: i = $phi180.1
DEBUG:numba.core.ssa:on stmt: $188binary_multiply.5 = i * mu_bin
DEBUG:numba.core.ssa:on stmt: $190binary_add.6 = mu_min.3 + $188binary_multiply.5
DEBUG:numba.core.ssa:on stmt: $192load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $194load_attr.8 = getattr(value=$192load_global.7, attr=random)
DEBUG:numba.core.ssa:on stmt: $196load_method.9 = getattr(value=$194load_attr.8, attr=random)
DEBUG:numba.core.ssa:on stmt: $198call_method.10 = call $196load_method.9(func=$196load_method.9, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $202binary_multiply.12 = $198call_method.10 * mu_bin
DEBUG:numba.core.ssa:on stmt: $204binary_add.13 = $190binary_add.6 + $202binary_multiply.12
DEBUG:numba.core.ssa:on stmt: v_packet_mu = $204binary_add.13
DEBUG:numba.core.ssa:on stmt: bool210 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $210pred = call bool210(v_packet_on_inner_boundary, func=bool210, args=(Var(v_packet_on_inner_boundary, vpacket.py:226),), kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='v_packet_on_inner_boundary' stmt=$210pred = call bool210(v_packet_on_inner_boundary, func=bool210, args=(Var(v_packet_on_inner_boundary, vpacket.py:226),), kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 176 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 176
DEBUG:numba.core.ssa:find_def_from_top label 176
DEBUG:numba.core.ssa:idom 164 from label 176
DEBUG:numba.core.ssa:find_def_from_bottom label 164
DEBUG:numba.core.ssa:find_def_from_top label 164
DEBUG:numba.core.ssa:idom 134 from label 164
DEBUG:numba.core.ssa:find_def_from_bottom label 134
DEBUG:numba.core.ssa:find_def_from_top label 134
DEBUG:numba.core.ssa:insert phi node v_packet_on_inner_boundary.2 = phi(incoming_values=[], incoming_blocks=[]) at 134
DEBUG:numba.core.ssa:find_def_from_bottom label 64
DEBUG:numba.core.ssa:incoming_def v_packet_on_inner_boundary = $const100.16
DEBUG:numba.core.ssa:find_def_from_bottom label 126
DEBUG:numba.core.ssa:incoming_def v_packet_on_inner_boundary.1 = $const126.0
DEBUG:numba.core.ssa:find_def_from_bottom label 110
DEBUG:numba.core.ssa:find_def_from_top label 110
DEBUG:numba.core.ssa:idom 64 from label 110
DEBUG:numba.core.ssa:find_def_from_bottom label 64
DEBUG:numba.core.ssa:incoming_def v_packet_on_inner_boundary = $const100.16
DEBUG:numba.core.ssa:replaced with: $210pred = call bool210(v_packet_on_inner_boundary.2, func=bool210, args=(Var(v_packet_on_inner_boundary.2, vpacket.py:239),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $210pred, 212, 226
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 212
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $const212.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $216binary_multiply.3 = $const212.1 * v_packet_mu
DEBUG:numba.core.ssa:on stmt: $220binary_true_divide.5 = $216binary_multiply.3 / no_of_vpackets
DEBUG:numba.core.ssa:on stmt: weight = $220binary_true_divide.5
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $const226.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $230binary_subtract.3 = $const226.1 - mu_min.3
DEBUG:numba.core.ssa:on stmt: $const232.4 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $236binary_multiply.6 = $const232.4 * no_of_vpackets
DEBUG:numba.core.ssa:on stmt: $238binary_true_divide.7 = $230binary_subtract.3 / $236binary_multiply.6
DEBUG:numba.core.ssa:on stmt: weight.1 = $238binary_true_divide.7
DEBUG:numba.core.ssa:on stmt: jump 242
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: weight.2 = phi(incoming_values=[Var(weight.1, vpacket.py:245), Var(weight, vpacket.py:243)], incoming_blocks=[226, 212])
DEBUG:numba.core.ssa:on stmt: $242load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $244load_attr.2 = getattr(value=$242load_global.1, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool246 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $246pred = call bool246($244load_attr.2, func=bool246, args=(Var($244load_attr.2, vpacket.py:248),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $246pred, 250, 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 250
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $250load_global.1 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>))
DEBUG:numba.core.ssa:on stmt: $256load_attr.4 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $260call_function.6 = call $250load_global.1(r_packet, $256load_attr.4, v_packet_mu, func=$250load_global.1, args=[Var(r_packet, vpacket.py:212), Var($256load_attr.4, vpacket.py:250), Var(v_packet_mu, vpacket.py:240)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_mu.1 = $260call_function.6
DEBUG:numba.core.ssa:on stmt: jump 264
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 264
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: v_packet_mu.2 = phi(incoming_values=[Var(v_packet_mu, vpacket.py:240), Var(v_packet_mu.1, vpacket.py:250)], incoming_blocks=[242, 250])
DEBUG:numba.core.ssa:on stmt: $264load_global.1 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $268load_attr.3 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $274load_attr.6 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $276call_function.7 = call $264load_global.1($268load_attr.3, v_packet_mu.2, $274load_attr.6, func=$264load_global.1, args=[Var($268load_attr.3, vpacket.py:253), Var(v_packet_mu.2, vpacket.py:252), Var($274load_attr.6, vpacket.py:253)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet_doppler_factor = $276call_function.7
DEBUG:numba.core.ssa:on stmt: $284binary_true_divide.10 = r_packet_doppler_factor / v_packet_doppler_factor
DEBUG:numba.core.ssa:on stmt: doppler_factor_ratio = $284binary_true_divide.10
DEBUG:numba.core.ssa:on stmt: $290load_attr.12 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $294binary_multiply.14 = $290load_attr.12 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_nu = $294binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $300load_attr.16 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $304binary_multiply.18 = $300load_attr.16 * weight.2
DEBUG:numba.core.ssa:on stmt: $308binary_multiply.20 = $304binary_multiply.18 * doppler_factor_ratio
DEBUG:numba.core.ssa:on stmt: v_packet_energy = $308binary_multiply.20
DEBUG:numba.core.ssa:on stmt: $312load_global.21 = global(VPacket: <class 'numba.experimental.jitclass.base.VPacket'>)
DEBUG:numba.core.ssa:on stmt: $316load_attr.23 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $326load_attr.28 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $330load_attr.30 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $336load_attr.33 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: $338call_function.34 = call $312load_global.21($316load_attr.23, v_packet_mu.2, v_packet_nu, v_packet_energy, $326load_attr.28, $330load_attr.30, i, $336load_attr.33, func=$312load_global.21, args=[Var($316load_attr.23, vpacket.py:264), Var(v_packet_mu.2, vpacket.py:252), Var(v_packet_nu, vpacket.py:260), Var(v_packet_energy, vpacket.py:261), Var($326load_attr.28, vpacket.py:268), Var($330load_attr.30, vpacket.py:269), Var(i, vpacket.py:239), Var($336load_attr.33, vpacket.py:271)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: v_packet = $338call_function.34
DEBUG:numba.core.ssa:on stmt: $344load_attr.36 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $346load_global.37 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $350load_attr.39 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $352call_function.40 = call $346load_global.37($350load_attr.39, func=$346load_global.37, args=[Var($350load_attr.39, vpacket.py:274)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const354.41 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $356binary_subtract.42 = $352call_function.40 - $const354.41
DEBUG:numba.core.ssa:on stmt: $358compare_op.43 = $344load_attr.36 <= $356binary_subtract.42
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($358compare_op.43, func=bool360, args=(Var($358compare_op.43, vpacket.py:274),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 364, 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 364
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $364load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.4 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $374load_attr.6 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $378load_attr.8 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $const380.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $382binary_subtract.10 = $378load_attr.8 - $const380.9
DEBUG:numba.core.ssa:on stmt: $384binary_subscr.11 = getitem(value=$374load_attr.6, index=$382binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: $388call_function.13 = call $364load_global.1(v_packet, $370load_attr.4, $384binary_subscr.11, numba_plasma, func=$364load_global.1, args=[Var(v_packet, vpacket.py:271), Var($370load_attr.4, vpacket.py:277), Var($384binary_subscr.11, vpacket.py:278), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 392
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 392
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $392load_global.1 = global(trace_vpacket: CPUDispatcher(<function trace_vpacket at 0x7f6e4a0be4d0>))
DEBUG:numba.core.ssa:on stmt: $400call_function.5 = call $392load_global.1(v_packet, numba_model, numba_plasma, func=$392load_global.1, args=[Var(v_packet, vpacket.py:271), Var(numba_model, vpacket.py:212), Var(numba_plasma, vpacket.py:212)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_vpacket = $400call_function.5
DEBUG:numba.core.ssa:on stmt: $408load_attr.8 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $410load_global.9 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $412load_method.10 = getattr(value=$410load_global.9, attr=exp)
DEBUG:numba.core.ssa:on stmt: $416unary_negative.12 = unary(fn=<built-in function neg>, value=tau_vpacket)
DEBUG:numba.core.ssa:on stmt: $418call_method.13 = call $412load_method.10($416unary_negative.12, func=$412load_method.10, args=[Var($416unary_negative.12, vpacket.py:284)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $420inplace_multiply.14 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=$408load_attr.8, rhs=$418call_method.13, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $420inplace_multiply.14
DEBUG:numba.core.ssa:on stmt: $428load_method.16 = getattr(value=vpacket_collection, attr=set_properties)
DEBUG:numba.core.ssa:on stmt: $432load_attr.18 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $436load_attr.20 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $440load_attr.22 = getattr(value=r_packet, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $444load_attr.24 = getattr(value=r_packet, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $448load_attr.26 = getattr(value=r_packet, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $452load_attr.28 = getattr(value=r_packet, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $454call_method.29 = call $428load_method.16($432load_attr.18, $436load_attr.20, $440load_attr.22, $444load_attr.24, $448load_attr.26, $452load_attr.28, func=$428load_method.16, args=[Var($432load_attr.18, vpacket.py:287), Var($436load_attr.20, vpacket.py:288), Var($440load_attr.22, vpacket.py:289), Var($444load_attr.24, vpacket.py:290), Var($448load_attr.26, vpacket.py:291), Var($452load_attr.28, vpacket.py:292)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 460
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: jump 462
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 462
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ed0210>
DEBUG:numba.core.ssa:on stmt: $const462.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $464return_value.1 = cast(value=$const462.0)
DEBUG:numba.core.ssa:on stmt: return $464return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=615)
           2	LOAD_GLOBAL(arg=0, lineno=615)
           4	LOAD_FAST(arg=1, lineno=615)
           6	BINARY_MULTIPLY(arg=None, lineno=615)
           8	STORE_FAST(arg=3, lineno=615)
          10	LOAD_FAST(arg=0, lineno=616)
          12	LOAD_ATTR(arg=1, lineno=616)
          14	LOAD_FAST(arg=3, lineno=616)
          16	BINARY_TRUE_DIVIDE(arg=None, lineno=616)
          18	STORE_FAST(arg=4, lineno=616)
          20	LOAD_FAST(arg=2, lineno=617)
          22	LOAD_FAST(arg=4, lineno=617)
          24	BINARY_SUBTRACT(arg=None, lineno=617)
          26	LOAD_CONST(arg=1, lineno=617)
          28	LOAD_FAST(arg=4, lineno=617)
          30	LOAD_FAST(arg=2, lineno=617)
          32	BINARY_MULTIPLY(arg=None, lineno=617)
          34	BINARY_SUBTRACT(arg=None, lineno=617)
          36	BINARY_TRUE_DIVIDE(arg=None, lineno=617)
          38	RETURN_VALUE(arg=None, lineno=617)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=615)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=615)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=615)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_MULTIPLY(arg=None, lineno=615)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$time_explosion4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=615)
DEBUG:numba.core.byteflow:stack ['$6binary_multiply.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=616)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_ATTR(arg=1, lineno=616)
DEBUG:numba.core.byteflow:stack ['$r_packet10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=616)
DEBUG:numba.core.byteflow:stack ['$12load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=616)
DEBUG:numba.core.byteflow:stack ['$12load_attr.4', '$ct14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=4, lineno=616)
DEBUG:numba.core.byteflow:stack ['$16binary_true_divide.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=617)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=4, lineno=617)
DEBUG:numba.core.byteflow:stack ['$mu20.7']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_SUBTRACT(arg=None, lineno=617)
DEBUG:numba.core.byteflow:stack ['$mu20.7', '$beta22.8']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=617)
DEBUG:numba.core.byteflow:stack ['$24binary_subtract.9']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=4, lineno=617)
DEBUG:numba.core.byteflow:stack ['$24binary_subtract.9', '$const26.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=2, lineno=617)
DEBUG:numba.core.byteflow:stack ['$24binary_subtract.9', '$const26.10', '$beta28.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BINARY_MULTIPLY(arg=None, lineno=617)
DEBUG:numba.core.byteflow:stack ['$24binary_subtract.9', '$const26.10', '$beta28.11', '$mu30.12']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=BINARY_SUBTRACT(arg=None, lineno=617)
DEBUG:numba.core.byteflow:stack ['$24binary_subtract.9', '$const26.10', '$32binary_multiply.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=617)
DEBUG:numba.core.byteflow:stack ['$24binary_subtract.9', '$34binary_subtract.14']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=RETURN_VALUE(arg=None, lineno=617)
DEBUG:numba.core.byteflow:stack ['$36binary_true_divide.15']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$time_explosion4.1'}), (6, {'lhs': '$2load_global.0', 'rhs': '$time_explosion4.1', 'res': '$6binary_multiply.2'}), (8, {'value': '$6binary_multiply.2'}), (10, {'res': '$r_packet10.3'}), (12, {'item': '$r_packet10.3', 'res': '$12load_attr.4'}), (14, {'res': '$ct14.5'}), (16, {'lhs': '$12load_attr.4', 'rhs': '$ct14.5', 'res': '$16binary_true_divide.6'}), (18, {'value': '$16binary_true_divide.6'}), (20, {'res': '$mu20.7'}), (22, {'res': '$beta22.8'}), (24, {'lhs': '$mu20.7', 'rhs': '$beta22.8', 'res': '$24binary_subtract.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$beta28.11'}), (30, {'res': '$mu30.12'}), (32, {'lhs': '$beta28.11', 'rhs': '$mu30.12', 'res': '$32binary_multiply.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_multiply.13', 'res': '$34binary_subtract.14'}), (36, {'lhs': '$24binary_subtract.9', 'rhs': '$34binary_subtract.14', 'res': '$36binary_true_divide.15'}), (38, {'retval': '$36binary_true_divide.15', 'castval': '$38return_value.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    time_explosion = arg(1, name=time_explosion) ['time_explosion']
    mu = arg(2, name=mu)                     ['mu']
    $2load_global.0 = global(C_SPEED_OF_LIGHT: 29979245800.0) ['$2load_global.0']
    $6binary_multiply.2 = $2load_global.0 * time_explosion ['$2load_global.0', '$6binary_multiply.2', 'time_explosion']
    ct = $6binary_multiply.2                 ['$6binary_multiply.2', 'ct']
    $12load_attr.4 = getattr(value=r_packet, attr=r) ['$12load_attr.4', 'r_packet']
    $16binary_true_divide.6 = $12load_attr.4 / ct ['$12load_attr.4', '$16binary_true_divide.6', 'ct']
    beta = $16binary_true_divide.6           ['$16binary_true_divide.6', 'beta']
    $24binary_subtract.9 = mu - beta         ['$24binary_subtract.9', 'beta', 'mu']
    $const26.10 = const(float, 1.0)          ['$const26.10']
    $32binary_multiply.13 = beta * mu        ['$32binary_multiply.13', 'beta', 'mu']
    $34binary_subtract.14 = $const26.10 - $32binary_multiply.13 ['$32binary_multiply.13', '$34binary_subtract.14', '$const26.10']
    $36binary_true_divide.15 = $24binary_subtract.9 / $34binary_subtract.14 ['$24binary_subtract.9', '$34binary_subtract.14', '$36binary_true_divide.15']
    $38return_value.16 = cast(value=$36binary_true_divide.15) ['$36binary_true_divide.15', '$38return_value.16']
    return $38return_value.16                ['$38return_value.16']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e46022110>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(1, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: mu = arg(2, name=mu)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $6binary_multiply.2 = $2load_global.0 * time_explosion
DEBUG:numba.core.ssa:on stmt: ct = $6binary_multiply.2
DEBUG:numba.core.ssa:on stmt: $12load_attr.4 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $16binary_true_divide.6 = $12load_attr.4 / ct
DEBUG:numba.core.ssa:on stmt: beta = $16binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: $24binary_subtract.9 = mu - beta
DEBUG:numba.core.ssa:on stmt: $const26.10 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $32binary_multiply.13 = beta * mu
DEBUG:numba.core.ssa:on stmt: $34binary_subtract.14 = $const26.10 - $32binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $36binary_true_divide.15 = $24binary_subtract.9 / $34binary_subtract.14
DEBUG:numba.core.ssa:on stmt: $38return_value.16 = cast(value=$36binary_true_divide.15)
DEBUG:numba.core.ssa:on stmt: return $38return_value.16
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12load_attr.4': [<numba.core.ir.Assign object at 0x7f6e460201d0>],
             '$16binary_true_divide.6': [<numba.core.ir.Assign object at 0x7f6e46020390>],
             '$24binary_subtract.9': [<numba.core.ir.Assign object at 0x7f6e46020d50>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e46022f50>],
             '$32binary_multiply.13': [<numba.core.ir.Assign object at 0x7f6e46020d90>],
             '$34binary_subtract.14': [<numba.core.ir.Assign object at 0x7f6e45ef53d0>],
             '$36binary_true_divide.15': [<numba.core.ir.Assign object at 0x7f6e45ef5a10>],
             '$38return_value.16': [<numba.core.ir.Assign object at 0x7f6e45ef5790>],
             '$6binary_multiply.2': [<numba.core.ir.Assign object at 0x7f6e46022310>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f6e46020f10>],
             'beta': [<numba.core.ir.Assign object at 0x7f6e46020950>],
             'ct': [<numba.core.ir.Assign object at 0x7f6e46022510>],
             'mu': [<numba.core.ir.Assign object at 0x7f6e46022910>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e46022e90>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e46022b90>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=602)
           2	LOAD_GLOBAL(arg=0, lineno=602)
           4	LOAD_FAST(arg=1, lineno=602)
           6	BINARY_MULTIPLY(arg=None, lineno=602)
           8	STORE_FAST(arg=3, lineno=602)
          10	LOAD_FAST(arg=0, lineno=603)
          12	LOAD_ATTR(arg=1, lineno=603)
          14	LOAD_FAST(arg=3, lineno=603)
          16	BINARY_TRUE_DIVIDE(arg=None, lineno=603)
          18	STORE_FAST(arg=4, lineno=603)
          20	LOAD_FAST(arg=0, lineno=604)
          22	LOAD_ATTR(arg=2, lineno=604)
          24	LOAD_FAST(arg=4, lineno=604)
          26	BINARY_ADD(arg=None, lineno=604)
          28	LOAD_CONST(arg=1, lineno=604)
          30	LOAD_FAST(arg=4, lineno=604)
          32	LOAD_FAST(arg=2, lineno=604)
          34	BINARY_MULTIPLY(arg=None, lineno=604)
          36	BINARY_ADD(arg=None, lineno=604)
          38	BINARY_TRUE_DIVIDE(arg=None, lineno=604)
          40	RETURN_VALUE(arg=None, lineno=604)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=602)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=602)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=602)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_MULTIPLY(arg=None, lineno=602)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$time_explosion4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=3, lineno=602)
DEBUG:numba.core.byteflow:stack ['$6binary_multiply.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=603)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_ATTR(arg=1, lineno=603)
DEBUG:numba.core.byteflow:stack ['$r_packet10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=603)
DEBUG:numba.core.byteflow:stack ['$12load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=603)
DEBUG:numba.core.byteflow:stack ['$12load_attr.4', '$ct14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=4, lineno=603)
DEBUG:numba.core.byteflow:stack ['$16binary_true_divide.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=604)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=604)
DEBUG:numba.core.byteflow:stack ['$r_packet20.7']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=604)
DEBUG:numba.core.byteflow:stack ['$22load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_ADD(arg=None, lineno=604)
DEBUG:numba.core.byteflow:stack ['$22load_attr.8', '$beta24.9']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=604)
DEBUG:numba.core.byteflow:stack ['$26binary_add.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=4, lineno=604)
DEBUG:numba.core.byteflow:stack ['$26binary_add.10', '$const28.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=2, lineno=604)
DEBUG:numba.core.byteflow:stack ['$26binary_add.10', '$const28.11', '$beta30.12']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=BINARY_MULTIPLY(arg=None, lineno=604)
DEBUG:numba.core.byteflow:stack ['$26binary_add.10', '$const28.11', '$beta30.12', '$mu32.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_ADD(arg=None, lineno=604)
DEBUG:numba.core.byteflow:stack ['$26binary_add.10', '$const28.11', '$34binary_multiply.14']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=604)
DEBUG:numba.core.byteflow:stack ['$26binary_add.10', '$36binary_add.15']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=RETURN_VALUE(arg=None, lineno=604)
DEBUG:numba.core.byteflow:stack ['$38binary_true_divide.16']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$time_explosion4.1'}), (6, {'lhs': '$2load_global.0', 'rhs': '$time_explosion4.1', 'res': '$6binary_multiply.2'}), (8, {'value': '$6binary_multiply.2'}), (10, {'res': '$r_packet10.3'}), (12, {'item': '$r_packet10.3', 'res': '$12load_attr.4'}), (14, {'res': '$ct14.5'}), (16, {'lhs': '$12load_attr.4', 'rhs': '$ct14.5', 'res': '$16binary_true_divide.6'}), (18, {'value': '$16binary_true_divide.6'}), (20, {'res': '$r_packet20.7'}), (22, {'item': '$r_packet20.7', 'res': '$22load_attr.8'}), (24, {'res': '$beta24.9'}), (26, {'lhs': '$22load_attr.8', 'rhs': '$beta24.9', 'res': '$26binary_add.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$beta30.12'}), (32, {'res': '$mu32.13'}), (34, {'lhs': '$beta30.12', 'rhs': '$mu32.13', 'res': '$34binary_multiply.14'}), (36, {'lhs': '$const28.11', 'rhs': '$34binary_multiply.14', 'res': '$36binary_add.15'}), (38, {'lhs': '$26binary_add.10', 'rhs': '$36binary_add.15', 'res': '$38binary_true_divide.16'}), (40, {'retval': '$38binary_true_divide.16', 'castval': '$40return_value.17'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    time_explosion = arg(1, name=time_explosion) ['time_explosion']
    mu = arg(2, name=mu)                     ['mu']
    $2load_global.0 = global(C_SPEED_OF_LIGHT: 29979245800.0) ['$2load_global.0']
    $6binary_multiply.2 = $2load_global.0 * time_explosion ['$2load_global.0', '$6binary_multiply.2', 'time_explosion']
    ct = $6binary_multiply.2                 ['$6binary_multiply.2', 'ct']
    $12load_attr.4 = getattr(value=r_packet, attr=r) ['$12load_attr.4', 'r_packet']
    $16binary_true_divide.6 = $12load_attr.4 / ct ['$12load_attr.4', '$16binary_true_divide.6', 'ct']
    beta = $16binary_true_divide.6           ['$16binary_true_divide.6', 'beta']
    $22load_attr.8 = getattr(value=r_packet, attr=mu) ['$22load_attr.8', 'r_packet']
    $26binary_add.10 = $22load_attr.8 + beta ['$22load_attr.8', '$26binary_add.10', 'beta']
    $const28.11 = const(float, 1.0)          ['$const28.11']
    $34binary_multiply.14 = beta * mu        ['$34binary_multiply.14', 'beta', 'mu']
    $36binary_add.15 = $const28.11 + $34binary_multiply.14 ['$34binary_multiply.14', '$36binary_add.15', '$const28.11']
    $38binary_true_divide.16 = $26binary_add.10 / $36binary_add.15 ['$26binary_add.10', '$36binary_add.15', '$38binary_true_divide.16']
    $40return_value.17 = cast(value=$38binary_true_divide.16) ['$38binary_true_divide.16', '$40return_value.17']
    return $40return_value.17                ['$40return_value.17']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d64c10>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(1, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: mu = arg(2, name=mu)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $6binary_multiply.2 = $2load_global.0 * time_explosion
DEBUG:numba.core.ssa:on stmt: ct = $6binary_multiply.2
DEBUG:numba.core.ssa:on stmt: $12load_attr.4 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $16binary_true_divide.6 = $12load_attr.4 / ct
DEBUG:numba.core.ssa:on stmt: beta = $16binary_true_divide.6
DEBUG:numba.core.ssa:on stmt: $22load_attr.8 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $26binary_add.10 = $22load_attr.8 + beta
DEBUG:numba.core.ssa:on stmt: $const28.11 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $34binary_multiply.14 = beta * mu
DEBUG:numba.core.ssa:on stmt: $36binary_add.15 = $const28.11 + $34binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $38binary_true_divide.16 = $26binary_add.10 / $36binary_add.15
DEBUG:numba.core.ssa:on stmt: $40return_value.17 = cast(value=$38binary_true_divide.16)
DEBUG:numba.core.ssa:on stmt: return $40return_value.17
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12load_attr.4': [<numba.core.ir.Assign object at 0x7f6e46446e90>],
             '$16binary_true_divide.6': [<numba.core.ir.Assign object at 0x7f6e45dcb910>],
             '$22load_attr.8': [<numba.core.ir.Assign object at 0x7f6e45dcb410>],
             '$26binary_add.10': [<numba.core.ir.Assign object at 0x7f6e45dcb9d0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e45f9ff10>],
             '$34binary_multiply.14': [<numba.core.ir.Assign object at 0x7f6e45dcb810>],
             '$36binary_add.15': [<numba.core.ir.Assign object at 0x7f6e45dcb190>],
             '$38binary_true_divide.16': [<numba.core.ir.Assign object at 0x7f6e45dcbe50>],
             '$40return_value.17': [<numba.core.ir.Assign object at 0x7f6e45dcba50>],
             '$6binary_multiply.2': [<numba.core.ir.Assign object at 0x7f6e45f9f9d0>],
             '$const28.11': [<numba.core.ir.Assign object at 0x7f6e45dcbd90>],
             'beta': [<numba.core.ir.Assign object at 0x7f6e45dcbdd0>],
             'ct': [<numba.core.ir.Assign object at 0x7f6e45f9fb10>],
             'mu': [<numba.core.ir.Assign object at 0x7f6e45f9f610>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e45f9fe90>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e45f9fb90>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=50)
           2	LOAD_FAST(arg=1, lineno=50)
           4	LOAD_FAST(arg=0, lineno=50)
           6	STORE_ATTR(arg=0, lineno=50)
           8	LOAD_FAST(arg=2, lineno=51)
          10	LOAD_FAST(arg=0, lineno=51)
          12	STORE_ATTR(arg=1, lineno=51)
          14	LOAD_FAST(arg=3, lineno=52)
          16	LOAD_FAST(arg=0, lineno=52)
          18	STORE_ATTR(arg=2, lineno=52)
          20	LOAD_FAST(arg=4, lineno=53)
          22	LOAD_FAST(arg=0, lineno=53)
          24	STORE_ATTR(arg=3, lineno=53)
          26	LOAD_FAST(arg=5, lineno=54)
          28	LOAD_FAST(arg=0, lineno=54)
          30	STORE_ATTR(arg=4, lineno=54)
          32	LOAD_FAST(arg=6, lineno=55)
          34	LOAD_FAST(arg=0, lineno=55)
          36	STORE_ATTR(arg=5, lineno=55)
          38	LOAD_GLOBAL(arg=6, lineno=56)
          40	LOAD_ATTR(arg=7, lineno=56)
          42	LOAD_FAST(arg=0, lineno=56)
          44	STORE_ATTR(arg=8, lineno=56)
          46	LOAD_FAST(arg=7, lineno=57)
          48	LOAD_FAST(arg=0, lineno=57)
          50	STORE_ATTR(arg=9, lineno=57)
          52	LOAD_FAST(arg=8, lineno=58)
          54	LOAD_FAST(arg=0, lineno=58)
          56	STORE_ATTR(arg=10, lineno=58)
          58	LOAD_CONST(arg=0, lineno=58)
          60	RETURN_VALUE(arg=None, lineno=58)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=50)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=50)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=50)
DEBUG:numba.core.byteflow:stack ['$r2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_ATTR(arg=0, lineno=50)
DEBUG:numba.core.byteflow:stack ['$r2.0', '$self4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=51)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=51)
DEBUG:numba.core.byteflow:stack ['$mu8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_ATTR(arg=1, lineno=51)
DEBUG:numba.core.byteflow:stack ['$mu8.2', '$self10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=52)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=52)
DEBUG:numba.core.byteflow:stack ['$nu14.4']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_ATTR(arg=2, lineno=52)
DEBUG:numba.core.byteflow:stack ['$nu14.4', '$self16.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=4, lineno=53)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=53)
DEBUG:numba.core.byteflow:stack ['$energy20.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_ATTR(arg=3, lineno=53)
DEBUG:numba.core.byteflow:stack ['$energy20.6', '$self22.7']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=54)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=54)
DEBUG:numba.core.byteflow:stack ['$current_shell_id26.8']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_ATTR(arg=4, lineno=54)
DEBUG:numba.core.byteflow:stack ['$current_shell_id26.8', '$self28.9']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=6, lineno=55)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=55)
DEBUG:numba.core.byteflow:stack ['$next_line_id32.10']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_ATTR(arg=5, lineno=55)
DEBUG:numba.core.byteflow:stack ['$next_line_id32.10', '$self34.11']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=6, lineno=56)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_ATTR(arg=7, lineno=56)
DEBUG:numba.core.byteflow:stack ['$38load_global.12']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=56)
DEBUG:numba.core.byteflow:stack ['$40load_attr.13']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_ATTR(arg=8, lineno=56)
DEBUG:numba.core.byteflow:stack ['$40load_attr.13', '$self42.14']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=7, lineno=57)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=57)
DEBUG:numba.core.byteflow:stack ['$index46.15']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=STORE_ATTR(arg=9, lineno=57)
DEBUG:numba.core.byteflow:stack ['$index46.15', '$self48.16']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=8, lineno=58)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=58)
DEBUG:numba.core.byteflow:stack ['$is_close_line52.17']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=STORE_ATTR(arg=10, lineno=58)
DEBUG:numba.core.byteflow:stack ['$is_close_line52.17', '$self54.18']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_CONST(arg=0, lineno=58)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=RETURN_VALUE(arg=None, lineno=58)
DEBUG:numba.core.byteflow:stack ['$const58.19']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$r2.0'}), (4, {'res': '$self4.1'}), (6, {'target': '$self4.1', 'value': '$r2.0'}), (8, {'res': '$mu8.2'}), (10, {'res': '$self10.3'}), (12, {'target': '$self10.3', 'value': '$mu8.2'}), (14, {'res': '$nu14.4'}), (16, {'res': '$self16.5'}), (18, {'target': '$self16.5', 'value': '$nu14.4'}), (20, {'res': '$energy20.6'}), (22, {'res': '$self22.7'}), (24, {'target': '$self22.7', 'value': '$energy20.6'}), (26, {'res': '$current_shell_id26.8'}), (28, {'res': '$self28.9'}), (30, {'target': '$self28.9', 'value': '$current_shell_id26.8'}), (32, {'res': '$next_line_id32.10'}), (34, {'res': '$self34.11'}), (36, {'target': '$self34.11', 'value': '$next_line_id32.10'}), (38, {'res': '$38load_global.12'}), (40, {'item': '$38load_global.12', 'res': '$40load_attr.13'}), (42, {'res': '$self42.14'}), (44, {'target': '$self42.14', 'value': '$40load_attr.13'}), (46, {'res': '$index46.15'}), (48, {'res': '$self48.16'}), (50, {'target': '$self48.16', 'value': '$index46.15'}), (52, {'res': '$is_close_line52.17'}), (54, {'res': '$self54.18'}), (56, {'target': '$self54.18', 'value': '$is_close_line52.17'}), (58, {'res': '$const58.19'}), (60, {'retval': '$const58.19', 'castval': '$60return_value.20'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    self = arg(0, name=self)                 ['self']
    r = arg(1, name=r)                       ['r']
    mu = arg(2, name=mu)                     ['mu']
    nu = arg(3, name=nu)                     ['nu']
    energy = arg(4, name=energy)             ['energy']
    current_shell_id = arg(5, name=current_shell_id) ['current_shell_id']
    next_line_id = arg(6, name=next_line_id) ['next_line_id']
    index = arg(7, name=index)               ['index']
    is_close_line = arg(8, name=is_close_line) ['is_close_line']
    (self).r = r                             ['r', 'self']
    (self).mu = mu                           ['mu', 'self']
    (self).nu = nu                           ['nu', 'self']
    (self).energy = energy                   ['energy', 'self']
    (self).current_shell_id = current_shell_id ['current_shell_id', 'self']
    (self).next_line_id = next_line_id       ['next_line_id', 'self']
    $38load_global.12 = global(PacketStatus: <enum 'PacketStatus'>) ['$38load_global.12']
    $40load_attr.13 = getattr(value=$38load_global.12, attr=IN_PROCESS) ['$38load_global.12', '$40load_attr.13']
    (self).status = $40load_attr.13          ['$40load_attr.13', 'self']
    (self).index = index                     ['index', 'self']
    (self).is_close_line = is_close_line     ['is_close_line', 'self']
    $const58.19 = const(NoneType, None)      ['$const58.19']
    $60return_value.20 = cast(value=$const58.19) ['$60return_value.20', '$const58.19']
    return $60return_value.20                ['$60return_value.20']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45fd0590>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: r = arg(1, name=r)
DEBUG:numba.core.ssa:on stmt: mu = arg(2, name=mu)
DEBUG:numba.core.ssa:on stmt: nu = arg(3, name=nu)
DEBUG:numba.core.ssa:on stmt: energy = arg(4, name=energy)
DEBUG:numba.core.ssa:on stmt: current_shell_id = arg(5, name=current_shell_id)
DEBUG:numba.core.ssa:on stmt: next_line_id = arg(6, name=next_line_id)
DEBUG:numba.core.ssa:on stmt: index = arg(7, name=index)
DEBUG:numba.core.ssa:on stmt: is_close_line = arg(8, name=is_close_line)
DEBUG:numba.core.ssa:on stmt: (self).r = r
DEBUG:numba.core.ssa:on stmt: (self).mu = mu
DEBUG:numba.core.ssa:on stmt: (self).nu = nu
DEBUG:numba.core.ssa:on stmt: (self).energy = energy
DEBUG:numba.core.ssa:on stmt: (self).current_shell_id = current_shell_id
DEBUG:numba.core.ssa:on stmt: (self).next_line_id = next_line_id
DEBUG:numba.core.ssa:on stmt: $38load_global.12 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.13 = getattr(value=$38load_global.12, attr=IN_PROCESS)
DEBUG:numba.core.ssa:on stmt: (self).status = $40load_attr.13
DEBUG:numba.core.ssa:on stmt: (self).index = index
DEBUG:numba.core.ssa:on stmt: (self).is_close_line = is_close_line
DEBUG:numba.core.ssa:on stmt: $const58.19 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $60return_value.20 = cast(value=$const58.19)
DEBUG:numba.core.ssa:on stmt: return $60return_value.20
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$38load_global.12': [<numba.core.ir.Assign object at 0x7f6e45de2f50>],
             '$40load_attr.13': [<numba.core.ir.Assign object at 0x7f6e45de2dd0>],
             '$60return_value.20': [<numba.core.ir.Assign object at 0x7f6e45f06bd0>],
             '$const58.19': [<numba.core.ir.Assign object at 0x7f6e46234510>],
             'current_shell_id': [<numba.core.ir.Assign object at 0x7f6e461f7350>],
             'energy': [<numba.core.ir.Assign object at 0x7f6e461f7e90>],
             'index': [<numba.core.ir.Assign object at 0x7f6e45ddaed0>],
             'is_close_line': [<numba.core.ir.Assign object at 0x7f6e45dda590>],
             'mu': [<numba.core.ir.Assign object at 0x7f6e461f7f90>],
             'next_line_id': [<numba.core.ir.Assign object at 0x7f6e461f7390>],
             'nu': [<numba.core.ir.Assign object at 0x7f6e461f7c90>],
             'r': [<numba.core.ir.Assign object at 0x7f6e461f7a50>],
             'self': [<numba.core.ir.Assign object at 0x7f6e461f77d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=622)
           2	LOAD_GLOBAL(arg=0, lineno=622)
           4	LOAD_FAST(arg=3, lineno=623)
           6	LOAD_ATTR(arg=1, lineno=623)
           8	LOAD_FAST(arg=1, lineno=623)
          10	BINARY_SUBSCR(arg=None, lineno=623)
          12	LOAD_FAST(arg=2, lineno=623)
          14	BINARY_SUBTRACT(arg=None, lineno=623)
          16	CALL_FUNCTION(arg=1, lineno=623)
          18	LOAD_FAST(arg=2, lineno=624)
          20	LOAD_GLOBAL(arg=2, lineno=624)
          22	BINARY_MULTIPLY(arg=None, lineno=624)
          24	COMPARE_OP(arg=0, lineno=624)
          26	LOAD_FAST(arg=0, lineno=624)
          28	STORE_ATTR(arg=3, lineno=624)
          30	LOAD_CONST(arg=0, lineno=624)
          32	RETURN_VALUE(arg=None, lineno=624)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=622)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=622)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=3, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$numba_plasma4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$line_id8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$10binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_SUBTRACT(arg=None, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$10binary_subscr.4', '$nu_line12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$14binary_subtract.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=624)
DEBUG:numba.core.byteflow:stack ['$16call_function.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=624)
DEBUG:numba.core.byteflow:stack ['$16call_function.7', '$nu_line18.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_MULTIPLY(arg=None, lineno=624)
DEBUG:numba.core.byteflow:stack ['$16call_function.7', '$nu_line18.8', '$20load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=624)
DEBUG:numba.core.byteflow:stack ['$16call_function.7', '$22binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=624)
DEBUG:numba.core.byteflow:stack ['$24compare_op.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_ATTR(arg=3, lineno=624)
DEBUG:numba.core.byteflow:stack ['$24compare_op.11', '$r_packet26.12']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=0, lineno=624)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=624)
DEBUG:numba.core.byteflow:stack ['$const30.13']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$numba_plasma4.1'}), (6, {'item': '$numba_plasma4.1', 'res': '$6load_attr.2'}), (8, {'res': '$line_id8.3'}), (10, {'index': '$line_id8.3', 'target': '$6load_attr.2', 'res': '$10binary_subscr.4'}), (12, {'res': '$nu_line12.5'}), (14, {'lhs': '$10binary_subscr.4', 'rhs': '$nu_line12.5', 'res': '$14binary_subtract.6'}), (16, {'func': '$2load_global.0', 'args': ['$14binary_subtract.6'], 'res': '$16call_function.7'}), (18, {'res': '$nu_line18.8'}), (20, {'res': '$20load_global.9'}), (22, {'lhs': '$nu_line18.8', 'rhs': '$20load_global.9', 'res': '$22binary_multiply.10'}), (24, {'lhs': '$16call_function.7', 'rhs': '$22binary_multiply.10', 'res': '$24compare_op.11'}), (26, {'res': '$r_packet26.12'}), (28, {'target': '$r_packet26.12', 'value': '$24compare_op.11'}), (30, {'res': '$const30.13'}), (32, {'retval': '$const30.13', 'castval': '$32return_value.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    line_id = arg(1, name=line_id)           ['line_id']
    nu_line = arg(2, name=nu_line)           ['nu_line']
    numba_plasma = arg(3, name=numba_plasma) ['numba_plasma']
    $2load_global.0 = global(abs: <built-in function abs>) ['$2load_global.0']
    $6load_attr.2 = getattr(value=numba_plasma, attr=line_list_nu) ['$6load_attr.2', 'numba_plasma']
    $10binary_subscr.4 = getitem(value=$6load_attr.2, index=line_id) ['$10binary_subscr.4', '$6load_attr.2', 'line_id']
    $14binary_subtract.6 = $10binary_subscr.4 - nu_line ['$10binary_subscr.4', '$14binary_subtract.6', 'nu_line']
    $16call_function.7 = call $2load_global.0($14binary_subtract.6, func=$2load_global.0, args=[Var($14binary_subtract.6, r_packet.py:623)], kws=(), vararg=None) ['$14binary_subtract.6', '$16call_function.7', '$2load_global.0']
    $20load_global.9 = global(CLOSE_LINE_THRESHOLD: 1e-07) ['$20load_global.9']
    $22binary_multiply.10 = nu_line * $20load_global.9 ['$20load_global.9', '$22binary_multiply.10', 'nu_line']
    $24compare_op.11 = $16call_function.7 < $22binary_multiply.10 ['$16call_function.7', '$22binary_multiply.10', '$24compare_op.11']
    (r_packet).is_close_line = $24compare_op.11 ['$24compare_op.11', 'r_packet']
    $const30.13 = const(NoneType, None)      ['$const30.13']
    $32return_value.14 = cast(value=$const30.13) ['$32return_value.14', '$const30.13']
    return $32return_value.14                ['$32return_value.14']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4645fe90>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: line_id = arg(1, name=line_id)
DEBUG:numba.core.ssa:on stmt: nu_line = arg(2, name=nu_line)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(abs: <built-in function abs>)
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$6load_attr.2, index=line_id)
DEBUG:numba.core.ssa:on stmt: $14binary_subtract.6 = $10binary_subscr.4 - nu_line
DEBUG:numba.core.ssa:on stmt: $16call_function.7 = call $2load_global.0($14binary_subtract.6, func=$2load_global.0, args=[Var($14binary_subtract.6, r_packet.py:623)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(CLOSE_LINE_THRESHOLD: 1e-07)
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.10 = nu_line * $20load_global.9
DEBUG:numba.core.ssa:on stmt: $24compare_op.11 = $16call_function.7 < $22binary_multiply.10
DEBUG:numba.core.ssa:on stmt: (r_packet).is_close_line = $24compare_op.11
DEBUG:numba.core.ssa:on stmt: $const30.13 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $32return_value.14 = cast(value=$const30.13)
DEBUG:numba.core.ssa:on stmt: return $32return_value.14
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e46525e90>],
             '$14binary_subtract.6': [<numba.core.ir.Assign object at 0x7f6e46525490>],
             '$16call_function.7': [<numba.core.ir.Assign object at 0x7f6e46525b50>],
             '$20load_global.9': [<numba.core.ir.Assign object at 0x7f6e46525bd0>],
             '$22binary_multiply.10': [<numba.core.ir.Assign object at 0x7f6e46525d10>],
             '$24compare_op.11': [<numba.core.ir.Assign object at 0x7f6e46525590>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e45cf6bd0>],
             '$32return_value.14': [<numba.core.ir.Assign object at 0x7f6e46525810>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7f6e46525c90>],
             '$const30.13': [<numba.core.ir.Assign object at 0x7f6e465252d0>],
             'line_id': [<numba.core.ir.Assign object at 0x7f6e468f8cd0>],
             'nu_line': [<numba.core.ir.Assign object at 0x7f6e468f8e90>],
             'numba_plasma': [<numba.core.ir.Assign object at 0x7f6e45cf60d0>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e468f8d50>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=152)
           2	LOAD_CONST(arg=1, lineno=152)
           4	STORE_FAST(arg=3, lineno=152)
           6	SETUP_LOOP(arg=212, lineno=153)
>          8	LOAD_GLOBAL(arg=0, lineno=158)
          10	LOAD_FAST(arg=0, lineno=158)
          12	LOAD_FAST(arg=1, lineno=158)
          14	LOAD_FAST(arg=2, lineno=158)
          16	CALL_FUNCTION(arg=3, lineno=158)
          18	UNPACK_SEQUENCE(arg=3, lineno=158)
          20	STORE_FAST(arg=4, lineno=158)
          22	STORE_FAST(arg=5, lineno=158)
          24	STORE_FAST(arg=6, lineno=158)
          26	LOAD_FAST(arg=3, lineno=159)
          28	LOAD_FAST(arg=4, lineno=159)
          30	INPLACE_ADD(arg=None, lineno=159)
          32	STORE_FAST(arg=3, lineno=159)
          34	LOAD_GLOBAL(arg=1, lineno=161)
          36	LOAD_FAST(arg=0, lineno=162)
          38	LOAD_FAST(arg=6, lineno=162)
          40	LOAD_GLOBAL(arg=2, lineno=162)
          42	LOAD_FAST(arg=1, lineno=162)
          44	LOAD_ATTR(arg=3, lineno=162)
          46	CALL_FUNCTION(arg=1, lineno=162)
          48	CALL_FUNCTION(arg=3, lineno=162)
          50	POP_TOP(arg=None, lineno=162)
          52	LOAD_FAST(arg=3, lineno=165)
          54	LOAD_GLOBAL(arg=4, lineno=165)
          56	LOAD_ATTR(arg=5, lineno=165)
          58	COMPARE_OP(arg=4, lineno=165)
          60	POP_JUMP_IF_FALSE(arg=128, lineno=165)
          62	LOAD_GLOBAL(arg=6, lineno=166)
          64	LOAD_ATTR(arg=7, lineno=166)
          66	LOAD_METHOD(arg=7, lineno=166)
          68	CALL_METHOD(arg=0, lineno=166)
          70	STORE_FAST(arg=7, lineno=166)
          72	LOAD_FAST(arg=7, lineno=167)
          74	LOAD_GLOBAL(arg=4, lineno=167)
          76	LOAD_ATTR(arg=8, lineno=167)
          78	COMPARE_OP(arg=4, lineno=167)
          80	POP_JUMP_IF_FALSE(arg=98, lineno=167)
          82	LOAD_CONST(arg=1, lineno=168)
          84	LOAD_FAST(arg=0, lineno=168)
          86	STORE_ATTR(arg=9, lineno=168)
          88	LOAD_GLOBAL(arg=10, lineno=169)
          90	LOAD_ATTR(arg=11, lineno=169)
          92	LOAD_FAST(arg=0, lineno=169)
          94	STORE_ATTR(arg=12, lineno=169)
          96	JUMP_FORWARD(arg=30, lineno=169)
>         98	LOAD_FAST(arg=0, lineno=174)
         100	LOAD_ATTR(arg=9, lineno=174)
         102	LOAD_GLOBAL(arg=4, lineno=174)
         104	LOAD_ATTR(arg=8, lineno=174)
         106	BINARY_TRUE_DIVIDE(arg=None, lineno=174)
         108	LOAD_GLOBAL(arg=13, lineno=174)
         110	LOAD_METHOD(arg=14, lineno=174)
         112	LOAD_FAST(arg=3, lineno=174)
         114	UNARY_NEGATIVE(arg=None, lineno=174)
         116	CALL_METHOD(arg=1, lineno=174)
         118	BINARY_MULTIPLY(arg=None, lineno=174)
         120	LOAD_FAST(arg=0, lineno=174)
         122	STORE_ATTR(arg=9, lineno=174)
         124	LOAD_CONST(arg=1, lineno=176)
         126	STORE_FAST(arg=3, lineno=176)
>        128	LOAD_GLOBAL(arg=13, lineno=179)
         130	LOAD_METHOD(arg=15, lineno=179)
         132	LOAD_FAST(arg=0, lineno=182)
         134	LOAD_ATTR(arg=16, lineno=182)
         136	LOAD_FAST(arg=0, lineno=182)
         138	LOAD_ATTR(arg=16, lineno=182)
         140	BINARY_MULTIPLY(arg=None, lineno=182)
         142	LOAD_FAST(arg=5, lineno=182)
         144	LOAD_FAST(arg=5, lineno=182)
         146	BINARY_MULTIPLY(arg=None, lineno=182)
         148	BINARY_ADD(arg=None, lineno=182)
         150	LOAD_CONST(arg=2, lineno=182)
         152	LOAD_FAST(arg=0, lineno=182)
         154	LOAD_ATTR(arg=16, lineno=182)
         156	BINARY_MULTIPLY(arg=None, lineno=182)
         158	LOAD_FAST(arg=5, lineno=182)
         160	BINARY_MULTIPLY(arg=None, lineno=182)
         162	LOAD_FAST(arg=0, lineno=182)
         164	LOAD_ATTR(arg=17, lineno=182)
         166	BINARY_MULTIPLY(arg=None, lineno=182)
         168	BINARY_ADD(arg=None, lineno=182)
         170	CALL_METHOD(arg=1, lineno=182)
         172	STORE_FAST(arg=8, lineno=182)
         174	LOAD_FAST(arg=0, lineno=184)
         176	LOAD_ATTR(arg=17, lineno=184)
         178	LOAD_FAST(arg=0, lineno=184)
         180	LOAD_ATTR(arg=16, lineno=184)
         182	BINARY_MULTIPLY(arg=None, lineno=184)
         184	LOAD_FAST(arg=5, lineno=184)
         186	BINARY_ADD(arg=None, lineno=184)
         188	LOAD_FAST(arg=8, lineno=184)
         190	BINARY_TRUE_DIVIDE(arg=None, lineno=184)
         192	LOAD_FAST(arg=0, lineno=184)
         194	STORE_ATTR(arg=17, lineno=184)
         196	LOAD_FAST(arg=8, lineno=185)
         198	LOAD_FAST(arg=0, lineno=185)
         200	STORE_ATTR(arg=16, lineno=185)
         202	LOAD_FAST(arg=0, lineno=187)
         204	LOAD_ATTR(arg=12, lineno=187)
         206	LOAD_GLOBAL(arg=10, lineno=187)
         208	LOAD_ATTR(arg=11, lineno=187)
         210	COMPARE_OP(arg=2, lineno=187)
         212	POP_JUMP_IF_FALSE(arg=8, lineno=187)
         214	BREAK_LOOP(arg=None, lineno=188)
         216	JUMP_ABSOLUTE(arg=8, lineno=188)
         218	POP_BLOCK(arg=None, lineno=188)
>        220	LOAD_FAST(arg=3, lineno=189)
         222	RETURN_VALUE(arg=None, lineno=189)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=152)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=152)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=3, lineno=152)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=6, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=6 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=SETUP_LOOP(arg=212, lineno=153)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=8, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=8 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_GLOBAL(arg=0, lineno=158)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=158)
DEBUG:numba.core.byteflow:stack ['$8load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=158)
DEBUG:numba.core.byteflow:stack ['$8load_global.0', '$v_packet10.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=158)
DEBUG:numba.core.byteflow:stack ['$8load_global.0', '$v_packet10.1', '$numba_model12.2']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_FUNCTION(arg=3, lineno=158)
DEBUG:numba.core.byteflow:stack ['$8load_global.0', '$v_packet10.1', '$numba_model12.2', '$numba_plasma14.3']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=UNPACK_SEQUENCE(arg=3, lineno=158)
DEBUG:numba.core.byteflow:stack ['$16call_function.4']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=STORE_FAST(arg=4, lineno=158)
DEBUG:numba.core.byteflow:stack ['$18unpack_sequence.7', '$18unpack_sequence.6', '$18unpack_sequence.5']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=5, lineno=158)
DEBUG:numba.core.byteflow:stack ['$18unpack_sequence.7', '$18unpack_sequence.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_FAST(arg=6, lineno=158)
DEBUG:numba.core.byteflow:stack ['$18unpack_sequence.7']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=159)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=4, lineno=159)
DEBUG:numba.core.byteflow:stack ['$tau_trace_combined26.9']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=INPLACE_ADD(arg=None, lineno=159)
DEBUG:numba.core.byteflow:stack ['$tau_trace_combined26.9', '$tau_trace_combined_shell28.10']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=3, lineno=159)
DEBUG:numba.core.byteflow:stack ['$30inplace_add.11']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_GLOBAL(arg=1, lineno=161)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=162)
DEBUG:numba.core.byteflow:stack ['$34load_global.12']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=6, lineno=162)
DEBUG:numba.core.byteflow:stack ['$34load_global.12', '$v_packet36.13']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_GLOBAL(arg=2, lineno=162)
DEBUG:numba.core.byteflow:stack ['$34load_global.12', '$v_packet36.13', '$delta_shell38.14']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=162)
DEBUG:numba.core.byteflow:stack ['$34load_global.12', '$v_packet36.13', '$delta_shell38.14', '$40load_global.15']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_ATTR(arg=3, lineno=162)
DEBUG:numba.core.byteflow:stack ['$34load_global.12', '$v_packet36.13', '$delta_shell38.14', '$40load_global.15', '$numba_model42.16']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=CALL_FUNCTION(arg=1, lineno=162)
DEBUG:numba.core.byteflow:stack ['$34load_global.12', '$v_packet36.13', '$delta_shell38.14', '$40load_global.15', '$44load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=CALL_FUNCTION(arg=3, lineno=162)
DEBUG:numba.core.byteflow:stack ['$34load_global.12', '$v_packet36.13', '$delta_shell38.14', '$46call_function.18']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=POP_TOP(arg=None, lineno=162)
DEBUG:numba.core.byteflow:stack ['$48call_function.19']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=165)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=4, lineno=165)
DEBUG:numba.core.byteflow:stack ['$tau_trace_combined52.20']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_ATTR(arg=5, lineno=165)
DEBUG:numba.core.byteflow:stack ['$tau_trace_combined52.20', '$54load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=COMPARE_OP(arg=4, lineno=165)
DEBUG:numba.core.byteflow:stack ['$tau_trace_combined52.20', '$56load_attr.22']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=128, lineno=165)
DEBUG:numba.core.byteflow:stack ['$58compare_op.23']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=62, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=128, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_GLOBAL(arg=6, lineno=166)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_ATTR(arg=7, lineno=166)
DEBUG:numba.core.byteflow:stack ['$62load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_METHOD(arg=7, lineno=166)
DEBUG:numba.core.byteflow:stack ['$64load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=CALL_METHOD(arg=0, lineno=166)
DEBUG:numba.core.byteflow:stack ['$66load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=STORE_FAST(arg=7, lineno=166)
DEBUG:numba.core.byteflow:stack ['$68call_method.3']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=7, lineno=167)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_GLOBAL(arg=4, lineno=167)
DEBUG:numba.core.byteflow:stack ['$event_random72.4']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_ATTR(arg=8, lineno=167)
DEBUG:numba.core.byteflow:stack ['$event_random72.4', '$74load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=COMPARE_OP(arg=4, lineno=167)
DEBUG:numba.core.byteflow:stack ['$event_random72.4', '$76load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=98, lineno=167)
DEBUG:numba.core.byteflow:stack ['$78compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=82, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=98, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=128 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_GLOBAL(arg=13, lineno=179)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_METHOD(arg=15, lineno=179)
DEBUG:numba.core.byteflow:stack ['$128load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_FAST(arg=0, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_ATTR(arg=16, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$v_packet132.2']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=0, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$134load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_ATTR(arg=16, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$134load_attr.3', '$v_packet136.4']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=BINARY_MULTIPLY(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$134load_attr.3', '$138load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_FAST(arg=5, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$140binary_multiply.6']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=LOAD_FAST(arg=5, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$140binary_multiply.6', '$distance_boundary142.7']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=BINARY_MULTIPLY(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$140binary_multiply.6', '$distance_boundary142.7', '$distance_boundary144.8']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=BINARY_ADD(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$140binary_multiply.6', '$146binary_multiply.9']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_CONST(arg=2, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$148binary_add.10']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$148binary_add.10', '$const150.11']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_ATTR(arg=16, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$148binary_add.10', '$const150.11', '$v_packet152.12']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=BINARY_MULTIPLY(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$148binary_add.10', '$const150.11', '$154load_attr.13']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_FAST(arg=5, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$148binary_add.10', '$156binary_multiply.14']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=BINARY_MULTIPLY(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$148binary_add.10', '$156binary_multiply.14', '$distance_boundary158.15']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$148binary_add.10', '$160binary_multiply.16']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_ATTR(arg=17, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$148binary_add.10', '$160binary_multiply.16', '$v_packet162.17']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=BINARY_MULTIPLY(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$148binary_add.10', '$160binary_multiply.16', '$164load_attr.18']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=BINARY_ADD(arg=None, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$148binary_add.10', '$166binary_multiply.19']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=CALL_METHOD(arg=1, lineno=182)
DEBUG:numba.core.byteflow:stack ['$130load_method.1', '$168binary_add.20']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=STORE_FAST(arg=8, lineno=182)
DEBUG:numba.core.byteflow:stack ['$170call_method.21']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_FAST(arg=0, lineno=184)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_ATTR(arg=17, lineno=184)
DEBUG:numba.core.byteflow:stack ['$v_packet174.22']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=184)
DEBUG:numba.core.byteflow:stack ['$176load_attr.23']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_ATTR(arg=16, lineno=184)
DEBUG:numba.core.byteflow:stack ['$176load_attr.23', '$v_packet178.24']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=BINARY_MULTIPLY(arg=None, lineno=184)
DEBUG:numba.core.byteflow:stack ['$176load_attr.23', '$180load_attr.25']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=LOAD_FAST(arg=5, lineno=184)
DEBUG:numba.core.byteflow:stack ['$182binary_multiply.26']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=BINARY_ADD(arg=None, lineno=184)
DEBUG:numba.core.byteflow:stack ['$182binary_multiply.26', '$distance_boundary184.27']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=8, lineno=184)
DEBUG:numba.core.byteflow:stack ['$186binary_add.28']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=184)
DEBUG:numba.core.byteflow:stack ['$186binary_add.28', '$new_r188.29']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_FAST(arg=0, lineno=184)
DEBUG:numba.core.byteflow:stack ['$190binary_true_divide.30']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=STORE_ATTR(arg=17, lineno=184)
DEBUG:numba.core.byteflow:stack ['$190binary_true_divide.30', '$v_packet192.31']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=8, lineno=185)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=0, lineno=185)
DEBUG:numba.core.byteflow:stack ['$new_r196.32']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=STORE_ATTR(arg=16, lineno=185)
DEBUG:numba.core.byteflow:stack ['$new_r196.32', '$v_packet198.33']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=0, lineno=187)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=204, inst=LOAD_ATTR(arg=12, lineno=187)
DEBUG:numba.core.byteflow:stack ['$v_packet202.34']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_GLOBAL(arg=10, lineno=187)
DEBUG:numba.core.byteflow:stack ['$204load_attr.35']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_ATTR(arg=11, lineno=187)
DEBUG:numba.core.byteflow:stack ['$204load_attr.35', '$206load_global.36']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=COMPARE_OP(arg=2, lineno=187)
DEBUG:numba.core.byteflow:stack ['$204load_attr.35', '$208load_attr.37']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=POP_JUMP_IF_FALSE(arg=8, lineno=187)
DEBUG:numba.core.byteflow:stack ['$210compare_op.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=214, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=8, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=214 nstack_initial=0), State(pc_initial=8 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_CONST(arg=1, lineno=168)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=168)
DEBUG:numba.core.byteflow:stack ['$const82.0']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=STORE_ATTR(arg=9, lineno=168)
DEBUG:numba.core.byteflow:stack ['$const82.0', '$v_packet84.1']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_GLOBAL(arg=10, lineno=169)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_ATTR(arg=11, lineno=169)
DEBUG:numba.core.byteflow:stack ['$88load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=0, lineno=169)
DEBUG:numba.core.byteflow:stack ['$90load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=STORE_ATTR(arg=12, lineno=169)
DEBUG:numba.core.byteflow:stack ['$90load_attr.3', '$v_packet92.4']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=JUMP_FORWARD(arg=30, lineno=169)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=128, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=214 nstack_initial=0), State(pc_initial=8 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=174)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_ATTR(arg=9, lineno=174)
DEBUG:numba.core.byteflow:stack ['$v_packet98.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_GLOBAL(arg=4, lineno=174)
DEBUG:numba.core.byteflow:stack ['$100load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_ATTR(arg=8, lineno=174)
DEBUG:numba.core.byteflow:stack ['$100load_attr.1', '$102load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=174)
DEBUG:numba.core.byteflow:stack ['$100load_attr.1', '$104load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_GLOBAL(arg=13, lineno=174)
DEBUG:numba.core.byteflow:stack ['$106binary_true_divide.4']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_METHOD(arg=14, lineno=174)
DEBUG:numba.core.byteflow:stack ['$106binary_true_divide.4', '$108load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=3, lineno=174)
DEBUG:numba.core.byteflow:stack ['$106binary_true_divide.4', '$110load_method.6']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=UNARY_NEGATIVE(arg=None, lineno=174)
DEBUG:numba.core.byteflow:stack ['$106binary_true_divide.4', '$110load_method.6', '$tau_trace_combined112.7']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=174)
DEBUG:numba.core.byteflow:stack ['$106binary_true_divide.4', '$110load_method.6', '$114unary_negative.8']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=BINARY_MULTIPLY(arg=None, lineno=174)
DEBUG:numba.core.byteflow:stack ['$106binary_true_divide.4', '$116call_method.9']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=0, lineno=174)
DEBUG:numba.core.byteflow:stack ['$118binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=STORE_ATTR(arg=9, lineno=174)
DEBUG:numba.core.byteflow:stack ['$118binary_multiply.10', '$v_packet120.11']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_CONST(arg=1, lineno=176)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=STORE_FAST(arg=3, lineno=176)
DEBUG:numba.core.byteflow:stack ['$const124.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=128, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=214 nstack_initial=0), State(pc_initial=8 nstack_initial=0), State(pc_initial=128 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=214, inst=BREAK_LOOP(arg=None, lineno=188)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=220, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=8 nstack_initial=0), State(pc_initial=128 nstack_initial=0), State(pc_initial=128 nstack_initial=0), State(pc_initial=220 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=128 nstack_initial=0), State(pc_initial=128 nstack_initial=0), State(pc_initial=220 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=128 nstack_initial=0), State(pc_initial=220 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=220 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=3, lineno=189)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=222, inst=RETURN_VALUE(arg=None, lineno=189)
DEBUG:numba.core.byteflow:stack ['$tau_trace_combined220.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=6 nstack_initial=0): set(),
             State(pc_initial=8 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=128 nstack_initial=0): set(),
             State(pc_initial=214 nstack_initial=0): set(),
             State(pc_initial=220 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'value': '$const2.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={6: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=6 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={8: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=8 nstack_initial=0):
AdaptBlockInfo(insts=((8, {'res': '$8load_global.0'}), (10, {'res': '$v_packet10.1'}), (12, {'res': '$numba_model12.2'}), (14, {'res': '$numba_plasma14.3'}), (16, {'func': '$8load_global.0', 'args': ['$v_packet10.1', '$numba_model12.2', '$numba_plasma14.3'], 'res': '$16call_function.4'}), (18, {'iterable': '$16call_function.4', 'stores': ['$18unpack_sequence.5', '$18unpack_sequence.6', '$18unpack_sequence.7'], 'tupleobj': '$18unpack_sequence.8'}), (20, {'value': '$18unpack_sequence.5'}), (22, {'value': '$18unpack_sequence.6'}), (24, {'value': '$18unpack_sequence.7'}), (26, {'res': '$tau_trace_combined26.9'}), (28, {'res': '$tau_trace_combined_shell28.10'}), (30, {'lhs': '$tau_trace_combined26.9', 'rhs': '$tau_trace_combined_shell28.10', 'res': '$30inplace_add.11'}), (32, {'value': '$30inplace_add.11'}), (34, {'res': '$34load_global.12'}), (36, {'res': '$v_packet36.13'}), (38, {'res': '$delta_shell38.14'}), (40, {'res': '$40load_global.15'}), (42, {'res': '$numba_model42.16'}), (44, {'item': '$numba_model42.16', 'res': '$44load_attr.17'}), (46, {'func': '$40load_global.15', 'args': ['$44load_attr.17'], 'res': '$46call_function.18'}), (48, {'func': '$34load_global.12', 'args': ['$v_packet36.13', '$delta_shell38.14', '$46call_function.18'], 'res': '$48call_function.19'}), (52, {'res': '$tau_trace_combined52.20'}), (54, {'res': '$54load_global.21'}), (56, {'item': '$54load_global.21', 'res': '$56load_attr.22'}), (58, {'lhs': '$tau_trace_combined52.20', 'rhs': '$56load_attr.22', 'res': '$58compare_op.23'}), (60, {'pred': '$58compare_op.23'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={62: (), 128: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$62load_global.0'}), (64, {'item': '$62load_global.0', 'res': '$64load_attr.1'}), (66, {'item': '$64load_attr.1', 'res': '$66load_method.2'}), (68, {'func': '$66load_method.2', 'args': [], 'res': '$68call_method.3'}), (70, {'value': '$68call_method.3'}), (72, {'res': '$event_random72.4'}), (74, {'res': '$74load_global.5'}), (76, {'item': '$74load_global.5', 'res': '$76load_attr.6'}), (78, {'lhs': '$event_random72.4', 'rhs': '$76load_attr.6', 'res': '$78compare_op.7'}), (80, {'pred': '$78compare_op.7'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={82: (), 98: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$const82.0'}), (84, {'res': '$v_packet84.1'}), (86, {'target': '$v_packet84.1', 'value': '$const82.0'}), (88, {'res': '$88load_global.2'}), (90, {'item': '$88load_global.2', 'res': '$90load_attr.3'}), (92, {'res': '$v_packet92.4'}), (94, {'target': '$v_packet92.4', 'value': '$90load_attr.3'}), (96, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={128: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$v_packet98.0'}), (100, {'item': '$v_packet98.0', 'res': '$100load_attr.1'}), (102, {'res': '$102load_global.2'}), (104, {'item': '$102load_global.2', 'res': '$104load_attr.3'}), (106, {'lhs': '$100load_attr.1', 'rhs': '$104load_attr.3', 'res': '$106binary_true_divide.4'}), (108, {'res': '$108load_global.5'}), (110, {'item': '$108load_global.5', 'res': '$110load_method.6'}), (112, {'res': '$tau_trace_combined112.7'}), (114, {'value': '$tau_trace_combined112.7', 'res': '$114unary_negative.8'}), (116, {'func': '$110load_method.6', 'args': ['$114unary_negative.8'], 'res': '$116call_method.9'}), (118, {'lhs': '$106binary_true_divide.4', 'rhs': '$116call_method.9', 'res': '$118binary_multiply.10'}), (120, {'res': '$v_packet120.11'}), (122, {'target': '$v_packet120.11', 'value': '$118binary_multiply.10'}), (124, {'res': '$const124.12'}), (126, {'value': '$const124.12'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={128: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=128 nstack_initial=0):
AdaptBlockInfo(insts=((128, {'res': '$128load_global.0'}), (130, {'item': '$128load_global.0', 'res': '$130load_method.1'}), (132, {'res': '$v_packet132.2'}), (134, {'item': '$v_packet132.2', 'res': '$134load_attr.3'}), (136, {'res': '$v_packet136.4'}), (138, {'item': '$v_packet136.4', 'res': '$138load_attr.5'}), (140, {'lhs': '$134load_attr.3', 'rhs': '$138load_attr.5', 'res': '$140binary_multiply.6'}), (142, {'res': '$distance_boundary142.7'}), (144, {'res': '$distance_boundary144.8'}), (146, {'lhs': '$distance_boundary142.7', 'rhs': '$distance_boundary144.8', 'res': '$146binary_multiply.9'}), (148, {'lhs': '$140binary_multiply.6', 'rhs': '$146binary_multiply.9', 'res': '$148binary_add.10'}), (150, {'res': '$const150.11'}), (152, {'res': '$v_packet152.12'}), (154, {'item': '$v_packet152.12', 'res': '$154load_attr.13'}), (156, {'lhs': '$const150.11', 'rhs': '$154load_attr.13', 'res': '$156binary_multiply.14'}), (158, {'res': '$distance_boundary158.15'}), (160, {'lhs': '$156binary_multiply.14', 'rhs': '$distance_boundary158.15', 'res': '$160binary_multiply.16'}), (162, {'res': '$v_packet162.17'}), (164, {'item': '$v_packet162.17', 'res': '$164load_attr.18'}), (166, {'lhs': '$160binary_multiply.16', 'rhs': '$164load_attr.18', 'res': '$166binary_multiply.19'}), (168, {'lhs': '$148binary_add.10', 'rhs': '$166binary_multiply.19', 'res': '$168binary_add.20'}), (170, {'func': '$130load_method.1', 'args': ['$168binary_add.20'], 'res': '$170call_method.21'}), (172, {'value': '$170call_method.21'}), (174, {'res': '$v_packet174.22'}), (176, {'item': '$v_packet174.22', 'res': '$176load_attr.23'}), (178, {'res': '$v_packet178.24'}), (180, {'item': '$v_packet178.24', 'res': '$180load_attr.25'}), (182, {'lhs': '$176load_attr.23', 'rhs': '$180load_attr.25', 'res': '$182binary_multiply.26'}), (184, {'res': '$distance_boundary184.27'}), (186, {'lhs': '$182binary_multiply.26', 'rhs': '$distance_boundary184.27', 'res': '$186binary_add.28'}), (188, {'res': '$new_r188.29'}), (190, {'lhs': '$186binary_add.28', 'rhs': '$new_r188.29', 'res': '$190binary_true_divide.30'}), (192, {'res': '$v_packet192.31'}), (194, {'target': '$v_packet192.31', 'value': '$190binary_true_divide.30'}), (196, {'res': '$new_r196.32'}), (198, {'res': '$v_packet198.33'}), (200, {'target': '$v_packet198.33', 'value': '$new_r196.32'}), (202, {'res': '$v_packet202.34'}), (204, {'item': '$v_packet202.34', 'res': '$204load_attr.35'}), (206, {'res': '$206load_global.36'}), (208, {'item': '$206load_global.36', 'res': '$208load_attr.37'}), (210, {'lhs': '$204load_attr.35', 'rhs': '$208load_attr.37', 'res': '$210compare_op.38'}), (212, {'pred': '$210compare_op.38'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={214: (), 8: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=214 nstack_initial=0):
AdaptBlockInfo(insts=((214, {'end': 220}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 220, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={220: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=220 nstack_initial=0):
AdaptBlockInfo(insts=((220, {'res': '$tau_trace_combined220.0'}), (222, {'retval': '$tau_trace_combined220.0', 'castval': '$222return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    v_packet = arg(0, name=v_packet)         ['v_packet']
    numba_model = arg(1, name=numba_model)   ['numba_model']
    numba_plasma = arg(2, name=numba_plasma) ['numba_plasma']
    $const2.0 = const(float, 0.0)            ['$const2.0']
    tau_trace_combined = $const2.0           ['$const2.0', 'tau_trace_combined']
    jump 6                                   []
label 6:
    jump 8                                   []
label 8:
    $8load_global.0 = global(trace_vpacket_within_shell: CPUDispatcher(<function trace_vpacket_within_shell at 0x7f6e4a0be200>)) ['$8load_global.0']
    $16call_function.4 = call $8load_global.0(v_packet, numba_model, numba_plasma, func=$8load_global.0, args=[Var(v_packet, vpacket.py:152), Var(numba_model, vpacket.py:152), Var(numba_plasma, vpacket.py:152)], kws=(), vararg=None) ['$16call_function.4', '$8load_global.0', 'numba_model', 'numba_plasma', 'v_packet']
    $18unpack_sequence.8 = exhaust_iter(value=$16call_function.4, count=3) ['$16call_function.4', '$18unpack_sequence.8']
    $18unpack_sequence.5 = static_getitem(value=$18unpack_sequence.8, index=0, index_var=None) ['$18unpack_sequence.5', '$18unpack_sequence.8']
    $18unpack_sequence.6 = static_getitem(value=$18unpack_sequence.8, index=1, index_var=None) ['$18unpack_sequence.6', '$18unpack_sequence.8']
    $18unpack_sequence.7 = static_getitem(value=$18unpack_sequence.8, index=2, index_var=None) ['$18unpack_sequence.7', '$18unpack_sequence.8']
    tau_trace_combined_shell = $18unpack_sequence.5 ['$18unpack_sequence.5', 'tau_trace_combined_shell']
    distance_boundary = $18unpack_sequence.6 ['$18unpack_sequence.6', 'distance_boundary']
    delta_shell = $18unpack_sequence.7       ['$18unpack_sequence.7', 'delta_shell']
    $30inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_combined_shell, static_lhs=Undefined, static_rhs=Undefined) ['$30inplace_add.11', 'tau_trace_combined', 'tau_trace_combined_shell']
    tau_trace_combined = $30inplace_add.11   ['$30inplace_add.11', 'tau_trace_combined']
    $34load_global.12 = global(move_packet_across_shell_boundary: CPUDispatcher(<function move_packet_across_shell_boundary at 0x7f6e4a0ffef0>)) ['$34load_global.12']
    $40load_global.15 = global(len: <built-in function len>) ['$40load_global.15']
    $44load_attr.17 = getattr(value=numba_model, attr=r_inner) ['$44load_attr.17', 'numba_model']
    $46call_function.18 = call $40load_global.15($44load_attr.17, func=$40load_global.15, args=[Var($44load_attr.17, vpacket.py:162)], kws=(), vararg=None) ['$40load_global.15', '$44load_attr.17', '$46call_function.18']
    $48call_function.19 = call $34load_global.12(v_packet, delta_shell, $46call_function.18, func=$34load_global.12, args=[Var(v_packet, vpacket.py:152), Var(delta_shell, vpacket.py:158), Var($46call_function.18, vpacket.py:162)], kws=(), vararg=None) ['$34load_global.12', '$46call_function.18', '$48call_function.19', 'delta_shell', 'v_packet']
    $54load_global.21 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$54load_global.21']
    $56load_attr.22 = getattr(value=$54load_global.21, attr=tau_russian) ['$54load_global.21', '$56load_attr.22']
    $58compare_op.23 = tau_trace_combined > $56load_attr.22 ['$56load_attr.22', '$58compare_op.23', 'tau_trace_combined']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.23, func=bool60, args=(Var($58compare_op.23, vpacket.py:165),), kws=(), vararg=None) ['$58compare_op.23', '$60pred', 'bool60']
    branch $60pred, 62, 128                  ['$60pred']
label 62:
    $62load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$62load_global.0']
    $64load_attr.1 = getattr(value=$62load_global.0, attr=random) ['$62load_global.0', '$64load_attr.1']
    $66load_method.2 = getattr(value=$64load_attr.1, attr=random) ['$64load_attr.1', '$66load_method.2']
    $68call_method.3 = call $66load_method.2(func=$66load_method.2, args=[], kws=(), vararg=None) ['$66load_method.2', '$68call_method.3']
    event_random = $68call_method.3          ['$68call_method.3', 'event_random']
    $74load_global.5 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$74load_global.5']
    $76load_attr.6 = getattr(value=$74load_global.5, attr=survival_probability) ['$74load_global.5', '$76load_attr.6']
    $78compare_op.7 = event_random > $76load_attr.6 ['$76load_attr.6', '$78compare_op.7', 'event_random']
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80($78compare_op.7, func=bool80, args=(Var($78compare_op.7, vpacket.py:167),), kws=(), vararg=None) ['$78compare_op.7', '$80pred', 'bool80']
    branch $80pred, 82, 98                   ['$80pred']
label 82:
    $const82.0 = const(float, 0.0)           ['$const82.0']
    (v_packet).energy = $const82.0           ['$const82.0', 'v_packet']
    $88load_global.2 = global(PacketStatus: <enum 'PacketStatus'>) ['$88load_global.2']
    $90load_attr.3 = getattr(value=$88load_global.2, attr=EMITTED) ['$88load_global.2', '$90load_attr.3']
    (v_packet).status = $90load_attr.3       ['$90load_attr.3', 'v_packet']
    jump 128                                 []
label 98:
    $100load_attr.1 = getattr(value=v_packet, attr=energy) ['$100load_attr.1', 'v_packet']
    $102load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$102load_global.2']
    $104load_attr.3 = getattr(value=$102load_global.2, attr=survival_probability) ['$102load_global.2', '$104load_attr.3']
    $106binary_true_divide.4 = $100load_attr.1 / $104load_attr.3 ['$100load_attr.1', '$104load_attr.3', '$106binary_true_divide.4']
    $108load_global.5 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>) ['$108load_global.5']
    $110load_method.6 = getattr(value=$108load_global.5, attr=exp) ['$108load_global.5', '$110load_method.6']
    $114unary_negative.8 = unary(fn=<built-in function neg>, value=tau_trace_combined) ['$114unary_negative.8', 'tau_trace_combined']
    $116call_method.9 = call $110load_method.6($114unary_negative.8, func=$110load_method.6, args=[Var($114unary_negative.8, vpacket.py:174)], kws=(), vararg=None) ['$110load_method.6', '$114unary_negative.8', '$116call_method.9']
    $118binary_multiply.10 = $106binary_true_divide.4 * $116call_method.9 ['$106binary_true_divide.4', '$116call_method.9', '$118binary_multiply.10']
    (v_packet).energy = $118binary_multiply.10 ['$118binary_multiply.10', 'v_packet']
    $const124.12 = const(float, 0.0)         ['$const124.12']
    tau_trace_combined = $const124.12        ['$const124.12', 'tau_trace_combined']
    jump 128                                 []
label 128:
    $128load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>) ['$128load_global.0']
    $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt) ['$128load_global.0', '$130load_method.1']
    $134load_attr.3 = getattr(value=v_packet, attr=r) ['$134load_attr.3', 'v_packet']
    $138load_attr.5 = getattr(value=v_packet, attr=r) ['$138load_attr.5', 'v_packet']
    $140binary_multiply.6 = $134load_attr.3 * $138load_attr.5 ['$134load_attr.3', '$138load_attr.5', '$140binary_multiply.6']
    $146binary_multiply.9 = distance_boundary * distance_boundary ['$146binary_multiply.9', 'distance_boundary', 'distance_boundary']
    $148binary_add.10 = $140binary_multiply.6 + $146binary_multiply.9 ['$140binary_multiply.6', '$146binary_multiply.9', '$148binary_add.10']
    $const150.11 = const(float, 2.0)         ['$const150.11']
    $154load_attr.13 = getattr(value=v_packet, attr=r) ['$154load_attr.13', 'v_packet']
    $156binary_multiply.14 = $const150.11 * $154load_attr.13 ['$154load_attr.13', '$156binary_multiply.14', '$const150.11']
    $160binary_multiply.16 = $156binary_multiply.14 * distance_boundary ['$156binary_multiply.14', '$160binary_multiply.16', 'distance_boundary']
    $164load_attr.18 = getattr(value=v_packet, attr=mu) ['$164load_attr.18', 'v_packet']
    $166binary_multiply.19 = $160binary_multiply.16 * $164load_attr.18 ['$160binary_multiply.16', '$164load_attr.18', '$166binary_multiply.19']
    $168binary_add.20 = $148binary_add.10 + $166binary_multiply.19 ['$148binary_add.10', '$166binary_multiply.19', '$168binary_add.20']
    $170call_method.21 = call $130load_method.1($168binary_add.20, func=$130load_method.1, args=[Var($168binary_add.20, vpacket.py:182)], kws=(), vararg=None) ['$130load_method.1', '$168binary_add.20', '$170call_method.21']
    new_r = $170call_method.21               ['$170call_method.21', 'new_r']
    $176load_attr.23 = getattr(value=v_packet, attr=mu) ['$176load_attr.23', 'v_packet']
    $180load_attr.25 = getattr(value=v_packet, attr=r) ['$180load_attr.25', 'v_packet']
    $182binary_multiply.26 = $176load_attr.23 * $180load_attr.25 ['$176load_attr.23', '$180load_attr.25', '$182binary_multiply.26']
    $186binary_add.28 = $182binary_multiply.26 + distance_boundary ['$182binary_multiply.26', '$186binary_add.28', 'distance_boundary']
    $190binary_true_divide.30 = $186binary_add.28 / new_r ['$186binary_add.28', '$190binary_true_divide.30', 'new_r']
    (v_packet).mu = $190binary_true_divide.30 ['$190binary_true_divide.30', 'v_packet']
    (v_packet).r = new_r                     ['new_r', 'v_packet']
    $204load_attr.35 = getattr(value=v_packet, attr=status) ['$204load_attr.35', 'v_packet']
    $206load_global.36 = global(PacketStatus: <enum 'PacketStatus'>) ['$206load_global.36']
    $208load_attr.37 = getattr(value=$206load_global.36, attr=EMITTED) ['$206load_global.36', '$208load_attr.37']
    $210compare_op.38 = $204load_attr.35 == $208load_attr.37 ['$204load_attr.35', '$208load_attr.37', '$210compare_op.38']
    bool212 = global(bool: <class 'bool'>)   ['bool212']
    $212pred = call bool212($210compare_op.38, func=bool212, args=(Var($210compare_op.38, vpacket.py:187),), kws=(), vararg=None) ['$210compare_op.38', '$212pred', 'bool212']
    branch $212pred, 214, 8                  ['$212pred']
label 214:
    jump 220                                 []
label 220:
    $222return_value.1 = cast(value=tau_trace_combined) ['$222return_value.1', 'tau_trace_combined']
    return $222return_value.1                ['$222return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461b1610>
DEBUG:numba.core.ssa:on stmt: v_packet = arg(0, name=v_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $const2.0
DEBUG:numba.core.ssa:on stmt: jump 6
DEBUG:numba.core.ssa:==== SSA block analysis pass on 6
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461b1610>
DEBUG:numba.core.ssa:on stmt: jump 8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 8
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461b1610>
DEBUG:numba.core.ssa:on stmt: $8load_global.0 = global(trace_vpacket_within_shell: CPUDispatcher(<function trace_vpacket_within_shell at 0x7f6e4a0be200>))
DEBUG:numba.core.ssa:on stmt: $16call_function.4 = call $8load_global.0(v_packet, numba_model, numba_plasma, func=$8load_global.0, args=[Var(v_packet, vpacket.py:152), Var(numba_model, vpacket.py:152), Var(numba_plasma, vpacket.py:152)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $18unpack_sequence.8 = exhaust_iter(value=$16call_function.4, count=3)
DEBUG:numba.core.ssa:on stmt: $18unpack_sequence.5 = static_getitem(value=$18unpack_sequence.8, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $18unpack_sequence.6 = static_getitem(value=$18unpack_sequence.8, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: $18unpack_sequence.7 = static_getitem(value=$18unpack_sequence.8, index=2, index_var=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined_shell = $18unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: distance_boundary = $18unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: delta_shell = $18unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $30inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_combined_shell, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $30inplace_add.11
DEBUG:numba.core.ssa:on stmt: $34load_global.12 = global(move_packet_across_shell_boundary: CPUDispatcher(<function move_packet_across_shell_boundary at 0x7f6e4a0ffef0>))
DEBUG:numba.core.ssa:on stmt: $40load_global.15 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $44load_attr.17 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $46call_function.18 = call $40load_global.15($44load_attr.17, func=$40load_global.15, args=[Var($44load_attr.17, vpacket.py:162)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $48call_function.19 = call $34load_global.12(v_packet, delta_shell, $46call_function.18, func=$34load_global.12, args=[Var(v_packet, vpacket.py:152), Var(delta_shell, vpacket.py:158), Var($46call_function.18, vpacket.py:162)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $54load_global.21 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_attr.22 = getattr(value=$54load_global.21, attr=tau_russian)
DEBUG:numba.core.ssa:on stmt: $58compare_op.23 = tau_trace_combined > $56load_attr.22
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($58compare_op.23, func=bool60, args=(Var($58compare_op.23, vpacket.py:165),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 128
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461b1610>
DEBUG:numba.core.ssa:on stmt: $62load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $64load_attr.1 = getattr(value=$62load_global.0, attr=random)
DEBUG:numba.core.ssa:on stmt: $66load_method.2 = getattr(value=$64load_attr.1, attr=random)
DEBUG:numba.core.ssa:on stmt: $68call_method.3 = call $66load_method.2(func=$66load_method.2, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: event_random = $68call_method.3
DEBUG:numba.core.ssa:on stmt: $74load_global.5 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $76load_attr.6 = getattr(value=$74load_global.5, attr=survival_probability)
DEBUG:numba.core.ssa:on stmt: $78compare_op.7 = event_random > $76load_attr.6
DEBUG:numba.core.ssa:on stmt: bool80 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $80pred = call bool80($78compare_op.7, func=bool80, args=(Var($78compare_op.7, vpacket.py:167),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $80pred, 82, 98
DEBUG:numba.core.ssa:==== SSA block analysis pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461b1610>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $const82.0
DEBUG:numba.core.ssa:on stmt: $88load_global.2 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $90load_attr.3 = getattr(value=$88load_global.2, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: (v_packet).status = $90load_attr.3
DEBUG:numba.core.ssa:on stmt: jump 128
DEBUG:numba.core.ssa:==== SSA block analysis pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461b1610>
DEBUG:numba.core.ssa:on stmt: $100load_attr.1 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $102load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $104load_attr.3 = getattr(value=$102load_global.2, attr=survival_probability)
DEBUG:numba.core.ssa:on stmt: $106binary_true_divide.4 = $100load_attr.1 / $104load_attr.3
DEBUG:numba.core.ssa:on stmt: $108load_global.5 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $110load_method.6 = getattr(value=$108load_global.5, attr=exp)
DEBUG:numba.core.ssa:on stmt: $114unary_negative.8 = unary(fn=<built-in function neg>, value=tau_trace_combined)
DEBUG:numba.core.ssa:on stmt: $116call_method.9 = call $110load_method.6($114unary_negative.8, func=$110load_method.6, args=[Var($114unary_negative.8, vpacket.py:174)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $118binary_multiply.10 = $106binary_true_divide.4 * $116call_method.9
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $118binary_multiply.10
DEBUG:numba.core.ssa:on stmt: $const124.12 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $const124.12
DEBUG:numba.core.ssa:on stmt: jump 128
DEBUG:numba.core.ssa:==== SSA block analysis pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461b1610>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $134load_attr.3 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $138load_attr.5 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $140binary_multiply.6 = $134load_attr.3 * $138load_attr.5
DEBUG:numba.core.ssa:on stmt: $146binary_multiply.9 = distance_boundary * distance_boundary
DEBUG:numba.core.ssa:on stmt: $148binary_add.10 = $140binary_multiply.6 + $146binary_multiply.9
DEBUG:numba.core.ssa:on stmt: $const150.11 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $154load_attr.13 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $156binary_multiply.14 = $const150.11 * $154load_attr.13
DEBUG:numba.core.ssa:on stmt: $160binary_multiply.16 = $156binary_multiply.14 * distance_boundary
DEBUG:numba.core.ssa:on stmt: $164load_attr.18 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $166binary_multiply.19 = $160binary_multiply.16 * $164load_attr.18
DEBUG:numba.core.ssa:on stmt: $168binary_add.20 = $148binary_add.10 + $166binary_multiply.19
DEBUG:numba.core.ssa:on stmt: $170call_method.21 = call $130load_method.1($168binary_add.20, func=$130load_method.1, args=[Var($168binary_add.20, vpacket.py:182)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: new_r = $170call_method.21
DEBUG:numba.core.ssa:on stmt: $176load_attr.23 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $180load_attr.25 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.26 = $176load_attr.23 * $180load_attr.25
DEBUG:numba.core.ssa:on stmt: $186binary_add.28 = $182binary_multiply.26 + distance_boundary
DEBUG:numba.core.ssa:on stmt: $190binary_true_divide.30 = $186binary_add.28 / new_r
DEBUG:numba.core.ssa:on stmt: (v_packet).mu = $190binary_true_divide.30
DEBUG:numba.core.ssa:on stmt: (v_packet).r = new_r
DEBUG:numba.core.ssa:on stmt: $204load_attr.35 = getattr(value=v_packet, attr=status)
DEBUG:numba.core.ssa:on stmt: $206load_global.36 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $208load_attr.37 = getattr(value=$206load_global.36, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: $210compare_op.38 = $204load_attr.35 == $208load_attr.37
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.38, func=bool212, args=(Var($210compare_op.38, vpacket.py:187),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461b1610>
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block analysis pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e461b1610>
DEBUG:numba.core.ssa:on stmt: $222return_value.1 = cast(value=tau_trace_combined)
DEBUG:numba.core.ssa:on stmt: return $222return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100load_attr.1': [<numba.core.ir.Assign object at 0x7f6e464497d0>],
             '$102load_global.2': [<numba.core.ir.Assign object at 0x7f6e464498d0>],
             '$104load_attr.3': [<numba.core.ir.Assign object at 0x7f6e46449ed0>],
             '$106binary_true_divide.4': [<numba.core.ir.Assign object at 0x7f6e46449a50>],
             '$108load_global.5': [<numba.core.ir.Assign object at 0x7f6e46449190>],
             '$110load_method.6': [<numba.core.ir.Assign object at 0x7f6e464495d0>],
             '$114unary_negative.8': [<numba.core.ir.Assign object at 0x7f6e46449490>],
             '$116call_method.9': [<numba.core.ir.Assign object at 0x7f6e4630e550>],
             '$118binary_multiply.10': [<numba.core.ir.Assign object at 0x7f6e4630e850>],
             '$128load_global.0': [<numba.core.ir.Assign object at 0x7f6e4630e710>],
             '$130load_method.1': [<numba.core.ir.Assign object at 0x7f6e4630e650>],
             '$134load_attr.3': [<numba.core.ir.Assign object at 0x7f6e4630ea90>],
             '$138load_attr.5': [<numba.core.ir.Assign object at 0x7f6e4630e9d0>],
             '$140binary_multiply.6': [<numba.core.ir.Assign object at 0x7f6e4630e190>],
             '$146binary_multiply.9': [<numba.core.ir.Assign object at 0x7f6e45ef5310>],
             '$148binary_add.10': [<numba.core.ir.Assign object at 0x7f6e46022190>],
             '$154load_attr.13': [<numba.core.ir.Assign object at 0x7f6e45ab8890>],
             '$156binary_multiply.14': [<numba.core.ir.Assign object at 0x7f6e45ab8b10>],
             '$160binary_multiply.16': [<numba.core.ir.Assign object at 0x7f6e45ab8490>],
             '$164load_attr.18': [<numba.core.ir.Assign object at 0x7f6e45ab8c90>],
             '$166binary_multiply.19': [<numba.core.ir.Assign object at 0x7f6e45ab8690>],
             '$168binary_add.20': [<numba.core.ir.Assign object at 0x7f6e45d3ff90>],
             '$16call_function.4': [<numba.core.ir.Assign object at 0x7f6e461d6190>],
             '$170call_method.21': [<numba.core.ir.Assign object at 0x7f6e45c94090>],
             '$176load_attr.23': [<numba.core.ir.Assign object at 0x7f6e45c94410>],
             '$180load_attr.25': [<numba.core.ir.Assign object at 0x7f6e45c94950>],
             '$182binary_multiply.26': [<numba.core.ir.Assign object at 0x7f6e45c94190>],
             '$186binary_add.28': [<numba.core.ir.Assign object at 0x7f6e45c94f50>],
             '$18unpack_sequence.5': [<numba.core.ir.Assign object at 0x7f6e46100710>],
             '$18unpack_sequence.6': [<numba.core.ir.Assign object at 0x7f6e46100cd0>],
             '$18unpack_sequence.7': [<numba.core.ir.Assign object at 0x7f6e46100f50>],
             '$18unpack_sequence.8': [<numba.core.ir.Assign object at 0x7f6e461d64d0>],
             '$190binary_true_divide.30': [<numba.core.ir.Assign object at 0x7f6e45cb3350>],
             '$204load_attr.35': [<numba.core.ir.Assign object at 0x7f6e45e08c90>],
             '$206load_global.36': [<numba.core.ir.Assign object at 0x7f6e45e08dd0>],
             '$208load_attr.37': [<numba.core.ir.Assign object at 0x7f6e45e08690>],
             '$210compare_op.38': [<numba.core.ir.Assign object at 0x7f6e45e08050>],
             '$212pred': [<numba.core.ir.Assign object at 0x7f6e45e08650>],
             '$222return_value.1': [<numba.core.ir.Assign object at 0x7f6e45e08d10>],
             '$30inplace_add.11': [<numba.core.ir.Assign object at 0x7f6e460e5910>],
             '$34load_global.12': [<numba.core.ir.Assign object at 0x7f6e460e5d90>],
             '$40load_global.15': [<numba.core.ir.Assign object at 0x7f6e460e5810>],
             '$44load_attr.17': [<numba.core.ir.Assign object at 0x7f6e460e51d0>],
             '$46call_function.18': [<numba.core.ir.Assign object at 0x7f6e460e5790>],
             '$48call_function.19': [<numba.core.ir.Assign object at 0x7f6e460e5410>],
             '$54load_global.21': [<numba.core.ir.Assign object at 0x7f6e460cadd0>],
             '$56load_attr.22': [<numba.core.ir.Assign object at 0x7f6e460cae50>],
             '$58compare_op.23': [<numba.core.ir.Assign object at 0x7f6e4609e690>],
             '$60pred': [<numba.core.ir.Assign object at 0x7f6e4609e890>],
             '$62load_global.0': [<numba.core.ir.Assign object at 0x7f6e460caf50>],
             '$64load_attr.1': [<numba.core.ir.Assign object at 0x7f6e4609e090>],
             '$66load_method.2': [<numba.core.ir.Assign object at 0x7f6e463ff850>],
             '$68call_method.3': [<numba.core.ir.Assign object at 0x7f6e463ff810>],
             '$74load_global.5': [<numba.core.ir.Assign object at 0x7f6e463ff210>],
             '$76load_attr.6': [<numba.core.ir.Assign object at 0x7f6e463ffd50>],
             '$78compare_op.7': [<numba.core.ir.Assign object at 0x7f6e463ffbd0>],
             '$80pred': [<numba.core.ir.Assign object at 0x7f6e45f061d0>],
             '$88load_global.2': [<numba.core.ir.Assign object at 0x7f6e46449c50>],
             '$8load_global.0': [<numba.core.ir.Assign object at 0x7f6e467c25d0>],
             '$90load_attr.3': [<numba.core.ir.Assign object at 0x7f6e46449c10>],
             '$const124.12': [<numba.core.ir.Assign object at 0x7f6e4630e810>],
             '$const150.11': [<numba.core.ir.Assign object at 0x7f6e45ab8790>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e45cace50>],
             '$const82.0': [<numba.core.ir.Assign object at 0x7f6e45f06d50>],
             'bool212': [<numba.core.ir.Assign object at 0x7f6e45e08810>],
             'bool60': [<numba.core.ir.Assign object at 0x7f6e4609e710>],
             'bool80': [<numba.core.ir.Assign object at 0x7f6e45f06c90>],
             'delta_shell': [<numba.core.ir.Assign object at 0x7f6e460e5ad0>],
             'distance_boundary': [<numba.core.ir.Assign object at 0x7f6e460e5250>],
             'event_random': [<numba.core.ir.Assign object at 0x7f6e463ff3d0>],
             'new_r': [<numba.core.ir.Assign object at 0x7f6e45c94a10>],
             'numba_model': [<numba.core.ir.Assign object at 0x7f6e45cac1d0>],
             'numba_plasma': [<numba.core.ir.Assign object at 0x7f6e45cac350>],
             'tau_trace_combined': [<numba.core.ir.Assign object at 0x7f6e45cacf50>,
                                    <numba.core.ir.Assign object at 0x7f6e460e5a90>,
                                    <numba.core.ir.Assign object at 0x7f6e463ff990>],
             'tau_trace_combined_shell': [<numba.core.ir.Assign object at 0x7f6e460e5690>],
             'v_packet': [<numba.core.ir.Assign object at 0x7f6e45cac310>]})
DEBUG:numba.core.ssa:SSA violators {'tau_trace_combined'}
DEBUG:numba.core.ssa:Fix SSA violator on var tau_trace_combined
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45c94610>
DEBUG:numba.core.ssa:on stmt: v_packet = arg(0, name=v_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $const2.0
DEBUG:numba.core.ssa:first assign: tau_trace_combined
DEBUG:numba.core.ssa:replaced with: tau_trace_combined = $const2.0
DEBUG:numba.core.ssa:on stmt: jump 6
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 6
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45c94610>
DEBUG:numba.core.ssa:on stmt: jump 8
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 8
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45c94610>
DEBUG:numba.core.ssa:on stmt: $8load_global.0 = global(trace_vpacket_within_shell: CPUDispatcher(<function trace_vpacket_within_shell at 0x7f6e4a0be200>))
DEBUG:numba.core.ssa:on stmt: $16call_function.4 = call $8load_global.0(v_packet, numba_model, numba_plasma, func=$8load_global.0, args=[Var(v_packet, vpacket.py:152), Var(numba_model, vpacket.py:152), Var(numba_plasma, vpacket.py:152)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $18unpack_sequence.8 = exhaust_iter(value=$16call_function.4, count=3)
DEBUG:numba.core.ssa:on stmt: $18unpack_sequence.5 = static_getitem(value=$18unpack_sequence.8, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $18unpack_sequence.6 = static_getitem(value=$18unpack_sequence.8, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: $18unpack_sequence.7 = static_getitem(value=$18unpack_sequence.8, index=2, index_var=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined_shell = $18unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: distance_boundary = $18unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: delta_shell = $18unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $30inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_combined_shell, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $30inplace_add.11
DEBUG:numba.core.ssa:replaced with: tau_trace_combined.1 = $30inplace_add.11
DEBUG:numba.core.ssa:on stmt: $34load_global.12 = global(move_packet_across_shell_boundary: CPUDispatcher(<function move_packet_across_shell_boundary at 0x7f6e4a0ffef0>))
DEBUG:numba.core.ssa:on stmt: $40load_global.15 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $44load_attr.17 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $46call_function.18 = call $40load_global.15($44load_attr.17, func=$40load_global.15, args=[Var($44load_attr.17, vpacket.py:162)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $48call_function.19 = call $34load_global.12(v_packet, delta_shell, $46call_function.18, func=$34load_global.12, args=[Var(v_packet, vpacket.py:152), Var(delta_shell, vpacket.py:158), Var($46call_function.18, vpacket.py:162)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $54load_global.21 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_attr.22 = getattr(value=$54load_global.21, attr=tau_russian)
DEBUG:numba.core.ssa:on stmt: $58compare_op.23 = tau_trace_combined > $56load_attr.22
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($58compare_op.23, func=bool60, args=(Var($58compare_op.23, vpacket.py:165),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45c94610>
DEBUG:numba.core.ssa:on stmt: $62load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $64load_attr.1 = getattr(value=$62load_global.0, attr=random)
DEBUG:numba.core.ssa:on stmt: $66load_method.2 = getattr(value=$64load_attr.1, attr=random)
DEBUG:numba.core.ssa:on stmt: $68call_method.3 = call $66load_method.2(func=$66load_method.2, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: event_random = $68call_method.3
DEBUG:numba.core.ssa:on stmt: $74load_global.5 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $76load_attr.6 = getattr(value=$74load_global.5, attr=survival_probability)
DEBUG:numba.core.ssa:on stmt: $78compare_op.7 = event_random > $76load_attr.6
DEBUG:numba.core.ssa:on stmt: bool80 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $80pred = call bool80($78compare_op.7, func=bool80, args=(Var($78compare_op.7, vpacket.py:167),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $80pred, 82, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45c94610>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $const82.0
DEBUG:numba.core.ssa:on stmt: $88load_global.2 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $90load_attr.3 = getattr(value=$88load_global.2, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: (v_packet).status = $90load_attr.3
DEBUG:numba.core.ssa:on stmt: jump 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45c94610>
DEBUG:numba.core.ssa:on stmt: $100load_attr.1 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $102load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $104load_attr.3 = getattr(value=$102load_global.2, attr=survival_probability)
DEBUG:numba.core.ssa:on stmt: $106binary_true_divide.4 = $100load_attr.1 / $104load_attr.3
DEBUG:numba.core.ssa:on stmt: $108load_global.5 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $110load_method.6 = getattr(value=$108load_global.5, attr=exp)
DEBUG:numba.core.ssa:on stmt: $114unary_negative.8 = unary(fn=<built-in function neg>, value=tau_trace_combined)
DEBUG:numba.core.ssa:on stmt: $116call_method.9 = call $110load_method.6($114unary_negative.8, func=$110load_method.6, args=[Var($114unary_negative.8, vpacket.py:174)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $118binary_multiply.10 = $106binary_true_divide.4 * $116call_method.9
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $118binary_multiply.10
DEBUG:numba.core.ssa:on stmt: $const124.12 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $const124.12
DEBUG:numba.core.ssa:replaced with: tau_trace_combined.2 = $const124.12
DEBUG:numba.core.ssa:on stmt: jump 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45c94610>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $134load_attr.3 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $138load_attr.5 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $140binary_multiply.6 = $134load_attr.3 * $138load_attr.5
DEBUG:numba.core.ssa:on stmt: $146binary_multiply.9 = distance_boundary * distance_boundary
DEBUG:numba.core.ssa:on stmt: $148binary_add.10 = $140binary_multiply.6 + $146binary_multiply.9
DEBUG:numba.core.ssa:on stmt: $const150.11 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $154load_attr.13 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $156binary_multiply.14 = $const150.11 * $154load_attr.13
DEBUG:numba.core.ssa:on stmt: $160binary_multiply.16 = $156binary_multiply.14 * distance_boundary
DEBUG:numba.core.ssa:on stmt: $164load_attr.18 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $166binary_multiply.19 = $160binary_multiply.16 * $164load_attr.18
DEBUG:numba.core.ssa:on stmt: $168binary_add.20 = $148binary_add.10 + $166binary_multiply.19
DEBUG:numba.core.ssa:on stmt: $170call_method.21 = call $130load_method.1($168binary_add.20, func=$130load_method.1, args=[Var($168binary_add.20, vpacket.py:182)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: new_r = $170call_method.21
DEBUG:numba.core.ssa:on stmt: $176load_attr.23 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $180load_attr.25 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.26 = $176load_attr.23 * $180load_attr.25
DEBUG:numba.core.ssa:on stmt: $186binary_add.28 = $182binary_multiply.26 + distance_boundary
DEBUG:numba.core.ssa:on stmt: $190binary_true_divide.30 = $186binary_add.28 / new_r
DEBUG:numba.core.ssa:on stmt: (v_packet).mu = $190binary_true_divide.30
DEBUG:numba.core.ssa:on stmt: (v_packet).r = new_r
DEBUG:numba.core.ssa:on stmt: $204load_attr.35 = getattr(value=v_packet, attr=status)
DEBUG:numba.core.ssa:on stmt: $206load_global.36 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $208load_attr.37 = getattr(value=$206load_global.36, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: $210compare_op.38 = $204load_attr.35 == $208load_attr.37
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.38, func=bool212, args=(Var($210compare_op.38, vpacket.py:187),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 8
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45c94610>
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45c94610>
DEBUG:numba.core.ssa:on stmt: $222return_value.1 = cast(value=tau_trace_combined)
DEBUG:numba.core.ssa:on stmt: return $222return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e45c94e50>],
             8: [<numba.core.ir.Assign object at 0x7f6e45ca9cd0>],
             98: [<numba.core.ir.Assign object at 0x7f6e45ca9b10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ca9d10>
DEBUG:numba.core.ssa:on stmt: v_packet = arg(0, name=v_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $const2.0
DEBUG:numba.core.ssa:on stmt: jump 6
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 6
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ca9d10>
DEBUG:numba.core.ssa:on stmt: jump 8
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 8
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ca9d10>
DEBUG:numba.core.ssa:on stmt: $8load_global.0 = global(trace_vpacket_within_shell: CPUDispatcher(<function trace_vpacket_within_shell at 0x7f6e4a0be200>))
DEBUG:numba.core.ssa:on stmt: $16call_function.4 = call $8load_global.0(v_packet, numba_model, numba_plasma, func=$8load_global.0, args=[Var(v_packet, vpacket.py:152), Var(numba_model, vpacket.py:152), Var(numba_plasma, vpacket.py:152)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $18unpack_sequence.8 = exhaust_iter(value=$16call_function.4, count=3)
DEBUG:numba.core.ssa:on stmt: $18unpack_sequence.5 = static_getitem(value=$18unpack_sequence.8, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $18unpack_sequence.6 = static_getitem(value=$18unpack_sequence.8, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: $18unpack_sequence.7 = static_getitem(value=$18unpack_sequence.8, index=2, index_var=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined_shell = $18unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: distance_boundary = $18unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: delta_shell = $18unpack_sequence.7
DEBUG:numba.core.ssa:on stmt: $30inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_combined_shell, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='tau_trace_combined' stmt=$30inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_combined_shell, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 8
DEBUG:numba.core.ssa:insert phi node tau_trace_combined.3 = phi(incoming_values=[], incoming_blocks=[]) at 8
DEBUG:numba.core.ssa:find_def_from_bottom label 128
DEBUG:numba.core.ssa:find_def_from_top label 128
DEBUG:numba.core.ssa:insert phi node tau_trace_combined.4 = phi(incoming_values=[], incoming_blocks=[]) at 128
DEBUG:numba.core.ssa:find_def_from_bottom label 8
DEBUG:numba.core.ssa:incoming_def tau_trace_combined.1 = $30inplace_add.11
DEBUG:numba.core.ssa:find_def_from_bottom label 82
DEBUG:numba.core.ssa:find_def_from_top label 82
DEBUG:numba.core.ssa:idom 62 from label 82
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:find_def_from_top label 62
DEBUG:numba.core.ssa:idom 8 from label 62
DEBUG:numba.core.ssa:find_def_from_bottom label 8
DEBUG:numba.core.ssa:incoming_def tau_trace_combined.1 = $30inplace_add.11
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:incoming_def tau_trace_combined.2 = $const124.12
DEBUG:numba.core.ssa:incoming_def tau_trace_combined.4 = phi(incoming_values=[Var(tau_trace_combined.1, vpacket.py:159), Var(tau_trace_combined.1, vpacket.py:159), Var(tau_trace_combined.2, vpacket.py:176)], incoming_blocks=[8, 82, 98])
DEBUG:numba.core.ssa:find_def_from_bottom label 6
DEBUG:numba.core.ssa:find_def_from_top label 6
DEBUG:numba.core.ssa:idom 0 from label 6
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def tau_trace_combined = $const2.0
DEBUG:numba.core.ssa:replaced with: $30inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined.3, rhs=tau_trace_combined_shell, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined.1 = $30inplace_add.11
DEBUG:numba.core.ssa:on stmt: $34load_global.12 = global(move_packet_across_shell_boundary: CPUDispatcher(<function move_packet_across_shell_boundary at 0x7f6e4a0ffef0>))
DEBUG:numba.core.ssa:on stmt: $40load_global.15 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $44load_attr.17 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $46call_function.18 = call $40load_global.15($44load_attr.17, func=$40load_global.15, args=[Var($44load_attr.17, vpacket.py:162)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $48call_function.19 = call $34load_global.12(v_packet, delta_shell, $46call_function.18, func=$34load_global.12, args=[Var(v_packet, vpacket.py:152), Var(delta_shell, vpacket.py:158), Var($46call_function.18, vpacket.py:162)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $54load_global.21 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_attr.22 = getattr(value=$54load_global.21, attr=tau_russian)
DEBUG:numba.core.ssa:on stmt: $58compare_op.23 = tau_trace_combined > $56load_attr.22
DEBUG:numba.core.ssa:find_def var='tau_trace_combined' stmt=$58compare_op.23 = tau_trace_combined > $56load_attr.22
DEBUG:numba.core.ssa:replaced with: $58compare_op.23 = tau_trace_combined.1 > $56load_attr.22
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($58compare_op.23, func=bool60, args=(Var($58compare_op.23, vpacket.py:165),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ca9d10>
DEBUG:numba.core.ssa:on stmt: $62load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $64load_attr.1 = getattr(value=$62load_global.0, attr=random)
DEBUG:numba.core.ssa:on stmt: $66load_method.2 = getattr(value=$64load_attr.1, attr=random)
DEBUG:numba.core.ssa:on stmt: $68call_method.3 = call $66load_method.2(func=$66load_method.2, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: event_random = $68call_method.3
DEBUG:numba.core.ssa:on stmt: $74load_global.5 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $76load_attr.6 = getattr(value=$74load_global.5, attr=survival_probability)
DEBUG:numba.core.ssa:on stmt: $78compare_op.7 = event_random > $76load_attr.6
DEBUG:numba.core.ssa:on stmt: bool80 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $80pred = call bool80($78compare_op.7, func=bool80, args=(Var($78compare_op.7, vpacket.py:167),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $80pred, 82, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ca9d10>
DEBUG:numba.core.ssa:on stmt: $const82.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $const82.0
DEBUG:numba.core.ssa:on stmt: $88load_global.2 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $90load_attr.3 = getattr(value=$88load_global.2, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: (v_packet).status = $90load_attr.3
DEBUG:numba.core.ssa:on stmt: jump 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ca9d10>
DEBUG:numba.core.ssa:on stmt: $100load_attr.1 = getattr(value=v_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $102load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $104load_attr.3 = getattr(value=$102load_global.2, attr=survival_probability)
DEBUG:numba.core.ssa:on stmt: $106binary_true_divide.4 = $100load_attr.1 / $104load_attr.3
DEBUG:numba.core.ssa:on stmt: $108load_global.5 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $110load_method.6 = getattr(value=$108load_global.5, attr=exp)
DEBUG:numba.core.ssa:on stmt: $114unary_negative.8 = unary(fn=<built-in function neg>, value=tau_trace_combined)
DEBUG:numba.core.ssa:find_def var='tau_trace_combined' stmt=$114unary_negative.8 = unary(fn=<built-in function neg>, value=tau_trace_combined)
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 62 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:find_def_from_top label 62
DEBUG:numba.core.ssa:idom 8 from label 62
DEBUG:numba.core.ssa:find_def_from_bottom label 8
DEBUG:numba.core.ssa:replaced with: $114unary_negative.8 = unary(fn=<built-in function neg>, value=tau_trace_combined.1)
DEBUG:numba.core.ssa:on stmt: $116call_method.9 = call $110load_method.6($114unary_negative.8, func=$110load_method.6, args=[Var($114unary_negative.8, vpacket.py:174)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $118binary_multiply.10 = $106binary_true_divide.4 * $116call_method.9
DEBUG:numba.core.ssa:on stmt: (v_packet).energy = $118binary_multiply.10
DEBUG:numba.core.ssa:on stmt: $const124.12 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined.2 = $const124.12
DEBUG:numba.core.ssa:on stmt: jump 128
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ca9d10>
DEBUG:numba.core.ssa:on stmt: $128load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $130load_method.1 = getattr(value=$128load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $134load_attr.3 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $138load_attr.5 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $140binary_multiply.6 = $134load_attr.3 * $138load_attr.5
DEBUG:numba.core.ssa:on stmt: $146binary_multiply.9 = distance_boundary * distance_boundary
DEBUG:numba.core.ssa:on stmt: $148binary_add.10 = $140binary_multiply.6 + $146binary_multiply.9
DEBUG:numba.core.ssa:on stmt: $const150.11 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $154load_attr.13 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $156binary_multiply.14 = $const150.11 * $154load_attr.13
DEBUG:numba.core.ssa:on stmt: $160binary_multiply.16 = $156binary_multiply.14 * distance_boundary
DEBUG:numba.core.ssa:on stmt: $164load_attr.18 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $166binary_multiply.19 = $160binary_multiply.16 * $164load_attr.18
DEBUG:numba.core.ssa:on stmt: $168binary_add.20 = $148binary_add.10 + $166binary_multiply.19
DEBUG:numba.core.ssa:on stmt: $170call_method.21 = call $130load_method.1($168binary_add.20, func=$130load_method.1, args=[Var($168binary_add.20, vpacket.py:182)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: new_r = $170call_method.21
DEBUG:numba.core.ssa:on stmt: $176load_attr.23 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $180load_attr.25 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $182binary_multiply.26 = $176load_attr.23 * $180load_attr.25
DEBUG:numba.core.ssa:on stmt: $186binary_add.28 = $182binary_multiply.26 + distance_boundary
DEBUG:numba.core.ssa:on stmt: $190binary_true_divide.30 = $186binary_add.28 / new_r
DEBUG:numba.core.ssa:on stmt: (v_packet).mu = $190binary_true_divide.30
DEBUG:numba.core.ssa:on stmt: (v_packet).r = new_r
DEBUG:numba.core.ssa:on stmt: $204load_attr.35 = getattr(value=v_packet, attr=status)
DEBUG:numba.core.ssa:on stmt: $206load_global.36 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $208load_attr.37 = getattr(value=$206load_global.36, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: $210compare_op.38 = $204load_attr.35 == $208load_attr.37
DEBUG:numba.core.ssa:on stmt: bool212 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $212pred = call bool212($210compare_op.38, func=bool212, args=(Var($210compare_op.38, vpacket.py:187),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $212pred, 214, 8
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 214
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ca9d10>
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45ca9d10>
DEBUG:numba.core.ssa:on stmt: $222return_value.1 = cast(value=tau_trace_combined)
DEBUG:numba.core.ssa:find_def var='tau_trace_combined' stmt=$222return_value.1 = cast(value=tau_trace_combined)
DEBUG:numba.core.ssa:find_def_from_top label 220
DEBUG:numba.core.ssa:idom 214 from label 220
DEBUG:numba.core.ssa:find_def_from_bottom label 214
DEBUG:numba.core.ssa:find_def_from_top label 214
DEBUG:numba.core.ssa:idom 128 from label 214
DEBUG:numba.core.ssa:find_def_from_bottom label 128
DEBUG:numba.core.ssa:replaced with: $222return_value.1 = cast(value=tau_trace_combined.4)
DEBUG:numba.core.ssa:on stmt: return $222return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=66)
           2	LOAD_FAST(arg=1, lineno=66)
           4	LOAD_ATTR(arg=0, lineno=66)
           6	LOAD_FAST(arg=0, lineno=66)
           8	LOAD_ATTR(arg=1, lineno=66)
          10	BINARY_SUBSCR(arg=None, lineno=66)
          12	STORE_FAST(arg=3, lineno=66)
          14	LOAD_FAST(arg=1, lineno=67)
          16	LOAD_ATTR(arg=2, lineno=67)
          18	LOAD_FAST(arg=0, lineno=67)
          20	LOAD_ATTR(arg=1, lineno=67)
          22	BINARY_SUBSCR(arg=None, lineno=67)
          24	STORE_FAST(arg=4, lineno=67)
          26	LOAD_GLOBAL(arg=3, lineno=69)
          28	LOAD_FAST(arg=0, lineno=70)
          30	LOAD_ATTR(arg=4, lineno=70)
          32	LOAD_FAST(arg=0, lineno=70)
          34	LOAD_ATTR(arg=5, lineno=70)
          36	LOAD_FAST(arg=3, lineno=70)
          38	LOAD_FAST(arg=4, lineno=70)
          40	CALL_FUNCTION(arg=4, lineno=70)
          42	UNPACK_SEQUENCE(arg=2, lineno=70)
          44	STORE_FAST(arg=5, lineno=70)
          46	STORE_FAST(arg=6, lineno=70)
          48	LOAD_FAST(arg=0, lineno=73)
          50	LOAD_ATTR(arg=6, lineno=73)
          52	STORE_FAST(arg=7, lineno=73)
          54	LOAD_FAST(arg=2, lineno=77)
          56	LOAD_ATTR(arg=7, lineno=77)
          58	LOAD_FAST(arg=0, lineno=78)
          60	LOAD_ATTR(arg=1, lineno=78)
          62	BINARY_SUBSCR(arg=None, lineno=78)
          64	STORE_FAST(arg=8, lineno=78)
          66	LOAD_GLOBAL(arg=8, lineno=80)
          68	LOAD_FAST(arg=8, lineno=81)
          70	LOAD_FAST(arg=5, lineno=81)
          72	CALL_FUNCTION(arg=2, lineno=81)
          74	STORE_FAST(arg=9, lineno=81)
          76	LOAD_FAST(arg=9, lineno=83)
          78	STORE_FAST(arg=10, lineno=83)
          80	LOAD_GLOBAL(arg=9, lineno=86)
          82	LOAD_FAST(arg=0, lineno=87)
          84	LOAD_ATTR(arg=4, lineno=87)
          86	LOAD_FAST(arg=0, lineno=87)
          88	LOAD_ATTR(arg=5, lineno=87)
          90	LOAD_FAST(arg=1, lineno=87)
          92	LOAD_ATTR(arg=10, lineno=87)
          94	CALL_FUNCTION(arg=3, lineno=87)
          96	STORE_FAST(arg=11, lineno=87)
          98	LOAD_FAST(arg=0, lineno=89)
         100	LOAD_ATTR(arg=11, lineno=89)
         102	LOAD_FAST(arg=11, lineno=89)
         104	BINARY_MULTIPLY(arg=None, lineno=89)
         106	STORE_FAST(arg=12, lineno=89)
         108	LOAD_FAST(arg=7, lineno=90)
         110	STORE_FAST(arg=13, lineno=90)
         112	SETUP_LOOP(arg=186, lineno=92)
         114	LOAD_GLOBAL(arg=12, lineno=92)
         116	LOAD_FAST(arg=7, lineno=92)
         118	LOAD_GLOBAL(arg=13, lineno=92)
         120	LOAD_FAST(arg=2, lineno=92)
         122	LOAD_ATTR(arg=14, lineno=92)
         124	CALL_FUNCTION(arg=1, lineno=92)
         126	CALL_FUNCTION(arg=2, lineno=92)
         128	GET_ITER(arg=None, lineno=92)
>        130	FOR_ITER(arg=138, lineno=92)
         132	STORE_FAST(arg=13, lineno=92)
         134	LOAD_FAST(arg=2, lineno=96)
         136	LOAD_ATTR(arg=14, lineno=96)
         138	LOAD_FAST(arg=13, lineno=96)
         140	BINARY_SUBSCR(arg=None, lineno=96)
         142	STORE_FAST(arg=14, lineno=96)
         144	LOAD_FAST(arg=2, lineno=99)
         146	LOAD_ATTR(arg=15, lineno=99)
         148	LOAD_FAST(arg=13, lineno=100)
         150	LOAD_FAST(arg=0, lineno=100)
         152	LOAD_ATTR(arg=1, lineno=100)
         154	BUILD_TUPLE(arg=2, lineno=100)
         156	BINARY_SUBSCR(arg=None, lineno=100)
         158	STORE_FAST(arg=15, lineno=100)
         160	LOAD_FAST(arg=13, lineno=103)
         162	LOAD_GLOBAL(arg=13, lineno=103)
         164	LOAD_FAST(arg=2, lineno=103)
         166	LOAD_ATTR(arg=14, lineno=103)
         168	CALL_FUNCTION(arg=1, lineno=103)
         170	LOAD_CONST(arg=1, lineno=103)
         172	BINARY_SUBTRACT(arg=None, lineno=103)
         174	COMPARE_OP(arg=2, lineno=103)
         176	POP_JUMP_IF_FALSE(arg=184, lineno=103)
         178	LOAD_CONST(arg=2, lineno=104)
         180	STORE_FAST(arg=16, lineno=104)
         182	JUMP_FORWARD(arg=4, lineno=104)
>        184	LOAD_CONST(arg=3, lineno=106)
         186	STORE_FAST(arg=16, lineno=106)
>        188	LOAD_GLOBAL(arg=16, lineno=108)
         190	LOAD_FAST(arg=0, lineno=109)
         192	LOAD_FAST(arg=12, lineno=110)
         194	LOAD_FAST(arg=16, lineno=111)
         196	LOAD_FAST(arg=14, lineno=112)
         198	LOAD_FAST(arg=1, lineno=113)
         200	LOAD_ATTR(arg=10, lineno=113)
         202	CALL_FUNCTION(arg=5, lineno=113)
         204	STORE_FAST(arg=17, lineno=113)
         206	LOAD_FAST(arg=13, lineno=116)
         208	LOAD_GLOBAL(arg=13, lineno=116)
         210	LOAD_FAST(arg=2, lineno=116)
         212	LOAD_ATTR(arg=14, lineno=116)
         214	CALL_FUNCTION(arg=1, lineno=116)
         216	LOAD_CONST(arg=1, lineno=116)
         218	BINARY_SUBTRACT(arg=None, lineno=116)
         220	COMPARE_OP(arg=3, lineno=116)
         222	POP_JUMP_IF_FALSE(arg=248, lineno=116)
         224	LOAD_GLOBAL(arg=17, lineno=117)
         226	LOAD_FAST(arg=0, lineno=118)
         228	LOAD_FAST(arg=13, lineno=119)
         230	LOAD_FAST(arg=2, lineno=120)
         232	LOAD_ATTR(arg=14, lineno=120)
         234	LOAD_FAST(arg=13, lineno=120)
         236	LOAD_CONST(arg=1, lineno=120)
         238	BINARY_SUBTRACT(arg=None, lineno=120)
         240	BINARY_SUBSCR(arg=None, lineno=120)
         242	LOAD_FAST(arg=2, lineno=121)
         244	CALL_FUNCTION(arg=4, lineno=121)
         246	POP_TOP(arg=None, lineno=121)
>        248	LOAD_FAST(arg=5, lineno=124)
         250	LOAD_FAST(arg=17, lineno=124)
         252	COMPARE_OP(arg=1, lineno=124)
         254	POP_JUMP_IF_FALSE(arg=260, lineno=124)
         258	BREAK_LOOP(arg=None, lineno=125)
>        260	LOAD_FAST(arg=10, lineno=127)
         262	LOAD_FAST(arg=15, lineno=127)
         264	INPLACE_ADD(arg=None, lineno=127)
         266	STORE_FAST(arg=10, lineno=127)
         268	JUMP_ABSOLUTE(arg=130, lineno=127)
>        270	POP_BLOCK(arg=None, lineno=127)
         272	LOAD_FAST(arg=13, lineno=130)
         274	LOAD_GLOBAL(arg=13, lineno=130)
         276	LOAD_FAST(arg=2, lineno=130)
         278	LOAD_ATTR(arg=14, lineno=130)
         280	CALL_FUNCTION(arg=1, lineno=130)
         282	LOAD_CONST(arg=1, lineno=130)
         284	BINARY_SUBTRACT(arg=None, lineno=130)
         286	COMPARE_OP(arg=2, lineno=130)
         288	POP_JUMP_IF_FALSE(arg=300, lineno=130)
         292	LOAD_FAST(arg=13, lineno=131)
         294	LOAD_CONST(arg=1, lineno=131)
         296	INPLACE_ADD(arg=None, lineno=131)
         298	STORE_FAST(arg=13, lineno=131)
>        300	LOAD_FAST(arg=13, lineno=132)
         302	LOAD_FAST(arg=0, lineno=132)
         304	STORE_ATTR(arg=6, lineno=132)
         306	LOAD_FAST(arg=10, lineno=134)
         308	LOAD_FAST(arg=5, lineno=134)
         310	LOAD_FAST(arg=6, lineno=134)
         312	BUILD_TUPLE(arg=3, lineno=134)
         314	RETURN_VALUE(arg=None, lineno=134)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=66)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=66)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=66)
DEBUG:numba.core.byteflow:stack ['$numba_model2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=66)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=66)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$v_packet6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_FAST(arg=3, lineno=66)
DEBUG:numba.core.byteflow:stack ['$10binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=67)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_ATTR(arg=2, lineno=67)
DEBUG:numba.core.byteflow:stack ['$numba_model14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=67)
DEBUG:numba.core.byteflow:stack ['$16load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_ATTR(arg=1, lineno=67)
DEBUG:numba.core.byteflow:stack ['$16load_attr.6', '$v_packet18.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=67)
DEBUG:numba.core.byteflow:stack ['$16load_attr.6', '$20load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_FAST(arg=4, lineno=67)
DEBUG:numba.core.byteflow:stack ['$22binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_GLOBAL(arg=3, lineno=69)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=70)
DEBUG:numba.core.byteflow:stack ['$26load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=4, lineno=70)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$v_packet28.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=70)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_ATTR(arg=5, lineno=70)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12', '$v_packet32.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=3, lineno=70)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12', '$34load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=4, lineno=70)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12', '$34load_attr.14', '$r_inner36.15']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=CALL_FUNCTION(arg=4, lineno=70)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12', '$34load_attr.14', '$r_inner36.15', '$r_outer38.16']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=UNPACK_SEQUENCE(arg=2, lineno=70)
DEBUG:numba.core.byteflow:stack ['$40call_function.17']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_FAST(arg=5, lineno=70)
DEBUG:numba.core.byteflow:stack ['$42unpack_sequence.19', '$42unpack_sequence.18']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=6, lineno=70)
DEBUG:numba.core.byteflow:stack ['$42unpack_sequence.19']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=73)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_ATTR(arg=6, lineno=73)
DEBUG:numba.core.byteflow:stack ['$v_packet48.21']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=STORE_FAST(arg=7, lineno=73)
DEBUG:numba.core.byteflow:stack ['$50load_attr.22']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=77)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_ATTR(arg=7, lineno=77)
DEBUG:numba.core.byteflow:stack ['$numba_plasma54.23']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=78)
DEBUG:numba.core.byteflow:stack ['$56load_attr.24']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_ATTR(arg=1, lineno=78)
DEBUG:numba.core.byteflow:stack ['$56load_attr.24', '$v_packet58.25']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=78)
DEBUG:numba.core.byteflow:stack ['$56load_attr.24', '$60load_attr.26']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=STORE_FAST(arg=8, lineno=78)
DEBUG:numba.core.byteflow:stack ['$62binary_subscr.27']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_GLOBAL(arg=8, lineno=80)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=8, lineno=81)
DEBUG:numba.core.byteflow:stack ['$66load_global.28']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=5, lineno=81)
DEBUG:numba.core.byteflow:stack ['$66load_global.28', '$cur_electron_density68.29']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=81)
DEBUG:numba.core.byteflow:stack ['$66load_global.28', '$cur_electron_density68.29', '$distance_boundary70.30']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_FAST(arg=9, lineno=81)
DEBUG:numba.core.byteflow:stack ['$72call_function.31']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=9, lineno=83)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=STORE_FAST(arg=10, lineno=83)
DEBUG:numba.core.byteflow:stack ['$tau_electron76.32']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_GLOBAL(arg=9, lineno=86)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=0, lineno=87)
DEBUG:numba.core.byteflow:stack ['$80load_global.33']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_ATTR(arg=4, lineno=87)
DEBUG:numba.core.byteflow:stack ['$80load_global.33', '$v_packet82.34']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=87)
DEBUG:numba.core.byteflow:stack ['$80load_global.33', '$84load_attr.35']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_ATTR(arg=5, lineno=87)
DEBUG:numba.core.byteflow:stack ['$80load_global.33', '$84load_attr.35', '$v_packet86.36']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=1, lineno=87)
DEBUG:numba.core.byteflow:stack ['$80load_global.33', '$84load_attr.35', '$88load_attr.37']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_ATTR(arg=10, lineno=87)
DEBUG:numba.core.byteflow:stack ['$80load_global.33', '$84load_attr.35', '$88load_attr.37', '$numba_model90.38']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=CALL_FUNCTION(arg=3, lineno=87)
DEBUG:numba.core.byteflow:stack ['$80load_global.33', '$84load_attr.35', '$88load_attr.37', '$92load_attr.39']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=STORE_FAST(arg=11, lineno=87)
DEBUG:numba.core.byteflow:stack ['$94call_function.40']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=89)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_ATTR(arg=11, lineno=89)
DEBUG:numba.core.byteflow:stack ['$v_packet98.41']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=11, lineno=89)
DEBUG:numba.core.byteflow:stack ['$100load_attr.42']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=BINARY_MULTIPLY(arg=None, lineno=89)
DEBUG:numba.core.byteflow:stack ['$100load_attr.42', '$doppler_factor102.43']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=STORE_FAST(arg=12, lineno=89)
DEBUG:numba.core.byteflow:stack ['$104binary_multiply.44']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=7, lineno=90)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=STORE_FAST(arg=13, lineno=90)
DEBUG:numba.core.byteflow:stack ['$start_line_id108.45']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=112, inst=SETUP_LOOP(arg=186, lineno=92)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_GLOBAL(arg=12, lineno=92)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=92)
DEBUG:numba.core.byteflow:stack ['$114load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_GLOBAL(arg=13, lineno=92)
DEBUG:numba.core.byteflow:stack ['$114load_global.0', '$start_line_id116.1']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=2, lineno=92)
DEBUG:numba.core.byteflow:stack ['$114load_global.0', '$start_line_id116.1', '$118load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_ATTR(arg=14, lineno=92)
DEBUG:numba.core.byteflow:stack ['$114load_global.0', '$start_line_id116.1', '$118load_global.2', '$numba_plasma120.3']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=92)
DEBUG:numba.core.byteflow:stack ['$114load_global.0', '$start_line_id116.1', '$118load_global.2', '$122load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=CALL_FUNCTION(arg=2, lineno=92)
DEBUG:numba.core.byteflow:stack ['$114load_global.0', '$start_line_id116.1', '$124call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=GET_ITER(arg=None, lineno=92)
DEBUG:numba.core.byteflow:stack ['$126call_function.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=130, stack=('$128get_iter.7',), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=130 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi130.0']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=FOR_ITER(arg=138, lineno=92)
DEBUG:numba.core.byteflow:stack ['$phi130.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=270, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=132, stack=('$phi130.0', '$130for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=270 nstack_initial=0), State(pc_initial=132 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=270, inst=POP_BLOCK(arg=None, lineno=127)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=272, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=132 nstack_initial=2), State(pc_initial=272 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi132.0', '$phi132.1']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=STORE_FAST(arg=13, lineno=92)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$phi132.1']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_FAST(arg=2, lineno=96)
DEBUG:numba.core.byteflow:stack ['$phi132.0']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_ATTR(arg=14, lineno=96)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$numba_plasma134.2']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=13, lineno=96)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$136load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=BINARY_SUBSCR(arg=None, lineno=96)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$136load_attr.3', '$cur_line_id138.4']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=STORE_FAST(arg=14, lineno=96)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$140binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=LOAD_FAST(arg=2, lineno=99)
DEBUG:numba.core.byteflow:stack ['$phi132.0']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_ATTR(arg=15, lineno=99)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$numba_plasma144.6']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=13, lineno=100)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$146load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_FAST(arg=0, lineno=100)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$146load_attr.7', '$cur_line_id148.8']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_ATTR(arg=1, lineno=100)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$146load_attr.7', '$cur_line_id148.8', '$v_packet150.9']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=BUILD_TUPLE(arg=2, lineno=100)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$146load_attr.7', '$cur_line_id148.8', '$152load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=BINARY_SUBSCR(arg=None, lineno=100)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$146load_attr.7', '$154build_tuple.11']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=STORE_FAST(arg=15, lineno=100)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$156binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_FAST(arg=13, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi132.0']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_GLOBAL(arg=13, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$cur_line_id160.13']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=2, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$cur_line_id160.13', '$162load_global.14']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_ATTR(arg=14, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$cur_line_id160.13', '$162load_global.14', '$numba_plasma164.15']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=CALL_FUNCTION(arg=1, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$cur_line_id160.13', '$162load_global.14', '$166load_attr.16']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_CONST(arg=1, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$cur_line_id160.13', '$168call_function.17']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=BINARY_SUBTRACT(arg=None, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$cur_line_id160.13', '$168call_function.17', '$const170.18']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=COMPARE_OP(arg=2, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$cur_line_id160.13', '$172binary_subtract.19']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=POP_JUMP_IF_FALSE(arg=184, lineno=103)
DEBUG:numba.core.byteflow:stack ['$phi132.0', '$174compare_op.20']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=178, stack=('$phi132.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=184, stack=('$phi132.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=272 nstack_initial=0), State(pc_initial=178 nstack_initial=1), State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_FAST(arg=13, lineno=130)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_GLOBAL(arg=13, lineno=130)
DEBUG:numba.core.byteflow:stack ['$cur_line_id272.0']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=130)
DEBUG:numba.core.byteflow:stack ['$cur_line_id272.0', '$274load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=LOAD_ATTR(arg=14, lineno=130)
DEBUG:numba.core.byteflow:stack ['$cur_line_id272.0', '$274load_global.1', '$numba_plasma276.2']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=CALL_FUNCTION(arg=1, lineno=130)
DEBUG:numba.core.byteflow:stack ['$cur_line_id272.0', '$274load_global.1', '$278load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=LOAD_CONST(arg=1, lineno=130)
DEBUG:numba.core.byteflow:stack ['$cur_line_id272.0', '$280call_function.4']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=BINARY_SUBTRACT(arg=None, lineno=130)
DEBUG:numba.core.byteflow:stack ['$cur_line_id272.0', '$280call_function.4', '$const282.5']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=COMPARE_OP(arg=2, lineno=130)
DEBUG:numba.core.byteflow:stack ['$cur_line_id272.0', '$284binary_subtract.6']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=POP_JUMP_IF_FALSE(arg=300, lineno=130)
DEBUG:numba.core.byteflow:stack ['$286compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=300, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=178 nstack_initial=1), State(pc_initial=184 nstack_initial=1), State(pc_initial=292 nstack_initial=0), State(pc_initial=300 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi178.0']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=LOAD_CONST(arg=2, lineno=104)
DEBUG:numba.core.byteflow:stack ['$phi178.0']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=STORE_FAST(arg=16, lineno=104)
DEBUG:numba.core.byteflow:stack ['$phi178.0', '$const178.1']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=JUMP_FORWARD(arg=4, lineno=104)
DEBUG:numba.core.byteflow:stack ['$phi178.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=188, stack=('$phi178.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=184 nstack_initial=1), State(pc_initial=292 nstack_initial=0), State(pc_initial=300 nstack_initial=0), State(pc_initial=188 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi184.0']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=LOAD_CONST(arg=3, lineno=106)
DEBUG:numba.core.byteflow:stack ['$phi184.0']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=STORE_FAST(arg=16, lineno=106)
DEBUG:numba.core.byteflow:stack ['$phi184.0', '$const184.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=188, stack=('$phi184.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=300 nstack_initial=0), State(pc_initial=188 nstack_initial=1), State(pc_initial=188 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=13, lineno=131)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_CONST(arg=1, lineno=131)
DEBUG:numba.core.byteflow:stack ['$cur_line_id292.0']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=INPLACE_ADD(arg=None, lineno=131)
DEBUG:numba.core.byteflow:stack ['$cur_line_id292.0', '$const294.1']
DEBUG:numba.core.byteflow:dispatch pc=298, inst=STORE_FAST(arg=13, lineno=131)
DEBUG:numba.core.byteflow:stack ['$296inplace_add.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=188 nstack_initial=1), State(pc_initial=188 nstack_initial=1), State(pc_initial=300 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=13, lineno=132)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=0, lineno=132)
DEBUG:numba.core.byteflow:stack ['$cur_line_id300.0']
DEBUG:numba.core.byteflow:dispatch pc=304, inst=STORE_ATTR(arg=6, lineno=132)
DEBUG:numba.core.byteflow:stack ['$cur_line_id300.0', '$v_packet302.1']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=LOAD_FAST(arg=10, lineno=134)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=308, inst=LOAD_FAST(arg=5, lineno=134)
DEBUG:numba.core.byteflow:stack ['$tau_trace_combined306.2']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=6, lineno=134)
DEBUG:numba.core.byteflow:stack ['$tau_trace_combined306.2', '$distance_boundary308.3']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=BUILD_TUPLE(arg=3, lineno=134)
DEBUG:numba.core.byteflow:stack ['$tau_trace_combined306.2', '$distance_boundary308.3', '$delta_shell310.4']
DEBUG:numba.core.byteflow:dispatch pc=314, inst=RETURN_VALUE(arg=None, lineno=134)
DEBUG:numba.core.byteflow:stack ['$312build_tuple.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=188 nstack_initial=1), State(pc_initial=188 nstack_initial=1), State(pc_initial=300 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi188.0']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_GLOBAL(arg=16, lineno=108)
DEBUG:numba.core.byteflow:stack ['$phi188.0']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=109)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$188load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_FAST(arg=12, lineno=110)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$188load_global.1', '$v_packet190.2']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_FAST(arg=16, lineno=111)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$188load_global.1', '$v_packet190.2', '$comov_nu192.3']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=14, lineno=112)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$188load_global.1', '$v_packet190.2', '$comov_nu192.3', '$is_last_line194.4']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=1, lineno=113)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$188load_global.1', '$v_packet190.2', '$comov_nu192.3', '$is_last_line194.4', '$nu_line196.5']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_ATTR(arg=10, lineno=113)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$188load_global.1', '$v_packet190.2', '$comov_nu192.3', '$is_last_line194.4', '$nu_line196.5', '$numba_model198.6']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=CALL_FUNCTION(arg=5, lineno=113)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$188load_global.1', '$v_packet190.2', '$comov_nu192.3', '$is_last_line194.4', '$nu_line196.5', '$200load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=STORE_FAST(arg=17, lineno=113)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$202call_function.8']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_FAST(arg=13, lineno=116)
DEBUG:numba.core.byteflow:stack ['$phi188.0']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_GLOBAL(arg=13, lineno=116)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$cur_line_id206.9']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_FAST(arg=2, lineno=116)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$cur_line_id206.9', '$208load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=LOAD_ATTR(arg=14, lineno=116)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$cur_line_id206.9', '$208load_global.10', '$numba_plasma210.11']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=CALL_FUNCTION(arg=1, lineno=116)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$cur_line_id206.9', '$208load_global.10', '$212load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=LOAD_CONST(arg=1, lineno=116)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$cur_line_id206.9', '$214call_function.13']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=116)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$cur_line_id206.9', '$214call_function.13', '$const216.14']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=COMPARE_OP(arg=3, lineno=116)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$cur_line_id206.9', '$218binary_subtract.15']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=POP_JUMP_IF_FALSE(arg=248, lineno=116)
DEBUG:numba.core.byteflow:stack ['$phi188.0', '$220compare_op.16']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=224, stack=('$phi188.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=248, stack=('$phi188.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=188 nstack_initial=1), State(pc_initial=300 nstack_initial=0), State(pc_initial=224 nstack_initial=1), State(pc_initial=248 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=224 nstack_initial=1), State(pc_initial=248 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=224 nstack_initial=1), State(pc_initial=248 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi224.0']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_GLOBAL(arg=17, lineno=117)
DEBUG:numba.core.byteflow:stack ['$phi224.0']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_FAST(arg=0, lineno=118)
DEBUG:numba.core.byteflow:stack ['$phi224.0', '$224load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=LOAD_FAST(arg=13, lineno=119)
DEBUG:numba.core.byteflow:stack ['$phi224.0', '$224load_global.1', '$v_packet226.2']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_FAST(arg=2, lineno=120)
DEBUG:numba.core.byteflow:stack ['$phi224.0', '$224load_global.1', '$v_packet226.2', '$cur_line_id228.3']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_ATTR(arg=14, lineno=120)
DEBUG:numba.core.byteflow:stack ['$phi224.0', '$224load_global.1', '$v_packet226.2', '$cur_line_id228.3', '$numba_plasma230.4']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_FAST(arg=13, lineno=120)
DEBUG:numba.core.byteflow:stack ['$phi224.0', '$224load_global.1', '$v_packet226.2', '$cur_line_id228.3', '$232load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=LOAD_CONST(arg=1, lineno=120)
DEBUG:numba.core.byteflow:stack ['$phi224.0', '$224load_global.1', '$v_packet226.2', '$cur_line_id228.3', '$232load_attr.5', '$cur_line_id234.6']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=BINARY_SUBTRACT(arg=None, lineno=120)
DEBUG:numba.core.byteflow:stack ['$phi224.0', '$224load_global.1', '$v_packet226.2', '$cur_line_id228.3', '$232load_attr.5', '$cur_line_id234.6', '$const236.7']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=BINARY_SUBSCR(arg=None, lineno=120)
DEBUG:numba.core.byteflow:stack ['$phi224.0', '$224load_global.1', '$v_packet226.2', '$cur_line_id228.3', '$232load_attr.5', '$238binary_subtract.8']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_FAST(arg=2, lineno=121)
DEBUG:numba.core.byteflow:stack ['$phi224.0', '$224load_global.1', '$v_packet226.2', '$cur_line_id228.3', '$240binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=CALL_FUNCTION(arg=4, lineno=121)
DEBUG:numba.core.byteflow:stack ['$phi224.0', '$224load_global.1', '$v_packet226.2', '$cur_line_id228.3', '$240binary_subscr.9', '$numba_plasma242.10']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=POP_TOP(arg=None, lineno=121)
DEBUG:numba.core.byteflow:stack ['$phi224.0', '$244call_function.11']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=248, stack=('$phi224.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=248 nstack_initial=1), State(pc_initial=248 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi248.0']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=5, lineno=124)
DEBUG:numba.core.byteflow:stack ['$phi248.0']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=17, lineno=124)
DEBUG:numba.core.byteflow:stack ['$phi248.0', '$distance_boundary248.1']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=COMPARE_OP(arg=1, lineno=124)
DEBUG:numba.core.byteflow:stack ['$phi248.0', '$distance_boundary248.1', '$distance_trace_line250.2']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=POP_JUMP_IF_FALSE(arg=260, lineno=124)
DEBUG:numba.core.byteflow:stack ['$phi248.0', '$252compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=258, stack=('$phi248.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=260, stack=('$phi248.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=248 nstack_initial=1), State(pc_initial=258 nstack_initial=1), State(pc_initial=260 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=258 nstack_initial=1), State(pc_initial=260 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi258.0']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=BREAK_LOOP(arg=None, lineno=125)
DEBUG:numba.core.byteflow:stack ['$phi258.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=260 nstack_initial=1), State(pc_initial=300 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi260.0']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=10, lineno=127)
DEBUG:numba.core.byteflow:stack ['$phi260.0']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=15, lineno=127)
DEBUG:numba.core.byteflow:stack ['$phi260.0', '$tau_trace_combined260.1']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=INPLACE_ADD(arg=None, lineno=127)
DEBUG:numba.core.byteflow:stack ['$phi260.0', '$tau_trace_combined260.1', '$tau_trace_line262.2']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=STORE_FAST(arg=10, lineno=127)
DEBUG:numba.core.byteflow:stack ['$phi260.0', '$264inplace_add.3']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=JUMP_ABSOLUTE(arg=130, lineno=127)
DEBUG:numba.core.byteflow:stack ['$phi260.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=130, stack=('$phi260.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=130 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=130 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=1): {'$phi130.0'},
             State(pc_initial=132 nstack_initial=2): {'$phi132.1'},
             State(pc_initial=178 nstack_initial=1): set(),
             State(pc_initial=184 nstack_initial=1): set(),
             State(pc_initial=188 nstack_initial=1): set(),
             State(pc_initial=224 nstack_initial=1): set(),
             State(pc_initial=248 nstack_initial=1): set(),
             State(pc_initial=258 nstack_initial=1): set(),
             State(pc_initial=260 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=0): set(),
             State(pc_initial=272 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=300 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi130.0': State(pc_initial=112 nstack_initial=0),
 '$phi132.1': State(pc_initial=130 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi130.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0)),
                           ('$phi260.0',
                            State(pc_initial=260 nstack_initial=1))},
             '$phi132.0': {('$phi130.0',
                            State(pc_initial=130 nstack_initial=1))},
             '$phi132.1': {('$130for_iter.2',
                            State(pc_initial=130 nstack_initial=1))},
             '$phi178.0': {('$phi132.0',
                            State(pc_initial=132 nstack_initial=2))},
             '$phi184.0': {('$phi132.0',
                            State(pc_initial=132 nstack_initial=2))},
             '$phi188.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1)),
                           ('$phi184.0',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi224.0': {('$phi188.0',
                            State(pc_initial=188 nstack_initial=1))},
             '$phi248.0': {('$phi188.0',
                            State(pc_initial=188 nstack_initial=1)),
                           ('$phi224.0',
                            State(pc_initial=224 nstack_initial=1))},
             '$phi258.0': {('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi260.0': {('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi130.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0)),
                           ('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi132.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0)),
                           ('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi132.1': {('$130for_iter.2',
                            State(pc_initial=130 nstack_initial=1))},
             '$phi178.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0)),
                           ('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi184.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0)),
                           ('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi188.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0)),
                           ('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi224.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0)),
                           ('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi248.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0)),
                           ('$phi248.0',
                            State(pc_initial=248 nstack_initial=1))},
             '$phi258.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi260.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi130.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi132.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi132.1': {('$130for_iter.2',
                            State(pc_initial=130 nstack_initial=1))},
             '$phi178.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi184.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi188.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi224.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi248.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi258.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi260.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi130.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi132.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi132.1': {('$130for_iter.2',
                            State(pc_initial=130 nstack_initial=1))},
             '$phi178.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi184.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi188.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi224.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi248.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi258.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))},
             '$phi260.0': {('$128get_iter.7',
                            State(pc_initial=112 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi130.0': {('$128get_iter.7', State(pc_initial=112 nstack_initial=0))},
 '$phi132.1': {('$130for_iter.2', State(pc_initial=130 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=112 nstack_initial=0): {'$phi130.0': '$128get_iter.7'},
             State(pc_initial=130 nstack_initial=1): {'$phi132.1': '$130for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$numba_model2.0'}), (4, {'item': '$numba_model2.0', 'res': '$4load_attr.1'}), (6, {'res': '$v_packet6.2'}), (8, {'item': '$v_packet6.2', 'res': '$8load_attr.3'}), (10, {'index': '$8load_attr.3', 'target': '$4load_attr.1', 'res': '$10binary_subscr.4'}), (12, {'value': '$10binary_subscr.4'}), (14, {'res': '$numba_model14.5'}), (16, {'item': '$numba_model14.5', 'res': '$16load_attr.6'}), (18, {'res': '$v_packet18.7'}), (20, {'item': '$v_packet18.7', 'res': '$20load_attr.8'}), (22, {'index': '$20load_attr.8', 'target': '$16load_attr.6', 'res': '$22binary_subscr.9'}), (24, {'value': '$22binary_subscr.9'}), (26, {'res': '$26load_global.10'}), (28, {'res': '$v_packet28.11'}), (30, {'item': '$v_packet28.11', 'res': '$30load_attr.12'}), (32, {'res': '$v_packet32.13'}), (34, {'item': '$v_packet32.13', 'res': '$34load_attr.14'}), (36, {'res': '$r_inner36.15'}), (38, {'res': '$r_outer38.16'}), (40, {'func': '$26load_global.10', 'args': ['$30load_attr.12', '$34load_attr.14', '$r_inner36.15', '$r_outer38.16'], 'res': '$40call_function.17'}), (42, {'iterable': '$40call_function.17', 'stores': ['$42unpack_sequence.18', '$42unpack_sequence.19'], 'tupleobj': '$42unpack_sequence.20'}), (44, {'value': '$42unpack_sequence.18'}), (46, {'value': '$42unpack_sequence.19'}), (48, {'res': '$v_packet48.21'}), (50, {'item': '$v_packet48.21', 'res': '$50load_attr.22'}), (52, {'value': '$50load_attr.22'}), (54, {'res': '$numba_plasma54.23'}), (56, {'item': '$numba_plasma54.23', 'res': '$56load_attr.24'}), (58, {'res': '$v_packet58.25'}), (60, {'item': '$v_packet58.25', 'res': '$60load_attr.26'}), (62, {'index': '$60load_attr.26', 'target': '$56load_attr.24', 'res': '$62binary_subscr.27'}), (64, {'value': '$62binary_subscr.27'}), (66, {'res': '$66load_global.28'}), (68, {'res': '$cur_electron_density68.29'}), (70, {'res': '$distance_boundary70.30'}), (72, {'func': '$66load_global.28', 'args': ['$cur_electron_density68.29', '$distance_boundary70.30'], 'res': '$72call_function.31'}), (74, {'value': '$72call_function.31'}), (76, {'res': '$tau_electron76.32'}), (78, {'value': '$tau_electron76.32'}), (80, {'res': '$80load_global.33'}), (82, {'res': '$v_packet82.34'}), (84, {'item': '$v_packet82.34', 'res': '$84load_attr.35'}), (86, {'res': '$v_packet86.36'}), (88, {'item': '$v_packet86.36', 'res': '$88load_attr.37'}), (90, {'res': '$numba_model90.38'}), (92, {'item': '$numba_model90.38', 'res': '$92load_attr.39'}), (94, {'func': '$80load_global.33', 'args': ['$84load_attr.35', '$88load_attr.37', '$92load_attr.39'], 'res': '$94call_function.40'}), (96, {'value': '$94call_function.40'}), (98, {'res': '$v_packet98.41'}), (100, {'item': '$v_packet98.41', 'res': '$100load_attr.42'}), (102, {'res': '$doppler_factor102.43'}), (104, {'lhs': '$100load_attr.42', 'rhs': '$doppler_factor102.43', 'res': '$104binary_multiply.44'}), (106, {'value': '$104binary_multiply.44'}), (108, {'res': '$start_line_id108.45'}), (110, {'value': '$start_line_id108.45'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'res': '$start_line_id116.1'}), (118, {'res': '$118load_global.2'}), (120, {'res': '$numba_plasma120.3'}), (122, {'item': '$numba_plasma120.3', 'res': '$122load_attr.4'}), (124, {'func': '$118load_global.2', 'args': ['$122load_attr.4'], 'res': '$124call_function.5'}), (126, {'func': '$114load_global.0', 'args': ['$start_line_id116.1', '$124call_function.5'], 'res': '$126call_function.6'}), (128, {'value': '$126call_function.6', 'res': '$128get_iter.7'})), outgoing_phis={'$phi130.0': '$128get_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ('$128get_iter.7',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=130 nstack_initial=1):
AdaptBlockInfo(insts=((130, {'iterator': '$phi130.0', 'pair': '$130for_iter.1', 'indval': '$130for_iter.2', 'pred': '$130for_iter.3'}),), outgoing_phis={'$phi132.1': '$130for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={270: (), 132: ('$phi130.0', '$130for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=132 nstack_initial=2):
AdaptBlockInfo(insts=((132, {'value': '$phi132.1'}), (134, {'res': '$numba_plasma134.2'}), (136, {'item': '$numba_plasma134.2', 'res': '$136load_attr.3'}), (138, {'res': '$cur_line_id138.4'}), (140, {'index': '$cur_line_id138.4', 'target': '$136load_attr.3', 'res': '$140binary_subscr.5'}), (142, {'value': '$140binary_subscr.5'}), (144, {'res': '$numba_plasma144.6'}), (146, {'item': '$numba_plasma144.6', 'res': '$146load_attr.7'}), (148, {'res': '$cur_line_id148.8'}), (150, {'res': '$v_packet150.9'}), (152, {'item': '$v_packet150.9', 'res': '$152load_attr.10'}), (154, {'items': ['$cur_line_id148.8', '$152load_attr.10'], 'res': '$154build_tuple.11'}), (156, {'index': '$154build_tuple.11', 'target': '$146load_attr.7', 'res': '$156binary_subscr.12'}), (158, {'value': '$156binary_subscr.12'}), (160, {'res': '$cur_line_id160.13'}), (162, {'res': '$162load_global.14'}), (164, {'res': '$numba_plasma164.15'}), (166, {'item': '$numba_plasma164.15', 'res': '$166load_attr.16'}), (168, {'func': '$162load_global.14', 'args': ['$166load_attr.16'], 'res': '$168call_function.17'}), (170, {'res': '$const170.18'}), (172, {'lhs': '$168call_function.17', 'rhs': '$const170.18', 'res': '$172binary_subtract.19'}), (174, {'lhs': '$cur_line_id160.13', 'rhs': '$172binary_subtract.19', 'res': '$174compare_op.20'}), (176, {'pred': '$174compare_op.20'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={178: ('$phi132.0',), 184: ('$phi132.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'res': '$const178.1'}), (180, {'value': '$const178.1'}), (182, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={188: ('$phi178.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=184 nstack_initial=1):
AdaptBlockInfo(insts=((184, {'res': '$const184.1'}), (186, {'value': '$const184.1'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={188: ('$phi184.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=188 nstack_initial=1):
AdaptBlockInfo(insts=((188, {'res': '$188load_global.1'}), (190, {'res': '$v_packet190.2'}), (192, {'res': '$comov_nu192.3'}), (194, {'res': '$is_last_line194.4'}), (196, {'res': '$nu_line196.5'}), (198, {'res': '$numba_model198.6'}), (200, {'item': '$numba_model198.6', 'res': '$200load_attr.7'}), (202, {'func': '$188load_global.1', 'args': ['$v_packet190.2', '$comov_nu192.3', '$is_last_line194.4', '$nu_line196.5', '$200load_attr.7'], 'res': '$202call_function.8'}), (204, {'value': '$202call_function.8'}), (206, {'res': '$cur_line_id206.9'}), (208, {'res': '$208load_global.10'}), (210, {'res': '$numba_plasma210.11'}), (212, {'item': '$numba_plasma210.11', 'res': '$212load_attr.12'}), (214, {'func': '$208load_global.10', 'args': ['$212load_attr.12'], 'res': '$214call_function.13'}), (216, {'res': '$const216.14'}), (218, {'lhs': '$214call_function.13', 'rhs': '$const216.14', 'res': '$218binary_subtract.15'}), (220, {'lhs': '$cur_line_id206.9', 'rhs': '$218binary_subtract.15', 'res': '$220compare_op.16'}), (222, {'pred': '$220compare_op.16'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={224: ('$phi188.0',), 248: ('$phi188.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=224 nstack_initial=1):
AdaptBlockInfo(insts=((224, {'res': '$224load_global.1'}), (226, {'res': '$v_packet226.2'}), (228, {'res': '$cur_line_id228.3'}), (230, {'res': '$numba_plasma230.4'}), (232, {'item': '$numba_plasma230.4', 'res': '$232load_attr.5'}), (234, {'res': '$cur_line_id234.6'}), (236, {'res': '$const236.7'}), (238, {'lhs': '$cur_line_id234.6', 'rhs': '$const236.7', 'res': '$238binary_subtract.8'}), (240, {'index': '$238binary_subtract.8', 'target': '$232load_attr.5', 'res': '$240binary_subscr.9'}), (242, {'res': '$numba_plasma242.10'}), (244, {'func': '$224load_global.1', 'args': ['$v_packet226.2', '$cur_line_id228.3', '$240binary_subscr.9', '$numba_plasma242.10'], 'res': '$244call_function.11'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={248: ('$phi224.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=248 nstack_initial=1):
AdaptBlockInfo(insts=((248, {'res': '$distance_boundary248.1'}), (250, {'res': '$distance_trace_line250.2'}), (252, {'lhs': '$distance_boundary248.1', 'rhs': '$distance_trace_line250.2', 'res': '$252compare_op.3'}), (254, {'pred': '$252compare_op.3'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={258: ('$phi248.0',), 260: ('$phi248.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=258 nstack_initial=1):
AdaptBlockInfo(insts=((258, {'end': 300}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={300: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=260 nstack_initial=1):
AdaptBlockInfo(insts=((260, {'res': '$tau_trace_combined260.1'}), (262, {'res': '$tau_trace_line262.2'}), (264, {'lhs': '$tau_trace_combined260.1', 'rhs': '$tau_trace_line262.2', 'res': '$264inplace_add.3'}), (266, {'value': '$264inplace_add.3'}), (268, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={130: ('$phi260.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=270 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 300, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={272: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=272 nstack_initial=0):
AdaptBlockInfo(insts=((272, {'res': '$cur_line_id272.0'}), (274, {'res': '$274load_global.1'}), (276, {'res': '$numba_plasma276.2'}), (278, {'item': '$numba_plasma276.2', 'res': '$278load_attr.3'}), (280, {'func': '$274load_global.1', 'args': ['$278load_attr.3'], 'res': '$280call_function.4'}), (282, {'res': '$const282.5'}), (284, {'lhs': '$280call_function.4', 'rhs': '$const282.5', 'res': '$284binary_subtract.6'}), (286, {'lhs': '$cur_line_id272.0', 'rhs': '$284binary_subtract.6', 'res': '$286compare_op.7'}), (288, {'pred': '$286compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 300: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$cur_line_id292.0'}), (294, {'res': '$const294.1'}), (296, {'lhs': '$cur_line_id292.0', 'rhs': '$const294.1', 'res': '$296inplace_add.2'}), (298, {'value': '$296inplace_add.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$cur_line_id300.0'}), (302, {'res': '$v_packet302.1'}), (304, {'target': '$v_packet302.1', 'value': '$cur_line_id300.0'}), (306, {'res': '$tau_trace_combined306.2'}), (308, {'res': '$distance_boundary308.3'}), (310, {'res': '$delta_shell310.4'}), (312, {'items': ['$tau_trace_combined306.2', '$distance_boundary308.3', '$delta_shell310.4'], 'res': '$312build_tuple.5'}), (314, {'retval': '$312build_tuple.5', 'castval': '$314return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    v_packet = arg(0, name=v_packet)         ['v_packet']
    numba_model = arg(1, name=numba_model)   ['numba_model']
    numba_plasma = arg(2, name=numba_plasma) ['numba_plasma']
    $4load_attr.1 = getattr(value=numba_model, attr=r_inner) ['$4load_attr.1', 'numba_model']
    $8load_attr.3 = getattr(value=v_packet, attr=current_shell_id) ['$8load_attr.3', 'v_packet']
    $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3) ['$10binary_subscr.4', '$4load_attr.1', '$8load_attr.3']
    r_inner = $10binary_subscr.4             ['$10binary_subscr.4', 'r_inner']
    $16load_attr.6 = getattr(value=numba_model, attr=r_outer) ['$16load_attr.6', 'numba_model']
    $20load_attr.8 = getattr(value=v_packet, attr=current_shell_id) ['$20load_attr.8', 'v_packet']
    $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8) ['$16load_attr.6', '$20load_attr.8', '$22binary_subscr.9']
    r_outer = $22binary_subscr.9             ['$22binary_subscr.9', 'r_outer']
    $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>)) ['$26load_global.10']
    $30load_attr.12 = getattr(value=v_packet, attr=r) ['$30load_attr.12', 'v_packet']
    $34load_attr.14 = getattr(value=v_packet, attr=mu) ['$34load_attr.14', 'v_packet']
    $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, vpacket.py:70), Var($34load_attr.14, vpacket.py:70), Var(r_inner, vpacket.py:66), Var(r_outer, vpacket.py:67)], kws=(), vararg=None) ['$26load_global.10', '$30load_attr.12', '$34load_attr.14', '$40call_function.17', 'r_inner', 'r_outer']
    $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2) ['$40call_function.17', '$42unpack_sequence.20']
    $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None) ['$42unpack_sequence.18', '$42unpack_sequence.20']
    $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None) ['$42unpack_sequence.19', '$42unpack_sequence.20']
    distance_boundary = $42unpack_sequence.18 ['$42unpack_sequence.18', 'distance_boundary']
    delta_shell = $42unpack_sequence.19      ['$42unpack_sequence.19', 'delta_shell']
    $50load_attr.22 = getattr(value=v_packet, attr=next_line_id) ['$50load_attr.22', 'v_packet']
    start_line_id = $50load_attr.22          ['$50load_attr.22', 'start_line_id']
    $56load_attr.24 = getattr(value=numba_plasma, attr=electron_density) ['$56load_attr.24', 'numba_plasma']
    $60load_attr.26 = getattr(value=v_packet, attr=current_shell_id) ['$60load_attr.26', 'v_packet']
    $62binary_subscr.27 = getitem(value=$56load_attr.24, index=$60load_attr.26) ['$56load_attr.24', '$60load_attr.26', '$62binary_subscr.27']
    cur_electron_density = $62binary_subscr.27 ['$62binary_subscr.27', 'cur_electron_density']
    $66load_global.28 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>)) ['$66load_global.28']
    $72call_function.31 = call $66load_global.28(cur_electron_density, distance_boundary, func=$66load_global.28, args=[Var(cur_electron_density, vpacket.py:78), Var(distance_boundary, vpacket.py:70)], kws=(), vararg=None) ['$66load_global.28', '$72call_function.31', 'cur_electron_density', 'distance_boundary']
    tau_electron = $72call_function.31       ['$72call_function.31', 'tau_electron']
    tau_trace_combined = tau_electron        ['tau_electron', 'tau_trace_combined']
    $80load_global.33 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>)) ['$80load_global.33']
    $84load_attr.35 = getattr(value=v_packet, attr=r) ['$84load_attr.35', 'v_packet']
    $88load_attr.37 = getattr(value=v_packet, attr=mu) ['$88load_attr.37', 'v_packet']
    $92load_attr.39 = getattr(value=numba_model, attr=time_explosion) ['$92load_attr.39', 'numba_model']
    $94call_function.40 = call $80load_global.33($84load_attr.35, $88load_attr.37, $92load_attr.39, func=$80load_global.33, args=[Var($84load_attr.35, vpacket.py:87), Var($88load_attr.37, vpacket.py:87), Var($92load_attr.39, vpacket.py:87)], kws=(), vararg=None) ['$80load_global.33', '$84load_attr.35', '$88load_attr.37', '$92load_attr.39', '$94call_function.40']
    doppler_factor = $94call_function.40     ['$94call_function.40', 'doppler_factor']
    $100load_attr.42 = getattr(value=v_packet, attr=nu) ['$100load_attr.42', 'v_packet']
    $104binary_multiply.44 = $100load_attr.42 * doppler_factor ['$100load_attr.42', '$104binary_multiply.44', 'doppler_factor']
    comov_nu = $104binary_multiply.44        ['$104binary_multiply.44', 'comov_nu']
    cur_line_id = start_line_id              ['cur_line_id', 'start_line_id']
    jump 112                                 []
label 112:
    $114load_global.0 = global(range: <class 'range'>) ['$114load_global.0']
    $118load_global.2 = global(len: <built-in function len>) ['$118load_global.2']
    $122load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu) ['$122load_attr.4', 'numba_plasma']
    $124call_function.5 = call $118load_global.2($122load_attr.4, func=$118load_global.2, args=[Var($122load_attr.4, vpacket.py:92)], kws=(), vararg=None) ['$118load_global.2', '$122load_attr.4', '$124call_function.5']
    $126call_function.6 = call $114load_global.0(start_line_id, $124call_function.5, func=$114load_global.0, args=[Var(start_line_id, vpacket.py:73), Var($124call_function.5, vpacket.py:92)], kws=(), vararg=None) ['$114load_global.0', '$124call_function.5', '$126call_function.6', 'start_line_id']
    $128get_iter.7 = getiter(value=$126call_function.6) ['$126call_function.6', '$128get_iter.7']
    $phi130.0 = $128get_iter.7               ['$128get_iter.7', '$phi130.0']
    jump 130                                 []
label 130:
    $130for_iter.1 = iternext(value=$phi130.0) ['$130for_iter.1', '$phi130.0']
    $130for_iter.2 = pair_first(value=$130for_iter.1) ['$130for_iter.1', '$130for_iter.2']
    $130for_iter.3 = pair_second(value=$130for_iter.1) ['$130for_iter.1', '$130for_iter.3']
    $phi132.1 = $130for_iter.2               ['$130for_iter.2', '$phi132.1']
    branch $130for_iter.3, 132, 270          ['$130for_iter.3']
label 132:
    cur_line_id = $phi132.1                  ['$phi132.1', 'cur_line_id']
    $136load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu) ['$136load_attr.3', 'numba_plasma']
    $140binary_subscr.5 = getitem(value=$136load_attr.3, index=cur_line_id) ['$136load_attr.3', '$140binary_subscr.5', 'cur_line_id']
    nu_line = $140binary_subscr.5            ['$140binary_subscr.5', 'nu_line']
    $146load_attr.7 = getattr(value=numba_plasma, attr=tau_sobolev) ['$146load_attr.7', 'numba_plasma']
    $152load_attr.10 = getattr(value=v_packet, attr=current_shell_id) ['$152load_attr.10', 'v_packet']
    $154build_tuple.11 = build_tuple(items=[Var(cur_line_id, vpacket.py:90), Var($152load_attr.10, vpacket.py:100)]) ['$152load_attr.10', '$154build_tuple.11', 'cur_line_id']
    $156binary_subscr.12 = getitem(value=$146load_attr.7, index=$154build_tuple.11) ['$146load_attr.7', '$154build_tuple.11', '$156binary_subscr.12']
    tau_trace_line = $156binary_subscr.12    ['$156binary_subscr.12', 'tau_trace_line']
    $162load_global.14 = global(len: <built-in function len>) ['$162load_global.14']
    $166load_attr.16 = getattr(value=numba_plasma, attr=line_list_nu) ['$166load_attr.16', 'numba_plasma']
    $168call_function.17 = call $162load_global.14($166load_attr.16, func=$162load_global.14, args=[Var($166load_attr.16, vpacket.py:103)], kws=(), vararg=None) ['$162load_global.14', '$166load_attr.16', '$168call_function.17']
    $const170.18 = const(int, 1)             ['$const170.18']
    $172binary_subtract.19 = $168call_function.17 - $const170.18 ['$168call_function.17', '$172binary_subtract.19', '$const170.18']
    $174compare_op.20 = cur_line_id == $172binary_subtract.19 ['$172binary_subtract.19', '$174compare_op.20', 'cur_line_id']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($174compare_op.20, func=bool176, args=(Var($174compare_op.20, vpacket.py:103),), kws=(), vararg=None) ['$174compare_op.20', '$176pred', 'bool176']
    branch $176pred, 178, 184                ['$176pred']
label 178:
    $const178.1 = const(bool, True)          ['$const178.1']
    is_last_line = $const178.1               ['$const178.1', 'is_last_line']
    jump 188                                 []
label 184:
    $const184.1 = const(bool, False)         ['$const184.1']
    is_last_line = $const184.1               ['$const184.1', 'is_last_line']
    jump 188                                 []
label 188:
    $188load_global.1 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>)) ['$188load_global.1']
    $200load_attr.7 = getattr(value=numba_model, attr=time_explosion) ['$200load_attr.7', 'numba_model']
    $202call_function.8 = call $188load_global.1(v_packet, comov_nu, is_last_line, nu_line, $200load_attr.7, func=$188load_global.1, args=[Var(v_packet, vpacket.py:66), Var(comov_nu, vpacket.py:89), Var(is_last_line, vpacket.py:104), Var(nu_line, vpacket.py:96), Var($200load_attr.7, vpacket.py:113)], kws=(), vararg=None) ['$188load_global.1', '$200load_attr.7', '$202call_function.8', 'comov_nu', 'is_last_line', 'nu_line', 'v_packet']
    distance_trace_line = $202call_function.8 ['$202call_function.8', 'distance_trace_line']
    $208load_global.10 = global(len: <built-in function len>) ['$208load_global.10']
    $212load_attr.12 = getattr(value=numba_plasma, attr=line_list_nu) ['$212load_attr.12', 'numba_plasma']
    $214call_function.13 = call $208load_global.10($212load_attr.12, func=$208load_global.10, args=[Var($212load_attr.12, vpacket.py:116)], kws=(), vararg=None) ['$208load_global.10', '$212load_attr.12', '$214call_function.13']
    $const216.14 = const(int, 1)             ['$const216.14']
    $218binary_subtract.15 = $214call_function.13 - $const216.14 ['$214call_function.13', '$218binary_subtract.15', '$const216.14']
    $220compare_op.16 = cur_line_id != $218binary_subtract.15 ['$218binary_subtract.15', '$220compare_op.16', 'cur_line_id']
    bool222 = global(bool: <class 'bool'>)   ['bool222']
    $222pred = call bool222($220compare_op.16, func=bool222, args=(Var($220compare_op.16, vpacket.py:116),), kws=(), vararg=None) ['$220compare_op.16', '$222pred', 'bool222']
    branch $222pred, 224, 248                ['$222pred']
label 224:
    $224load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>)) ['$224load_global.1']
    $232load_attr.5 = getattr(value=numba_plasma, attr=line_list_nu) ['$232load_attr.5', 'numba_plasma']
    $const236.7 = const(int, 1)              ['$const236.7']
    $238binary_subtract.8 = cur_line_id - $const236.7 ['$238binary_subtract.8', '$const236.7', 'cur_line_id']
    $240binary_subscr.9 = getitem(value=$232load_attr.5, index=$238binary_subtract.8) ['$232load_attr.5', '$238binary_subtract.8', '$240binary_subscr.9']
    $244call_function.11 = call $224load_global.1(v_packet, cur_line_id, $240binary_subscr.9, numba_plasma, func=$224load_global.1, args=[Var(v_packet, vpacket.py:66), Var(cur_line_id, vpacket.py:90), Var($240binary_subscr.9, vpacket.py:120), Var(numba_plasma, vpacket.py:66)], kws=(), vararg=None) ['$224load_global.1', '$240binary_subscr.9', '$244call_function.11', 'cur_line_id', 'numba_plasma', 'v_packet']
    jump 248                                 []
label 248:
    $252compare_op.3 = distance_boundary <= distance_trace_line ['$252compare_op.3', 'distance_boundary', 'distance_trace_line']
    bool254 = global(bool: <class 'bool'>)   ['bool254']
    $254pred = call bool254($252compare_op.3, func=bool254, args=(Var($252compare_op.3, vpacket.py:124),), kws=(), vararg=None) ['$252compare_op.3', '$254pred', 'bool254']
    branch $254pred, 258, 260                ['$254pred']
label 258:
    jump 300                                 []
label 260:
    $264inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined) ['$264inplace_add.3', 'tau_trace_combined', 'tau_trace_line']
    tau_trace_combined = $264inplace_add.3   ['$264inplace_add.3', 'tau_trace_combined']
    jump 130                                 []
label 270:
    jump 272                                 []
label 272:
    $274load_global.1 = global(len: <built-in function len>) ['$274load_global.1']
    $278load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu) ['$278load_attr.3', 'numba_plasma']
    $280call_function.4 = call $274load_global.1($278load_attr.3, func=$274load_global.1, args=[Var($278load_attr.3, vpacket.py:130)], kws=(), vararg=None) ['$274load_global.1', '$278load_attr.3', '$280call_function.4']
    $const282.5 = const(int, 1)              ['$const282.5']
    $284binary_subtract.6 = $280call_function.4 - $const282.5 ['$280call_function.4', '$284binary_subtract.6', '$const282.5']
    $286compare_op.7 = cur_line_id == $284binary_subtract.6 ['$284binary_subtract.6', '$286compare_op.7', 'cur_line_id']
    bool288 = global(bool: <class 'bool'>)   ['bool288']
    $288pred = call bool288($286compare_op.7, func=bool288, args=(Var($286compare_op.7, vpacket.py:130),), kws=(), vararg=None) ['$286compare_op.7', '$288pred', 'bool288']
    branch $288pred, 292, 300                ['$288pred']
label 292:
    $const294.1 = const(int, 1)              ['$const294.1']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1', 'cur_line_id']
    cur_line_id = $296inplace_add.2          ['$296inplace_add.2', 'cur_line_id']
    jump 300                                 []
label 300:
    (v_packet).next_line_id = cur_line_id    ['cur_line_id', 'v_packet']
    $312build_tuple.5 = build_tuple(items=[Var(tau_trace_combined, vpacket.py:83), Var(distance_boundary, vpacket.py:70), Var(delta_shell, vpacket.py:70)]) ['$312build_tuple.5', 'delta_shell', 'distance_boundary', 'tau_trace_combined']
    $314return_value.6 = cast(value=$312build_tuple.5) ['$312build_tuple.5', '$314return_value.6']
    return $314return_value.6                ['$314return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: v_packet = arg(0, name=v_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, vpacket.py:70), Var($34load_attr.14, vpacket.py:70), Var(r_inner, vpacket.py:66), Var(r_outer, vpacket.py:67)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=v_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $56load_attr.24 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.27 = getitem(value=$56load_attr.24, index=$60load_attr.26)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $62binary_subscr.27
DEBUG:numba.core.ssa:on stmt: $66load_global.28 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $72call_function.31 = call $66load_global.28(cur_electron_density, distance_boundary, func=$66load_global.28, args=[Var(cur_electron_density, vpacket.py:78), Var(distance_boundary, vpacket.py:70)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_electron = $72call_function.31
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = tau_electron
DEBUG:numba.core.ssa:on stmt: $80load_global.33 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $84load_attr.35 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $88load_attr.37 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $92load_attr.39 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $80load_global.33($84load_attr.35, $88load_attr.37, $92load_attr.39, func=$80load_global.33, args=[Var($84load_attr.35, vpacket.py:87), Var($88load_attr.37, vpacket.py:87), Var($92load_attr.39, vpacket.py:87)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $100load_attr.42 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.44 = $100load_attr.42 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $104binary_multiply.44
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block analysis pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $118load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $118load_global.2($122load_attr.4, func=$118load_global.2, args=[Var($122load_attr.4, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_function.6 = call $114load_global.0(start_line_id, $124call_function.5, func=$114load_global.0, args=[Var(start_line_id, vpacket.py:73), Var($124call_function.5, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128get_iter.7 = getiter(value=$126call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi130.0 = $128get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block analysis pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: $130for_iter.1 = iternext(value=$phi130.0)
DEBUG:numba.core.ssa:on stmt: $130for_iter.2 = pair_first(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $130for_iter.3 = pair_second(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi132.1 = $130for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $130for_iter.3, 132, 270
DEBUG:numba.core.ssa:==== SSA block analysis pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: cur_line_id = $phi132.1
DEBUG:numba.core.ssa:on stmt: $136load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.5 = getitem(value=$136load_attr.3, index=cur_line_id)
DEBUG:numba.core.ssa:on stmt: nu_line = $140binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $146load_attr.7 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $152load_attr.10 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $154build_tuple.11 = build_tuple(items=[Var(cur_line_id, vpacket.py:90), Var($152load_attr.10, vpacket.py:100)])
DEBUG:numba.core.ssa:on stmt: $156binary_subscr.12 = getitem(value=$146load_attr.7, index=$154build_tuple.11)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $156binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $162load_global.14 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.16 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $168call_function.17 = call $162load_global.14($166load_attr.16, func=$162load_global.14, args=[Var($166load_attr.16, vpacket.py:103)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const170.18 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $172binary_subtract.19 = $168call_function.17 - $const170.18
DEBUG:numba.core.ssa:on stmt: $174compare_op.20 = cur_line_id == $172binary_subtract.19
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.20, func=bool176, args=(Var($174compare_op.20, vpacket.py:103),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 178, 184
DEBUG:numba.core.ssa:==== SSA block analysis pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: $const178.1 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: is_last_line = $const178.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block analysis pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: $const184.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: is_last_line = $const184.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block analysis pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: $188load_global.1 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $200load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $202call_function.8 = call $188load_global.1(v_packet, comov_nu, is_last_line, nu_line, $200load_attr.7, func=$188load_global.1, args=[Var(v_packet, vpacket.py:66), Var(comov_nu, vpacket.py:89), Var(is_last_line, vpacket.py:104), Var(nu_line, vpacket.py:96), Var($200load_attr.7, vpacket.py:113)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace_line = $202call_function.8
DEBUG:numba.core.ssa:on stmt: $208load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.12 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $214call_function.13 = call $208load_global.10($212load_attr.12, func=$208load_global.10, args=[Var($212load_attr.12, vpacket.py:116)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const216.14 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.15 = $214call_function.13 - $const216.14
DEBUG:numba.core.ssa:on stmt: $220compare_op.16 = cur_line_id != $218binary_subtract.15
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222($220compare_op.16, func=bool222, args=(Var($220compare_op.16, vpacket.py:116),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 224, 248
DEBUG:numba.core.ssa:==== SSA block analysis pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: $224load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $232load_attr.5 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const236.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $238binary_subtract.8 = cur_line_id - $const236.7
DEBUG:numba.core.ssa:on stmt: $240binary_subscr.9 = getitem(value=$232load_attr.5, index=$238binary_subtract.8)
DEBUG:numba.core.ssa:on stmt: $244call_function.11 = call $224load_global.1(v_packet, cur_line_id, $240binary_subscr.9, numba_plasma, func=$224load_global.1, args=[Var(v_packet, vpacket.py:66), Var(cur_line_id, vpacket.py:90), Var($240binary_subscr.9, vpacket.py:120), Var(numba_plasma, vpacket.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 248
DEBUG:numba.core.ssa:==== SSA block analysis pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: $252compare_op.3 = distance_boundary <= distance_trace_line
DEBUG:numba.core.ssa:on stmt: bool254 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $254pred = call bool254($252compare_op.3, func=bool254, args=(Var($252compare_op.3, vpacket.py:124),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $254pred, 258, 260
DEBUG:numba.core.ssa:==== SSA block analysis pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block analysis pass on 260
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: $264inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $264inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block analysis pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block analysis pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: $274load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $280call_function.4 = call $274load_global.1($278load_attr.3, func=$274load_global.1, args=[Var($278load_attr.3, vpacket.py:130)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const282.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.6 = $280call_function.4 - $const282.5
DEBUG:numba.core.ssa:on stmt: $286compare_op.7 = cur_line_id == $284binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.7, func=bool288, args=(Var($286compare_op.7, vpacket.py:130),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 300
DEBUG:numba.core.ssa:==== SSA block analysis pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: $const294.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id = $296inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block analysis pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45afa850>
DEBUG:numba.core.ssa:on stmt: (v_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:on stmt: $312build_tuple.5 = build_tuple(items=[Var(tau_trace_combined, vpacket.py:83), Var(distance_boundary, vpacket.py:70), Var(delta_shell, vpacket.py:70)])
DEBUG:numba.core.ssa:on stmt: $314return_value.6 = cast(value=$312build_tuple.5)
DEBUG:numba.core.ssa:on stmt: return $314return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100load_attr.42': [<numba.core.ir.Assign object at 0x7f6e463de510>],
             '$104binary_multiply.44': [<numba.core.ir.Assign object at 0x7f6e463debd0>],
             '$10binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e45fd0250>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f6e45cebc50>],
             '$118load_global.2': [<numba.core.ir.Assign object at 0x7f6e45cebc10>],
             '$122load_attr.4': [<numba.core.ir.Assign object at 0x7f6e463de650>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f6e463de950>],
             '$126call_function.6': [<numba.core.ir.Assign object at 0x7f6e463decd0>],
             '$128get_iter.7': [<numba.core.ir.Assign object at 0x7f6e463de990>],
             '$130for_iter.1': [<numba.core.ir.Assign object at 0x7f6e463de210>],
             '$130for_iter.2': [<numba.core.ir.Assign object at 0x7f6e463ded90>],
             '$130for_iter.3': [<numba.core.ir.Assign object at 0x7f6e463dea90>],
             '$136load_attr.3': [<numba.core.ir.Assign object at 0x7f6e463de150>],
             '$140binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e45d04910>],
             '$146load_attr.7': [<numba.core.ir.Assign object at 0x7f6e45d04b10>],
             '$152load_attr.10': [<numba.core.ir.Assign object at 0x7f6e45d04650>],
             '$154build_tuple.11': [<numba.core.ir.Assign object at 0x7f6e45d049d0>],
             '$156binary_subscr.12': [<numba.core.ir.Assign object at 0x7f6e45d04b90>],
             '$162load_global.14': [<numba.core.ir.Assign object at 0x7f6e45d04950>],
             '$166load_attr.16': [<numba.core.ir.Assign object at 0x7f6e45d04a50>],
             '$168call_function.17': [<numba.core.ir.Assign object at 0x7f6e45d04a10>],
             '$16load_attr.6': [<numba.core.ir.Assign object at 0x7f6e45fd03d0>],
             '$172binary_subtract.19': [<numba.core.ir.Assign object at 0x7f6e4610c290>],
             '$174compare_op.20': [<numba.core.ir.Assign object at 0x7f6e4610c1d0>],
             '$176pred': [<numba.core.ir.Assign object at 0x7f6e46005b10>],
             '$188load_global.1': [<numba.core.ir.Assign object at 0x7f6e460050d0>],
             '$200load_attr.7': [<numba.core.ir.Assign object at 0x7f6e463d5bd0>],
             '$202call_function.8': [<numba.core.ir.Assign object at 0x7f6e463d5e50>],
             '$208load_global.10': [<numba.core.ir.Assign object at 0x7f6e463d5150>],
             '$20load_attr.8': [<numba.core.ir.Assign object at 0x7f6e45fd0590>],
             '$212load_attr.12': [<numba.core.ir.Assign object at 0x7f6e463d5490>],
             '$214call_function.13': [<numba.core.ir.Assign object at 0x7f6e463d55d0>],
             '$218binary_subtract.15': [<numba.core.ir.Assign object at 0x7f6e463d5b90>],
             '$220compare_op.16': [<numba.core.ir.Assign object at 0x7f6e463d5c10>],
             '$222pred': [<numba.core.ir.Assign object at 0x7f6e45de4810>],
             '$224load_global.1': [<numba.core.ir.Assign object at 0x7f6e46005c90>],
             '$22binary_subscr.9': [<numba.core.ir.Assign object at 0x7f6e45fd0ed0>],
             '$232load_attr.5': [<numba.core.ir.Assign object at 0x7f6e45cd5610>],
             '$238binary_subtract.8': [<numba.core.ir.Assign object at 0x7f6e45cd5e10>],
             '$240binary_subscr.9': [<numba.core.ir.Assign object at 0x7f6e45cd5fd0>],
             '$244call_function.11': [<numba.core.ir.Assign object at 0x7f6e45cd5950>],
             '$252compare_op.3': [<numba.core.ir.Assign object at 0x7f6e45cd53d0>],
             '$254pred': [<numba.core.ir.Assign object at 0x7f6e45cd5310>],
             '$264inplace_add.3': [<numba.core.ir.Assign object at 0x7f6e45d25490>],
             '$26load_global.10': [<numba.core.ir.Assign object at 0x7f6e461d6e90>],
             '$274load_global.1': [<numba.core.ir.Assign object at 0x7f6e45d252d0>],
             '$278load_attr.3': [<numba.core.ir.Assign object at 0x7f6e45d25750>],
             '$280call_function.4': [<numba.core.ir.Assign object at 0x7f6e45d251d0>],
             '$284binary_subtract.6': [<numba.core.ir.Assign object at 0x7f6e45d25d10>],
             '$286compare_op.7': [<numba.core.ir.Assign object at 0x7f6e45d25d50>],
             '$288pred': [<numba.core.ir.Assign object at 0x7f6e45cf6290>],
             '$296inplace_add.2': [<numba.core.ir.Assign object at 0x7f6e4600ca10>],
             '$30load_attr.12': [<numba.core.ir.Assign object at 0x7f6e461d6990>],
             '$312build_tuple.5': [<numba.core.ir.Assign object at 0x7f6e460ce8d0>],
             '$314return_value.6': [<numba.core.ir.Assign object at 0x7f6e460ce9d0>],
             '$34load_attr.14': [<numba.core.ir.Assign object at 0x7f6e461d6f90>],
             '$40call_function.17': [<numba.core.ir.Assign object at 0x7f6e45d54290>],
             '$42unpack_sequence.18': [<numba.core.ir.Assign object at 0x7f6e461a1550>],
             '$42unpack_sequence.19': [<numba.core.ir.Assign object at 0x7f6e461a1a10>],
             '$42unpack_sequence.20': [<numba.core.ir.Assign object at 0x7f6e45d54450>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e460bb650>],
             '$50load_attr.22': [<numba.core.ir.Assign object at 0x7f6e4613f710>],
             '$56load_attr.24': [<numba.core.ir.Assign object at 0x7f6e45cebb90>],
             '$60load_attr.26': [<numba.core.ir.Assign object at 0x7f6e45ceb3d0>],
             '$62binary_subscr.27': [<numba.core.ir.Assign object at 0x7f6e45cebd10>],
             '$66load_global.28': [<numba.core.ir.Assign object at 0x7f6e45cebf50>],
             '$72call_function.31': [<numba.core.ir.Assign object at 0x7f6e45ceb190>],
             '$80load_global.33': [<numba.core.ir.Assign object at 0x7f6e45ceb950>],
             '$84load_attr.35': [<numba.core.ir.Assign object at 0x7f6e45ceb4d0>],
             '$88load_attr.37': [<numba.core.ir.Assign object at 0x7f6e461b1910>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f6e460bbe90>],
             '$92load_attr.39': [<numba.core.ir.Assign object at 0x7f6e45ceb610>],
             '$94call_function.40': [<numba.core.ir.Assign object at 0x7f6e465b2110>],
             '$const170.18': [<numba.core.ir.Assign object at 0x7f6e45d04350>],
             '$const178.1': [<numba.core.ir.Assign object at 0x7f6e463dea10>],
             '$const184.1': [<numba.core.ir.Assign object at 0x7f6e46005910>],
             '$const216.14': [<numba.core.ir.Assign object at 0x7f6e463d5650>],
             '$const236.7': [<numba.core.ir.Assign object at 0x7f6e45cd5650>],
             '$const282.5': [<numba.core.ir.Assign object at 0x7f6e45d254d0>],
             '$const294.1': [<numba.core.ir.Assign object at 0x7f6e4600c990>],
             '$phi130.0': [<numba.core.ir.Assign object at 0x7f6e45fcdfd0>],
             '$phi132.1': [<numba.core.ir.Assign object at 0x7f6e463dedd0>],
             'bool176': [<numba.core.ir.Assign object at 0x7f6e46005a90>],
             'bool222': [<numba.core.ir.Assign object at 0x7f6e463d5950>],
             'bool254': [<numba.core.ir.Assign object at 0x7f6e45cd5ed0>],
             'bool288': [<numba.core.ir.Assign object at 0x7f6e45d25b10>],
             'comov_nu': [<numba.core.ir.Assign object at 0x7f6e463de9d0>],
             'cur_electron_density': [<numba.core.ir.Assign object at 0x7f6e45cebb50>],
             'cur_line_id': [<numba.core.ir.Assign object at 0x7f6e463def50>,
                             <numba.core.ir.Assign object at 0x7f6e463de790>,
                             <numba.core.ir.Assign object at 0x7f6e45d25f50>],
             'delta_shell': [<numba.core.ir.Assign object at 0x7f6e461a1950>],
             'distance_boundary': [<numba.core.ir.Assign object at 0x7f6e461a1290>],
             'distance_trace_line': [<numba.core.ir.Assign object at 0x7f6e463d5e90>],
             'doppler_factor': [<numba.core.ir.Assign object at 0x7f6e465b2150>],
             'is_last_line': [<numba.core.ir.Assign object at 0x7f6e46005fd0>,
                              <numba.core.ir.Assign object at 0x7f6e46005050>],
             'nu_line': [<numba.core.ir.Assign object at 0x7f6e45d045d0>],
             'numba_model': [<numba.core.ir.Assign object at 0x7f6e460bdb10>],
             'numba_plasma': [<numba.core.ir.Assign object at 0x7f6e45fcda10>],
             'r_inner': [<numba.core.ir.Assign object at 0x7f6e45fd0150>],
             'r_outer': [<numba.core.ir.Assign object at 0x7f6e461d6410>],
             'start_line_id': [<numba.core.ir.Assign object at 0x7f6e4613f890>],
             'tau_electron': [<numba.core.ir.Assign object at 0x7f6e45ceb6d0>],
             'tau_trace_combined': [<numba.core.ir.Assign object at 0x7f6e45cebcd0>,
                                    <numba.core.ir.Assign object at 0x7f6e463d5890>],
             'tau_trace_line': [<numba.core.ir.Assign object at 0x7f6e45d04750>],
             'v_packet': [<numba.core.ir.Assign object at 0x7f6e460bd050>]})
DEBUG:numba.core.ssa:SSA violators {'cur_line_id', 'is_last_line', 'tau_trace_combined'}
DEBUG:numba.core.ssa:Fix SSA violator on var cur_line_id
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: v_packet = arg(0, name=v_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, vpacket.py:70), Var($34load_attr.14, vpacket.py:70), Var(r_inner, vpacket.py:66), Var(r_outer, vpacket.py:67)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=v_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $56load_attr.24 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.27 = getitem(value=$56load_attr.24, index=$60load_attr.26)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $62binary_subscr.27
DEBUG:numba.core.ssa:on stmt: $66load_global.28 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $72call_function.31 = call $66load_global.28(cur_electron_density, distance_boundary, func=$66load_global.28, args=[Var(cur_electron_density, vpacket.py:78), Var(distance_boundary, vpacket.py:70)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_electron = $72call_function.31
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = tau_electron
DEBUG:numba.core.ssa:on stmt: $80load_global.33 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $84load_attr.35 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $88load_attr.37 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $92load_attr.39 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $80load_global.33($84load_attr.35, $88load_attr.37, $92load_attr.39, func=$80load_global.33, args=[Var($84load_attr.35, vpacket.py:87), Var($88load_attr.37, vpacket.py:87), Var($92load_attr.39, vpacket.py:87)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $100load_attr.42 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.44 = $100load_attr.42 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $104binary_multiply.44
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:first assign: cur_line_id
DEBUG:numba.core.ssa:replaced with: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $118load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $118load_global.2($122load_attr.4, func=$118load_global.2, args=[Var($122load_attr.4, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_function.6 = call $114load_global.0(start_line_id, $124call_function.5, func=$114load_global.0, args=[Var(start_line_id, vpacket.py:73), Var($124call_function.5, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128get_iter.7 = getiter(value=$126call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi130.0 = $128get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $130for_iter.1 = iternext(value=$phi130.0)
DEBUG:numba.core.ssa:on stmt: $130for_iter.2 = pair_first(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $130for_iter.3 = pair_second(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi132.1 = $130for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $130for_iter.3, 132, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: cur_line_id = $phi132.1
DEBUG:numba.core.ssa:replaced with: cur_line_id.1 = $phi132.1
DEBUG:numba.core.ssa:on stmt: $136load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.5 = getitem(value=$136load_attr.3, index=cur_line_id)
DEBUG:numba.core.ssa:on stmt: nu_line = $140binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $146load_attr.7 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $152load_attr.10 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $154build_tuple.11 = build_tuple(items=[Var(cur_line_id, vpacket.py:90), Var($152load_attr.10, vpacket.py:100)])
DEBUG:numba.core.ssa:on stmt: $156binary_subscr.12 = getitem(value=$146load_attr.7, index=$154build_tuple.11)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $156binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $162load_global.14 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.16 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $168call_function.17 = call $162load_global.14($166load_attr.16, func=$162load_global.14, args=[Var($166load_attr.16, vpacket.py:103)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const170.18 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $172binary_subtract.19 = $168call_function.17 - $const170.18
DEBUG:numba.core.ssa:on stmt: $174compare_op.20 = cur_line_id == $172binary_subtract.19
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.20, func=bool176, args=(Var($174compare_op.20, vpacket.py:103),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 178, 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $const178.1 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: is_last_line = $const178.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $const184.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: is_last_line = $const184.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $188load_global.1 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $200load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $202call_function.8 = call $188load_global.1(v_packet, comov_nu, is_last_line, nu_line, $200load_attr.7, func=$188load_global.1, args=[Var(v_packet, vpacket.py:66), Var(comov_nu, vpacket.py:89), Var(is_last_line, vpacket.py:104), Var(nu_line, vpacket.py:96), Var($200load_attr.7, vpacket.py:113)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace_line = $202call_function.8
DEBUG:numba.core.ssa:on stmt: $208load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.12 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $214call_function.13 = call $208load_global.10($212load_attr.12, func=$208load_global.10, args=[Var($212load_attr.12, vpacket.py:116)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const216.14 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.15 = $214call_function.13 - $const216.14
DEBUG:numba.core.ssa:on stmt: $220compare_op.16 = cur_line_id != $218binary_subtract.15
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222($220compare_op.16, func=bool222, args=(Var($220compare_op.16, vpacket.py:116),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 224, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $224load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $232load_attr.5 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const236.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $238binary_subtract.8 = cur_line_id - $const236.7
DEBUG:numba.core.ssa:on stmt: $240binary_subscr.9 = getitem(value=$232load_attr.5, index=$238binary_subtract.8)
DEBUG:numba.core.ssa:on stmt: $244call_function.11 = call $224load_global.1(v_packet, cur_line_id, $240binary_subscr.9, numba_plasma, func=$224load_global.1, args=[Var(v_packet, vpacket.py:66), Var(cur_line_id, vpacket.py:90), Var($240binary_subscr.9, vpacket.py:120), Var(numba_plasma, vpacket.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $252compare_op.3 = distance_boundary <= distance_trace_line
DEBUG:numba.core.ssa:on stmt: bool254 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $254pred = call bool254($252compare_op.3, func=bool254, args=(Var($252compare_op.3, vpacket.py:124),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $254pred, 258, 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 260
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $264inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $264inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $274load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $280call_function.4 = call $274load_global.1($278load_attr.3, func=$274load_global.1, args=[Var($278load_attr.3, vpacket.py:130)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const282.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.6 = $280call_function.4 - $const282.5
DEBUG:numba.core.ssa:on stmt: $286compare_op.7 = cur_line_id == $284binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.7, func=bool288, args=(Var($286compare_op.7, vpacket.py:130),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $const294.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id = $296inplace_add.2
DEBUG:numba.core.ssa:replaced with: cur_line_id.2 = $296inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: (v_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:on stmt: $312build_tuple.5 = build_tuple(items=[Var(tau_trace_combined, vpacket.py:83), Var(distance_boundary, vpacket.py:70), Var(delta_shell, vpacket.py:70)])
DEBUG:numba.core.ssa:on stmt: $314return_value.6 = cast(value=$312build_tuple.5)
DEBUG:numba.core.ssa:on stmt: return $314return_value.6
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e463cdc90>],
             132: [<numba.core.ir.Assign object at 0x7f6e45dda5d0>],
             292: [<numba.core.ir.Assign object at 0x7f6e460314d0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: v_packet = arg(0, name=v_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, vpacket.py:70), Var($34load_attr.14, vpacket.py:70), Var(r_inner, vpacket.py:66), Var(r_outer, vpacket.py:67)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=v_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $56load_attr.24 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.27 = getitem(value=$56load_attr.24, index=$60load_attr.26)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $62binary_subscr.27
DEBUG:numba.core.ssa:on stmt: $66load_global.28 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $72call_function.31 = call $66load_global.28(cur_electron_density, distance_boundary, func=$66load_global.28, args=[Var(cur_electron_density, vpacket.py:78), Var(distance_boundary, vpacket.py:70)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_electron = $72call_function.31
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = tau_electron
DEBUG:numba.core.ssa:on stmt: $80load_global.33 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $84load_attr.35 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $88load_attr.37 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $92load_attr.39 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $80load_global.33($84load_attr.35, $88load_attr.37, $92load_attr.39, func=$80load_global.33, args=[Var($84load_attr.35, vpacket.py:87), Var($88load_attr.37, vpacket.py:87), Var($92load_attr.39, vpacket.py:87)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $100load_attr.42 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.44 = $100load_attr.42 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $104binary_multiply.44
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $118load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $118load_global.2($122load_attr.4, func=$118load_global.2, args=[Var($122load_attr.4, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_function.6 = call $114load_global.0(start_line_id, $124call_function.5, func=$114load_global.0, args=[Var(start_line_id, vpacket.py:73), Var($124call_function.5, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128get_iter.7 = getiter(value=$126call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi130.0 = $128get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: $130for_iter.1 = iternext(value=$phi130.0)
DEBUG:numba.core.ssa:on stmt: $130for_iter.2 = pair_first(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $130for_iter.3 = pair_second(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi132.1 = $130for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $130for_iter.3, 132, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi132.1
DEBUG:numba.core.ssa:on stmt: $136load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.5 = getitem(value=$136load_attr.3, index=cur_line_id)
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$140binary_subscr.5 = getitem(value=$136load_attr.3, index=cur_line_id)
DEBUG:numba.core.ssa:replaced with: $140binary_subscr.5 = getitem(value=$136load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $140binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $146load_attr.7 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $152load_attr.10 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $154build_tuple.11 = build_tuple(items=[Var(cur_line_id, vpacket.py:90), Var($152load_attr.10, vpacket.py:100)])
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$154build_tuple.11 = build_tuple(items=[Var(cur_line_id, vpacket.py:90), Var($152load_attr.10, vpacket.py:100)])
DEBUG:numba.core.ssa:replaced with: $154build_tuple.11 = build_tuple(items=[Var(cur_line_id.1, vpacket.py:92), Var($152load_attr.10, vpacket.py:100)])
DEBUG:numba.core.ssa:on stmt: $156binary_subscr.12 = getitem(value=$146load_attr.7, index=$154build_tuple.11)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $156binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $162load_global.14 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.16 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $168call_function.17 = call $162load_global.14($166load_attr.16, func=$162load_global.14, args=[Var($166load_attr.16, vpacket.py:103)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const170.18 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $172binary_subtract.19 = $168call_function.17 - $const170.18
DEBUG:numba.core.ssa:on stmt: $174compare_op.20 = cur_line_id == $172binary_subtract.19
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$174compare_op.20 = cur_line_id == $172binary_subtract.19
DEBUG:numba.core.ssa:replaced with: $174compare_op.20 = cur_line_id.1 == $172binary_subtract.19
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.20, func=bool176, args=(Var($174compare_op.20, vpacket.py:103),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 178, 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: $const178.1 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: is_last_line = $const178.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: $const184.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: is_last_line = $const184.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: $188load_global.1 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $200load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $202call_function.8 = call $188load_global.1(v_packet, comov_nu, is_last_line, nu_line, $200load_attr.7, func=$188load_global.1, args=[Var(v_packet, vpacket.py:66), Var(comov_nu, vpacket.py:89), Var(is_last_line, vpacket.py:104), Var(nu_line, vpacket.py:96), Var($200load_attr.7, vpacket.py:113)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace_line = $202call_function.8
DEBUG:numba.core.ssa:on stmt: $208load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.12 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $214call_function.13 = call $208load_global.10($212load_attr.12, func=$208load_global.10, args=[Var($212load_attr.12, vpacket.py:116)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const216.14 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.15 = $214call_function.13 - $const216.14
DEBUG:numba.core.ssa:on stmt: $220compare_op.16 = cur_line_id != $218binary_subtract.15
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$220compare_op.16 = cur_line_id != $218binary_subtract.15
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 132 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:replaced with: $220compare_op.16 = cur_line_id.1 != $218binary_subtract.15
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222($220compare_op.16, func=bool222, args=(Var($220compare_op.16, vpacket.py:116),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 224, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: $224load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $232load_attr.5 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const236.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $238binary_subtract.8 = cur_line_id - $const236.7
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$238binary_subtract.8 = cur_line_id - $const236.7
DEBUG:numba.core.ssa:find_def_from_top label 224
DEBUG:numba.core.ssa:idom 188 from label 224
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 132 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:replaced with: $238binary_subtract.8 = cur_line_id.1 - $const236.7
DEBUG:numba.core.ssa:on stmt: $240binary_subscr.9 = getitem(value=$232load_attr.5, index=$238binary_subtract.8)
DEBUG:numba.core.ssa:on stmt: $244call_function.11 = call $224load_global.1(v_packet, cur_line_id, $240binary_subscr.9, numba_plasma, func=$224load_global.1, args=[Var(v_packet, vpacket.py:66), Var(cur_line_id, vpacket.py:90), Var($240binary_subscr.9, vpacket.py:120), Var(numba_plasma, vpacket.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$244call_function.11 = call $224load_global.1(v_packet, cur_line_id, $240binary_subscr.9, numba_plasma, func=$224load_global.1, args=[Var(v_packet, vpacket.py:66), Var(cur_line_id, vpacket.py:90), Var($240binary_subscr.9, vpacket.py:120), Var(numba_plasma, vpacket.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def_from_top label 224
DEBUG:numba.core.ssa:idom 188 from label 224
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 132 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:replaced with: $244call_function.11 = call $224load_global.1(v_packet, cur_line_id.1, $240binary_subscr.9, numba_plasma, func=$224load_global.1, args=[Var(v_packet, vpacket.py:66), Var(cur_line_id.1, vpacket.py:92), Var($240binary_subscr.9, vpacket.py:120), Var(numba_plasma, vpacket.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: $252compare_op.3 = distance_boundary <= distance_trace_line
DEBUG:numba.core.ssa:on stmt: bool254 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $254pred = call bool254($252compare_op.3, func=bool254, args=(Var($252compare_op.3, vpacket.py:124),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $254pred, 258, 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 260
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: $264inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $264inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: $274load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $280call_function.4 = call $274load_global.1($278load_attr.3, func=$274load_global.1, args=[Var($278load_attr.3, vpacket.py:130)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const282.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.6 = $280call_function.4 - $const282.5
DEBUG:numba.core.ssa:on stmt: $286compare_op.7 = cur_line_id == $284binary_subtract.6
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$286compare_op.7 = cur_line_id == $284binary_subtract.6
DEBUG:numba.core.ssa:find_def_from_top label 272
DEBUG:numba.core.ssa:idom 270 from label 272
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 130 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:insert phi node cur_line_id.3 = phi(incoming_values=[], incoming_blocks=[]) at 130
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:find_def_from_top label 112
DEBUG:numba.core.ssa:idom 0 from label 112
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def cur_line_id = start_line_id
DEBUG:numba.core.ssa:find_def_from_bottom label 260
DEBUG:numba.core.ssa:find_def_from_top label 260
DEBUG:numba.core.ssa:idom 248 from label 260
DEBUG:numba.core.ssa:find_def_from_bottom label 248
DEBUG:numba.core.ssa:find_def_from_top label 248
DEBUG:numba.core.ssa:idom 188 from label 248
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 132 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:incoming_def cur_line_id.1 = $phi132.1
DEBUG:numba.core.ssa:replaced with: $286compare_op.7 = cur_line_id.3 == $284binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.7, func=bool288, args=(Var($286compare_op.7, vpacket.py:130),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: $const294.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 292
DEBUG:numba.core.ssa:idom 272 from label 292
DEBUG:numba.core.ssa:find_def_from_bottom label 272
DEBUG:numba.core.ssa:find_def_from_top label 272
DEBUG:numba.core.ssa:idom 270 from label 272
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 130 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:replaced with: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $296inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46031750>
DEBUG:numba.core.ssa:on stmt: (v_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=(v_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:find_def_from_top label 300
DEBUG:numba.core.ssa:insert phi node cur_line_id.4 = phi(incoming_values=[], incoming_blocks=[]) at 300
DEBUG:numba.core.ssa:find_def_from_bottom label 272
DEBUG:numba.core.ssa:find_def_from_top label 272
DEBUG:numba.core.ssa:idom 270 from label 272
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 130 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:incoming_def cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, vpacket.py:90), Var(cur_line_id.1, vpacket.py:92)], incoming_blocks=[112, 260])
DEBUG:numba.core.ssa:find_def_from_bottom label 258
DEBUG:numba.core.ssa:find_def_from_top label 258
DEBUG:numba.core.ssa:idom 248 from label 258
DEBUG:numba.core.ssa:find_def_from_bottom label 248
DEBUG:numba.core.ssa:find_def_from_top label 248
DEBUG:numba.core.ssa:idom 188 from label 248
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 132 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:incoming_def cur_line_id.1 = $phi132.1
DEBUG:numba.core.ssa:find_def_from_bottom label 292
DEBUG:numba.core.ssa:incoming_def cur_line_id.2 = $296inplace_add.2
DEBUG:numba.core.ssa:replaced with: (v_packet).next_line_id = cur_line_id.4
DEBUG:numba.core.ssa:on stmt: $312build_tuple.5 = build_tuple(items=[Var(tau_trace_combined, vpacket.py:83), Var(distance_boundary, vpacket.py:70), Var(delta_shell, vpacket.py:70)])
DEBUG:numba.core.ssa:on stmt: $314return_value.6 = cast(value=$312build_tuple.5)
DEBUG:numba.core.ssa:on stmt: return $314return_value.6
DEBUG:numba.core.ssa:Fix SSA violator on var is_last_line
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: v_packet = arg(0, name=v_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, vpacket.py:70), Var($34load_attr.14, vpacket.py:70), Var(r_inner, vpacket.py:66), Var(r_outer, vpacket.py:67)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=v_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $56load_attr.24 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.27 = getitem(value=$56load_attr.24, index=$60load_attr.26)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $62binary_subscr.27
DEBUG:numba.core.ssa:on stmt: $66load_global.28 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $72call_function.31 = call $66load_global.28(cur_electron_density, distance_boundary, func=$66load_global.28, args=[Var(cur_electron_density, vpacket.py:78), Var(distance_boundary, vpacket.py:70)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_electron = $72call_function.31
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = tau_electron
DEBUG:numba.core.ssa:on stmt: $80load_global.33 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $84load_attr.35 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $88load_attr.37 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $92load_attr.39 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $80load_global.33($84load_attr.35, $88load_attr.37, $92load_attr.39, func=$80load_global.33, args=[Var($84load_attr.35, vpacket.py:87), Var($88load_attr.37, vpacket.py:87), Var($92load_attr.39, vpacket.py:87)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $100load_attr.42 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.44 = $100load_attr.42 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $104binary_multiply.44
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $118load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $118load_global.2($122load_attr.4, func=$118load_global.2, args=[Var($122load_attr.4, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_function.6 = call $114load_global.0(start_line_id, $124call_function.5, func=$114load_global.0, args=[Var(start_line_id, vpacket.py:73), Var($124call_function.5, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128get_iter.7 = getiter(value=$126call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi130.0 = $128get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, vpacket.py:90), Var(cur_line_id.1, vpacket.py:92)], incoming_blocks=[112, 260])
DEBUG:numba.core.ssa:on stmt: $130for_iter.1 = iternext(value=$phi130.0)
DEBUG:numba.core.ssa:on stmt: $130for_iter.2 = pair_first(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $130for_iter.3 = pair_second(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi132.1 = $130for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $130for_iter.3, 132, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi132.1
DEBUG:numba.core.ssa:on stmt: $136load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.5 = getitem(value=$136load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $140binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $146load_attr.7 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $152load_attr.10 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $154build_tuple.11 = build_tuple(items=[Var(cur_line_id.1, vpacket.py:92), Var($152load_attr.10, vpacket.py:100)])
DEBUG:numba.core.ssa:on stmt: $156binary_subscr.12 = getitem(value=$146load_attr.7, index=$154build_tuple.11)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $156binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $162load_global.14 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.16 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $168call_function.17 = call $162load_global.14($166load_attr.16, func=$162load_global.14, args=[Var($166load_attr.16, vpacket.py:103)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const170.18 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $172binary_subtract.19 = $168call_function.17 - $const170.18
DEBUG:numba.core.ssa:on stmt: $174compare_op.20 = cur_line_id.1 == $172binary_subtract.19
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.20, func=bool176, args=(Var($174compare_op.20, vpacket.py:103),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 178, 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: $const178.1 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: is_last_line = $const178.1
DEBUG:numba.core.ssa:first assign: is_last_line
DEBUG:numba.core.ssa:replaced with: is_last_line = $const178.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: $const184.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: is_last_line = $const184.1
DEBUG:numba.core.ssa:replaced with: is_last_line.1 = $const184.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: $188load_global.1 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $200load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $202call_function.8 = call $188load_global.1(v_packet, comov_nu, is_last_line, nu_line, $200load_attr.7, func=$188load_global.1, args=[Var(v_packet, vpacket.py:66), Var(comov_nu, vpacket.py:89), Var(is_last_line, vpacket.py:104), Var(nu_line, vpacket.py:96), Var($200load_attr.7, vpacket.py:113)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace_line = $202call_function.8
DEBUG:numba.core.ssa:on stmt: $208load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.12 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $214call_function.13 = call $208load_global.10($212load_attr.12, func=$208load_global.10, args=[Var($212load_attr.12, vpacket.py:116)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const216.14 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.15 = $214call_function.13 - $const216.14
DEBUG:numba.core.ssa:on stmt: $220compare_op.16 = cur_line_id.1 != $218binary_subtract.15
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222($220compare_op.16, func=bool222, args=(Var($220compare_op.16, vpacket.py:116),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 224, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: $224load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $232load_attr.5 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const236.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $238binary_subtract.8 = cur_line_id.1 - $const236.7
DEBUG:numba.core.ssa:on stmt: $240binary_subscr.9 = getitem(value=$232load_attr.5, index=$238binary_subtract.8)
DEBUG:numba.core.ssa:on stmt: $244call_function.11 = call $224load_global.1(v_packet, cur_line_id.1, $240binary_subscr.9, numba_plasma, func=$224load_global.1, args=[Var(v_packet, vpacket.py:66), Var(cur_line_id.1, vpacket.py:92), Var($240binary_subscr.9, vpacket.py:120), Var(numba_plasma, vpacket.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: $252compare_op.3 = distance_boundary <= distance_trace_line
DEBUG:numba.core.ssa:on stmt: bool254 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $254pred = call bool254($252compare_op.3, func=bool254, args=(Var($252compare_op.3, vpacket.py:124),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $254pred, 258, 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 260
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: $264inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $264inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: $274load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $280call_function.4 = call $274load_global.1($278load_attr.3, func=$274load_global.1, args=[Var($278load_attr.3, vpacket.py:130)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const282.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.6 = $280call_function.4 - $const282.5
DEBUG:numba.core.ssa:on stmt: $286compare_op.7 = cur_line_id.3 == $284binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.7, func=bool288, args=(Var($286compare_op.7, vpacket.py:130),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: $const294.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $296inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de4d0>
DEBUG:numba.core.ssa:on stmt: cur_line_id.4 = phi(incoming_values=[Var(cur_line_id.3, vpacket.py:130), Var(cur_line_id.1, vpacket.py:92), Var(cur_line_id.2, vpacket.py:131)], incoming_blocks=[272, 258, 292])
DEBUG:numba.core.ssa:on stmt: (v_packet).next_line_id = cur_line_id.4
DEBUG:numba.core.ssa:on stmt: $312build_tuple.5 = build_tuple(items=[Var(tau_trace_combined, vpacket.py:83), Var(distance_boundary, vpacket.py:70), Var(delta_shell, vpacket.py:70)])
DEBUG:numba.core.ssa:on stmt: $314return_value.6 = cast(value=$312build_tuple.5)
DEBUG:numba.core.ssa:on stmt: return $314return_value.6
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {178: [<numba.core.ir.Assign object at 0x7f6e45cea8d0>],
             184: [<numba.core.ir.Assign object at 0x7f6e45dda750>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: v_packet = arg(0, name=v_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, vpacket.py:70), Var($34load_attr.14, vpacket.py:70), Var(r_inner, vpacket.py:66), Var(r_outer, vpacket.py:67)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=v_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $56load_attr.24 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.27 = getitem(value=$56load_attr.24, index=$60load_attr.26)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $62binary_subscr.27
DEBUG:numba.core.ssa:on stmt: $66load_global.28 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $72call_function.31 = call $66load_global.28(cur_electron_density, distance_boundary, func=$66load_global.28, args=[Var(cur_electron_density, vpacket.py:78), Var(distance_boundary, vpacket.py:70)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_electron = $72call_function.31
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = tau_electron
DEBUG:numba.core.ssa:on stmt: $80load_global.33 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $84load_attr.35 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $88load_attr.37 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $92load_attr.39 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $80load_global.33($84load_attr.35, $88load_attr.37, $92load_attr.39, func=$80load_global.33, args=[Var($84load_attr.35, vpacket.py:87), Var($88load_attr.37, vpacket.py:87), Var($92load_attr.39, vpacket.py:87)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $100load_attr.42 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.44 = $100load_attr.42 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $104binary_multiply.44
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $118load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $118load_global.2($122load_attr.4, func=$118load_global.2, args=[Var($122load_attr.4, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_function.6 = call $114load_global.0(start_line_id, $124call_function.5, func=$114load_global.0, args=[Var(start_line_id, vpacket.py:73), Var($124call_function.5, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128get_iter.7 = getiter(value=$126call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi130.0 = $128get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, vpacket.py:90), Var(cur_line_id.1, vpacket.py:92)], incoming_blocks=[112, 260])
DEBUG:numba.core.ssa:on stmt: $130for_iter.1 = iternext(value=$phi130.0)
DEBUG:numba.core.ssa:on stmt: $130for_iter.2 = pair_first(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $130for_iter.3 = pair_second(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi132.1 = $130for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $130for_iter.3, 132, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi132.1
DEBUG:numba.core.ssa:on stmt: $136load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.5 = getitem(value=$136load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $140binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $146load_attr.7 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $152load_attr.10 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $154build_tuple.11 = build_tuple(items=[Var(cur_line_id.1, vpacket.py:92), Var($152load_attr.10, vpacket.py:100)])
DEBUG:numba.core.ssa:on stmt: $156binary_subscr.12 = getitem(value=$146load_attr.7, index=$154build_tuple.11)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $156binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $162load_global.14 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.16 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $168call_function.17 = call $162load_global.14($166load_attr.16, func=$162load_global.14, args=[Var($166load_attr.16, vpacket.py:103)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const170.18 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $172binary_subtract.19 = $168call_function.17 - $const170.18
DEBUG:numba.core.ssa:on stmt: $174compare_op.20 = cur_line_id.1 == $172binary_subtract.19
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.20, func=bool176, args=(Var($174compare_op.20, vpacket.py:103),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 178, 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: $const178.1 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: is_last_line = $const178.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: $const184.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: is_last_line.1 = $const184.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: $188load_global.1 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $200load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $202call_function.8 = call $188load_global.1(v_packet, comov_nu, is_last_line, nu_line, $200load_attr.7, func=$188load_global.1, args=[Var(v_packet, vpacket.py:66), Var(comov_nu, vpacket.py:89), Var(is_last_line, vpacket.py:104), Var(nu_line, vpacket.py:96), Var($200load_attr.7, vpacket.py:113)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='is_last_line' stmt=$202call_function.8 = call $188load_global.1(v_packet, comov_nu, is_last_line, nu_line, $200load_attr.7, func=$188load_global.1, args=[Var(v_packet, vpacket.py:66), Var(comov_nu, vpacket.py:89), Var(is_last_line, vpacket.py:104), Var(nu_line, vpacket.py:96), Var($200load_attr.7, vpacket.py:113)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:insert phi node is_last_line.2 = phi(incoming_values=[], incoming_blocks=[]) at 188
DEBUG:numba.core.ssa:find_def_from_bottom label 184
DEBUG:numba.core.ssa:incoming_def is_last_line.1 = $const184.1
DEBUG:numba.core.ssa:find_def_from_bottom label 178
DEBUG:numba.core.ssa:incoming_def is_last_line = $const178.1
DEBUG:numba.core.ssa:replaced with: $202call_function.8 = call $188load_global.1(v_packet, comov_nu, is_last_line.2, nu_line, $200load_attr.7, func=$188load_global.1, args=[Var(v_packet, vpacket.py:66), Var(comov_nu, vpacket.py:89), Var(is_last_line.2, vpacket.py:108), Var(nu_line, vpacket.py:96), Var($200load_attr.7, vpacket.py:113)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace_line = $202call_function.8
DEBUG:numba.core.ssa:on stmt: $208load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.12 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $214call_function.13 = call $208load_global.10($212load_attr.12, func=$208load_global.10, args=[Var($212load_attr.12, vpacket.py:116)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const216.14 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.15 = $214call_function.13 - $const216.14
DEBUG:numba.core.ssa:on stmt: $220compare_op.16 = cur_line_id.1 != $218binary_subtract.15
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222($220compare_op.16, func=bool222, args=(Var($220compare_op.16, vpacket.py:116),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 224, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: $224load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $232load_attr.5 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const236.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $238binary_subtract.8 = cur_line_id.1 - $const236.7
DEBUG:numba.core.ssa:on stmt: $240binary_subscr.9 = getitem(value=$232load_attr.5, index=$238binary_subtract.8)
DEBUG:numba.core.ssa:on stmt: $244call_function.11 = call $224load_global.1(v_packet, cur_line_id.1, $240binary_subscr.9, numba_plasma, func=$224load_global.1, args=[Var(v_packet, vpacket.py:66), Var(cur_line_id.1, vpacket.py:92), Var($240binary_subscr.9, vpacket.py:120), Var(numba_plasma, vpacket.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: $252compare_op.3 = distance_boundary <= distance_trace_line
DEBUG:numba.core.ssa:on stmt: bool254 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $254pred = call bool254($252compare_op.3, func=bool254, args=(Var($252compare_op.3, vpacket.py:124),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $254pred, 258, 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 260
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: $264inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $264inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: $274load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $280call_function.4 = call $274load_global.1($278load_attr.3, func=$274load_global.1, args=[Var($278load_attr.3, vpacket.py:130)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const282.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.6 = $280call_function.4 - $const282.5
DEBUG:numba.core.ssa:on stmt: $286compare_op.7 = cur_line_id.3 == $284binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.7, func=bool288, args=(Var($286compare_op.7, vpacket.py:130),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: $const294.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $296inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e461b1690>
DEBUG:numba.core.ssa:on stmt: cur_line_id.4 = phi(incoming_values=[Var(cur_line_id.3, vpacket.py:130), Var(cur_line_id.1, vpacket.py:92), Var(cur_line_id.2, vpacket.py:131)], incoming_blocks=[272, 258, 292])
DEBUG:numba.core.ssa:on stmt: (v_packet).next_line_id = cur_line_id.4
DEBUG:numba.core.ssa:on stmt: $312build_tuple.5 = build_tuple(items=[Var(tau_trace_combined, vpacket.py:83), Var(distance_boundary, vpacket.py:70), Var(delta_shell, vpacket.py:70)])
DEBUG:numba.core.ssa:on stmt: $314return_value.6 = cast(value=$312build_tuple.5)
DEBUG:numba.core.ssa:on stmt: return $314return_value.6
DEBUG:numba.core.ssa:Fix SSA violator on var tau_trace_combined
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: v_packet = arg(0, name=v_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, vpacket.py:70), Var($34load_attr.14, vpacket.py:70), Var(r_inner, vpacket.py:66), Var(r_outer, vpacket.py:67)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=v_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $56load_attr.24 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.27 = getitem(value=$56load_attr.24, index=$60load_attr.26)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $62binary_subscr.27
DEBUG:numba.core.ssa:on stmt: $66load_global.28 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $72call_function.31 = call $66load_global.28(cur_electron_density, distance_boundary, func=$66load_global.28, args=[Var(cur_electron_density, vpacket.py:78), Var(distance_boundary, vpacket.py:70)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_electron = $72call_function.31
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = tau_electron
DEBUG:numba.core.ssa:first assign: tau_trace_combined
DEBUG:numba.core.ssa:replaced with: tau_trace_combined = tau_electron
DEBUG:numba.core.ssa:on stmt: $80load_global.33 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $84load_attr.35 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $88load_attr.37 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $92load_attr.39 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $80load_global.33($84load_attr.35, $88load_attr.37, $92load_attr.39, func=$80load_global.33, args=[Var($84load_attr.35, vpacket.py:87), Var($88load_attr.37, vpacket.py:87), Var($92load_attr.39, vpacket.py:87)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $100load_attr.42 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.44 = $100load_attr.42 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $104binary_multiply.44
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $118load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $118load_global.2($122load_attr.4, func=$118load_global.2, args=[Var($122load_attr.4, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_function.6 = call $114load_global.0(start_line_id, $124call_function.5, func=$114load_global.0, args=[Var(start_line_id, vpacket.py:73), Var($124call_function.5, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128get_iter.7 = getiter(value=$126call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi130.0 = $128get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, vpacket.py:90), Var(cur_line_id.1, vpacket.py:92)], incoming_blocks=[112, 260])
DEBUG:numba.core.ssa:on stmt: $130for_iter.1 = iternext(value=$phi130.0)
DEBUG:numba.core.ssa:on stmt: $130for_iter.2 = pair_first(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $130for_iter.3 = pair_second(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi132.1 = $130for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $130for_iter.3, 132, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi132.1
DEBUG:numba.core.ssa:on stmt: $136load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.5 = getitem(value=$136load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $140binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $146load_attr.7 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $152load_attr.10 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $154build_tuple.11 = build_tuple(items=[Var(cur_line_id.1, vpacket.py:92), Var($152load_attr.10, vpacket.py:100)])
DEBUG:numba.core.ssa:on stmt: $156binary_subscr.12 = getitem(value=$146load_attr.7, index=$154build_tuple.11)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $156binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $162load_global.14 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.16 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $168call_function.17 = call $162load_global.14($166load_attr.16, func=$162load_global.14, args=[Var($166load_attr.16, vpacket.py:103)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const170.18 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $172binary_subtract.19 = $168call_function.17 - $const170.18
DEBUG:numba.core.ssa:on stmt: $174compare_op.20 = cur_line_id.1 == $172binary_subtract.19
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.20, func=bool176, args=(Var($174compare_op.20, vpacket.py:103),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 178, 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: $const178.1 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: is_last_line = $const178.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: $const184.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: is_last_line.1 = $const184.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: is_last_line.2 = phi(incoming_values=[Var(is_last_line.1, vpacket.py:106), Var(is_last_line, vpacket.py:104)], incoming_blocks=[184, 178])
DEBUG:numba.core.ssa:on stmt: $188load_global.1 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $200load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $202call_function.8 = call $188load_global.1(v_packet, comov_nu, is_last_line.2, nu_line, $200load_attr.7, func=$188load_global.1, args=[Var(v_packet, vpacket.py:66), Var(comov_nu, vpacket.py:89), Var(is_last_line.2, vpacket.py:108), Var(nu_line, vpacket.py:96), Var($200load_attr.7, vpacket.py:113)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace_line = $202call_function.8
DEBUG:numba.core.ssa:on stmt: $208load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.12 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $214call_function.13 = call $208load_global.10($212load_attr.12, func=$208load_global.10, args=[Var($212load_attr.12, vpacket.py:116)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const216.14 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.15 = $214call_function.13 - $const216.14
DEBUG:numba.core.ssa:on stmt: $220compare_op.16 = cur_line_id.1 != $218binary_subtract.15
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222($220compare_op.16, func=bool222, args=(Var($220compare_op.16, vpacket.py:116),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 224, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: $224load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $232load_attr.5 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const236.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $238binary_subtract.8 = cur_line_id.1 - $const236.7
DEBUG:numba.core.ssa:on stmt: $240binary_subscr.9 = getitem(value=$232load_attr.5, index=$238binary_subtract.8)
DEBUG:numba.core.ssa:on stmt: $244call_function.11 = call $224load_global.1(v_packet, cur_line_id.1, $240binary_subscr.9, numba_plasma, func=$224load_global.1, args=[Var(v_packet, vpacket.py:66), Var(cur_line_id.1, vpacket.py:92), Var($240binary_subscr.9, vpacket.py:120), Var(numba_plasma, vpacket.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: $252compare_op.3 = distance_boundary <= distance_trace_line
DEBUG:numba.core.ssa:on stmt: bool254 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $254pred = call bool254($252compare_op.3, func=bool254, args=(Var($252compare_op.3, vpacket.py:124),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $254pred, 258, 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 260
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: $264inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $264inplace_add.3
DEBUG:numba.core.ssa:replaced with: tau_trace_combined.1 = $264inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: $274load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $280call_function.4 = call $274load_global.1($278load_attr.3, func=$274load_global.1, args=[Var($278load_attr.3, vpacket.py:130)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const282.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.6 = $280call_function.4 - $const282.5
DEBUG:numba.core.ssa:on stmt: $286compare_op.7 = cur_line_id.3 == $284binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.7, func=bool288, args=(Var($286compare_op.7, vpacket.py:130),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: $const294.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $296inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461643d0>
DEBUG:numba.core.ssa:on stmt: cur_line_id.4 = phi(incoming_values=[Var(cur_line_id.3, vpacket.py:130), Var(cur_line_id.1, vpacket.py:92), Var(cur_line_id.2, vpacket.py:131)], incoming_blocks=[272, 258, 292])
DEBUG:numba.core.ssa:on stmt: (v_packet).next_line_id = cur_line_id.4
DEBUG:numba.core.ssa:on stmt: $312build_tuple.5 = build_tuple(items=[Var(tau_trace_combined, vpacket.py:83), Var(distance_boundary, vpacket.py:70), Var(delta_shell, vpacket.py:70)])
DEBUG:numba.core.ssa:on stmt: $314return_value.6 = cast(value=$312build_tuple.5)
DEBUG:numba.core.ssa:on stmt: return $314return_value.6
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e45fef490>],
             260: [<numba.core.ir.Assign object at 0x7f6e45fcdc90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: v_packet = arg(0, name=v_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, vpacket.py:70), Var($34load_attr.14, vpacket.py:70), Var(r_inner, vpacket.py:66), Var(r_outer, vpacket.py:67)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=v_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $56load_attr.24 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.27 = getitem(value=$56load_attr.24, index=$60load_attr.26)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $62binary_subscr.27
DEBUG:numba.core.ssa:on stmt: $66load_global.28 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $72call_function.31 = call $66load_global.28(cur_electron_density, distance_boundary, func=$66load_global.28, args=[Var(cur_electron_density, vpacket.py:78), Var(distance_boundary, vpacket.py:70)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_electron = $72call_function.31
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = tau_electron
DEBUG:numba.core.ssa:on stmt: $80load_global.33 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $84load_attr.35 = getattr(value=v_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $88load_attr.37 = getattr(value=v_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $92load_attr.39 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $80load_global.33($84load_attr.35, $88load_attr.37, $92load_attr.39, func=$80load_global.33, args=[Var($84load_attr.35, vpacket.py:87), Var($88load_attr.37, vpacket.py:87), Var($92load_attr.39, vpacket.py:87)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $100load_attr.42 = getattr(value=v_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.44 = $100load_attr.42 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $104binary_multiply.44
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: jump 112
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: $114load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $118load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $124call_function.5 = call $118load_global.2($122load_attr.4, func=$118load_global.2, args=[Var($122load_attr.4, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $126call_function.6 = call $114load_global.0(start_line_id, $124call_function.5, func=$114load_global.0, args=[Var(start_line_id, vpacket.py:73), Var($124call_function.5, vpacket.py:92)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $128get_iter.7 = getiter(value=$126call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi130.0 = $128get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 130
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, vpacket.py:90), Var(cur_line_id.1, vpacket.py:92)], incoming_blocks=[112, 260])
DEBUG:numba.core.ssa:on stmt: $130for_iter.1 = iternext(value=$phi130.0)
DEBUG:numba.core.ssa:on stmt: $130for_iter.2 = pair_first(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $130for_iter.3 = pair_second(value=$130for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi132.1 = $130for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $130for_iter.3, 132, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 132
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi132.1
DEBUG:numba.core.ssa:on stmt: $136load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $140binary_subscr.5 = getitem(value=$136load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $140binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $146load_attr.7 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $152load_attr.10 = getattr(value=v_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $154build_tuple.11 = build_tuple(items=[Var(cur_line_id.1, vpacket.py:92), Var($152load_attr.10, vpacket.py:100)])
DEBUG:numba.core.ssa:on stmt: $156binary_subscr.12 = getitem(value=$146load_attr.7, index=$154build_tuple.11)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $156binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $162load_global.14 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.16 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $168call_function.17 = call $162load_global.14($166load_attr.16, func=$162load_global.14, args=[Var($166load_attr.16, vpacket.py:103)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const170.18 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $172binary_subtract.19 = $168call_function.17 - $const170.18
DEBUG:numba.core.ssa:on stmt: $174compare_op.20 = cur_line_id.1 == $172binary_subtract.19
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($174compare_op.20, func=bool176, args=(Var($174compare_op.20, vpacket.py:103),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 178, 184
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: $const178.1 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: is_last_line = $const178.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: $const184.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: is_last_line.1 = $const184.1
DEBUG:numba.core.ssa:on stmt: jump 188
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: is_last_line.2 = phi(incoming_values=[Var(is_last_line.1, vpacket.py:106), Var(is_last_line, vpacket.py:104)], incoming_blocks=[184, 178])
DEBUG:numba.core.ssa:on stmt: $188load_global.1 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $200load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $202call_function.8 = call $188load_global.1(v_packet, comov_nu, is_last_line.2, nu_line, $200load_attr.7, func=$188load_global.1, args=[Var(v_packet, vpacket.py:66), Var(comov_nu, vpacket.py:89), Var(is_last_line.2, vpacket.py:108), Var(nu_line, vpacket.py:96), Var($200load_attr.7, vpacket.py:113)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace_line = $202call_function.8
DEBUG:numba.core.ssa:on stmt: $208load_global.10 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.12 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $214call_function.13 = call $208load_global.10($212load_attr.12, func=$208load_global.10, args=[Var($212load_attr.12, vpacket.py:116)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const216.14 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $218binary_subtract.15 = $214call_function.13 - $const216.14
DEBUG:numba.core.ssa:on stmt: $220compare_op.16 = cur_line_id.1 != $218binary_subtract.15
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222($220compare_op.16, func=bool222, args=(Var($220compare_op.16, vpacket.py:116),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 224, 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: $224load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $232load_attr.5 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const236.7 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $238binary_subtract.8 = cur_line_id.1 - $const236.7
DEBUG:numba.core.ssa:on stmt: $240binary_subscr.9 = getitem(value=$232load_attr.5, index=$238binary_subtract.8)
DEBUG:numba.core.ssa:on stmt: $244call_function.11 = call $224load_global.1(v_packet, cur_line_id.1, $240binary_subscr.9, numba_plasma, func=$224load_global.1, args=[Var(v_packet, vpacket.py:66), Var(cur_line_id.1, vpacket.py:92), Var($240binary_subscr.9, vpacket.py:120), Var(numba_plasma, vpacket.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 248
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 248
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: $252compare_op.3 = distance_boundary <= distance_trace_line
DEBUG:numba.core.ssa:on stmt: bool254 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $254pred = call bool254($252compare_op.3, func=bool254, args=(Var($252compare_op.3, vpacket.py:124),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $254pred, 258, 260
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 258
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 260
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: $264inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='tau_trace_combined' stmt=$264inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 260
DEBUG:numba.core.ssa:idom 248 from label 260
DEBUG:numba.core.ssa:find_def_from_bottom label 248
DEBUG:numba.core.ssa:find_def_from_top label 248
DEBUG:numba.core.ssa:idom 188 from label 248
DEBUG:numba.core.ssa:find_def_from_bottom label 188
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 132 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 132
DEBUG:numba.core.ssa:find_def_from_top label 132
DEBUG:numba.core.ssa:idom 130 from label 132
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:find_def_from_top label 130
DEBUG:numba.core.ssa:insert phi node tau_trace_combined.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
DEBUG:numba.core.ssa:find_def_from_bottom label 112
DEBUG:numba.core.ssa:find_def_from_top label 112
DEBUG:numba.core.ssa:idom 0 from label 112
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def tau_trace_combined = tau_electron
DEBUG:numba.core.ssa:find_def_from_bottom label 260
DEBUG:numba.core.ssa:incoming_def tau_trace_combined.1 = $264inplace_add.3
DEBUG:numba.core.ssa:replaced with: $264inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_combined.2, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_combined.1 = $264inplace_add.3
DEBUG:numba.core.ssa:on stmt: jump 130
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: $274load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $278load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $280call_function.4 = call $274load_global.1($278load_attr.3, func=$274load_global.1, args=[Var($278load_attr.3, vpacket.py:130)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const282.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $284binary_subtract.6 = $280call_function.4 - $const282.5
DEBUG:numba.core.ssa:on stmt: $286compare_op.7 = cur_line_id.3 == $284binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.7, func=bool288, args=(Var($286compare_op.7, vpacket.py:130),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: $const294.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $296inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46164d10>
DEBUG:numba.core.ssa:on stmt: cur_line_id.4 = phi(incoming_values=[Var(cur_line_id.3, vpacket.py:130), Var(cur_line_id.1, vpacket.py:92), Var(cur_line_id.2, vpacket.py:131)], incoming_blocks=[272, 258, 292])
DEBUG:numba.core.ssa:on stmt: (v_packet).next_line_id = cur_line_id.4
DEBUG:numba.core.ssa:on stmt: $312build_tuple.5 = build_tuple(items=[Var(tau_trace_combined, vpacket.py:83), Var(distance_boundary, vpacket.py:70), Var(delta_shell, vpacket.py:70)])
DEBUG:numba.core.ssa:find_def var='tau_trace_combined' stmt=$312build_tuple.5 = build_tuple(items=[Var(tau_trace_combined, vpacket.py:83), Var(distance_boundary, vpacket.py:70), Var(delta_shell, vpacket.py:70)])
DEBUG:numba.core.ssa:find_def_from_top label 300
DEBUG:numba.core.ssa:idom 130 from label 300
DEBUG:numba.core.ssa:find_def_from_bottom label 130
DEBUG:numba.core.ssa:replaced with: $312build_tuple.5 = build_tuple(items=[Var(tau_trace_combined.2, vpacket.py:127), Var(distance_boundary, vpacket.py:70), Var(delta_shell, vpacket.py:70)])
DEBUG:numba.core.ssa:on stmt: $314return_value.6 = cast(value=$312build_tuple.5)
DEBUG:numba.core.ssa:on stmt: return $314return_value.6
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=102)
           2	LOAD_CONST(arg=1, lineno=102)
           4	STORE_FAST(arg=4, lineno=102)
           6	LOAD_FAST(arg=1, lineno=103)
           8	LOAD_CONST(arg=2, lineno=103)
          10	COMPARE_OP(arg=4, lineno=103)
          12	POP_JUMP_IF_FALSE(arg=62, lineno=103)
          14	LOAD_GLOBAL(arg=0, lineno=105)
          16	LOAD_METHOD(arg=1, lineno=105)
          18	LOAD_FAST(arg=3, lineno=105)
          20	LOAD_FAST(arg=3, lineno=105)
          22	BINARY_MULTIPLY(arg=None, lineno=105)
          24	LOAD_FAST(arg=1, lineno=105)
          26	LOAD_FAST(arg=1, lineno=105)
          28	BINARY_MULTIPLY(arg=None, lineno=105)
          30	LOAD_CONST(arg=3, lineno=105)
          32	BINARY_SUBTRACT(arg=None, lineno=105)
          34	LOAD_FAST(arg=0, lineno=105)
          36	BINARY_MULTIPLY(arg=None, lineno=105)
          38	LOAD_FAST(arg=0, lineno=105)
          40	BINARY_MULTIPLY(arg=None, lineno=105)
          42	BINARY_ADD(arg=None, lineno=105)
          44	CALL_METHOD(arg=1, lineno=105)
          46	LOAD_FAST(arg=0, lineno=106)
          48	LOAD_FAST(arg=1, lineno=106)
          50	BINARY_MULTIPLY(arg=None, lineno=106)
          52	BINARY_SUBTRACT(arg=None, lineno=106)
          54	STORE_FAST(arg=5, lineno=106)
          56	LOAD_CONST(arg=4, lineno=108)
          58	STORE_FAST(arg=4, lineno=108)
          60	JUMP_FORWARD(arg=108, lineno=108)
>         62	LOAD_FAST(arg=2, lineno=111)
          64	LOAD_FAST(arg=2, lineno=111)
          66	BINARY_MULTIPLY(arg=None, lineno=111)
          68	LOAD_FAST(arg=0, lineno=111)
          70	LOAD_FAST(arg=0, lineno=111)
          72	BINARY_MULTIPLY(arg=None, lineno=111)
          74	LOAD_FAST(arg=1, lineno=111)
          76	LOAD_FAST(arg=1, lineno=111)
          78	BINARY_MULTIPLY(arg=None, lineno=111)
          80	LOAD_CONST(arg=3, lineno=111)
          82	BINARY_SUBTRACT(arg=None, lineno=111)
          84	BINARY_MULTIPLY(arg=None, lineno=111)
          86	BINARY_ADD(arg=None, lineno=111)
          88	STORE_FAST(arg=6, lineno=111)
          90	LOAD_FAST(arg=6, lineno=113)
          92	LOAD_CONST(arg=2, lineno=113)
          94	COMPARE_OP(arg=5, lineno=113)
          96	POP_JUMP_IF_FALSE(arg=124, lineno=113)
          98	LOAD_FAST(arg=0, lineno=115)
         100	UNARY_NEGATIVE(arg=None, lineno=115)
         102	LOAD_FAST(arg=1, lineno=115)
         104	BINARY_MULTIPLY(arg=None, lineno=115)
         106	LOAD_GLOBAL(arg=0, lineno=115)
         108	LOAD_METHOD(arg=1, lineno=115)
         110	LOAD_FAST(arg=6, lineno=115)
         112	CALL_METHOD(arg=1, lineno=115)
         114	BINARY_SUBTRACT(arg=None, lineno=115)
         116	STORE_FAST(arg=5, lineno=115)
         118	LOAD_CONST(arg=5, lineno=116)
         120	STORE_FAST(arg=4, lineno=116)
         122	JUMP_FORWARD(arg=46, lineno=116)
>        124	LOAD_GLOBAL(arg=0, lineno=119)
         126	LOAD_METHOD(arg=1, lineno=119)
         128	LOAD_FAST(arg=3, lineno=120)
         130	LOAD_FAST(arg=3, lineno=120)
         132	BINARY_MULTIPLY(arg=None, lineno=120)
         134	LOAD_FAST(arg=1, lineno=120)
         136	LOAD_FAST(arg=1, lineno=120)
         138	BINARY_MULTIPLY(arg=None, lineno=120)
         140	LOAD_CONST(arg=3, lineno=120)
         142	BINARY_SUBTRACT(arg=None, lineno=120)
         144	LOAD_FAST(arg=0, lineno=120)
         146	BINARY_MULTIPLY(arg=None, lineno=120)
         148	LOAD_FAST(arg=0, lineno=120)
         150	BINARY_MULTIPLY(arg=None, lineno=120)
         152	BINARY_ADD(arg=None, lineno=120)
         154	CALL_METHOD(arg=1, lineno=120)
         156	LOAD_FAST(arg=0, lineno=121)
         158	LOAD_FAST(arg=1, lineno=121)
         160	BINARY_MULTIPLY(arg=None, lineno=121)
         162	BINARY_SUBTRACT(arg=None, lineno=121)
         164	STORE_FAST(arg=5, lineno=121)
         166	LOAD_CONST(arg=4, lineno=122)
         168	STORE_FAST(arg=4, lineno=122)
>        170	LOAD_FAST(arg=5, lineno=124)
         172	LOAD_FAST(arg=4, lineno=124)
         174	BUILD_TUPLE(arg=2, lineno=124)
         176	RETURN_VALUE(arg=None, lineno=124)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=102)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=102)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=4, lineno=102)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=103)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=2, lineno=103)
DEBUG:numba.core.byteflow:stack ['$mu6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=COMPARE_OP(arg=4, lineno=103)
DEBUG:numba.core.byteflow:stack ['$mu6.1', '$const8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=POP_JUMP_IF_FALSE(arg=62, lineno=103)
DEBUG:numba.core.byteflow:stack ['$10compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=14, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=0), State(pc_initial=62 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_GLOBAL(arg=0, lineno=105)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_METHOD(arg=1, lineno=105)
DEBUG:numba.core.byteflow:stack ['$14load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=3, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$r_outer18.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_MULTIPLY(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$r_outer18.2', '$r_outer20.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$22binary_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=1, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$22binary_multiply.4', '$mu24.5']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_MULTIPLY(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$22binary_multiply.4', '$mu24.5', '$mu26.6']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$22binary_multiply.4', '$28binary_multiply.7']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=BINARY_SUBTRACT(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$22binary_multiply.4', '$28binary_multiply.7', '$const30.8']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$22binary_multiply.4', '$32binary_subtract.9']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_MULTIPLY(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$22binary_multiply.4', '$32binary_subtract.9', '$r34.10']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$22binary_multiply.4', '$36binary_multiply.11']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_MULTIPLY(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$22binary_multiply.4', '$36binary_multiply.11', '$r38.12']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_ADD(arg=None, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$22binary_multiply.4', '$40binary_multiply.13']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=CALL_METHOD(arg=1, lineno=105)
DEBUG:numba.core.byteflow:stack ['$16load_method.1', '$42binary_add.14']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=0, lineno=106)
DEBUG:numba.core.byteflow:stack ['$44call_method.15']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=106)
DEBUG:numba.core.byteflow:stack ['$44call_method.15', '$r46.16']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_MULTIPLY(arg=None, lineno=106)
DEBUG:numba.core.byteflow:stack ['$44call_method.15', '$r46.16', '$mu48.17']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_SUBTRACT(arg=None, lineno=106)
DEBUG:numba.core.byteflow:stack ['$44call_method.15', '$50binary_multiply.18']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=5, lineno=106)
DEBUG:numba.core.byteflow:stack ['$52binary_subtract.19']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=4, lineno=108)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=STORE_FAST(arg=4, lineno=108)
DEBUG:numba.core.byteflow:stack ['$const56.20']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=JUMP_FORWARD(arg=108, lineno=108)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=170, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=170 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=111)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=2, lineno=111)
DEBUG:numba.core.byteflow:stack ['$r_inner62.0']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=BINARY_MULTIPLY(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$r_inner62.0', '$r_inner64.1']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=0, lineno=111)
DEBUG:numba.core.byteflow:stack ['$66binary_multiply.2']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=111)
DEBUG:numba.core.byteflow:stack ['$66binary_multiply.2', '$r68.3']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_MULTIPLY(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$66binary_multiply.2', '$r68.3', '$r70.4']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=111)
DEBUG:numba.core.byteflow:stack ['$66binary_multiply.2', '$72binary_multiply.5']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=1, lineno=111)
DEBUG:numba.core.byteflow:stack ['$66binary_multiply.2', '$72binary_multiply.5', '$mu74.6']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=BINARY_MULTIPLY(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$66binary_multiply.2', '$72binary_multiply.5', '$mu74.6', '$mu76.7']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_CONST(arg=3, lineno=111)
DEBUG:numba.core.byteflow:stack ['$66binary_multiply.2', '$72binary_multiply.5', '$78binary_multiply.8']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_SUBTRACT(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$66binary_multiply.2', '$72binary_multiply.5', '$78binary_multiply.8', '$const80.9']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=BINARY_MULTIPLY(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$66binary_multiply.2', '$72binary_multiply.5', '$82binary_subtract.10']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=BINARY_ADD(arg=None, lineno=111)
DEBUG:numba.core.byteflow:stack ['$66binary_multiply.2', '$84binary_multiply.11']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=STORE_FAST(arg=6, lineno=111)
DEBUG:numba.core.byteflow:stack ['$86binary_add.12']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=6, lineno=113)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=113)
DEBUG:numba.core.byteflow:stack ['$check90.13']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=COMPARE_OP(arg=5, lineno=113)
DEBUG:numba.core.byteflow:stack ['$check90.13', '$const92.14']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=124, lineno=113)
DEBUG:numba.core.byteflow:stack ['$94compare_op.15']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=98, stack=(), blockstack=(), npush=0), Edge(pc=124, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=170 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=5, lineno=124)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=4, lineno=124)
DEBUG:numba.core.byteflow:stack ['$distance170.0']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=BUILD_TUPLE(arg=2, lineno=124)
DEBUG:numba.core.byteflow:stack ['$distance170.0', '$delta_shell172.1']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=RETURN_VALUE(arg=None, lineno=124)
DEBUG:numba.core.byteflow:stack ['$174build_tuple.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=124 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=115)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=UNARY_NEGATIVE(arg=None, lineno=115)
DEBUG:numba.core.byteflow:stack ['$r98.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=115)
DEBUG:numba.core.byteflow:stack ['$100unary_negative.1']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=BINARY_MULTIPLY(arg=None, lineno=115)
DEBUG:numba.core.byteflow:stack ['$100unary_negative.1', '$mu102.2']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_GLOBAL(arg=0, lineno=115)
DEBUG:numba.core.byteflow:stack ['$104binary_multiply.3']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_METHOD(arg=1, lineno=115)
DEBUG:numba.core.byteflow:stack ['$104binary_multiply.3', '$106load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=6, lineno=115)
DEBUG:numba.core.byteflow:stack ['$104binary_multiply.3', '$108load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=CALL_METHOD(arg=1, lineno=115)
DEBUG:numba.core.byteflow:stack ['$104binary_multiply.3', '$108load_method.5', '$check110.6']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=BINARY_SUBTRACT(arg=None, lineno=115)
DEBUG:numba.core.byteflow:stack ['$104binary_multiply.3', '$112call_method.7']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=STORE_FAST(arg=5, lineno=115)
DEBUG:numba.core.byteflow:stack ['$114binary_subtract.8']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_CONST(arg=5, lineno=116)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=120, inst=STORE_FAST(arg=4, lineno=116)
DEBUG:numba.core.byteflow:stack ['$const118.9']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=JUMP_FORWARD(arg=46, lineno=116)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=170, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=170 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_GLOBAL(arg=0, lineno=119)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_METHOD(arg=1, lineno=119)
DEBUG:numba.core.byteflow:stack ['$124load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=3, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=3, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$r_outer128.2']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=BINARY_MULTIPLY(arg=None, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$r_outer128.2', '$r_outer130.3']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_FAST(arg=1, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$132binary_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=1, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$132binary_multiply.4', '$mu134.5']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=BINARY_MULTIPLY(arg=None, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$132binary_multiply.4', '$mu134.5', '$mu136.6']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_CONST(arg=3, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$132binary_multiply.4', '$138binary_multiply.7']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=BINARY_SUBTRACT(arg=None, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$132binary_multiply.4', '$138binary_multiply.7', '$const140.8']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=LOAD_FAST(arg=0, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$132binary_multiply.4', '$142binary_subtract.9']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=BINARY_MULTIPLY(arg=None, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$132binary_multiply.4', '$142binary_subtract.9', '$r144.10']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$132binary_multiply.4', '$146binary_multiply.11']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=BINARY_MULTIPLY(arg=None, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$132binary_multiply.4', '$146binary_multiply.11', '$r148.12']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=BINARY_ADD(arg=None, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$132binary_multiply.4', '$150binary_multiply.13']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL_METHOD(arg=1, lineno=120)
DEBUG:numba.core.byteflow:stack ['$126load_method.1', '$152binary_add.14']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=0, lineno=121)
DEBUG:numba.core.byteflow:stack ['$154call_method.15']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_FAST(arg=1, lineno=121)
DEBUG:numba.core.byteflow:stack ['$154call_method.15', '$r156.16']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=BINARY_MULTIPLY(arg=None, lineno=121)
DEBUG:numba.core.byteflow:stack ['$154call_method.15', '$r156.16', '$mu158.17']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=BINARY_SUBTRACT(arg=None, lineno=121)
DEBUG:numba.core.byteflow:stack ['$154call_method.15', '$160binary_multiply.18']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=STORE_FAST(arg=5, lineno=121)
DEBUG:numba.core.byteflow:stack ['$162binary_subtract.19']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=4, lineno=122)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=168, inst=STORE_FAST(arg=4, lineno=122)
DEBUG:numba.core.byteflow:stack ['$const166.20']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=170, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=170 nstack_initial=0), State(pc_initial=170 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=170 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=170 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'value': '$const2.0'}), (6, {'res': '$mu6.1'}), (8, {'res': '$const8.2'}), (10, {'lhs': '$mu6.1', 'rhs': '$const8.2', 'res': '$10compare_op.3'}), (12, {'pred': '$10compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={14: (), 62: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$14load_global.0'}), (16, {'item': '$14load_global.0', 'res': '$16load_method.1'}), (18, {'res': '$r_outer18.2'}), (20, {'res': '$r_outer20.3'}), (22, {'lhs': '$r_outer18.2', 'rhs': '$r_outer20.3', 'res': '$22binary_multiply.4'}), (24, {'res': '$mu24.5'}), (26, {'res': '$mu26.6'}), (28, {'lhs': '$mu24.5', 'rhs': '$mu26.6', 'res': '$28binary_multiply.7'}), (30, {'res': '$const30.8'}), (32, {'lhs': '$28binary_multiply.7', 'rhs': '$const30.8', 'res': '$32binary_subtract.9'}), (34, {'res': '$r34.10'}), (36, {'lhs': '$32binary_subtract.9', 'rhs': '$r34.10', 'res': '$36binary_multiply.11'}), (38, {'res': '$r38.12'}), (40, {'lhs': '$36binary_multiply.11', 'rhs': '$r38.12', 'res': '$40binary_multiply.13'}), (42, {'lhs': '$22binary_multiply.4', 'rhs': '$40binary_multiply.13', 'res': '$42binary_add.14'}), (44, {'func': '$16load_method.1', 'args': ['$42binary_add.14'], 'res': '$44call_method.15'}), (46, {'res': '$r46.16'}), (48, {'res': '$mu48.17'}), (50, {'lhs': '$r46.16', 'rhs': '$mu48.17', 'res': '$50binary_multiply.18'}), (52, {'lhs': '$44call_method.15', 'rhs': '$50binary_multiply.18', 'res': '$52binary_subtract.19'}), (54, {'value': '$52binary_subtract.19'}), (56, {'res': '$const56.20'}), (58, {'value': '$const56.20'}), (60, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={170: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$r_inner62.0'}), (64, {'res': '$r_inner64.1'}), (66, {'lhs': '$r_inner62.0', 'rhs': '$r_inner64.1', 'res': '$66binary_multiply.2'}), (68, {'res': '$r68.3'}), (70, {'res': '$r70.4'}), (72, {'lhs': '$r68.3', 'rhs': '$r70.4', 'res': '$72binary_multiply.5'}), (74, {'res': '$mu74.6'}), (76, {'res': '$mu76.7'}), (78, {'lhs': '$mu74.6', 'rhs': '$mu76.7', 'res': '$78binary_multiply.8'}), (80, {'res': '$const80.9'}), (82, {'lhs': '$78binary_multiply.8', 'rhs': '$const80.9', 'res': '$82binary_subtract.10'}), (84, {'lhs': '$72binary_multiply.5', 'rhs': '$82binary_subtract.10', 'res': '$84binary_multiply.11'}), (86, {'lhs': '$66binary_multiply.2', 'rhs': '$84binary_multiply.11', 'res': '$86binary_add.12'}), (88, {'value': '$86binary_add.12'}), (90, {'res': '$check90.13'}), (92, {'res': '$const92.14'}), (94, {'lhs': '$check90.13', 'rhs': '$const92.14', 'res': '$94compare_op.15'}), (96, {'pred': '$94compare_op.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: (), 124: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$r98.0'}), (100, {'value': '$r98.0', 'res': '$100unary_negative.1'}), (102, {'res': '$mu102.2'}), (104, {'lhs': '$100unary_negative.1', 'rhs': '$mu102.2', 'res': '$104binary_multiply.3'}), (106, {'res': '$106load_global.4'}), (108, {'item': '$106load_global.4', 'res': '$108load_method.5'}), (110, {'res': '$check110.6'}), (112, {'func': '$108load_method.5', 'args': ['$check110.6'], 'res': '$112call_method.7'}), (114, {'lhs': '$104binary_multiply.3', 'rhs': '$112call_method.7', 'res': '$114binary_subtract.8'}), (116, {'value': '$114binary_subtract.8'}), (118, {'res': '$const118.9'}), (120, {'value': '$const118.9'}), (122, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={170: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$124load_global.0'}), (126, {'item': '$124load_global.0', 'res': '$126load_method.1'}), (128, {'res': '$r_outer128.2'}), (130, {'res': '$r_outer130.3'}), (132, {'lhs': '$r_outer128.2', 'rhs': '$r_outer130.3', 'res': '$132binary_multiply.4'}), (134, {'res': '$mu134.5'}), (136, {'res': '$mu136.6'}), (138, {'lhs': '$mu134.5', 'rhs': '$mu136.6', 'res': '$138binary_multiply.7'}), (140, {'res': '$const140.8'}), (142, {'lhs': '$138binary_multiply.7', 'rhs': '$const140.8', 'res': '$142binary_subtract.9'}), (144, {'res': '$r144.10'}), (146, {'lhs': '$142binary_subtract.9', 'rhs': '$r144.10', 'res': '$146binary_multiply.11'}), (148, {'res': '$r148.12'}), (150, {'lhs': '$146binary_multiply.11', 'rhs': '$r148.12', 'res': '$150binary_multiply.13'}), (152, {'lhs': '$132binary_multiply.4', 'rhs': '$150binary_multiply.13', 'res': '$152binary_add.14'}), (154, {'func': '$126load_method.1', 'args': ['$152binary_add.14'], 'res': '$154call_method.15'}), (156, {'res': '$r156.16'}), (158, {'res': '$mu158.17'}), (160, {'lhs': '$r156.16', 'rhs': '$mu158.17', 'res': '$160binary_multiply.18'}), (162, {'lhs': '$154call_method.15', 'rhs': '$160binary_multiply.18', 'res': '$162binary_subtract.19'}), (164, {'value': '$162binary_subtract.19'}), (166, {'res': '$const166.20'}), (168, {'value': '$const166.20'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={170: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=170 nstack_initial=0):
AdaptBlockInfo(insts=((170, {'res': '$distance170.0'}), (172, {'res': '$delta_shell172.1'}), (174, {'items': ['$distance170.0', '$delta_shell172.1'], 'res': '$174build_tuple.2'}), (176, {'retval': '$174build_tuple.2', 'castval': '$176return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r = arg(0, name=r)                       ['r']
    mu = arg(1, name=mu)                     ['mu']
    r_inner = arg(2, name=r_inner)           ['r_inner']
    r_outer = arg(3, name=r_outer)           ['r_outer']
    $const2.0 = const(int, 0)                ['$const2.0']
    delta_shell = $const2.0                  ['$const2.0', 'delta_shell']
    $const8.2 = const(float, 0.0)            ['$const8.2']
    $10compare_op.3 = mu > $const8.2         ['$10compare_op.3', '$const8.2', 'mu']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
    $12pred = call bool12($10compare_op.3, func=bool12, args=(Var($10compare_op.3, r_packet.py:103),), kws=(), vararg=None) ['$10compare_op.3', '$12pred', 'bool12']
    branch $12pred, 14, 62                   ['$12pred']
label 14:
    $14load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>) ['$14load_global.0']
    $16load_method.1 = getattr(value=$14load_global.0, attr=sqrt) ['$14load_global.0', '$16load_method.1']
    $22binary_multiply.4 = r_outer * r_outer ['$22binary_multiply.4', 'r_outer', 'r_outer']
    $28binary_multiply.7 = mu * mu           ['$28binary_multiply.7', 'mu', 'mu']
    $const30.8 = const(float, 1.0)           ['$const30.8']
    $32binary_subtract.9 = $28binary_multiply.7 - $const30.8 ['$28binary_multiply.7', '$32binary_subtract.9', '$const30.8']
    $36binary_multiply.11 = $32binary_subtract.9 * r ['$32binary_subtract.9', '$36binary_multiply.11', 'r']
    $40binary_multiply.13 = $36binary_multiply.11 * r ['$36binary_multiply.11', '$40binary_multiply.13', 'r']
    $42binary_add.14 = $22binary_multiply.4 + $40binary_multiply.13 ['$22binary_multiply.4', '$40binary_multiply.13', '$42binary_add.14']
    $44call_method.15 = call $16load_method.1($42binary_add.14, func=$16load_method.1, args=[Var($42binary_add.14, r_packet.py:105)], kws=(), vararg=None) ['$16load_method.1', '$42binary_add.14', '$44call_method.15']
    $50binary_multiply.18 = r * mu           ['$50binary_multiply.18', 'mu', 'r']
    $52binary_subtract.19 = $44call_method.15 - $50binary_multiply.18 ['$44call_method.15', '$50binary_multiply.18', '$52binary_subtract.19']
    distance = $52binary_subtract.19         ['$52binary_subtract.19', 'distance']
    $const56.20 = const(int, 1)              ['$const56.20']
    delta_shell = $const56.20                ['$const56.20', 'delta_shell']
    jump 170                                 []
label 62:
    $66binary_multiply.2 = r_inner * r_inner ['$66binary_multiply.2', 'r_inner', 'r_inner']
    $72binary_multiply.5 = r * r             ['$72binary_multiply.5', 'r', 'r']
    $78binary_multiply.8 = mu * mu           ['$78binary_multiply.8', 'mu', 'mu']
    $const80.9 = const(float, 1.0)           ['$const80.9']
    $82binary_subtract.10 = $78binary_multiply.8 - $const80.9 ['$78binary_multiply.8', '$82binary_subtract.10', '$const80.9']
    $84binary_multiply.11 = $72binary_multiply.5 * $82binary_subtract.10 ['$72binary_multiply.5', '$82binary_subtract.10', '$84binary_multiply.11']
    $86binary_add.12 = $66binary_multiply.2 + $84binary_multiply.11 ['$66binary_multiply.2', '$84binary_multiply.11', '$86binary_add.12']
    check = $86binary_add.12                 ['$86binary_add.12', 'check']
    $const92.14 = const(float, 0.0)          ['$const92.14']
    $94compare_op.15 = check >= $const92.14  ['$94compare_op.15', '$const92.14', 'check']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94compare_op.15, func=bool96, args=(Var($94compare_op.15, r_packet.py:113),), kws=(), vararg=None) ['$94compare_op.15', '$96pred', 'bool96']
    branch $96pred, 98, 124                  ['$96pred']
label 98:
    $100unary_negative.1 = unary(fn=<built-in function neg>, value=r) ['$100unary_negative.1', 'r']
    $104binary_multiply.3 = $100unary_negative.1 * mu ['$100unary_negative.1', '$104binary_multiply.3', 'mu']
    $106load_global.4 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>) ['$106load_global.4']
    $108load_method.5 = getattr(value=$106load_global.4, attr=sqrt) ['$106load_global.4', '$108load_method.5']
    $112call_method.7 = call $108load_method.5(check, func=$108load_method.5, args=[Var(check, r_packet.py:111)], kws=(), vararg=None) ['$108load_method.5', '$112call_method.7', 'check']
    $114binary_subtract.8 = $104binary_multiply.3 - $112call_method.7 ['$104binary_multiply.3', '$112call_method.7', '$114binary_subtract.8']
    distance = $114binary_subtract.8         ['$114binary_subtract.8', 'distance']
    $const118.9 = const(int, -1)             ['$const118.9']
    delta_shell = $const118.9                ['$const118.9', 'delta_shell']
    jump 170                                 []
label 124:
    $124load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>) ['$124load_global.0']
    $126load_method.1 = getattr(value=$124load_global.0, attr=sqrt) ['$124load_global.0', '$126load_method.1']
    $132binary_multiply.4 = r_outer * r_outer ['$132binary_multiply.4', 'r_outer', 'r_outer']
    $138binary_multiply.7 = mu * mu          ['$138binary_multiply.7', 'mu', 'mu']
    $const140.8 = const(float, 1.0)          ['$const140.8']
    $142binary_subtract.9 = $138binary_multiply.7 - $const140.8 ['$138binary_multiply.7', '$142binary_subtract.9', '$const140.8']
    $146binary_multiply.11 = $142binary_subtract.9 * r ['$142binary_subtract.9', '$146binary_multiply.11', 'r']
    $150binary_multiply.13 = $146binary_multiply.11 * r ['$146binary_multiply.11', '$150binary_multiply.13', 'r']
    $152binary_add.14 = $132binary_multiply.4 + $150binary_multiply.13 ['$132binary_multiply.4', '$150binary_multiply.13', '$152binary_add.14']
    $154call_method.15 = call $126load_method.1($152binary_add.14, func=$126load_method.1, args=[Var($152binary_add.14, r_packet.py:120)], kws=(), vararg=None) ['$126load_method.1', '$152binary_add.14', '$154call_method.15']
    $160binary_multiply.18 = r * mu          ['$160binary_multiply.18', 'mu', 'r']
    $162binary_subtract.19 = $154call_method.15 - $160binary_multiply.18 ['$154call_method.15', '$160binary_multiply.18', '$162binary_subtract.19']
    distance = $162binary_subtract.19        ['$162binary_subtract.19', 'distance']
    $const166.20 = const(int, 1)             ['$const166.20']
    delta_shell = $const166.20               ['$const166.20', 'delta_shell']
    jump 170                                 []
label 170:
    $174build_tuple.2 = build_tuple(items=[Var(distance, r_packet.py:106), Var(delta_shell, r_packet.py:102)]) ['$174build_tuple.2', 'delta_shell', 'distance']
    $176return_value.3 = cast(value=$174build_tuple.2) ['$174build_tuple.2', '$176return_value.3']
    return $176return_value.3                ['$176return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4643ae10>
DEBUG:numba.core.ssa:on stmt: r = arg(0, name=r)
DEBUG:numba.core.ssa:on stmt: mu = arg(1, name=mu)
DEBUG:numba.core.ssa:on stmt: r_inner = arg(2, name=r_inner)
DEBUG:numba.core.ssa:on stmt: r_outer = arg(3, name=r_outer)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const2.0
DEBUG:numba.core.ssa:on stmt: $const8.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $10compare_op.3 = mu > $const8.2
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.3, func=bool12, args=(Var($10compare_op.3, r_packet.py:103),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 14, 62
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4643ae10>
DEBUG:numba.core.ssa:on stmt: $14load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $16load_method.1 = getattr(value=$14load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.4 = r_outer * r_outer
DEBUG:numba.core.ssa:on stmt: $28binary_multiply.7 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const30.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $32binary_subtract.9 = $28binary_multiply.7 - $const30.8
DEBUG:numba.core.ssa:on stmt: $36binary_multiply.11 = $32binary_subtract.9 * r
DEBUG:numba.core.ssa:on stmt: $40binary_multiply.13 = $36binary_multiply.11 * r
DEBUG:numba.core.ssa:on stmt: $42binary_add.14 = $22binary_multiply.4 + $40binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $44call_method.15 = call $16load_method.1($42binary_add.14, func=$16load_method.1, args=[Var($42binary_add.14, r_packet.py:105)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.18 = r * mu
DEBUG:numba.core.ssa:on stmt: $52binary_subtract.19 = $44call_method.15 - $50binary_multiply.18
DEBUG:numba.core.ssa:on stmt: distance = $52binary_subtract.19
DEBUG:numba.core.ssa:on stmt: $const56.20 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const56.20
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4643ae10>
DEBUG:numba.core.ssa:on stmt: $66binary_multiply.2 = r_inner * r_inner
DEBUG:numba.core.ssa:on stmt: $72binary_multiply.5 = r * r
DEBUG:numba.core.ssa:on stmt: $78binary_multiply.8 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const80.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $82binary_subtract.10 = $78binary_multiply.8 - $const80.9
DEBUG:numba.core.ssa:on stmt: $84binary_multiply.11 = $72binary_multiply.5 * $82binary_subtract.10
DEBUG:numba.core.ssa:on stmt: $86binary_add.12 = $66binary_multiply.2 + $84binary_multiply.11
DEBUG:numba.core.ssa:on stmt: check = $86binary_add.12
DEBUG:numba.core.ssa:on stmt: $const92.14 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $94compare_op.15 = check >= $const92.14
DEBUG:numba.core.ssa:on stmt: bool96 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $96pred = call bool96($94compare_op.15, func=bool96, args=(Var($94compare_op.15, r_packet.py:113),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $96pred, 98, 124
DEBUG:numba.core.ssa:==== SSA block analysis pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4643ae10>
DEBUG:numba.core.ssa:on stmt: $100unary_negative.1 = unary(fn=<built-in function neg>, value=r)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.3 = $100unary_negative.1 * mu
DEBUG:numba.core.ssa:on stmt: $106load_global.4 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $108load_method.5 = getattr(value=$106load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $112call_method.7 = call $108load_method.5(check, func=$108load_method.5, args=[Var(check, r_packet.py:111)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $114binary_subtract.8 = $104binary_multiply.3 - $112call_method.7
DEBUG:numba.core.ssa:on stmt: distance = $114binary_subtract.8
DEBUG:numba.core.ssa:on stmt: $const118.9 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const118.9
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block analysis pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4643ae10>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $126load_method.1 = getattr(value=$124load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $132binary_multiply.4 = r_outer * r_outer
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.7 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const140.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $142binary_subtract.9 = $138binary_multiply.7 - $const140.8
DEBUG:numba.core.ssa:on stmt: $146binary_multiply.11 = $142binary_subtract.9 * r
DEBUG:numba.core.ssa:on stmt: $150binary_multiply.13 = $146binary_multiply.11 * r
DEBUG:numba.core.ssa:on stmt: $152binary_add.14 = $132binary_multiply.4 + $150binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $154call_method.15 = call $126load_method.1($152binary_add.14, func=$126load_method.1, args=[Var($152binary_add.14, r_packet.py:120)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160binary_multiply.18 = r * mu
DEBUG:numba.core.ssa:on stmt: $162binary_subtract.19 = $154call_method.15 - $160binary_multiply.18
DEBUG:numba.core.ssa:on stmt: distance = $162binary_subtract.19
DEBUG:numba.core.ssa:on stmt: $const166.20 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const166.20
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block analysis pass on 170
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4643ae10>
DEBUG:numba.core.ssa:on stmt: $174build_tuple.2 = build_tuple(items=[Var(distance, r_packet.py:106), Var(delta_shell, r_packet.py:102)])
DEBUG:numba.core.ssa:on stmt: $176return_value.3 = cast(value=$174build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $176return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100unary_negative.1': [<numba.core.ir.Assign object at 0x7f6e45af5a90>],
             '$104binary_multiply.3': [<numba.core.ir.Assign object at 0x7f6e45af5a10>],
             '$106load_global.4': [<numba.core.ir.Assign object at 0x7f6e45af5150>],
             '$108load_method.5': [<numba.core.ir.Assign object at 0x7f6e45af5c50>],
             '$10compare_op.3': [<numba.core.ir.Assign object at 0x7f6e45d86750>],
             '$112call_method.7': [<numba.core.ir.Assign object at 0x7f6e45af5ad0>],
             '$114binary_subtract.8': [<numba.core.ir.Assign object at 0x7f6e45d637d0>],
             '$124load_global.0': [<numba.core.ir.Assign object at 0x7f6e45d639d0>],
             '$126load_method.1': [<numba.core.ir.Assign object at 0x7f6e45d63510>],
             '$12pred': [<numba.core.ir.Assign object at 0x7f6e45d86d50>],
             '$132binary_multiply.4': [<numba.core.ir.Assign object at 0x7f6e45d63550>],
             '$138binary_multiply.7': [<numba.core.ir.Assign object at 0x7f6e45d63750>],
             '$142binary_subtract.9': [<numba.core.ir.Assign object at 0x7f6e45d63d90>],
             '$146binary_multiply.11': [<numba.core.ir.Assign object at 0x7f6e45d63210>],
             '$14load_global.0': [<numba.core.ir.Assign object at 0x7f6e45aeca90>],
             '$150binary_multiply.13': [<numba.core.ir.Assign object at 0x7f6e45d63c50>],
             '$152binary_add.14': [<numba.core.ir.Assign object at 0x7f6e4651eed0>],
             '$154call_method.15': [<numba.core.ir.Assign object at 0x7f6e4651ea50>],
             '$160binary_multiply.18': [<numba.core.ir.Assign object at 0x7f6e4651e390>],
             '$162binary_subtract.19': [<numba.core.ir.Assign object at 0x7f6e4651e750>],
             '$16load_method.1': [<numba.core.ir.Assign object at 0x7f6e45aeccd0>],
             '$174build_tuple.2': [<numba.core.ir.Assign object at 0x7f6e4651ed50>],
             '$176return_value.3': [<numba.core.ir.Assign object at 0x7f6e4651eb10>],
             '$22binary_multiply.4': [<numba.core.ir.Assign object at 0x7f6e45d86f10>],
             '$28binary_multiply.7': [<numba.core.ir.Assign object at 0x7f6e45fef8d0>],
             '$32binary_subtract.9': [<numba.core.ir.Assign object at 0x7f6e46164810>],
             '$36binary_multiply.11': [<numba.core.ir.Assign object at 0x7f6e45defb50>],
             '$40binary_multiply.13': [<numba.core.ir.Assign object at 0x7f6e45def850>],
             '$42binary_add.14': [<numba.core.ir.Assign object at 0x7f6e45defc10>],
             '$44call_method.15': [<numba.core.ir.Assign object at 0x7f6e460ce710>],
             '$50binary_multiply.18': [<numba.core.ir.Assign object at 0x7f6e45b05d90>],
             '$52binary_subtract.19': [<numba.core.ir.Assign object at 0x7f6e45aec150>],
             '$66binary_multiply.2': [<numba.core.ir.Assign object at 0x7f6e45aec890>],
             '$72binary_multiply.5': [<numba.core.ir.Assign object at 0x7f6e45aecc90>],
             '$78binary_multiply.8': [<numba.core.ir.Assign object at 0x7f6e45aec490>],
             '$82binary_subtract.10': [<numba.core.ir.Assign object at 0x7f6e45af5ed0>],
             '$84binary_multiply.11': [<numba.core.ir.Assign object at 0x7f6e45af5190>],
             '$86binary_add.12': [<numba.core.ir.Assign object at 0x7f6e45af5b50>],
             '$94compare_op.15': [<numba.core.ir.Assign object at 0x7f6e45af51d0>],
             '$96pred': [<numba.core.ir.Assign object at 0x7f6e45af5110>],
             '$const118.9': [<numba.core.ir.Assign object at 0x7f6e45d63b90>],
             '$const140.8': [<numba.core.ir.Assign object at 0x7f6e45d63390>],
             '$const166.20': [<numba.core.ir.Assign object at 0x7f6e4651ef10>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e45d865d0>],
             '$const30.8': [<numba.core.ir.Assign object at 0x7f6e461b1b90>],
             '$const56.20': [<numba.core.ir.Assign object at 0x7f6e45aec7d0>],
             '$const8.2': [<numba.core.ir.Assign object at 0x7f6e45d862d0>],
             '$const80.9': [<numba.core.ir.Assign object at 0x7f6e45aec710>],
             '$const92.14': [<numba.core.ir.Assign object at 0x7f6e45af57d0>],
             'bool12': [<numba.core.ir.Assign object at 0x7f6e45d86290>],
             'bool96': [<numba.core.ir.Assign object at 0x7f6e45af59d0>],
             'check': [<numba.core.ir.Assign object at 0x7f6e45af5310>],
             'delta_shell': [<numba.core.ir.Assign object at 0x7f6e4600c790>,
                             <numba.core.ir.Assign object at 0x7f6e45aec350>,
                             <numba.core.ir.Assign object at 0x7f6e45d63310>,
                             <numba.core.ir.Assign object at 0x7f6e4651ead0>],
             'distance': [<numba.core.ir.Assign object at 0x7f6e45aec2d0>,
                          <numba.core.ir.Assign object at 0x7f6e45af53d0>,
                          <numba.core.ir.Assign object at 0x7f6e45d63910>],
             'mu': [<numba.core.ir.Assign object at 0x7f6e45d861d0>],
             'r': [<numba.core.ir.Assign object at 0x7f6e45d86550>],
             'r_inner': [<numba.core.ir.Assign object at 0x7f6e45d864d0>],
             'r_outer': [<numba.core.ir.Assign object at 0x7f6e45d86110>]})
DEBUG:numba.core.ssa:SSA violators {'distance', 'delta_shell'}
DEBUG:numba.core.ssa:Fix SSA violator on var distance
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: r = arg(0, name=r)
DEBUG:numba.core.ssa:on stmt: mu = arg(1, name=mu)
DEBUG:numba.core.ssa:on stmt: r_inner = arg(2, name=r_inner)
DEBUG:numba.core.ssa:on stmt: r_outer = arg(3, name=r_outer)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const2.0
DEBUG:numba.core.ssa:on stmt: $const8.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $10compare_op.3 = mu > $const8.2
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.3, func=bool12, args=(Var($10compare_op.3, r_packet.py:103),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 14, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $14load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $16load_method.1 = getattr(value=$14load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.4 = r_outer * r_outer
DEBUG:numba.core.ssa:on stmt: $28binary_multiply.7 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const30.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $32binary_subtract.9 = $28binary_multiply.7 - $const30.8
DEBUG:numba.core.ssa:on stmt: $36binary_multiply.11 = $32binary_subtract.9 * r
DEBUG:numba.core.ssa:on stmt: $40binary_multiply.13 = $36binary_multiply.11 * r
DEBUG:numba.core.ssa:on stmt: $42binary_add.14 = $22binary_multiply.4 + $40binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $44call_method.15 = call $16load_method.1($42binary_add.14, func=$16load_method.1, args=[Var($42binary_add.14, r_packet.py:105)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.18 = r * mu
DEBUG:numba.core.ssa:on stmt: $52binary_subtract.19 = $44call_method.15 - $50binary_multiply.18
DEBUG:numba.core.ssa:on stmt: distance = $52binary_subtract.19
DEBUG:numba.core.ssa:first assign: distance
DEBUG:numba.core.ssa:replaced with: distance = $52binary_subtract.19
DEBUG:numba.core.ssa:on stmt: $const56.20 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const56.20
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $66binary_multiply.2 = r_inner * r_inner
DEBUG:numba.core.ssa:on stmt: $72binary_multiply.5 = r * r
DEBUG:numba.core.ssa:on stmt: $78binary_multiply.8 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const80.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $82binary_subtract.10 = $78binary_multiply.8 - $const80.9
DEBUG:numba.core.ssa:on stmt: $84binary_multiply.11 = $72binary_multiply.5 * $82binary_subtract.10
DEBUG:numba.core.ssa:on stmt: $86binary_add.12 = $66binary_multiply.2 + $84binary_multiply.11
DEBUG:numba.core.ssa:on stmt: check = $86binary_add.12
DEBUG:numba.core.ssa:on stmt: $const92.14 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $94compare_op.15 = check >= $const92.14
DEBUG:numba.core.ssa:on stmt: bool96 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $96pred = call bool96($94compare_op.15, func=bool96, args=(Var($94compare_op.15, r_packet.py:113),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $96pred, 98, 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $100unary_negative.1 = unary(fn=<built-in function neg>, value=r)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.3 = $100unary_negative.1 * mu
DEBUG:numba.core.ssa:on stmt: $106load_global.4 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $108load_method.5 = getattr(value=$106load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $112call_method.7 = call $108load_method.5(check, func=$108load_method.5, args=[Var(check, r_packet.py:111)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $114binary_subtract.8 = $104binary_multiply.3 - $112call_method.7
DEBUG:numba.core.ssa:on stmt: distance = $114binary_subtract.8
DEBUG:numba.core.ssa:replaced with: distance.1 = $114binary_subtract.8
DEBUG:numba.core.ssa:on stmt: $const118.9 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const118.9
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $126load_method.1 = getattr(value=$124load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $132binary_multiply.4 = r_outer * r_outer
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.7 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const140.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $142binary_subtract.9 = $138binary_multiply.7 - $const140.8
DEBUG:numba.core.ssa:on stmt: $146binary_multiply.11 = $142binary_subtract.9 * r
DEBUG:numba.core.ssa:on stmt: $150binary_multiply.13 = $146binary_multiply.11 * r
DEBUG:numba.core.ssa:on stmt: $152binary_add.14 = $132binary_multiply.4 + $150binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $154call_method.15 = call $126load_method.1($152binary_add.14, func=$126load_method.1, args=[Var($152binary_add.14, r_packet.py:120)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160binary_multiply.18 = r * mu
DEBUG:numba.core.ssa:on stmt: $162binary_subtract.19 = $154call_method.15 - $160binary_multiply.18
DEBUG:numba.core.ssa:on stmt: distance = $162binary_subtract.19
DEBUG:numba.core.ssa:replaced with: distance.2 = $162binary_subtract.19
DEBUG:numba.core.ssa:on stmt: $const166.20 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const166.20
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 170
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45cac390>
DEBUG:numba.core.ssa:on stmt: $174build_tuple.2 = build_tuple(items=[Var(distance, r_packet.py:106), Var(delta_shell, r_packet.py:102)])
DEBUG:numba.core.ssa:on stmt: $176return_value.3 = cast(value=$174build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $176return_value.3
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {14: [<numba.core.ir.Assign object at 0x7f6e4649ed10>],
             98: [<numba.core.ir.Assign object at 0x7f6e4649ead0>],
             124: [<numba.core.ir.Assign object at 0x7f6e4649e0d0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4649e350>
DEBUG:numba.core.ssa:on stmt: r = arg(0, name=r)
DEBUG:numba.core.ssa:on stmt: mu = arg(1, name=mu)
DEBUG:numba.core.ssa:on stmt: r_inner = arg(2, name=r_inner)
DEBUG:numba.core.ssa:on stmt: r_outer = arg(3, name=r_outer)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const2.0
DEBUG:numba.core.ssa:on stmt: $const8.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $10compare_op.3 = mu > $const8.2
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.3, func=bool12, args=(Var($10compare_op.3, r_packet.py:103),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 14, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4649e350>
DEBUG:numba.core.ssa:on stmt: $14load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $16load_method.1 = getattr(value=$14load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.4 = r_outer * r_outer
DEBUG:numba.core.ssa:on stmt: $28binary_multiply.7 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const30.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $32binary_subtract.9 = $28binary_multiply.7 - $const30.8
DEBUG:numba.core.ssa:on stmt: $36binary_multiply.11 = $32binary_subtract.9 * r
DEBUG:numba.core.ssa:on stmt: $40binary_multiply.13 = $36binary_multiply.11 * r
DEBUG:numba.core.ssa:on stmt: $42binary_add.14 = $22binary_multiply.4 + $40binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $44call_method.15 = call $16load_method.1($42binary_add.14, func=$16load_method.1, args=[Var($42binary_add.14, r_packet.py:105)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.18 = r * mu
DEBUG:numba.core.ssa:on stmt: $52binary_subtract.19 = $44call_method.15 - $50binary_multiply.18
DEBUG:numba.core.ssa:on stmt: distance = $52binary_subtract.19
DEBUG:numba.core.ssa:on stmt: $const56.20 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const56.20
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4649e350>
DEBUG:numba.core.ssa:on stmt: $66binary_multiply.2 = r_inner * r_inner
DEBUG:numba.core.ssa:on stmt: $72binary_multiply.5 = r * r
DEBUG:numba.core.ssa:on stmt: $78binary_multiply.8 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const80.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $82binary_subtract.10 = $78binary_multiply.8 - $const80.9
DEBUG:numba.core.ssa:on stmt: $84binary_multiply.11 = $72binary_multiply.5 * $82binary_subtract.10
DEBUG:numba.core.ssa:on stmt: $86binary_add.12 = $66binary_multiply.2 + $84binary_multiply.11
DEBUG:numba.core.ssa:on stmt: check = $86binary_add.12
DEBUG:numba.core.ssa:on stmt: $const92.14 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $94compare_op.15 = check >= $const92.14
DEBUG:numba.core.ssa:on stmt: bool96 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $96pred = call bool96($94compare_op.15, func=bool96, args=(Var($94compare_op.15, r_packet.py:113),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $96pred, 98, 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4649e350>
DEBUG:numba.core.ssa:on stmt: $100unary_negative.1 = unary(fn=<built-in function neg>, value=r)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.3 = $100unary_negative.1 * mu
DEBUG:numba.core.ssa:on stmt: $106load_global.4 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $108load_method.5 = getattr(value=$106load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $112call_method.7 = call $108load_method.5(check, func=$108load_method.5, args=[Var(check, r_packet.py:111)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $114binary_subtract.8 = $104binary_multiply.3 - $112call_method.7
DEBUG:numba.core.ssa:on stmt: distance.1 = $114binary_subtract.8
DEBUG:numba.core.ssa:on stmt: $const118.9 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const118.9
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4649e350>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $126load_method.1 = getattr(value=$124load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $132binary_multiply.4 = r_outer * r_outer
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.7 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const140.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $142binary_subtract.9 = $138binary_multiply.7 - $const140.8
DEBUG:numba.core.ssa:on stmt: $146binary_multiply.11 = $142binary_subtract.9 * r
DEBUG:numba.core.ssa:on stmt: $150binary_multiply.13 = $146binary_multiply.11 * r
DEBUG:numba.core.ssa:on stmt: $152binary_add.14 = $132binary_multiply.4 + $150binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $154call_method.15 = call $126load_method.1($152binary_add.14, func=$126load_method.1, args=[Var($152binary_add.14, r_packet.py:120)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160binary_multiply.18 = r * mu
DEBUG:numba.core.ssa:on stmt: $162binary_subtract.19 = $154call_method.15 - $160binary_multiply.18
DEBUG:numba.core.ssa:on stmt: distance.2 = $162binary_subtract.19
DEBUG:numba.core.ssa:on stmt: $const166.20 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const166.20
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 170
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4649e350>
DEBUG:numba.core.ssa:on stmt: $174build_tuple.2 = build_tuple(items=[Var(distance, r_packet.py:106), Var(delta_shell, r_packet.py:102)])
DEBUG:numba.core.ssa:find_def var='distance' stmt=$174build_tuple.2 = build_tuple(items=[Var(distance, r_packet.py:106), Var(delta_shell, r_packet.py:102)])
DEBUG:numba.core.ssa:find_def_from_top label 170
DEBUG:numba.core.ssa:insert phi node distance.3 = phi(incoming_values=[], incoming_blocks=[]) at 170
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:incoming_def distance.1 = $114binary_subtract.8
DEBUG:numba.core.ssa:find_def_from_bottom label 124
DEBUG:numba.core.ssa:incoming_def distance.2 = $162binary_subtract.19
DEBUG:numba.core.ssa:find_def_from_bottom label 14
DEBUG:numba.core.ssa:incoming_def distance = $52binary_subtract.19
DEBUG:numba.core.ssa:replaced with: $174build_tuple.2 = build_tuple(items=[Var(distance.3, r_packet.py:124), Var(delta_shell, r_packet.py:102)])
DEBUG:numba.core.ssa:on stmt: $176return_value.3 = cast(value=$174build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $176return_value.3
DEBUG:numba.core.ssa:Fix SSA violator on var delta_shell
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46af58d0>
DEBUG:numba.core.ssa:on stmt: r = arg(0, name=r)
DEBUG:numba.core.ssa:on stmt: mu = arg(1, name=mu)
DEBUG:numba.core.ssa:on stmt: r_inner = arg(2, name=r_inner)
DEBUG:numba.core.ssa:on stmt: r_outer = arg(3, name=r_outer)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const2.0
DEBUG:numba.core.ssa:first assign: delta_shell
DEBUG:numba.core.ssa:replaced with: delta_shell = $const2.0
DEBUG:numba.core.ssa:on stmt: $const8.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $10compare_op.3 = mu > $const8.2
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.3, func=bool12, args=(Var($10compare_op.3, r_packet.py:103),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 14, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46af58d0>
DEBUG:numba.core.ssa:on stmt: $14load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $16load_method.1 = getattr(value=$14load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.4 = r_outer * r_outer
DEBUG:numba.core.ssa:on stmt: $28binary_multiply.7 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const30.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $32binary_subtract.9 = $28binary_multiply.7 - $const30.8
DEBUG:numba.core.ssa:on stmt: $36binary_multiply.11 = $32binary_subtract.9 * r
DEBUG:numba.core.ssa:on stmt: $40binary_multiply.13 = $36binary_multiply.11 * r
DEBUG:numba.core.ssa:on stmt: $42binary_add.14 = $22binary_multiply.4 + $40binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $44call_method.15 = call $16load_method.1($42binary_add.14, func=$16load_method.1, args=[Var($42binary_add.14, r_packet.py:105)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.18 = r * mu
DEBUG:numba.core.ssa:on stmt: $52binary_subtract.19 = $44call_method.15 - $50binary_multiply.18
DEBUG:numba.core.ssa:on stmt: distance = $52binary_subtract.19
DEBUG:numba.core.ssa:on stmt: $const56.20 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const56.20
DEBUG:numba.core.ssa:replaced with: delta_shell.1 = $const56.20
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46af58d0>
DEBUG:numba.core.ssa:on stmt: $66binary_multiply.2 = r_inner * r_inner
DEBUG:numba.core.ssa:on stmt: $72binary_multiply.5 = r * r
DEBUG:numba.core.ssa:on stmt: $78binary_multiply.8 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const80.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $82binary_subtract.10 = $78binary_multiply.8 - $const80.9
DEBUG:numba.core.ssa:on stmt: $84binary_multiply.11 = $72binary_multiply.5 * $82binary_subtract.10
DEBUG:numba.core.ssa:on stmt: $86binary_add.12 = $66binary_multiply.2 + $84binary_multiply.11
DEBUG:numba.core.ssa:on stmt: check = $86binary_add.12
DEBUG:numba.core.ssa:on stmt: $const92.14 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $94compare_op.15 = check >= $const92.14
DEBUG:numba.core.ssa:on stmt: bool96 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $96pred = call bool96($94compare_op.15, func=bool96, args=(Var($94compare_op.15, r_packet.py:113),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $96pred, 98, 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46af58d0>
DEBUG:numba.core.ssa:on stmt: $100unary_negative.1 = unary(fn=<built-in function neg>, value=r)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.3 = $100unary_negative.1 * mu
DEBUG:numba.core.ssa:on stmt: $106load_global.4 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $108load_method.5 = getattr(value=$106load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $112call_method.7 = call $108load_method.5(check, func=$108load_method.5, args=[Var(check, r_packet.py:111)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $114binary_subtract.8 = $104binary_multiply.3 - $112call_method.7
DEBUG:numba.core.ssa:on stmt: distance.1 = $114binary_subtract.8
DEBUG:numba.core.ssa:on stmt: $const118.9 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const118.9
DEBUG:numba.core.ssa:replaced with: delta_shell.2 = $const118.9
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46af58d0>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $126load_method.1 = getattr(value=$124load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $132binary_multiply.4 = r_outer * r_outer
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.7 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const140.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $142binary_subtract.9 = $138binary_multiply.7 - $const140.8
DEBUG:numba.core.ssa:on stmt: $146binary_multiply.11 = $142binary_subtract.9 * r
DEBUG:numba.core.ssa:on stmt: $150binary_multiply.13 = $146binary_multiply.11 * r
DEBUG:numba.core.ssa:on stmt: $152binary_add.14 = $132binary_multiply.4 + $150binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $154call_method.15 = call $126load_method.1($152binary_add.14, func=$126load_method.1, args=[Var($152binary_add.14, r_packet.py:120)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160binary_multiply.18 = r * mu
DEBUG:numba.core.ssa:on stmt: $162binary_subtract.19 = $154call_method.15 - $160binary_multiply.18
DEBUG:numba.core.ssa:on stmt: distance.2 = $162binary_subtract.19
DEBUG:numba.core.ssa:on stmt: $const166.20 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const166.20
DEBUG:numba.core.ssa:replaced with: delta_shell.3 = $const166.20
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 170
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46af58d0>
DEBUG:numba.core.ssa:on stmt: distance.3 = phi(incoming_values=[Var(distance.1, r_packet.py:115), Var(distance.2, r_packet.py:121), Var(distance, r_packet.py:106)], incoming_blocks=[98, 124, 14])
DEBUG:numba.core.ssa:on stmt: $174build_tuple.2 = build_tuple(items=[Var(distance.3, r_packet.py:124), Var(delta_shell, r_packet.py:102)])
DEBUG:numba.core.ssa:on stmt: $176return_value.3 = cast(value=$174build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $176return_value.3
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e4649efd0>],
             14: [<numba.core.ir.Assign object at 0x7f6e4649e610>],
             98: [<numba.core.ir.Assign object at 0x7f6e4643acd0>],
             124: [<numba.core.ir.Assign object at 0x7f6e4643ae10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4643a690>
DEBUG:numba.core.ssa:on stmt: r = arg(0, name=r)
DEBUG:numba.core.ssa:on stmt: mu = arg(1, name=mu)
DEBUG:numba.core.ssa:on stmt: r_inner = arg(2, name=r_inner)
DEBUG:numba.core.ssa:on stmt: r_outer = arg(3, name=r_outer)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: delta_shell = $const2.0
DEBUG:numba.core.ssa:on stmt: $const8.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $10compare_op.3 = mu > $const8.2
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.3, func=bool12, args=(Var($10compare_op.3, r_packet.py:103),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 14, 62
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4643a690>
DEBUG:numba.core.ssa:on stmt: $14load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $16load_method.1 = getattr(value=$14load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.4 = r_outer * r_outer
DEBUG:numba.core.ssa:on stmt: $28binary_multiply.7 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const30.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $32binary_subtract.9 = $28binary_multiply.7 - $const30.8
DEBUG:numba.core.ssa:on stmt: $36binary_multiply.11 = $32binary_subtract.9 * r
DEBUG:numba.core.ssa:on stmt: $40binary_multiply.13 = $36binary_multiply.11 * r
DEBUG:numba.core.ssa:on stmt: $42binary_add.14 = $22binary_multiply.4 + $40binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $44call_method.15 = call $16load_method.1($42binary_add.14, func=$16load_method.1, args=[Var($42binary_add.14, r_packet.py:105)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.18 = r * mu
DEBUG:numba.core.ssa:on stmt: $52binary_subtract.19 = $44call_method.15 - $50binary_multiply.18
DEBUG:numba.core.ssa:on stmt: distance = $52binary_subtract.19
DEBUG:numba.core.ssa:on stmt: $const56.20 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: delta_shell.1 = $const56.20
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4643a690>
DEBUG:numba.core.ssa:on stmt: $66binary_multiply.2 = r_inner * r_inner
DEBUG:numba.core.ssa:on stmt: $72binary_multiply.5 = r * r
DEBUG:numba.core.ssa:on stmt: $78binary_multiply.8 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const80.9 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $82binary_subtract.10 = $78binary_multiply.8 - $const80.9
DEBUG:numba.core.ssa:on stmt: $84binary_multiply.11 = $72binary_multiply.5 * $82binary_subtract.10
DEBUG:numba.core.ssa:on stmt: $86binary_add.12 = $66binary_multiply.2 + $84binary_multiply.11
DEBUG:numba.core.ssa:on stmt: check = $86binary_add.12
DEBUG:numba.core.ssa:on stmt: $const92.14 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $94compare_op.15 = check >= $const92.14
DEBUG:numba.core.ssa:on stmt: bool96 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $96pred = call bool96($94compare_op.15, func=bool96, args=(Var($94compare_op.15, r_packet.py:113),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $96pred, 98, 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4643a690>
DEBUG:numba.core.ssa:on stmt: $100unary_negative.1 = unary(fn=<built-in function neg>, value=r)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.3 = $100unary_negative.1 * mu
DEBUG:numba.core.ssa:on stmt: $106load_global.4 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $108load_method.5 = getattr(value=$106load_global.4, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $112call_method.7 = call $108load_method.5(check, func=$108load_method.5, args=[Var(check, r_packet.py:111)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $114binary_subtract.8 = $104binary_multiply.3 - $112call_method.7
DEBUG:numba.core.ssa:on stmt: distance.1 = $114binary_subtract.8
DEBUG:numba.core.ssa:on stmt: $const118.9 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: delta_shell.2 = $const118.9
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4643a690>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $126load_method.1 = getattr(value=$124load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $132binary_multiply.4 = r_outer * r_outer
DEBUG:numba.core.ssa:on stmt: $138binary_multiply.7 = mu * mu
DEBUG:numba.core.ssa:on stmt: $const140.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $142binary_subtract.9 = $138binary_multiply.7 - $const140.8
DEBUG:numba.core.ssa:on stmt: $146binary_multiply.11 = $142binary_subtract.9 * r
DEBUG:numba.core.ssa:on stmt: $150binary_multiply.13 = $146binary_multiply.11 * r
DEBUG:numba.core.ssa:on stmt: $152binary_add.14 = $132binary_multiply.4 + $150binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $154call_method.15 = call $126load_method.1($152binary_add.14, func=$126load_method.1, args=[Var($152binary_add.14, r_packet.py:120)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160binary_multiply.18 = r * mu
DEBUG:numba.core.ssa:on stmt: $162binary_subtract.19 = $154call_method.15 - $160binary_multiply.18
DEBUG:numba.core.ssa:on stmt: distance.2 = $162binary_subtract.19
DEBUG:numba.core.ssa:on stmt: $const166.20 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: delta_shell.3 = $const166.20
DEBUG:numba.core.ssa:on stmt: jump 170
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 170
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4643a690>
DEBUG:numba.core.ssa:on stmt: distance.3 = phi(incoming_values=[Var(distance.1, r_packet.py:115), Var(distance.2, r_packet.py:121), Var(distance, r_packet.py:106)], incoming_blocks=[98, 124, 14])
DEBUG:numba.core.ssa:on stmt: $174build_tuple.2 = build_tuple(items=[Var(distance.3, r_packet.py:124), Var(delta_shell, r_packet.py:102)])
DEBUG:numba.core.ssa:find_def var='delta_shell' stmt=$174build_tuple.2 = build_tuple(items=[Var(distance.3, r_packet.py:124), Var(delta_shell, r_packet.py:102)])
DEBUG:numba.core.ssa:find_def_from_top label 170
DEBUG:numba.core.ssa:insert phi node delta_shell.4 = phi(incoming_values=[], incoming_blocks=[]) at 170
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:incoming_def delta_shell.2 = $const118.9
DEBUG:numba.core.ssa:find_def_from_bottom label 124
DEBUG:numba.core.ssa:incoming_def delta_shell.3 = $const166.20
DEBUG:numba.core.ssa:find_def_from_bottom label 14
DEBUG:numba.core.ssa:incoming_def delta_shell.1 = $const56.20
DEBUG:numba.core.ssa:replaced with: $174build_tuple.2 = build_tuple(items=[Var(distance.3, r_packet.py:124), Var(delta_shell.4, r_packet.py:124)])
DEBUG:numba.core.ssa:on stmt: $176return_value.3 = cast(value=$174build_tuple.2)
DEBUG:numba.core.ssa:on stmt: return $176return_value.3
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=229)
           2	LOAD_FAST(arg=0, lineno=229)
           4	LOAD_GLOBAL(arg=0, lineno=229)
           6	LOAD_ATTR(arg=1, lineno=229)
           8	BINARY_MULTIPLY(arg=None, lineno=229)
          10	LOAD_FAST(arg=1, lineno=229)
          12	BINARY_MULTIPLY(arg=None, lineno=229)
          14	RETURN_VALUE(arg=None, lineno=229)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=229)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack ['$electron_density2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=229)
DEBUG:numba.core.byteflow:stack ['$electron_density2.0', '$4load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_MULTIPLY(arg=None, lineno=229)
DEBUG:numba.core.byteflow:stack ['$electron_density2.0', '$6load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=229)
DEBUG:numba.core.byteflow:stack ['$8binary_multiply.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_MULTIPLY(arg=None, lineno=229)
DEBUG:numba.core.byteflow:stack ['$8binary_multiply.3', '$distance10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=229)
DEBUG:numba.core.byteflow:stack ['$12binary_multiply.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$electron_density2.0'}), (4, {'res': '$4load_global.1'}), (6, {'item': '$4load_global.1', 'res': '$6load_attr.2'}), (8, {'lhs': '$electron_density2.0', 'rhs': '$6load_attr.2', 'res': '$8binary_multiply.3'}), (10, {'res': '$distance10.4'}), (12, {'lhs': '$8binary_multiply.3', 'rhs': '$distance10.4', 'res': '$12binary_multiply.5'}), (14, {'retval': '$12binary_multiply.5', 'castval': '$14return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    electron_density = arg(0, name=electron_density) ['electron_density']
    distance = arg(1, name=distance)         ['distance']
    $4load_global.1 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>) ['$4load_global.1']
    $6load_attr.2 = getattr(value=$4load_global.1, attr=SIGMA_THOMSON) ['$4load_global.1', '$6load_attr.2']
    $8binary_multiply.3 = electron_density * $6load_attr.2 ['$6load_attr.2', '$8binary_multiply.3', 'electron_density']
    $12binary_multiply.5 = $8binary_multiply.3 * distance ['$12binary_multiply.5', '$8binary_multiply.3', 'distance']
    $14return_value.6 = cast(value=$12binary_multiply.5) ['$12binary_multiply.5', '$14return_value.6']
    return $14return_value.6                 ['$14return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e465e5b50>
DEBUG:numba.core.ssa:on stmt: electron_density = arg(0, name=electron_density)
DEBUG:numba.core.ssa:on stmt: distance = arg(1, name=distance)
DEBUG:numba.core.ssa:on stmt: $4load_global.1 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=$4load_global.1, attr=SIGMA_THOMSON)
DEBUG:numba.core.ssa:on stmt: $8binary_multiply.3 = electron_density * $6load_attr.2
DEBUG:numba.core.ssa:on stmt: $12binary_multiply.5 = $8binary_multiply.3 * distance
DEBUG:numba.core.ssa:on stmt: $14return_value.6 = cast(value=$12binary_multiply.5)
DEBUG:numba.core.ssa:on stmt: return $14return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12binary_multiply.5': [<numba.core.ir.Assign object at 0x7f6e4670b210>],
             '$14return_value.6': [<numba.core.ir.Assign object at 0x7f6e4670b190>],
             '$4load_global.1': [<numba.core.ir.Assign object at 0x7f6e45ccaa50>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45cca7d0>],
             '$8binary_multiply.3': [<numba.core.ir.Assign object at 0x7f6e45ccac90>],
             'distance': [<numba.core.ir.Assign object at 0x7f6e460ce7d0>],
             'electron_density': [<numba.core.ir.Assign object at 0x7f6e460cea10>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=152)
           2	LOAD_FAST(arg=0, lineno=152)
           4	LOAD_ATTR(arg=0, lineno=152)
           6	STORE_FAST(arg=5, lineno=152)
           8	LOAD_FAST(arg=2, lineno=154)
          10	POP_JUMP_IF_FALSE(arg=16, lineno=154)
          12	LOAD_GLOBAL(arg=1, lineno=155)
          14	RETURN_VALUE(arg=None, lineno=155)
>         16	LOAD_FAST(arg=1, lineno=157)
          18	LOAD_FAST(arg=3, lineno=157)
          20	BINARY_SUBTRACT(arg=None, lineno=157)
          22	STORE_FAST(arg=6, lineno=157)
          24	LOAD_FAST(arg=0, lineno=160)
          26	LOAD_ATTR(arg=2, lineno=160)
          28	POP_JUMP_IF_FALSE(arg=40, lineno=160)
          30	LOAD_CONST(arg=1, lineno=161)
          32	STORE_FAST(arg=6, lineno=161)
          34	LOAD_CONST(arg=2, lineno=162)
          36	LOAD_FAST(arg=0, lineno=162)
          38	STORE_ATTR(arg=2, lineno=162)
>         40	LOAD_FAST(arg=6, lineno=164)
          42	LOAD_CONST(arg=3, lineno=164)
          44	COMPARE_OP(arg=5, lineno=164)
          46	POP_JUMP_IF_FALSE(arg=66, lineno=164)
          48	LOAD_FAST(arg=6, lineno=165)
          50	LOAD_FAST(arg=5, lineno=165)
          52	BINARY_TRUE_DIVIDE(arg=None, lineno=165)
          54	LOAD_GLOBAL(arg=3, lineno=165)
          56	BINARY_MULTIPLY(arg=None, lineno=165)
          58	LOAD_FAST(arg=4, lineno=165)
          60	BINARY_MULTIPLY(arg=None, lineno=165)
          62	STORE_FAST(arg=7, lineno=165)
          64	JUMP_FORWARD(arg=16, lineno=165)
>         66	LOAD_GLOBAL(arg=4, lineno=167)
          68	LOAD_CONST(arg=4, lineno=167)
          70	CALL_FUNCTION(arg=1, lineno=167)
          72	POP_TOP(arg=None, lineno=167)
          74	LOAD_GLOBAL(arg=5, lineno=168)
          76	LOAD_CONST(arg=5, lineno=169)
          78	CALL_FUNCTION(arg=1, lineno=169)
          80	RAISE_VARARGS(arg=1, lineno=169)
>         82	LOAD_GLOBAL(arg=6, lineno=173)
          84	LOAD_ATTR(arg=7, lineno=173)
          86	POP_JUMP_IF_FALSE(arg=102, lineno=173)
          88	LOAD_GLOBAL(arg=8, lineno=174)
          90	LOAD_FAST(arg=3, lineno=175)
          92	LOAD_FAST(arg=5, lineno=175)
          94	LOAD_FAST(arg=4, lineno=175)
          96	LOAD_FAST(arg=0, lineno=175)
          98	CALL_FUNCTION(arg=4, lineno=175)
         100	RETURN_VALUE(arg=None, lineno=175)
>        102	LOAD_FAST(arg=7, lineno=177)
         104	RETURN_VALUE(arg=None, lineno=177)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=152)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=152)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=152)
DEBUG:numba.core.byteflow:stack ['$r_packet2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_FAST(arg=5, lineno=152)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=154)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=16, lineno=154)
DEBUG:numba.core.byteflow:stack ['$is_last_line8.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=16, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=16 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=155)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=155)
DEBUG:numba.core.byteflow:stack ['$12load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=157)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=157)
DEBUG:numba.core.byteflow:stack ['$comov_nu16.0']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_SUBTRACT(arg=None, lineno=157)
DEBUG:numba.core.byteflow:stack ['$comov_nu16.0', '$nu_line18.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=6, lineno=157)
DEBUG:numba.core.byteflow:stack ['$20binary_subtract.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=160)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_ATTR(arg=2, lineno=160)
DEBUG:numba.core.byteflow:stack ['$r_packet24.3']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=40, lineno=160)
DEBUG:numba.core.byteflow:stack ['$26load_attr.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=161)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=6, lineno=161)
DEBUG:numba.core.byteflow:stack ['$const30.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=2, lineno=162)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=162)
DEBUG:numba.core.byteflow:stack ['$const34.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_ATTR(arg=2, lineno=162)
DEBUG:numba.core.byteflow:stack ['$const34.1', '$r_packet36.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=6, lineno=164)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_CONST(arg=3, lineno=164)
DEBUG:numba.core.byteflow:stack ['$nu_diff40.0']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=COMPARE_OP(arg=5, lineno=164)
DEBUG:numba.core.byteflow:stack ['$nu_diff40.0', '$const42.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=POP_JUMP_IF_FALSE(arg=66, lineno=164)
DEBUG:numba.core.byteflow:stack ['$44compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=66, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=66 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=66 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=6, lineno=165)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=165)
DEBUG:numba.core.byteflow:stack ['$nu_diff48.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=165)
DEBUG:numba.core.byteflow:stack ['$nu_diff48.0', '$nu50.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=3, lineno=165)
DEBUG:numba.core.byteflow:stack ['$52binary_true_divide.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=BINARY_MULTIPLY(arg=None, lineno=165)
DEBUG:numba.core.byteflow:stack ['$52binary_true_divide.2', '$54load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=4, lineno=165)
DEBUG:numba.core.byteflow:stack ['$56binary_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=BINARY_MULTIPLY(arg=None, lineno=165)
DEBUG:numba.core.byteflow:stack ['$56binary_multiply.4', '$time_explosion58.5']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_FAST(arg=7, lineno=165)
DEBUG:numba.core.byteflow:stack ['$60binary_multiply.6']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=JUMP_FORWARD(arg=16, lineno=165)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=82 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_GLOBAL(arg=4, lineno=167)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=4, lineno=167)
DEBUG:numba.core.byteflow:stack ['$66load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=CALL_FUNCTION(arg=1, lineno=167)
DEBUG:numba.core.byteflow:stack ['$66load_global.0', '$const68.1']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=POP_TOP(arg=None, lineno=167)
DEBUG:numba.core.byteflow:stack ['$70call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_GLOBAL(arg=5, lineno=168)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_CONST(arg=5, lineno=169)
DEBUG:numba.core.byteflow:stack ['$74load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=CALL_FUNCTION(arg=1, lineno=169)
DEBUG:numba.core.byteflow:stack ['$74load_global.3', '$const76.4']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=RAISE_VARARGS(arg=1, lineno=169)
DEBUG:numba.core.byteflow:stack ['$78call_function.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=82 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_GLOBAL(arg=6, lineno=173)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_ATTR(arg=7, lineno=173)
DEBUG:numba.core.byteflow:stack ['$82load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=102, lineno=173)
DEBUG:numba.core.byteflow:stack ['$84load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=88, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=88 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_GLOBAL(arg=8, lineno=174)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=3, lineno=175)
DEBUG:numba.core.byteflow:stack ['$88load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=5, lineno=175)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$nu_line90.1']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=175)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$nu_line90.1', '$nu92.2']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=0, lineno=175)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$nu_line90.1', '$nu92.2', '$time_explosion94.3']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=CALL_FUNCTION(arg=4, lineno=175)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$nu_line90.1', '$nu92.2', '$time_explosion94.3', '$r_packet96.4']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=175)
DEBUG:numba.core.byteflow:stack ['$98call_function.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=7, lineno=177)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=RETURN_VALUE(arg=None, lineno=177)
DEBUG:numba.core.byteflow:stack ['$distance102.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=88 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$r_packet2.0'}), (4, {'item': '$r_packet2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$is_last_line8.2'}), (10, {'pred': '$is_last_line8.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 16: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'retval': '$12load_global.0', 'castval': '$14return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$comov_nu16.0'}), (18, {'res': '$nu_line18.1'}), (20, {'lhs': '$comov_nu16.0', 'rhs': '$nu_line18.1', 'res': '$20binary_subtract.2'}), (22, {'value': '$20binary_subtract.2'}), (24, {'res': '$r_packet24.3'}), (26, {'item': '$r_packet24.3', 'res': '$26load_attr.4'}), (28, {'pred': '$26load_attr.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$const30.0'}), (32, {'value': '$const30.0'}), (34, {'res': '$const34.1'}), (36, {'res': '$r_packet36.2'}), (38, {'target': '$r_packet36.2', 'value': '$const34.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$nu_diff40.0'}), (42, {'res': '$const42.1'}), (44, {'lhs': '$nu_diff40.0', 'rhs': '$const42.1', 'res': '$44compare_op.2'}), (46, {'pred': '$44compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 66: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$nu_diff48.0'}), (50, {'res': '$nu50.1'}), (52, {'lhs': '$nu_diff48.0', 'rhs': '$nu50.1', 'res': '$52binary_true_divide.2'}), (54, {'res': '$54load_global.3'}), (56, {'lhs': '$52binary_true_divide.2', 'rhs': '$54load_global.3', 'res': '$56binary_multiply.4'}), (58, {'res': '$time_explosion58.5'}), (60, {'lhs': '$56binary_multiply.4', 'rhs': '$time_explosion58.5', 'res': '$60binary_multiply.6'}), (62, {'value': '$60binary_multiply.6'}), (64, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$66load_global.0'}), (68, {'res': '$const68.1'}), (70, {'func': '$66load_global.0', 'args': ['$const68.1'], 'res': '$70call_function.2'}), (74, {'res': '$74load_global.3'}), (76, {'res': '$const76.4'}), (78, {'func': '$74load_global.3', 'args': ['$const76.4'], 'res': '$78call_function.5'}), (80, {'exc': '$78call_function.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_attr.1'}), (86, {'pred': '$84load_attr.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: (), 102: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$88load_global.0'}), (90, {'res': '$nu_line90.1'}), (92, {'res': '$nu92.2'}), (94, {'res': '$time_explosion94.3'}), (96, {'res': '$r_packet96.4'}), (98, {'func': '$88load_global.0', 'args': ['$nu_line90.1', '$nu92.2', '$time_explosion94.3', '$r_packet96.4'], 'res': '$98call_function.5'}), (100, {'retval': '$98call_function.5', 'castval': '$100return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$distance102.0'}), (104, {'retval': '$distance102.0', 'castval': '$104return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    comov_nu = arg(1, name=comov_nu)         ['comov_nu']
    is_last_line = arg(2, name=is_last_line) ['is_last_line']
    nu_line = arg(3, name=nu_line)           ['nu_line']
    time_explosion = arg(4, name=time_explosion) ['time_explosion']
    $4load_attr.1 = getattr(value=r_packet, attr=nu) ['$4load_attr.1', 'r_packet']
    nu = $4load_attr.1                       ['$4load_attr.1', 'nu']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10(is_last_line, func=bool10, args=(Var(is_last_line, r_packet.py:152),), kws=(), vararg=None) ['$10pred', 'bool10', 'is_last_line']
    branch $10pred, 12, 16                   ['$10pred']
label 12:
    $12load_global.0 = global(MISS_DISTANCE: 1e+99) ['$12load_global.0']
    $14return_value.1 = cast(value=$12load_global.0) ['$12load_global.0', '$14return_value.1']
    return $14return_value.1                 ['$14return_value.1']
label 16:
    $20binary_subtract.2 = comov_nu - nu_line ['$20binary_subtract.2', 'comov_nu', 'nu_line']
    nu_diff = $20binary_subtract.2           ['$20binary_subtract.2', 'nu_diff']
    $26load_attr.4 = getattr(value=r_packet, attr=is_close_line) ['$26load_attr.4', 'r_packet']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26load_attr.4, func=bool28, args=(Var($26load_attr.4, r_packet.py:160),), kws=(), vararg=None) ['$26load_attr.4', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    $const30.0 = const(float, 0.0)           ['$const30.0']
    nu_diff = $const30.0                     ['$const30.0', 'nu_diff']
    $const34.1 = const(bool, False)          ['$const34.1']
    (r_packet).is_close_line = $const34.1    ['$const34.1', 'r_packet']
    jump 40                                  []
label 40:
    $const42.1 = const(int, 0)               ['$const42.1']
    $44compare_op.2 = nu_diff >= $const42.1  ['$44compare_op.2', '$const42.1', 'nu_diff']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($44compare_op.2, func=bool46, args=(Var($44compare_op.2, r_packet.py:164),), kws=(), vararg=None) ['$44compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 66                   ['$46pred']
label 48:
    $52binary_true_divide.2 = nu_diff / nu   ['$52binary_true_divide.2', 'nu', 'nu_diff']
    $54load_global.3 = global(C_SPEED_OF_LIGHT: 29979245800.0) ['$54load_global.3']
    $56binary_multiply.4 = $52binary_true_divide.2 * $54load_global.3 ['$52binary_true_divide.2', '$54load_global.3', '$56binary_multiply.4']
    $60binary_multiply.6 = $56binary_multiply.4 * time_explosion ['$56binary_multiply.4', '$60binary_multiply.6', 'time_explosion']
    distance = $60binary_multiply.6          ['$60binary_multiply.6', 'distance']
    jump 82                                  []
label 66:
    $66load_global.0 = global(print: <built-in function print>) ['$66load_global.0']
    $const68.1 = const(str, WARNING: nu difference is less than 0.0) ['$const68.1']
    $70call_function.2 = call $66load_global.0($const68.1, func=$66load_global.0, args=[Var($const68.1, r_packet.py:167)], kws=(), vararg=None) ['$66load_global.0', '$70call_function.2', '$const68.1']
    $74load_global.3 = global(MonteCarloException: <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>) ['$74load_global.3']
    $const76.4 = const(str, nu difference is less than 0.0; for more information, see print statement beforehand) ['$const76.4']
    $78call_function.5 = call $74load_global.3($const76.4, func=$74load_global.3, args=[Var($const76.4, r_packet.py:169)], kws=(), vararg=None) ['$74load_global.3', '$78call_function.5', '$const76.4']
    raise $78call_function.5                 ['$78call_function.5']
label 82:
    $82load_global.0 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>) ['$82load_global.0']
    $84load_attr.1 = getattr(value=$82load_global.0, attr=ENABLE_FULL_RELATIVITY) ['$82load_global.0', '$84load_attr.1']
    bool86 = global(bool: <class 'bool'>)    ['bool86']
    $86pred = call bool86($84load_attr.1, func=bool86, args=(Var($84load_attr.1, r_packet.py:173),), kws=(), vararg=None) ['$84load_attr.1', '$86pred', 'bool86']
    branch $86pred, 88, 102                  ['$86pred']
label 88:
    $88load_global.0 = global(calculate_distance_line_full_relativity: CPUDispatcher(<function calculate_distance_line_full_relativity at 0x7f6e4a0e6e60>)) ['$88load_global.0']
    $98call_function.5 = call $88load_global.0(nu_line, nu, time_explosion, r_packet, func=$88load_global.0, args=[Var(nu_line, r_packet.py:152), Var(nu, r_packet.py:152), Var(time_explosion, r_packet.py:152), Var(r_packet, r_packet.py:152)], kws=(), vararg=None) ['$88load_global.0', '$98call_function.5', 'nu', 'nu_line', 'r_packet', 'time_explosion']
    $100return_value.6 = cast(value=$98call_function.5) ['$100return_value.6', '$98call_function.5']
    return $100return_value.6                ['$100return_value.6']
label 102:
    $104return_value.1 = cast(value=distance) ['$104return_value.1', 'distance']
    return $104return_value.1                ['$104return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e460d3950>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: comov_nu = arg(1, name=comov_nu)
DEBUG:numba.core.ssa:on stmt: is_last_line = arg(2, name=is_last_line)
DEBUG:numba.core.ssa:on stmt: nu_line = arg(3, name=nu_line)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(4, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: nu = $4load_attr.1
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10(is_last_line, func=bool10, args=(Var(is_last_line, r_packet.py:152),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 12, 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e460d3950>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(MISS_DISTANCE: 1e+99)
DEBUG:numba.core.ssa:on stmt: $14return_value.1 = cast(value=$12load_global.0)
DEBUG:numba.core.ssa:on stmt: return $14return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e460d3950>
DEBUG:numba.core.ssa:on stmt: $20binary_subtract.2 = comov_nu - nu_line
DEBUG:numba.core.ssa:on stmt: nu_diff = $20binary_subtract.2
DEBUG:numba.core.ssa:on stmt: $26load_attr.4 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26load_attr.4, func=bool28, args=(Var($26load_attr.4, r_packet.py:160),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 40
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e460d3950>
DEBUG:numba.core.ssa:on stmt: $const30.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: nu_diff = $const30.0
DEBUG:numba.core.ssa:on stmt: $const34.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: (r_packet).is_close_line = $const34.1
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block analysis pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e460d3950>
DEBUG:numba.core.ssa:on stmt: $const42.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44compare_op.2 = nu_diff >= $const42.1
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($44compare_op.2, func=bool46, args=(Var($44compare_op.2, r_packet.py:164),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 48, 66
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e460d3950>
DEBUG:numba.core.ssa:on stmt: $52binary_true_divide.2 = nu_diff / nu
DEBUG:numba.core.ssa:on stmt: $54load_global.3 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $56binary_multiply.4 = $52binary_true_divide.2 * $54load_global.3
DEBUG:numba.core.ssa:on stmt: $60binary_multiply.6 = $56binary_multiply.4 * time_explosion
DEBUG:numba.core.ssa:on stmt: distance = $60binary_multiply.6
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block analysis pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e460d3950>
DEBUG:numba.core.ssa:on stmt: $66load_global.0 = global(print: <built-in function print>)
DEBUG:numba.core.ssa:on stmt: $const68.1 = const(str, WARNING: nu difference is less than 0.0)
DEBUG:numba.core.ssa:on stmt: print($const68.1)
DEBUG:numba.core.ssa:on stmt: $70call_function.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $74load_global.3 = global(MonteCarloException: <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>)
DEBUG:numba.core.ssa:on stmt: $const76.4 = const(str, nu difference is less than 0.0; for more information, see print statement beforehand)
DEBUG:numba.core.ssa:on stmt: $78call_function.5 = call $74load_global.3($const76.4, func=$74load_global.3, args=[Var($const76.4, r_packet.py:169)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>('nu difference is less than 0.0; for more information, see print statement beforehand')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e460d3950>
DEBUG:numba.core.ssa:on stmt: $82load_global.0 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $84load_attr.1 = getattr(value=$82load_global.0, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool86 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $86pred = call bool86($84load_attr.1, func=bool86, args=(Var($84load_attr.1, r_packet.py:173),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $86pred, 88, 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e460d3950>
DEBUG:numba.core.ssa:on stmt: $88load_global.0 = global(calculate_distance_line_full_relativity: CPUDispatcher(<function calculate_distance_line_full_relativity at 0x7f6e4a0e6e60>))
DEBUG:numba.core.ssa:on stmt: $98call_function.5 = call $88load_global.0(nu_line, nu, time_explosion, r_packet, func=$88load_global.0, args=[Var(nu_line, r_packet.py:152), Var(nu, r_packet.py:152), Var(time_explosion, r_packet.py:152), Var(r_packet, r_packet.py:152)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $100return_value.6 = cast(value=$98call_function.5)
DEBUG:numba.core.ssa:on stmt: return $100return_value.6
DEBUG:numba.core.ssa:==== SSA block analysis pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e460d3950>
DEBUG:numba.core.ssa:on stmt: $104return_value.1 = cast(value=distance)
DEBUG:numba.core.ssa:on stmt: return $104return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100return_value.6': [<numba.core.ir.Assign object at 0x7f6e4660fb10>],
             '$104return_value.1': [<numba.core.ir.Assign object at 0x7f6e4660f890>],
             '$10pred': [<numba.core.ir.Assign object at 0x7f6e464b2cd0>],
             '$12load_global.0': [<numba.core.ir.Assign object at 0x7f6e464b2050>],
             '$14return_value.1': [<numba.core.ir.Assign object at 0x7f6e464b2a90>],
             '$20binary_subtract.2': [<numba.core.ir.Assign object at 0x7f6e466aac10>],
             '$26load_attr.4': [<numba.core.ir.Assign object at 0x7f6e466aaad0>],
             '$28pred': [<numba.core.ir.Assign object at 0x7f6e46679b10>],
             '$44compare_op.2': [<numba.core.ir.Assign object at 0x7f6e46679d10>],
             '$46pred': [<numba.core.ir.Assign object at 0x7f6e46679e10>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e464b2d50>],
             '$52binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f6e46679d50>],
             '$54load_global.3': [<numba.core.ir.Assign object at 0x7f6e4660f610>],
             '$56binary_multiply.4': [<numba.core.ir.Assign object at 0x7f6e4660f550>],
             '$60binary_multiply.6': [<numba.core.ir.Assign object at 0x7f6e4660ffd0>],
             '$66load_global.0': [<numba.core.ir.Assign object at 0x7f6e4639b810>],
             '$70call_function.2': [<numba.core.ir.Assign object at 0x7f6e46689310>],
             '$74load_global.3': [<numba.core.ir.Assign object at 0x7f6e460d36d0>],
             '$78call_function.5': [<numba.core.ir.Assign object at 0x7f6e460d3890>],
             '$82load_global.0': [<numba.core.ir.Assign object at 0x7f6e460d3290>],
             '$84load_attr.1': [<numba.core.ir.Assign object at 0x7f6e460d3910>],
             '$86pred': [<numba.core.ir.Assign object at 0x7f6e467063d0>],
             '$88load_global.0': [<numba.core.ir.Assign object at 0x7f6e4660fd10>],
             '$98call_function.5': [<numba.core.ir.Assign object at 0x7f6e4660fa90>],
             '$const30.0': [<numba.core.ir.Assign object at 0x7f6e46679c50>],
             '$const34.1': [<numba.core.ir.Assign object at 0x7f6e46679110>],
             '$const42.1': [<numba.core.ir.Assign object at 0x7f6e46679310>],
             '$const68.1': [<numba.core.ir.Assign object at 0x7f6e4641bdd0>],
             '$const76.4': [<numba.core.ir.Assign object at 0x7f6e460d3ad0>],
             'bool10': [<numba.core.ir.Assign object at 0x7f6e464b2610>],
             'bool28': [<numba.core.ir.Assign object at 0x7f6e46679ad0>],
             'bool46': [<numba.core.ir.Assign object at 0x7f6e46679190>],
             'bool86': [<numba.core.ir.Assign object at 0x7f6e460d3cd0>],
             'comov_nu': [<numba.core.ir.Assign object at 0x7f6e4639b4d0>],
             'distance': [<numba.core.ir.Assign object at 0x7f6e4660fb50>],
             'is_last_line': [<numba.core.ir.Assign object at 0x7f6e4639b510>],
             'nu': [<numba.core.ir.Assign object at 0x7f6e464b2c10>],
             'nu_diff': [<numba.core.ir.Assign object at 0x7f6e466aa8d0>,
                         <numba.core.ir.Assign object at 0x7f6e466aa6d0>],
             'nu_line': [<numba.core.ir.Assign object at 0x7f6e4639bf50>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e4639be90>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e464b29d0>]})
DEBUG:numba.core.ssa:SSA violators {'nu_diff'}
DEBUG:numba.core.ssa:Fix SSA violator on var nu_diff
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46611890>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: comov_nu = arg(1, name=comov_nu)
DEBUG:numba.core.ssa:on stmt: is_last_line = arg(2, name=is_last_line)
DEBUG:numba.core.ssa:on stmt: nu_line = arg(3, name=nu_line)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(4, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: nu = $4load_attr.1
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10(is_last_line, func=bool10, args=(Var(is_last_line, r_packet.py:152),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 12, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46611890>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(MISS_DISTANCE: 1e+99)
DEBUG:numba.core.ssa:on stmt: $14return_value.1 = cast(value=$12load_global.0)
DEBUG:numba.core.ssa:on stmt: return $14return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46611890>
DEBUG:numba.core.ssa:on stmt: $20binary_subtract.2 = comov_nu - nu_line
DEBUG:numba.core.ssa:on stmt: nu_diff = $20binary_subtract.2
DEBUG:numba.core.ssa:first assign: nu_diff
DEBUG:numba.core.ssa:replaced with: nu_diff = $20binary_subtract.2
DEBUG:numba.core.ssa:on stmt: $26load_attr.4 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26load_attr.4, func=bool28, args=(Var($26load_attr.4, r_packet.py:160),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46611890>
DEBUG:numba.core.ssa:on stmt: $const30.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: nu_diff = $const30.0
DEBUG:numba.core.ssa:replaced with: nu_diff.1 = $const30.0
DEBUG:numba.core.ssa:on stmt: $const34.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: (r_packet).is_close_line = $const34.1
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46611890>
DEBUG:numba.core.ssa:on stmt: $const42.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44compare_op.2 = nu_diff >= $const42.1
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($44compare_op.2, func=bool46, args=(Var($44compare_op.2, r_packet.py:164),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 48, 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46611890>
DEBUG:numba.core.ssa:on stmt: $52binary_true_divide.2 = nu_diff / nu
DEBUG:numba.core.ssa:on stmt: $54load_global.3 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $56binary_multiply.4 = $52binary_true_divide.2 * $54load_global.3
DEBUG:numba.core.ssa:on stmt: $60binary_multiply.6 = $56binary_multiply.4 * time_explosion
DEBUG:numba.core.ssa:on stmt: distance = $60binary_multiply.6
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46611890>
DEBUG:numba.core.ssa:on stmt: $66load_global.0 = global(print: <built-in function print>)
DEBUG:numba.core.ssa:on stmt: $const68.1 = const(str, WARNING: nu difference is less than 0.0)
DEBUG:numba.core.ssa:on stmt: print($const68.1)
DEBUG:numba.core.ssa:on stmt: $70call_function.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $74load_global.3 = global(MonteCarloException: <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>)
DEBUG:numba.core.ssa:on stmt: $const76.4 = const(str, nu difference is less than 0.0; for more information, see print statement beforehand)
DEBUG:numba.core.ssa:on stmt: $78call_function.5 = call $74load_global.3($const76.4, func=$74load_global.3, args=[Var($const76.4, r_packet.py:169)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>('nu difference is less than 0.0; for more information, see print statement beforehand')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46611890>
DEBUG:numba.core.ssa:on stmt: $82load_global.0 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $84load_attr.1 = getattr(value=$82load_global.0, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool86 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $86pred = call bool86($84load_attr.1, func=bool86, args=(Var($84load_attr.1, r_packet.py:173),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $86pred, 88, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46611890>
DEBUG:numba.core.ssa:on stmt: $88load_global.0 = global(calculate_distance_line_full_relativity: CPUDispatcher(<function calculate_distance_line_full_relativity at 0x7f6e4a0e6e60>))
DEBUG:numba.core.ssa:on stmt: $98call_function.5 = call $88load_global.0(nu_line, nu, time_explosion, r_packet, func=$88load_global.0, args=[Var(nu_line, r_packet.py:152), Var(nu, r_packet.py:152), Var(time_explosion, r_packet.py:152), Var(r_packet, r_packet.py:152)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $100return_value.6 = cast(value=$98call_function.5)
DEBUG:numba.core.ssa:on stmt: return $100return_value.6
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46611890>
DEBUG:numba.core.ssa:on stmt: $104return_value.1 = cast(value=distance)
DEBUG:numba.core.ssa:on stmt: return $104return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {16: [<numba.core.ir.Assign object at 0x7f6e46689a50>],
             30: [<numba.core.ir.Assign object at 0x7f6e46689b50>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46689c10>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: comov_nu = arg(1, name=comov_nu)
DEBUG:numba.core.ssa:on stmt: is_last_line = arg(2, name=is_last_line)
DEBUG:numba.core.ssa:on stmt: nu_line = arg(3, name=nu_line)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(4, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: nu = $4load_attr.1
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10(is_last_line, func=bool10, args=(Var(is_last_line, r_packet.py:152),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 12, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46689c10>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(MISS_DISTANCE: 1e+99)
DEBUG:numba.core.ssa:on stmt: $14return_value.1 = cast(value=$12load_global.0)
DEBUG:numba.core.ssa:on stmt: return $14return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46689c10>
DEBUG:numba.core.ssa:on stmt: $20binary_subtract.2 = comov_nu - nu_line
DEBUG:numba.core.ssa:on stmt: nu_diff = $20binary_subtract.2
DEBUG:numba.core.ssa:on stmt: $26load_attr.4 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26load_attr.4, func=bool28, args=(Var($26load_attr.4, r_packet.py:160),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46689c10>
DEBUG:numba.core.ssa:on stmt: $const30.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: nu_diff.1 = $const30.0
DEBUG:numba.core.ssa:on stmt: $const34.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: (r_packet).is_close_line = $const34.1
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46689c10>
DEBUG:numba.core.ssa:on stmt: $const42.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44compare_op.2 = nu_diff >= $const42.1
DEBUG:numba.core.ssa:find_def var='nu_diff' stmt=$44compare_op.2 = nu_diff >= $const42.1
DEBUG:numba.core.ssa:find_def_from_top label 40
DEBUG:numba.core.ssa:insert phi node nu_diff.2 = phi(incoming_values=[], incoming_blocks=[]) at 40
DEBUG:numba.core.ssa:find_def_from_bottom label 16
DEBUG:numba.core.ssa:incoming_def nu_diff = $20binary_subtract.2
DEBUG:numba.core.ssa:find_def_from_bottom label 30
DEBUG:numba.core.ssa:incoming_def nu_diff.1 = $const30.0
DEBUG:numba.core.ssa:replaced with: $44compare_op.2 = nu_diff.2 >= $const42.1
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($44compare_op.2, func=bool46, args=(Var($44compare_op.2, r_packet.py:164),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 48, 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46689c10>
DEBUG:numba.core.ssa:on stmt: $52binary_true_divide.2 = nu_diff / nu
DEBUG:numba.core.ssa:find_def var='nu_diff' stmt=$52binary_true_divide.2 = nu_diff / nu
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 40 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 40
DEBUG:numba.core.ssa:replaced with: $52binary_true_divide.2 = nu_diff.2 / nu
DEBUG:numba.core.ssa:on stmt: $54load_global.3 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $56binary_multiply.4 = $52binary_true_divide.2 * $54load_global.3
DEBUG:numba.core.ssa:on stmt: $60binary_multiply.6 = $56binary_multiply.4 * time_explosion
DEBUG:numba.core.ssa:on stmt: distance = $60binary_multiply.6
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46689c10>
DEBUG:numba.core.ssa:on stmt: $66load_global.0 = global(print: <built-in function print>)
DEBUG:numba.core.ssa:on stmt: $const68.1 = const(str, WARNING: nu difference is less than 0.0)
DEBUG:numba.core.ssa:on stmt: print($const68.1)
DEBUG:numba.core.ssa:on stmt: $70call_function.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $74load_global.3 = global(MonteCarloException: <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>)
DEBUG:numba.core.ssa:on stmt: $const76.4 = const(str, nu difference is less than 0.0; for more information, see print statement beforehand)
DEBUG:numba.core.ssa:on stmt: $78call_function.5 = call $74load_global.3($const76.4, func=$74load_global.3, args=[Var($const76.4, r_packet.py:169)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>('nu difference is less than 0.0; for more information, see print statement beforehand')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46689c10>
DEBUG:numba.core.ssa:on stmt: $82load_global.0 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $84load_attr.1 = getattr(value=$82load_global.0, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool86 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $86pred = call bool86($84load_attr.1, func=bool86, args=(Var($84load_attr.1, r_packet.py:173),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $86pred, 88, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46689c10>
DEBUG:numba.core.ssa:on stmt: $88load_global.0 = global(calculate_distance_line_full_relativity: CPUDispatcher(<function calculate_distance_line_full_relativity at 0x7f6e4a0e6e60>))
DEBUG:numba.core.ssa:on stmt: $98call_function.5 = call $88load_global.0(nu_line, nu, time_explosion, r_packet, func=$88load_global.0, args=[Var(nu_line, r_packet.py:152), Var(nu, r_packet.py:152), Var(time_explosion, r_packet.py:152), Var(r_packet, r_packet.py:152)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $100return_value.6 = cast(value=$98call_function.5)
DEBUG:numba.core.ssa:on stmt: return $100return_value.6
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46689c10>
DEBUG:numba.core.ssa:on stmt: $104return_value.1 = cast(value=distance)
DEBUG:numba.core.ssa:on stmt: return $104return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=185)
           2	LOAD_FAST(arg=0, lineno=185)
           4	LOAD_FAST(arg=1, lineno=185)
           6	BINARY_TRUE_DIVIDE(arg=None, lineno=185)
           8	STORE_FAST(arg=4, lineno=185)
          10	LOAD_GLOBAL(arg=0, lineno=186)
          12	LOAD_FAST(arg=2, lineno=186)
          14	BINARY_MULTIPLY(arg=None, lineno=186)
          16	STORE_FAST(arg=5, lineno=186)
          18	LOAD_FAST(arg=3, lineno=187)
          20	LOAD_ATTR(arg=1, lineno=187)
          22	UNARY_NEGATIVE(arg=None, lineno=187)
          24	LOAD_FAST(arg=3, lineno=187)
          26	LOAD_ATTR(arg=2, lineno=187)
          28	BINARY_MULTIPLY(arg=None, lineno=187)
          30	LOAD_FAST(arg=5, lineno=188)
          32	LOAD_FAST(arg=4, lineno=191)
          34	LOAD_FAST(arg=4, lineno=191)
          36	BINARY_MULTIPLY(arg=None, lineno=191)
          38	LOAD_GLOBAL(arg=3, lineno=191)
          40	LOAD_METHOD(arg=4, lineno=191)
          42	LOAD_FAST(arg=5, lineno=192)
          44	LOAD_FAST(arg=5, lineno=192)
          46	BINARY_MULTIPLY(arg=None, lineno=192)
          48	LOAD_CONST(arg=1, lineno=194)
          50	LOAD_FAST(arg=3, lineno=198)
          52	LOAD_ATTR(arg=2, lineno=198)
          54	LOAD_FAST(arg=3, lineno=198)
          56	LOAD_ATTR(arg=2, lineno=198)
          58	BINARY_MULTIPLY(arg=None, lineno=198)
          60	LOAD_CONST(arg=1, lineno=198)
          62	LOAD_FAST(arg=3, lineno=198)
          64	LOAD_ATTR(arg=1, lineno=198)
          66	LOAD_FAST(arg=3, lineno=198)
          68	LOAD_ATTR(arg=1, lineno=198)
          70	BINARY_MULTIPLY(arg=None, lineno=198)
          72	BINARY_SUBTRACT(arg=None, lineno=198)
          74	BINARY_MULTIPLY(arg=None, lineno=198)
          76	LOAD_CONST(arg=1, lineno=198)
          78	LOAD_CONST(arg=2, lineno=198)
          80	LOAD_FAST(arg=4, lineno=198)
          82	LOAD_FAST(arg=4, lineno=198)
          84	BINARY_MULTIPLY(arg=None, lineno=198)
          86	BINARY_TRUE_DIVIDE(arg=None, lineno=198)
          88	BINARY_ADD(arg=None, lineno=198)
          90	BINARY_MULTIPLY(arg=None, lineno=198)
          92	BINARY_ADD(arg=None, lineno=198)
          94	BINARY_SUBTRACT(arg=None, lineno=198)
          96	CALL_METHOD(arg=1, lineno=198)
          98	BINARY_MULTIPLY(arg=None, lineno=198)
         100	BINARY_SUBTRACT(arg=None, lineno=198)
         102	LOAD_CONST(arg=1, lineno=201)
         104	LOAD_FAST(arg=4, lineno=201)
         106	LOAD_FAST(arg=4, lineno=201)
         108	BINARY_MULTIPLY(arg=None, lineno=201)
         110	BINARY_ADD(arg=None, lineno=201)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=201)
         114	BINARY_ADD(arg=None, lineno=201)
         116	STORE_FAST(arg=6, lineno=201)
         118	LOAD_FAST(arg=6, lineno=202)
         120	RETURN_VALUE(arg=None, lineno=202)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=185)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=185)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=185)
DEBUG:numba.core.byteflow:stack ['$nu_line2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=185)
DEBUG:numba.core.byteflow:stack ['$nu_line2.0', '$nu4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=4, lineno=185)
DEBUG:numba.core.byteflow:stack ['$6binary_true_divide.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=186)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=186)
DEBUG:numba.core.byteflow:stack ['$10load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_MULTIPLY(arg=None, lineno=186)
DEBUG:numba.core.byteflow:stack ['$10load_global.3', '$time_explosion12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=5, lineno=186)
DEBUG:numba.core.byteflow:stack ['$14binary_multiply.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=187)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_ATTR(arg=1, lineno=187)
DEBUG:numba.core.byteflow:stack ['$r_packet18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=187)
DEBUG:numba.core.byteflow:stack ['$20load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=187)
DEBUG:numba.core.byteflow:stack ['$22unary_negative.8']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_ATTR(arg=2, lineno=187)
DEBUG:numba.core.byteflow:stack ['$22unary_negative.8', '$r_packet24.9']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_MULTIPLY(arg=None, lineno=187)
DEBUG:numba.core.byteflow:stack ['$22unary_negative.8', '$26load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=5, lineno=188)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=4, lineno=191)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=191)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$nu_r32.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_MULTIPLY(arg=None, lineno=191)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$nu_r32.13', '$nu_r34.14']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=3, lineno=191)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_METHOD(arg=4, lineno=191)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$38load_global.16']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=5, lineno=192)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=5, lineno=192)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$ct42.18']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_MULTIPLY(arg=None, lineno=192)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$ct42.18', '$ct44.19']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=194)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=3, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_ATTR(arg=2, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$r_packet50.22']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=3, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$52load_attr.23']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_ATTR(arg=2, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$52load_attr.23', '$r_packet54.24']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=BINARY_MULTIPLY(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$52load_attr.23', '$56load_attr.25']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=3, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$const60.27']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_ATTR(arg=1, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$const60.27', '$r_packet62.28']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=3, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$const60.27', '$64load_attr.29']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_ATTR(arg=1, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$const60.27', '$64load_attr.29', '$r_packet66.30']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BINARY_MULTIPLY(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$const60.27', '$64load_attr.29', '$68load_attr.31']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_SUBTRACT(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$const60.27', '$70binary_multiply.32']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=BINARY_MULTIPLY(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$72binary_subtract.33']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_CONST(arg=1, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$const76.35']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$const76.35', '$const78.36']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=4, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$const76.35', '$const78.36', '$nu_r80.37']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=BINARY_MULTIPLY(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$const76.35', '$const78.36', '$nu_r80.37', '$nu_r82.38']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$const76.35', '$const78.36', '$84binary_multiply.39']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=BINARY_ADD(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$const76.35', '$86binary_true_divide.40']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=BINARY_MULTIPLY(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$88binary_add.41']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=BINARY_ADD(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$90binary_multiply.42']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$92binary_add.43']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$94binary_subtract.44']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=BINARY_MULTIPLY(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$96call_method.45']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=BINARY_SUBTRACT(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$98binary_multiply.46']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_CONST(arg=1, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$100binary_subtract.47']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=4, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$100binary_subtract.47', '$const102.48']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$100binary_subtract.47', '$const102.48', '$nu_r104.49']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=BINARY_MULTIPLY(arg=None, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$100binary_subtract.47', '$const102.48', '$nu_r104.49', '$nu_r106.50']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=BINARY_ADD(arg=None, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$100binary_subtract.47', '$const102.48', '$108binary_multiply.51']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$100binary_subtract.47', '$110binary_add.52']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=BINARY_ADD(arg=None, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$112binary_true_divide.53']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=STORE_FAST(arg=6, lineno=201)
DEBUG:numba.core.byteflow:stack ['$114binary_add.54']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=6, lineno=202)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=202)
DEBUG:numba.core.byteflow:stack ['$distance118.55']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$nu_line2.0'}), (4, {'res': '$nu4.1'}), (6, {'lhs': '$nu_line2.0', 'rhs': '$nu4.1', 'res': '$6binary_true_divide.2'}), (8, {'value': '$6binary_true_divide.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$time_explosion12.4'}), (14, {'lhs': '$10load_global.3', 'rhs': '$time_explosion12.4', 'res': '$14binary_multiply.5'}), (16, {'value': '$14binary_multiply.5'}), (18, {'res': '$r_packet18.6'}), (20, {'item': '$r_packet18.6', 'res': '$20load_attr.7'}), (22, {'value': '$20load_attr.7', 'res': '$22unary_negative.8'}), (24, {'res': '$r_packet24.9'}), (26, {'item': '$r_packet24.9', 'res': '$26load_attr.10'}), (28, {'lhs': '$22unary_negative.8', 'rhs': '$26load_attr.10', 'res': '$28binary_multiply.11'}), (30, {'res': '$ct30.12'}), (32, {'res': '$nu_r32.13'}), (34, {'res': '$nu_r34.14'}), (36, {'lhs': '$nu_r32.13', 'rhs': '$nu_r34.14', 'res': '$36binary_multiply.15'}), (38, {'res': '$38load_global.16'}), (40, {'item': '$38load_global.16', 'res': '$40load_method.17'}), (42, {'res': '$ct42.18'}), (44, {'res': '$ct44.19'}), (46, {'lhs': '$ct42.18', 'rhs': '$ct44.19', 'res': '$46binary_multiply.20'}), (48, {'res': '$const48.21'}), (50, {'res': '$r_packet50.22'}), (52, {'item': '$r_packet50.22', 'res': '$52load_attr.23'}), (54, {'res': '$r_packet54.24'}), (56, {'item': '$r_packet54.24', 'res': '$56load_attr.25'}), (58, {'lhs': '$52load_attr.23', 'rhs': '$56load_attr.25', 'res': '$58binary_multiply.26'}), (60, {'res': '$const60.27'}), (62, {'res': '$r_packet62.28'}), (64, {'item': '$r_packet62.28', 'res': '$64load_attr.29'}), (66, {'res': '$r_packet66.30'}), (68, {'item': '$r_packet66.30', 'res': '$68load_attr.31'}), (70, {'lhs': '$64load_attr.29', 'rhs': '$68load_attr.31', 'res': '$70binary_multiply.32'}), (72, {'lhs': '$const60.27', 'rhs': '$70binary_multiply.32', 'res': '$72binary_subtract.33'}), (74, {'lhs': '$58binary_multiply.26', 'rhs': '$72binary_subtract.33', 'res': '$74binary_multiply.34'}), (76, {'res': '$const76.35'}), (78, {'res': '$const78.36'}), (80, {'res': '$nu_r80.37'}), (82, {'res': '$nu_r82.38'}), (84, {'lhs': '$nu_r80.37', 'rhs': '$nu_r82.38', 'res': '$84binary_multiply.39'}), (86, {'lhs': '$const78.36', 'rhs': '$84binary_multiply.39', 'res': '$86binary_true_divide.40'}), (88, {'lhs': '$const76.35', 'rhs': '$86binary_true_divide.40', 'res': '$88binary_add.41'}), (90, {'lhs': '$74binary_multiply.34', 'rhs': '$88binary_add.41', 'res': '$90binary_multiply.42'}), (92, {'lhs': '$const48.21', 'rhs': '$90binary_multiply.42', 'res': '$92binary_add.43'}), (94, {'lhs': '$46binary_multiply.20', 'rhs': '$92binary_add.43', 'res': '$94binary_subtract.44'}), (96, {'func': '$40load_method.17', 'args': ['$94binary_subtract.44'], 'res': '$96call_method.45'}), (98, {'lhs': '$36binary_multiply.15', 'rhs': '$96call_method.45', 'res': '$98binary_multiply.46'}), (100, {'lhs': '$ct30.12', 'rhs': '$98binary_multiply.46', 'res': '$100binary_subtract.47'}), (102, {'res': '$const102.48'}), (104, {'res': '$nu_r104.49'}), (106, {'res': '$nu_r106.50'}), (108, {'lhs': '$nu_r104.49', 'rhs': '$nu_r106.50', 'res': '$108binary_multiply.51'}), (110, {'lhs': '$const102.48', 'rhs': '$108binary_multiply.51', 'res': '$110binary_add.52'}), (112, {'lhs': '$100binary_subtract.47', 'rhs': '$110binary_add.52', 'res': '$112binary_true_divide.53'}), (114, {'lhs': '$28binary_multiply.11', 'rhs': '$112binary_true_divide.53', 'res': '$114binary_add.54'}), (116, {'value': '$114binary_add.54'}), (118, {'res': '$distance118.55'}), (120, {'retval': '$distance118.55', 'castval': '$120return_value.56'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    nu_line = arg(0, name=nu_line)           ['nu_line']
    nu = arg(1, name=nu)                     ['nu']
    time_explosion = arg(2, name=time_explosion) ['time_explosion']
    r_packet = arg(3, name=r_packet)         ['r_packet']
    $6binary_true_divide.2 = nu_line / nu    ['$6binary_true_divide.2', 'nu', 'nu_line']
    nu_r = $6binary_true_divide.2            ['$6binary_true_divide.2', 'nu_r']
    $10load_global.3 = global(C_SPEED_OF_LIGHT: 29979245800.0) ['$10load_global.3']
    $14binary_multiply.5 = $10load_global.3 * time_explosion ['$10load_global.3', '$14binary_multiply.5', 'time_explosion']
    ct = $14binary_multiply.5                ['$14binary_multiply.5', 'ct']
    $20load_attr.7 = getattr(value=r_packet, attr=mu) ['$20load_attr.7', 'r_packet']
    $22unary_negative.8 = unary(fn=<built-in function neg>, value=$20load_attr.7) ['$20load_attr.7', '$22unary_negative.8']
    $26load_attr.10 = getattr(value=r_packet, attr=r) ['$26load_attr.10', 'r_packet']
    $28binary_multiply.11 = $22unary_negative.8 * $26load_attr.10 ['$22unary_negative.8', '$26load_attr.10', '$28binary_multiply.11']
    $36binary_multiply.15 = nu_r * nu_r      ['$36binary_multiply.15', 'nu_r', 'nu_r']
    $38load_global.16 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>) ['$38load_global.16']
    $40load_method.17 = getattr(value=$38load_global.16, attr=sqrt) ['$38load_global.16', '$40load_method.17']
    $46binary_multiply.20 = ct * ct          ['$46binary_multiply.20', 'ct', 'ct']
    $const48.21 = const(int, 1)              ['$const48.21']
    $52load_attr.23 = getattr(value=r_packet, attr=r) ['$52load_attr.23', 'r_packet']
    $56load_attr.25 = getattr(value=r_packet, attr=r) ['$56load_attr.25', 'r_packet']
    $58binary_multiply.26 = $52load_attr.23 * $56load_attr.25 ['$52load_attr.23', '$56load_attr.25', '$58binary_multiply.26']
    $const60.27 = const(int, 1)              ['$const60.27']
    $64load_attr.29 = getattr(value=r_packet, attr=mu) ['$64load_attr.29', 'r_packet']
    $68load_attr.31 = getattr(value=r_packet, attr=mu) ['$68load_attr.31', 'r_packet']
    $70binary_multiply.32 = $64load_attr.29 * $68load_attr.31 ['$64load_attr.29', '$68load_attr.31', '$70binary_multiply.32']
    $72binary_subtract.33 = $const60.27 - $70binary_multiply.32 ['$70binary_multiply.32', '$72binary_subtract.33', '$const60.27']
    $74binary_multiply.34 = $58binary_multiply.26 * $72binary_subtract.33 ['$58binary_multiply.26', '$72binary_subtract.33', '$74binary_multiply.34']
    $const76.35 = const(int, 1)              ['$const76.35']
    $const78.36 = const(float, 1.0)          ['$const78.36']
    $84binary_multiply.39 = nu_r * nu_r      ['$84binary_multiply.39', 'nu_r', 'nu_r']
    $86binary_true_divide.40 = $const78.36 / $84binary_multiply.39 ['$84binary_multiply.39', '$86binary_true_divide.40', '$const78.36']
    $88binary_add.41 = $const76.35 + $86binary_true_divide.40 ['$86binary_true_divide.40', '$88binary_add.41', '$const76.35']
    $90binary_multiply.42 = $74binary_multiply.34 * $88binary_add.41 ['$74binary_multiply.34', '$88binary_add.41', '$90binary_multiply.42']
    $92binary_add.43 = $const48.21 + $90binary_multiply.42 ['$90binary_multiply.42', '$92binary_add.43', '$const48.21']
    $94binary_subtract.44 = $46binary_multiply.20 - $92binary_add.43 ['$46binary_multiply.20', '$92binary_add.43', '$94binary_subtract.44']
    $96call_method.45 = call $40load_method.17($94binary_subtract.44, func=$40load_method.17, args=[Var($94binary_subtract.44, r_packet.py:198)], kws=(), vararg=None) ['$40load_method.17', '$94binary_subtract.44', '$96call_method.45']
    $98binary_multiply.46 = $36binary_multiply.15 * $96call_method.45 ['$36binary_multiply.15', '$96call_method.45', '$98binary_multiply.46']
    $100binary_subtract.47 = ct - $98binary_multiply.46 ['$100binary_subtract.47', '$98binary_multiply.46', 'ct']
    $const102.48 = const(int, 1)             ['$const102.48']
    $108binary_multiply.51 = nu_r * nu_r     ['$108binary_multiply.51', 'nu_r', 'nu_r']
    $110binary_add.52 = $const102.48 + $108binary_multiply.51 ['$108binary_multiply.51', '$110binary_add.52', '$const102.48']
    $112binary_true_divide.53 = $100binary_subtract.47 / $110binary_add.52 ['$100binary_subtract.47', '$110binary_add.52', '$112binary_true_divide.53']
    $114binary_add.54 = $28binary_multiply.11 + $112binary_true_divide.53 ['$112binary_true_divide.53', '$114binary_add.54', '$28binary_multiply.11']
    distance = $114binary_add.54             ['$114binary_add.54', 'distance']
    $120return_value.56 = cast(value=distance) ['$120return_value.56', 'distance']
    return $120return_value.56               ['$120return_value.56']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4688a790>
DEBUG:numba.core.ssa:on stmt: nu_line = arg(0, name=nu_line)
DEBUG:numba.core.ssa:on stmt: nu = arg(1, name=nu)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(2, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: r_packet = arg(3, name=r_packet)
DEBUG:numba.core.ssa:on stmt: $6binary_true_divide.2 = nu_line / nu
DEBUG:numba.core.ssa:on stmt: nu_r = $6binary_true_divide.2
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $14binary_multiply.5 = $10load_global.3 * time_explosion
DEBUG:numba.core.ssa:on stmt: ct = $14binary_multiply.5
DEBUG:numba.core.ssa:on stmt: $20load_attr.7 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.8 = unary(fn=<built-in function neg>, value=$20load_attr.7)
DEBUG:numba.core.ssa:on stmt: $26load_attr.10 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $28binary_multiply.11 = $22unary_negative.8 * $26load_attr.10
DEBUG:numba.core.ssa:on stmt: $36binary_multiply.15 = nu_r * nu_r
DEBUG:numba.core.ssa:on stmt: $38load_global.16 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.17 = getattr(value=$38load_global.16, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_multiply.20 = ct * ct
DEBUG:numba.core.ssa:on stmt: $const48.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $52load_attr.23 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $56load_attr.25 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $58binary_multiply.26 = $52load_attr.23 * $56load_attr.25
DEBUG:numba.core.ssa:on stmt: $const60.27 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $64load_attr.29 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $68load_attr.31 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.32 = $64load_attr.29 * $68load_attr.31
DEBUG:numba.core.ssa:on stmt: $72binary_subtract.33 = $const60.27 - $70binary_multiply.32
DEBUG:numba.core.ssa:on stmt: $74binary_multiply.34 = $58binary_multiply.26 * $72binary_subtract.33
DEBUG:numba.core.ssa:on stmt: $const76.35 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const78.36 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $84binary_multiply.39 = nu_r * nu_r
DEBUG:numba.core.ssa:on stmt: $86binary_true_divide.40 = $const78.36 / $84binary_multiply.39
DEBUG:numba.core.ssa:on stmt: $88binary_add.41 = $const76.35 + $86binary_true_divide.40
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.42 = $74binary_multiply.34 * $88binary_add.41
DEBUG:numba.core.ssa:on stmt: $92binary_add.43 = $const48.21 + $90binary_multiply.42
DEBUG:numba.core.ssa:on stmt: $94binary_subtract.44 = $46binary_multiply.20 - $92binary_add.43
DEBUG:numba.core.ssa:on stmt: $96call_method.45 = call $40load_method.17($94binary_subtract.44, func=$40load_method.17, args=[Var($94binary_subtract.44, r_packet.py:198)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.46 = $36binary_multiply.15 * $96call_method.45
DEBUG:numba.core.ssa:on stmt: $100binary_subtract.47 = ct - $98binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $const102.48 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $108binary_multiply.51 = nu_r * nu_r
DEBUG:numba.core.ssa:on stmt: $110binary_add.52 = $const102.48 + $108binary_multiply.51
DEBUG:numba.core.ssa:on stmt: $112binary_true_divide.53 = $100binary_subtract.47 / $110binary_add.52
DEBUG:numba.core.ssa:on stmt: $114binary_add.54 = $28binary_multiply.11 + $112binary_true_divide.53
DEBUG:numba.core.ssa:on stmt: distance = $114binary_add.54
DEBUG:numba.core.ssa:on stmt: $120return_value.56 = cast(value=distance)
DEBUG:numba.core.ssa:on stmt: return $120return_value.56
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100binary_subtract.47': [<numba.core.ir.Assign object at 0x7f6e4679ab10>],
             '$108binary_multiply.51': [<numba.core.ir.Assign object at 0x7f6e4679a890>],
             '$10load_global.3': [<numba.core.ir.Assign object at 0x7f6e46426dd0>],
             '$110binary_add.52': [<numba.core.ir.Assign object at 0x7f6e4679ac90>],
             '$112binary_true_divide.53': [<numba.core.ir.Assign object at 0x7f6e4679a510>],
             '$114binary_add.54': [<numba.core.ir.Assign object at 0x7f6e4679a090>],
             '$120return_value.56': [<numba.core.ir.Assign object at 0x7f6e468812d0>],
             '$14binary_multiply.5': [<numba.core.ir.Assign object at 0x7f6e46426d90>],
             '$20load_attr.7': [<numba.core.ir.Assign object at 0x7f6e46426190>],
             '$22unary_negative.8': [<numba.core.ir.Assign object at 0x7f6e4668d410>],
             '$26load_attr.10': [<numba.core.ir.Assign object at 0x7f6e4668d650>],
             '$28binary_multiply.11': [<numba.core.ir.Assign object at 0x7f6e46611e50>],
             '$36binary_multiply.15': [<numba.core.ir.Assign object at 0x7f6e46611d90>],
             '$38load_global.16': [<numba.core.ir.Assign object at 0x7f6e467403d0>],
             '$40load_method.17': [<numba.core.ir.Assign object at 0x7f6e460d3fd0>],
             '$46binary_multiply.20': [<numba.core.ir.Assign object at 0x7f6e46689c90>],
             '$52load_attr.23': [<numba.core.ir.Assign object at 0x7f6e4660fbd0>],
             '$56load_attr.25': [<numba.core.ir.Assign object at 0x7f6e4660f9d0>],
             '$58binary_multiply.26': [<numba.core.ir.Assign object at 0x7f6e46669210>],
             '$64load_attr.29': [<numba.core.ir.Assign object at 0x7f6e4668fcd0>],
             '$68load_attr.31': [<numba.core.ir.Assign object at 0x7f6e4668f9d0>],
             '$6binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f6e46426ad0>],
             '$70binary_multiply.32': [<numba.core.ir.Assign object at 0x7f6e4668f950>],
             '$72binary_subtract.33': [<numba.core.ir.Assign object at 0x7f6e46648590>],
             '$74binary_multiply.34': [<numba.core.ir.Assign object at 0x7f6e46426590>],
             '$84binary_multiply.39': [<numba.core.ir.Assign object at 0x7f6e464262d0>],
             '$86binary_true_divide.40': [<numba.core.ir.Assign object at 0x7f6e4679a590>],
             '$88binary_add.41': [<numba.core.ir.Assign object at 0x7f6e4679af90>],
             '$90binary_multiply.42': [<numba.core.ir.Assign object at 0x7f6e4679a8d0>],
             '$92binary_add.43': [<numba.core.ir.Assign object at 0x7f6e4679a990>],
             '$94binary_subtract.44': [<numba.core.ir.Assign object at 0x7f6e4679acd0>],
             '$96call_method.45': [<numba.core.ir.Assign object at 0x7f6e4679a850>],
             '$98binary_multiply.46': [<numba.core.ir.Assign object at 0x7f6e4679a2d0>],
             '$const102.48': [<numba.core.ir.Assign object at 0x7f6e4679a750>],
             '$const48.21': [<numba.core.ir.Assign object at 0x7f6e46689e10>],
             '$const60.27': [<numba.core.ir.Assign object at 0x7f6e4668f510>],
             '$const76.35': [<numba.core.ir.Assign object at 0x7f6e46426d10>],
             '$const78.36': [<numba.core.ir.Assign object at 0x7f6e46426050>],
             'ct': [<numba.core.ir.Assign object at 0x7f6e46426b90>],
             'distance': [<numba.core.ir.Assign object at 0x7f6e46881cd0>],
             'nu': [<numba.core.ir.Assign object at 0x7f6e4668de50>],
             'nu_line': [<numba.core.ir.Assign object at 0x7f6e4668d310>],
             'nu_r': [<numba.core.ir.Assign object at 0x7f6e46426450>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e46426550>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e464268d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=586)
           2	LOAD_FAST(arg=0, lineno=586)
           4	LOAD_ATTR(arg=0, lineno=586)
           6	LOAD_FAST(arg=1, lineno=586)
           8	BINARY_ADD(arg=None, lineno=586)
          10	STORE_FAST(arg=3, lineno=586)
          12	LOAD_FAST(arg=3, lineno=588)
          14	LOAD_FAST(arg=2, lineno=588)
          16	COMPARE_OP(arg=5, lineno=588)
          18	POP_JUMP_IF_FALSE(arg=30, lineno=588)
          20	LOAD_GLOBAL(arg=1, lineno=589)
          22	LOAD_ATTR(arg=2, lineno=589)
          24	LOAD_FAST(arg=0, lineno=589)
          26	STORE_ATTR(arg=3, lineno=589)
          28	JUMP_FORWARD(arg=24, lineno=589)
>         30	LOAD_FAST(arg=3, lineno=590)
          32	LOAD_CONST(arg=1, lineno=590)
          34	COMPARE_OP(arg=0, lineno=590)
          36	POP_JUMP_IF_FALSE(arg=48, lineno=590)
          38	LOAD_GLOBAL(arg=1, lineno=591)
          40	LOAD_ATTR(arg=4, lineno=591)
          42	LOAD_FAST(arg=0, lineno=591)
          44	STORE_ATTR(arg=3, lineno=591)
          46	JUMP_FORWARD(arg=6, lineno=591)
>         48	LOAD_FAST(arg=3, lineno=593)
          50	LOAD_FAST(arg=0, lineno=593)
          52	STORE_ATTR(arg=0, lineno=593)
>         54	LOAD_CONST(arg=2, lineno=593)
          56	RETURN_VALUE(arg=None, lineno=593)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=586)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=586)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=586)
DEBUG:numba.core.byteflow:stack ['$packet2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=586)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_ADD(arg=None, lineno=586)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$delta_shell6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=STORE_FAST(arg=3, lineno=586)
DEBUG:numba.core.byteflow:stack ['$8binary_add.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=3, lineno=588)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=588)
DEBUG:numba.core.byteflow:stack ['$next_shell_id12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=COMPARE_OP(arg=5, lineno=588)
DEBUG:numba.core.byteflow:stack ['$next_shell_id12.4', '$no_of_shells14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=POP_JUMP_IF_FALSE(arg=30, lineno=588)
DEBUG:numba.core.byteflow:stack ['$16compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=20, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=589)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=589)
DEBUG:numba.core.byteflow:stack ['$20load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=589)
DEBUG:numba.core.byteflow:stack ['$22load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_ATTR(arg=3, lineno=589)
DEBUG:numba.core.byteflow:stack ['$22load_attr.1', '$packet24.2']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=JUMP_FORWARD(arg=24, lineno=589)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=3, lineno=590)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=590)
DEBUG:numba.core.byteflow:stack ['$next_shell_id30.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=COMPARE_OP(arg=0, lineno=590)
DEBUG:numba.core.byteflow:stack ['$next_shell_id30.0', '$const32.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=POP_JUMP_IF_FALSE(arg=48, lineno=590)
DEBUG:numba.core.byteflow:stack ['$34compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=38, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=38 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=593)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=56, inst=RETURN_VALUE(arg=None, lineno=593)
DEBUG:numba.core.byteflow:stack ['$const54.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=38 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=1, lineno=591)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_ATTR(arg=4, lineno=591)
DEBUG:numba.core.byteflow:stack ['$38load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=591)
DEBUG:numba.core.byteflow:stack ['$40load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_ATTR(arg=3, lineno=591)
DEBUG:numba.core.byteflow:stack ['$40load_attr.1', '$packet42.2']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=JUMP_FORWARD(arg=6, lineno=591)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=3, lineno=593)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=0, lineno=593)
DEBUG:numba.core.byteflow:stack ['$next_shell_id48.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=STORE_ATTR(arg=0, lineno=593)
DEBUG:numba.core.byteflow:stack ['$next_shell_id48.0', '$packet50.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=54 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=54 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$packet2.0'}), (4, {'item': '$packet2.0', 'res': '$4load_attr.1'}), (6, {'res': '$delta_shell6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$delta_shell6.2', 'res': '$8binary_add.3'}), (10, {'value': '$8binary_add.3'}), (12, {'res': '$next_shell_id12.4'}), (14, {'res': '$no_of_shells14.5'}), (16, {'lhs': '$next_shell_id12.4', 'rhs': '$no_of_shells14.5', 'res': '$16compare_op.6'}), (18, {'pred': '$16compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: (), 30: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_attr.1'}), (24, {'res': '$packet24.2'}), (26, {'target': '$packet24.2', 'value': '$22load_attr.1'}), (28, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$next_shell_id30.0'}), (32, {'res': '$const32.1'}), (34, {'lhs': '$next_shell_id30.0', 'rhs': '$const32.1', 'res': '$34compare_op.2'}), (36, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: (), 48: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=38 nstack_initial=0):
AdaptBlockInfo(insts=((38, {'res': '$38load_global.0'}), (40, {'item': '$38load_global.0', 'res': '$40load_attr.1'}), (42, {'res': '$packet42.2'}), (44, {'target': '$packet42.2', 'value': '$40load_attr.1'}), (46, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$next_shell_id48.0'}), (50, {'res': '$packet50.1'}), (52, {'target': '$packet50.1', 'value': '$next_shell_id48.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'retval': '$const54.0', 'castval': '$56return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    packet = arg(0, name=packet)             ['packet']
    delta_shell = arg(1, name=delta_shell)   ['delta_shell']
    no_of_shells = arg(2, name=no_of_shells) ['no_of_shells']
    $4load_attr.1 = getattr(value=packet, attr=current_shell_id) ['$4load_attr.1', 'packet']
    $8binary_add.3 = $4load_attr.1 + delta_shell ['$4load_attr.1', '$8binary_add.3', 'delta_shell']
    next_shell_id = $8binary_add.3           ['$8binary_add.3', 'next_shell_id']
    $16compare_op.6 = next_shell_id >= no_of_shells ['$16compare_op.6', 'next_shell_id', 'no_of_shells']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, r_packet.py:588),), kws=(), vararg=None) ['$16compare_op.6', '$18pred', 'bool18']
    branch $18pred, 20, 30                   ['$18pred']
label 20:
    $20load_global.0 = global(PacketStatus: <enum 'PacketStatus'>) ['$20load_global.0']
    $22load_attr.1 = getattr(value=$20load_global.0, attr=EMITTED) ['$20load_global.0', '$22load_attr.1']
    (packet).status = $22load_attr.1         ['$22load_attr.1', 'packet']
    jump 54                                  []
label 30:
    $const32.1 = const(int, 0)               ['$const32.1']
    $34compare_op.2 = next_shell_id < $const32.1 ['$34compare_op.2', '$const32.1', 'next_shell_id']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($34compare_op.2, func=bool36, args=(Var($34compare_op.2, r_packet.py:590),), kws=(), vararg=None) ['$34compare_op.2', '$36pred', 'bool36']
    branch $36pred, 38, 48                   ['$36pred']
label 38:
    $38load_global.0 = global(PacketStatus: <enum 'PacketStatus'>) ['$38load_global.0']
    $40load_attr.1 = getattr(value=$38load_global.0, attr=REABSORBED) ['$38load_global.0', '$40load_attr.1']
    (packet).status = $40load_attr.1         ['$40load_attr.1', 'packet']
    jump 54                                  []
label 48:
    (packet).current_shell_id = next_shell_id ['next_shell_id', 'packet']
    jump 54                                  []
label 54:
    $const54.0 = const(NoneType, None)       ['$const54.0']
    $56return_value.1 = cast(value=$const54.0) ['$56return_value.1', '$const54.0']
    return $56return_value.1                 ['$56return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b13e10>
DEBUG:numba.core.ssa:on stmt: packet = arg(0, name=packet)
DEBUG:numba.core.ssa:on stmt: delta_shell = arg(1, name=delta_shell)
DEBUG:numba.core.ssa:on stmt: no_of_shells = arg(2, name=no_of_shells)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $8binary_add.3 = $4load_attr.1 + delta_shell
DEBUG:numba.core.ssa:on stmt: next_shell_id = $8binary_add.3
DEBUG:numba.core.ssa:on stmt: $16compare_op.6 = next_shell_id >= no_of_shells
DEBUG:numba.core.ssa:on stmt: bool18 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, r_packet.py:588),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $18pred, 20, 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b13e10>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.1 = getattr(value=$20load_global.0, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: (packet).status = $22load_attr.1
DEBUG:numba.core.ssa:on stmt: jump 54
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b13e10>
DEBUG:numba.core.ssa:on stmt: $const32.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $34compare_op.2 = next_shell_id < $const32.1
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($34compare_op.2, func=bool36, args=(Var($34compare_op.2, r_packet.py:590),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b13e10>
DEBUG:numba.core.ssa:on stmt: $38load_global.0 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.1 = getattr(value=$38load_global.0, attr=REABSORBED)
DEBUG:numba.core.ssa:on stmt: (packet).status = $40load_attr.1
DEBUG:numba.core.ssa:on stmt: jump 54
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b13e10>
DEBUG:numba.core.ssa:on stmt: (packet).current_shell_id = next_shell_id
DEBUG:numba.core.ssa:on stmt: jump 54
DEBUG:numba.core.ssa:==== SSA block analysis pass on 54
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b13e10>
DEBUG:numba.core.ssa:on stmt: $const54.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $56return_value.1 = cast(value=$const54.0)
DEBUG:numba.core.ssa:on stmt: return $56return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16compare_op.6': [<numba.core.ir.Assign object at 0x7f6e45d04090>],
             '$18pred': [<numba.core.ir.Assign object at 0x7f6e463dec10>],
             '$20load_global.0': [<numba.core.ir.Assign object at 0x7f6e463de850>],
             '$22load_attr.1': [<numba.core.ir.Assign object at 0x7f6e466858d0>],
             '$34compare_op.2': [<numba.core.ir.Assign object at 0x7f6e460ceb90>],
             '$36pred': [<numba.core.ir.Assign object at 0x7f6e45e08ed0>],
             '$38load_global.0': [<numba.core.ir.Assign object at 0x7f6e45f36d10>],
             '$40load_attr.1': [<numba.core.ir.Assign object at 0x7f6e46052450>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45cd5990>],
             '$56return_value.1': [<numba.core.ir.Assign object at 0x7f6e45c30990>],
             '$8binary_add.3': [<numba.core.ir.Assign object at 0x7f6e463d5d90>],
             '$const32.1': [<numba.core.ir.Assign object at 0x7f6e460ce890>],
             '$const54.0': [<numba.core.ir.Assign object at 0x7f6e45c30810>],
             'bool18': [<numba.core.ir.Assign object at 0x7f6e463cdfd0>],
             'bool36': [<numba.core.ir.Assign object at 0x7f6e460ce8d0>],
             'delta_shell': [<numba.core.ir.Assign object at 0x7f6e4600c650>],
             'next_shell_id': [<numba.core.ir.Assign object at 0x7f6e463d53d0>],
             'no_of_shells': [<numba.core.ir.Assign object at 0x7f6e4600c750>],
             'packet': [<numba.core.ir.Assign object at 0x7f6e46164290>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=240)
           2	LOAD_FAST(arg=0, lineno=240)
           4	LOAD_ATTR(arg=0, lineno=240)
           6	LOAD_FAST(arg=0, lineno=240)
           8	LOAD_ATTR(arg=1, lineno=240)
          10	COMPARE_OP(arg=5, lineno=240)
          12	POP_JUMP_IF_FALSE(arg=266, lineno=240)
          16	LOAD_FAST(arg=0, lineno=241)
          18	LOAD_ATTR(arg=1, lineno=241)
          20	LOAD_CONST(arg=1, lineno=241)
          22	BINARY_MULTIPLY(arg=None, lineno=241)
          24	LOAD_FAST(arg=0, lineno=241)
          26	LOAD_ATTR(arg=2, lineno=241)
          28	BINARY_ADD(arg=None, lineno=241)
          30	STORE_FAST(arg=7, lineno=241)
          32	LOAD_GLOBAL(arg=3, lineno=242)
          34	LOAD_ATTR(arg=4, lineno=242)
          36	LOAD_FAST(arg=7, lineno=242)
          38	LOAD_GLOBAL(arg=3, lineno=242)
          40	LOAD_ATTR(arg=5, lineno=242)
          42	LOAD_CONST(arg=2, lineno=242)
          44	CALL_FUNCTION_KW(arg=2, lineno=242)
          46	STORE_FAST(arg=8, lineno=242)
          48	LOAD_GLOBAL(arg=3, lineno=243)
          50	LOAD_ATTR(arg=4, lineno=243)
          52	LOAD_FAST(arg=7, lineno=243)
          54	LOAD_GLOBAL(arg=3, lineno=243)
          56	LOAD_ATTR(arg=5, lineno=243)
          58	LOAD_CONST(arg=2, lineno=243)
          60	CALL_FUNCTION_KW(arg=2, lineno=243)
          62	STORE_FAST(arg=9, lineno=243)
          64	LOAD_GLOBAL(arg=3, lineno=244)
          66	LOAD_ATTR(arg=4, lineno=244)
          68	LOAD_FAST(arg=7, lineno=244)
          70	LOAD_GLOBAL(arg=3, lineno=244)
          72	LOAD_ATTR(arg=5, lineno=244)
          74	LOAD_CONST(arg=2, lineno=244)
          76	CALL_FUNCTION_KW(arg=2, lineno=244)
          78	STORE_FAST(arg=10, lineno=244)
          80	LOAD_GLOBAL(arg=3, lineno=245)
          82	LOAD_ATTR(arg=4, lineno=245)
          84	LOAD_FAST(arg=7, lineno=245)
          86	LOAD_GLOBAL(arg=3, lineno=245)
          88	LOAD_ATTR(arg=6, lineno=245)
          90	LOAD_CONST(arg=2, lineno=245)
          92	CALL_FUNCTION_KW(arg=2, lineno=245)
          94	STORE_FAST(arg=11, lineno=245)
          96	LOAD_GLOBAL(arg=3, lineno=246)
          98	LOAD_ATTR(arg=4, lineno=246)
         100	LOAD_FAST(arg=7, lineno=246)
         102	LOAD_GLOBAL(arg=3, lineno=246)
         104	LOAD_ATTR(arg=6, lineno=246)
         106	LOAD_CONST(arg=2, lineno=246)
         108	CALL_FUNCTION_KW(arg=2, lineno=246)
         110	STORE_FAST(arg=12, lineno=246)
         112	LOAD_GLOBAL(arg=3, lineno=247)
         114	LOAD_ATTR(arg=4, lineno=247)
         116	LOAD_FAST(arg=7, lineno=247)
         118	LOAD_GLOBAL(arg=3, lineno=247)
         120	LOAD_ATTR(arg=6, lineno=247)
         122	LOAD_CONST(arg=2, lineno=247)
         124	CALL_FUNCTION_KW(arg=2, lineno=247)
         126	STORE_FAST(arg=13, lineno=247)
         128	LOAD_FAST(arg=0, lineno=248)
         130	LOAD_ATTR(arg=7, lineno=248)
         132	LOAD_FAST(arg=8, lineno=248)
         134	LOAD_CONST(arg=0, lineno=248)
         136	LOAD_FAST(arg=0, lineno=248)
         138	LOAD_ATTR(arg=1, lineno=248)
         140	BUILD_SLICE(arg=2, lineno=248)
         142	STORE_SUBSCR(arg=None, lineno=248)
         144	LOAD_FAST(arg=0, lineno=249)
         146	LOAD_ATTR(arg=8, lineno=249)
         148	LOAD_FAST(arg=9, lineno=249)
         150	LOAD_CONST(arg=0, lineno=249)
         152	LOAD_FAST(arg=0, lineno=249)
         154	LOAD_ATTR(arg=1, lineno=249)
         156	BUILD_SLICE(arg=2, lineno=249)
         158	STORE_SUBSCR(arg=None, lineno=249)
         160	LOAD_FAST(arg=0, lineno=250)
         162	LOAD_ATTR(arg=9, lineno=250)
         164	LOAD_FAST(arg=10, lineno=250)
         166	LOAD_CONST(arg=0, lineno=250)
         168	LOAD_FAST(arg=0, lineno=250)
         170	LOAD_ATTR(arg=1, lineno=250)
         172	BUILD_SLICE(arg=2, lineno=250)
         174	STORE_SUBSCR(arg=None, lineno=250)
         176	LOAD_FAST(arg=0, lineno=251)
         178	LOAD_ATTR(arg=10, lineno=251)
         180	LOAD_FAST(arg=11, lineno=251)
         182	LOAD_CONST(arg=0, lineno=251)
         184	LOAD_FAST(arg=0, lineno=251)
         186	LOAD_ATTR(arg=1, lineno=251)
         188	BUILD_SLICE(arg=2, lineno=251)
         190	STORE_SUBSCR(arg=None, lineno=251)
         192	LOAD_FAST(arg=0, lineno=252)
         194	LOAD_ATTR(arg=11, lineno=252)
         196	LOAD_FAST(arg=12, lineno=252)
         198	LOAD_CONST(arg=0, lineno=252)
         200	LOAD_FAST(arg=0, lineno=252)
         202	LOAD_ATTR(arg=1, lineno=252)
         204	BUILD_SLICE(arg=2, lineno=252)
         206	STORE_SUBSCR(arg=None, lineno=252)
         208	LOAD_FAST(arg=0, lineno=253)
         210	LOAD_ATTR(arg=12, lineno=253)
         212	LOAD_FAST(arg=13, lineno=253)
         214	LOAD_CONST(arg=0, lineno=253)
         216	LOAD_FAST(arg=0, lineno=253)
         218	LOAD_ATTR(arg=1, lineno=253)
         220	BUILD_SLICE(arg=2, lineno=253)
         222	STORE_SUBSCR(arg=None, lineno=253)
         224	LOAD_FAST(arg=8, lineno=255)
         226	LOAD_FAST(arg=0, lineno=255)
         228	STORE_ATTR(arg=7, lineno=255)
         230	LOAD_FAST(arg=9, lineno=256)
         232	LOAD_FAST(arg=0, lineno=256)
         234	STORE_ATTR(arg=8, lineno=256)
         236	LOAD_FAST(arg=10, lineno=257)
         238	LOAD_FAST(arg=0, lineno=257)
         240	STORE_ATTR(arg=9, lineno=257)
         242	LOAD_FAST(arg=11, lineno=258)
         244	LOAD_FAST(arg=0, lineno=258)
         246	STORE_ATTR(arg=10, lineno=258)
         248	LOAD_FAST(arg=12, lineno=259)
         250	LOAD_FAST(arg=0, lineno=259)
         252	STORE_ATTR(arg=11, lineno=259)
         254	LOAD_FAST(arg=13, lineno=260)
         256	LOAD_FAST(arg=0, lineno=260)
         258	STORE_ATTR(arg=12, lineno=260)
         260	LOAD_FAST(arg=7, lineno=261)
         262	LOAD_FAST(arg=0, lineno=261)
         264	STORE_ATTR(arg=1, lineno=261)
>        266	LOAD_FAST(arg=1, lineno=263)
         268	LOAD_FAST(arg=0, lineno=263)
         270	LOAD_ATTR(arg=7, lineno=263)
         272	LOAD_FAST(arg=0, lineno=263)
         274	LOAD_ATTR(arg=0, lineno=263)
         276	STORE_SUBSCR(arg=None, lineno=263)
         278	LOAD_FAST(arg=2, lineno=264)
         280	LOAD_FAST(arg=0, lineno=264)
         282	LOAD_ATTR(arg=8, lineno=264)
         284	LOAD_FAST(arg=0, lineno=264)
         286	LOAD_ATTR(arg=0, lineno=264)
         288	STORE_SUBSCR(arg=None, lineno=264)
         290	LOAD_FAST(arg=3, lineno=265)
         292	LOAD_FAST(arg=0, lineno=265)
         294	LOAD_ATTR(arg=9, lineno=265)
         296	LOAD_FAST(arg=0, lineno=265)
         298	LOAD_ATTR(arg=0, lineno=265)
         300	STORE_SUBSCR(arg=None, lineno=265)
         302	LOAD_FAST(arg=4, lineno=266)
         304	LOAD_FAST(arg=0, lineno=266)
         306	LOAD_ATTR(arg=10, lineno=266)
         308	LOAD_FAST(arg=0, lineno=266)
         310	LOAD_ATTR(arg=0, lineno=266)
         312	STORE_SUBSCR(arg=None, lineno=266)
         314	LOAD_FAST(arg=5, lineno=267)
         316	LOAD_FAST(arg=0, lineno=267)
         318	LOAD_ATTR(arg=11, lineno=267)
         320	LOAD_FAST(arg=0, lineno=267)
         322	LOAD_ATTR(arg=0, lineno=267)
         324	STORE_SUBSCR(arg=None, lineno=267)
         326	LOAD_FAST(arg=6, lineno=268)
         328	LOAD_FAST(arg=0, lineno=268)
         330	LOAD_ATTR(arg=12, lineno=268)
         332	LOAD_FAST(arg=0, lineno=268)
         334	LOAD_ATTR(arg=0, lineno=268)
         336	STORE_SUBSCR(arg=None, lineno=268)
         338	LOAD_FAST(arg=0, lineno=269)
         340	DUP_TOP(arg=None, lineno=269)
         342	LOAD_ATTR(arg=0, lineno=269)
         344	LOAD_CONST(arg=3, lineno=269)
         346	INPLACE_ADD(arg=None, lineno=269)
         348	ROT_TWO(arg=None, lineno=269)
         350	STORE_ATTR(arg=0, lineno=269)
         352	LOAD_CONST(arg=0, lineno=269)
         354	RETURN_VALUE(arg=None, lineno=269)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=240)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=240)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=240)
DEBUG:numba.core.byteflow:stack ['$self2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=240)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=240)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$self6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=COMPARE_OP(arg=5, lineno=240)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=POP_JUMP_IF_FALSE(arg=266, lineno=240)
DEBUG:numba.core.byteflow:stack ['$10compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=266, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=266 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=241)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_ATTR(arg=1, lineno=241)
DEBUG:numba.core.byteflow:stack ['$self16.0']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=1, lineno=241)
DEBUG:numba.core.byteflow:stack ['$18load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_MULTIPLY(arg=None, lineno=241)
DEBUG:numba.core.byteflow:stack ['$18load_attr.1', '$const20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=241)
DEBUG:numba.core.byteflow:stack ['$22binary_multiply.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_ATTR(arg=2, lineno=241)
DEBUG:numba.core.byteflow:stack ['$22binary_multiply.3', '$self24.4']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_ADD(arg=None, lineno=241)
DEBUG:numba.core.byteflow:stack ['$22binary_multiply.3', '$26load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=7, lineno=241)
DEBUG:numba.core.byteflow:stack ['$28binary_add.6']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_GLOBAL(arg=3, lineno=242)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_ATTR(arg=4, lineno=242)
DEBUG:numba.core.byteflow:stack ['$32load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=7, lineno=242)
DEBUG:numba.core.byteflow:stack ['$34load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=3, lineno=242)
DEBUG:numba.core.byteflow:stack ['$34load_attr.8', '$temp_length36.9']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_ATTR(arg=5, lineno=242)
DEBUG:numba.core.byteflow:stack ['$34load_attr.8', '$temp_length36.9', '$38load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=242)
DEBUG:numba.core.byteflow:stack ['$34load_attr.8', '$temp_length36.9', '$40load_attr.11']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=CALL_FUNCTION_KW(arg=2, lineno=242)
DEBUG:numba.core.byteflow:stack ['$34load_attr.8', '$temp_length36.9', '$40load_attr.11', '$const42.12']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=8, lineno=242)
DEBUG:numba.core.byteflow:stack ['$44call_function_kw.13']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_GLOBAL(arg=3, lineno=243)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_ATTR(arg=4, lineno=243)
DEBUG:numba.core.byteflow:stack ['$48load_global.14']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=7, lineno=243)
DEBUG:numba.core.byteflow:stack ['$50load_attr.15']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=3, lineno=243)
DEBUG:numba.core.byteflow:stack ['$50load_attr.15', '$temp_length52.16']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_ATTR(arg=5, lineno=243)
DEBUG:numba.core.byteflow:stack ['$50load_attr.15', '$temp_length52.16', '$54load_global.17']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_CONST(arg=2, lineno=243)
DEBUG:numba.core.byteflow:stack ['$50load_attr.15', '$temp_length52.16', '$56load_attr.18']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=CALL_FUNCTION_KW(arg=2, lineno=243)
DEBUG:numba.core.byteflow:stack ['$50load_attr.15', '$temp_length52.16', '$56load_attr.18', '$const58.19']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_FAST(arg=9, lineno=243)
DEBUG:numba.core.byteflow:stack ['$60call_function_kw.20']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_GLOBAL(arg=3, lineno=244)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=4, lineno=244)
DEBUG:numba.core.byteflow:stack ['$64load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=7, lineno=244)
DEBUG:numba.core.byteflow:stack ['$66load_attr.22']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_GLOBAL(arg=3, lineno=244)
DEBUG:numba.core.byteflow:stack ['$66load_attr.22', '$temp_length68.23']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=5, lineno=244)
DEBUG:numba.core.byteflow:stack ['$66load_attr.22', '$temp_length68.23', '$70load_global.24']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=2, lineno=244)
DEBUG:numba.core.byteflow:stack ['$66load_attr.22', '$temp_length68.23', '$72load_attr.25']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=CALL_FUNCTION_KW(arg=2, lineno=244)
DEBUG:numba.core.byteflow:stack ['$66load_attr.22', '$temp_length68.23', '$72load_attr.25', '$const74.26']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=STORE_FAST(arg=10, lineno=244)
DEBUG:numba.core.byteflow:stack ['$76call_function_kw.27']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_GLOBAL(arg=3, lineno=245)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_ATTR(arg=4, lineno=245)
DEBUG:numba.core.byteflow:stack ['$80load_global.28']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=7, lineno=245)
DEBUG:numba.core.byteflow:stack ['$82load_attr.29']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_GLOBAL(arg=3, lineno=245)
DEBUG:numba.core.byteflow:stack ['$82load_attr.29', '$temp_length84.30']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_ATTR(arg=6, lineno=245)
DEBUG:numba.core.byteflow:stack ['$82load_attr.29', '$temp_length84.30', '$86load_global.31']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=2, lineno=245)
DEBUG:numba.core.byteflow:stack ['$82load_attr.29', '$temp_length84.30', '$88load_attr.32']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=CALL_FUNCTION_KW(arg=2, lineno=245)
DEBUG:numba.core.byteflow:stack ['$82load_attr.29', '$temp_length84.30', '$88load_attr.32', '$const90.33']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=STORE_FAST(arg=11, lineno=245)
DEBUG:numba.core.byteflow:stack ['$92call_function_kw.34']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_GLOBAL(arg=3, lineno=246)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_ATTR(arg=4, lineno=246)
DEBUG:numba.core.byteflow:stack ['$96load_global.35']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=246)
DEBUG:numba.core.byteflow:stack ['$98load_attr.36']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_GLOBAL(arg=3, lineno=246)
DEBUG:numba.core.byteflow:stack ['$98load_attr.36', '$temp_length100.37']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_ATTR(arg=6, lineno=246)
DEBUG:numba.core.byteflow:stack ['$98load_attr.36', '$temp_length100.37', '$102load_global.38']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=246)
DEBUG:numba.core.byteflow:stack ['$98load_attr.36', '$temp_length100.37', '$104load_attr.39']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=CALL_FUNCTION_KW(arg=2, lineno=246)
DEBUG:numba.core.byteflow:stack ['$98load_attr.36', '$temp_length100.37', '$104load_attr.39', '$const106.40']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=STORE_FAST(arg=12, lineno=246)
DEBUG:numba.core.byteflow:stack ['$108call_function_kw.41']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_GLOBAL(arg=3, lineno=247)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_ATTR(arg=4, lineno=247)
DEBUG:numba.core.byteflow:stack ['$112load_global.42']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=247)
DEBUG:numba.core.byteflow:stack ['$114load_attr.43']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_GLOBAL(arg=3, lineno=247)
DEBUG:numba.core.byteflow:stack ['$114load_attr.43', '$temp_length116.44']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_ATTR(arg=6, lineno=247)
DEBUG:numba.core.byteflow:stack ['$114load_attr.43', '$temp_length116.44', '$118load_global.45']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_CONST(arg=2, lineno=247)
DEBUG:numba.core.byteflow:stack ['$114load_attr.43', '$temp_length116.44', '$120load_attr.46']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=CALL_FUNCTION_KW(arg=2, lineno=247)
DEBUG:numba.core.byteflow:stack ['$114load_attr.43', '$temp_length116.44', '$120load_attr.46', '$const122.47']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=STORE_FAST(arg=13, lineno=247)
DEBUG:numba.core.byteflow:stack ['$124call_function_kw.48']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=0, lineno=248)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_ATTR(arg=7, lineno=248)
DEBUG:numba.core.byteflow:stack ['$self128.49']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_FAST(arg=8, lineno=248)
DEBUG:numba.core.byteflow:stack ['$130load_attr.50']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_CONST(arg=0, lineno=248)
DEBUG:numba.core.byteflow:stack ['$130load_attr.50', '$temp_nus132.51']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=0, lineno=248)
DEBUG:numba.core.byteflow:stack ['$130load_attr.50', '$temp_nus132.51', '$const134.52']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_ATTR(arg=1, lineno=248)
DEBUG:numba.core.byteflow:stack ['$130load_attr.50', '$temp_nus132.51', '$const134.52', '$self136.53']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=BUILD_SLICE(arg=2, lineno=248)
DEBUG:numba.core.byteflow:stack ['$130load_attr.50', '$temp_nus132.51', '$const134.52', '$138load_attr.54']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=STORE_SUBSCR(arg=None, lineno=248)
DEBUG:numba.core.byteflow:stack ['$130load_attr.50', '$temp_nus132.51', '$140build_slice.56']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=LOAD_FAST(arg=0, lineno=249)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_ATTR(arg=8, lineno=249)
DEBUG:numba.core.byteflow:stack ['$self144.57']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=9, lineno=249)
DEBUG:numba.core.byteflow:stack ['$146load_attr.58']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_CONST(arg=0, lineno=249)
DEBUG:numba.core.byteflow:stack ['$146load_attr.58', '$temp_energies148.59']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=249)
DEBUG:numba.core.byteflow:stack ['$146load_attr.58', '$temp_energies148.59', '$const150.60']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_ATTR(arg=1, lineno=249)
DEBUG:numba.core.byteflow:stack ['$146load_attr.58', '$temp_energies148.59', '$const150.60', '$self152.61']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=BUILD_SLICE(arg=2, lineno=249)
DEBUG:numba.core.byteflow:stack ['$146load_attr.58', '$temp_energies148.59', '$const150.60', '$154load_attr.62']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=STORE_SUBSCR(arg=None, lineno=249)
DEBUG:numba.core.byteflow:stack ['$146load_attr.58', '$temp_energies148.59', '$156build_slice.64']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_FAST(arg=0, lineno=250)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_ATTR(arg=9, lineno=250)
DEBUG:numba.core.byteflow:stack ['$self160.65']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=10, lineno=250)
DEBUG:numba.core.byteflow:stack ['$162load_attr.66']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=0, lineno=250)
DEBUG:numba.core.byteflow:stack ['$162load_attr.66', '$temp_last_interaction_in_nu164.67']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_FAST(arg=0, lineno=250)
DEBUG:numba.core.byteflow:stack ['$162load_attr.66', '$temp_last_interaction_in_nu164.67', '$const166.68']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_ATTR(arg=1, lineno=250)
DEBUG:numba.core.byteflow:stack ['$162load_attr.66', '$temp_last_interaction_in_nu164.67', '$const166.68', '$self168.69']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=BUILD_SLICE(arg=2, lineno=250)
DEBUG:numba.core.byteflow:stack ['$162load_attr.66', '$temp_last_interaction_in_nu164.67', '$const166.68', '$170load_attr.70']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=STORE_SUBSCR(arg=None, lineno=250)
DEBUG:numba.core.byteflow:stack ['$162load_attr.66', '$temp_last_interaction_in_nu164.67', '$172build_slice.72']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=0, lineno=251)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=178, inst=LOAD_ATTR(arg=10, lineno=251)
DEBUG:numba.core.byteflow:stack ['$self176.73']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_FAST(arg=11, lineno=251)
DEBUG:numba.core.byteflow:stack ['$178load_attr.74']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_CONST(arg=0, lineno=251)
DEBUG:numba.core.byteflow:stack ['$178load_attr.74', '$temp_last_interaction_type180.75']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=LOAD_FAST(arg=0, lineno=251)
DEBUG:numba.core.byteflow:stack ['$178load_attr.74', '$temp_last_interaction_type180.75', '$const182.76']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=LOAD_ATTR(arg=1, lineno=251)
DEBUG:numba.core.byteflow:stack ['$178load_attr.74', '$temp_last_interaction_type180.75', '$const182.76', '$self184.77']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=BUILD_SLICE(arg=2, lineno=251)
DEBUG:numba.core.byteflow:stack ['$178load_attr.74', '$temp_last_interaction_type180.75', '$const182.76', '$186load_attr.78']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=STORE_SUBSCR(arg=None, lineno=251)
DEBUG:numba.core.byteflow:stack ['$178load_attr.74', '$temp_last_interaction_type180.75', '$188build_slice.80']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_FAST(arg=0, lineno=252)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_ATTR(arg=11, lineno=252)
DEBUG:numba.core.byteflow:stack ['$self192.81']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=12, lineno=252)
DEBUG:numba.core.byteflow:stack ['$194load_attr.82']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_CONST(arg=0, lineno=252)
DEBUG:numba.core.byteflow:stack ['$194load_attr.82', '$temp_last_interaction_in_id196.83']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=0, lineno=252)
DEBUG:numba.core.byteflow:stack ['$194load_attr.82', '$temp_last_interaction_in_id196.83', '$const198.84']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_ATTR(arg=1, lineno=252)
DEBUG:numba.core.byteflow:stack ['$194load_attr.82', '$temp_last_interaction_in_id196.83', '$const198.84', '$self200.85']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=BUILD_SLICE(arg=2, lineno=252)
DEBUG:numba.core.byteflow:stack ['$194load_attr.82', '$temp_last_interaction_in_id196.83', '$const198.84', '$202load_attr.86']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=STORE_SUBSCR(arg=None, lineno=252)
DEBUG:numba.core.byteflow:stack ['$194load_attr.82', '$temp_last_interaction_in_id196.83', '$204build_slice.88']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=253)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_ATTR(arg=12, lineno=253)
DEBUG:numba.core.byteflow:stack ['$self208.89']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=13, lineno=253)
DEBUG:numba.core.byteflow:stack ['$210load_attr.90']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=LOAD_CONST(arg=0, lineno=253)
DEBUG:numba.core.byteflow:stack ['$210load_attr.90', '$temp_last_interaction_out_id212.91']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=253)
DEBUG:numba.core.byteflow:stack ['$210load_attr.90', '$temp_last_interaction_out_id212.91', '$const214.92']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=LOAD_ATTR(arg=1, lineno=253)
DEBUG:numba.core.byteflow:stack ['$210load_attr.90', '$temp_last_interaction_out_id212.91', '$const214.92', '$self216.93']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=BUILD_SLICE(arg=2, lineno=253)
DEBUG:numba.core.byteflow:stack ['$210load_attr.90', '$temp_last_interaction_out_id212.91', '$const214.92', '$218load_attr.94']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=STORE_SUBSCR(arg=None, lineno=253)
DEBUG:numba.core.byteflow:stack ['$210load_attr.90', '$temp_last_interaction_out_id212.91', '$220build_slice.96']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_FAST(arg=8, lineno=255)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_FAST(arg=0, lineno=255)
DEBUG:numba.core.byteflow:stack ['$temp_nus224.97']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=STORE_ATTR(arg=7, lineno=255)
DEBUG:numba.core.byteflow:stack ['$temp_nus224.97', '$self226.98']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_FAST(arg=9, lineno=256)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_FAST(arg=0, lineno=256)
DEBUG:numba.core.byteflow:stack ['$temp_energies230.99']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=STORE_ATTR(arg=8, lineno=256)
DEBUG:numba.core.byteflow:stack ['$temp_energies230.99', '$self232.100']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=LOAD_FAST(arg=10, lineno=257)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=0, lineno=257)
DEBUG:numba.core.byteflow:stack ['$temp_last_interaction_in_nu236.101']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=STORE_ATTR(arg=9, lineno=257)
DEBUG:numba.core.byteflow:stack ['$temp_last_interaction_in_nu236.101', '$self238.102']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_FAST(arg=11, lineno=258)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=0, lineno=258)
DEBUG:numba.core.byteflow:stack ['$temp_last_interaction_type242.103']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=STORE_ATTR(arg=10, lineno=258)
DEBUG:numba.core.byteflow:stack ['$temp_last_interaction_type242.103', '$self244.104']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=12, lineno=259)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=0, lineno=259)
DEBUG:numba.core.byteflow:stack ['$temp_last_interaction_in_id248.105']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=STORE_ATTR(arg=11, lineno=259)
DEBUG:numba.core.byteflow:stack ['$temp_last_interaction_in_id248.105', '$self250.106']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=LOAD_FAST(arg=13, lineno=260)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_FAST(arg=0, lineno=260)
DEBUG:numba.core.byteflow:stack ['$temp_last_interaction_out_id254.107']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=STORE_ATTR(arg=12, lineno=260)
DEBUG:numba.core.byteflow:stack ['$temp_last_interaction_out_id254.107', '$self256.108']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=7, lineno=261)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=0, lineno=261)
DEBUG:numba.core.byteflow:stack ['$temp_length260.109']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=STORE_ATTR(arg=1, lineno=261)
DEBUG:numba.core.byteflow:stack ['$temp_length260.109', '$self262.110']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=266, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=266 nstack_initial=0), State(pc_initial=266 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=266, inst=LOAD_FAST(arg=1, lineno=263)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=268, inst=LOAD_FAST(arg=0, lineno=263)
DEBUG:numba.core.byteflow:stack ['$nu266.0']
DEBUG:numba.core.byteflow:dispatch pc=270, inst=LOAD_ATTR(arg=7, lineno=263)
DEBUG:numba.core.byteflow:stack ['$nu266.0', '$self268.1']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_FAST(arg=0, lineno=263)
DEBUG:numba.core.byteflow:stack ['$nu266.0', '$270load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_ATTR(arg=0, lineno=263)
DEBUG:numba.core.byteflow:stack ['$nu266.0', '$270load_attr.2', '$self272.3']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=STORE_SUBSCR(arg=None, lineno=263)
DEBUG:numba.core.byteflow:stack ['$nu266.0', '$270load_attr.2', '$274load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=LOAD_FAST(arg=2, lineno=264)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=280, inst=LOAD_FAST(arg=0, lineno=264)
DEBUG:numba.core.byteflow:stack ['$energy278.5']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=LOAD_ATTR(arg=8, lineno=264)
DEBUG:numba.core.byteflow:stack ['$energy278.5', '$self280.6']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=LOAD_FAST(arg=0, lineno=264)
DEBUG:numba.core.byteflow:stack ['$energy278.5', '$282load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=LOAD_ATTR(arg=0, lineno=264)
DEBUG:numba.core.byteflow:stack ['$energy278.5', '$282load_attr.7', '$self284.8']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=STORE_SUBSCR(arg=None, lineno=264)
DEBUG:numba.core.byteflow:stack ['$energy278.5', '$282load_attr.7', '$286load_attr.9']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=LOAD_FAST(arg=3, lineno=265)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=0, lineno=265)
DEBUG:numba.core.byteflow:stack ['$last_interaction_in_nu290.10']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_ATTR(arg=9, lineno=265)
DEBUG:numba.core.byteflow:stack ['$last_interaction_in_nu290.10', '$self292.11']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=LOAD_FAST(arg=0, lineno=265)
DEBUG:numba.core.byteflow:stack ['$last_interaction_in_nu290.10', '$294load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=298, inst=LOAD_ATTR(arg=0, lineno=265)
DEBUG:numba.core.byteflow:stack ['$last_interaction_in_nu290.10', '$294load_attr.12', '$self296.13']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=STORE_SUBSCR(arg=None, lineno=265)
DEBUG:numba.core.byteflow:stack ['$last_interaction_in_nu290.10', '$294load_attr.12', '$298load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=4, lineno=266)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=304, inst=LOAD_FAST(arg=0, lineno=266)
DEBUG:numba.core.byteflow:stack ['$last_interaction_type302.15']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=LOAD_ATTR(arg=10, lineno=266)
DEBUG:numba.core.byteflow:stack ['$last_interaction_type302.15', '$self304.16']
DEBUG:numba.core.byteflow:dispatch pc=308, inst=LOAD_FAST(arg=0, lineno=266)
DEBUG:numba.core.byteflow:stack ['$last_interaction_type302.15', '$306load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=LOAD_ATTR(arg=0, lineno=266)
DEBUG:numba.core.byteflow:stack ['$last_interaction_type302.15', '$306load_attr.17', '$self308.18']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=STORE_SUBSCR(arg=None, lineno=266)
DEBUG:numba.core.byteflow:stack ['$last_interaction_type302.15', '$306load_attr.17', '$310load_attr.19']
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_FAST(arg=5, lineno=267)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=0, lineno=267)
DEBUG:numba.core.byteflow:stack ['$last_interaction_in_id314.20']
DEBUG:numba.core.byteflow:dispatch pc=318, inst=LOAD_ATTR(arg=11, lineno=267)
DEBUG:numba.core.byteflow:stack ['$last_interaction_in_id314.20', '$self316.21']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=LOAD_FAST(arg=0, lineno=267)
DEBUG:numba.core.byteflow:stack ['$last_interaction_in_id314.20', '$318load_attr.22']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=LOAD_ATTR(arg=0, lineno=267)
DEBUG:numba.core.byteflow:stack ['$last_interaction_in_id314.20', '$318load_attr.22', '$self320.23']
DEBUG:numba.core.byteflow:dispatch pc=324, inst=STORE_SUBSCR(arg=None, lineno=267)
DEBUG:numba.core.byteflow:stack ['$last_interaction_in_id314.20', '$318load_attr.22', '$322load_attr.24']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=LOAD_FAST(arg=6, lineno=268)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=0, lineno=268)
DEBUG:numba.core.byteflow:stack ['$last_interaction_out_id326.25']
DEBUG:numba.core.byteflow:dispatch pc=330, inst=LOAD_ATTR(arg=12, lineno=268)
DEBUG:numba.core.byteflow:stack ['$last_interaction_out_id326.25', '$self328.26']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=LOAD_FAST(arg=0, lineno=268)
DEBUG:numba.core.byteflow:stack ['$last_interaction_out_id326.25', '$330load_attr.27']
DEBUG:numba.core.byteflow:dispatch pc=334, inst=LOAD_ATTR(arg=0, lineno=268)
DEBUG:numba.core.byteflow:stack ['$last_interaction_out_id326.25', '$330load_attr.27', '$self332.28']
DEBUG:numba.core.byteflow:dispatch pc=336, inst=STORE_SUBSCR(arg=None, lineno=268)
DEBUG:numba.core.byteflow:stack ['$last_interaction_out_id326.25', '$330load_attr.27', '$334load_attr.29']
DEBUG:numba.core.byteflow:dispatch pc=338, inst=LOAD_FAST(arg=0, lineno=269)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=340, inst=DUP_TOP(arg=None, lineno=269)
DEBUG:numba.core.byteflow:stack ['$self338.30']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=LOAD_ATTR(arg=0, lineno=269)
DEBUG:numba.core.byteflow:stack ['$self338.30', '$340dup_top.31']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=LOAD_CONST(arg=3, lineno=269)
DEBUG:numba.core.byteflow:stack ['$self338.30', '$342load_attr.32']
DEBUG:numba.core.byteflow:dispatch pc=346, inst=INPLACE_ADD(arg=None, lineno=269)
DEBUG:numba.core.byteflow:stack ['$self338.30', '$342load_attr.32', '$const344.33']
DEBUG:numba.core.byteflow:dispatch pc=348, inst=ROT_TWO(arg=None, lineno=269)
DEBUG:numba.core.byteflow:stack ['$self338.30', '$346inplace_add.34']
DEBUG:numba.core.byteflow:dispatch pc=350, inst=STORE_ATTR(arg=0, lineno=269)
DEBUG:numba.core.byteflow:stack ['$346inplace_add.34', '$self338.30']
DEBUG:numba.core.byteflow:dispatch pc=352, inst=LOAD_CONST(arg=0, lineno=269)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=354, inst=RETURN_VALUE(arg=None, lineno=269)
DEBUG:numba.core.byteflow:stack ['$const352.35']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=266 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=266 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$self2.0'}), (4, {'item': '$self2.0', 'res': '$4load_attr.1'}), (6, {'res': '$self6.2'}), (8, {'item': '$self6.2', 'res': '$8load_attr.3'}), (10, {'lhs': '$4load_attr.1', 'rhs': '$8load_attr.3', 'res': '$10compare_op.4'}), (12, {'pred': '$10compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 266: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$self16.0'}), (18, {'item': '$self16.0', 'res': '$18load_attr.1'}), (20, {'res': '$const20.2'}), (22, {'lhs': '$18load_attr.1', 'rhs': '$const20.2', 'res': '$22binary_multiply.3'}), (24, {'res': '$self24.4'}), (26, {'item': '$self24.4', 'res': '$26load_attr.5'}), (28, {'lhs': '$22binary_multiply.3', 'rhs': '$26load_attr.5', 'res': '$28binary_add.6'}), (30, {'value': '$28binary_add.6'}), (32, {'res': '$32load_global.7'}), (34, {'item': '$32load_global.7', 'res': '$34load_attr.8'}), (36, {'res': '$temp_length36.9'}), (38, {'res': '$38load_global.10'}), (40, {'item': '$38load_global.10', 'res': '$40load_attr.11'}), (42, {'res': '$const42.12'}), (44, {'func': '$34load_attr.8', 'args': ['$temp_length36.9', '$40load_attr.11'], 'names': '$const42.12', 'res': '$44call_function_kw.13'}), (46, {'value': '$44call_function_kw.13'}), (48, {'res': '$48load_global.14'}), (50, {'item': '$48load_global.14', 'res': '$50load_attr.15'}), (52, {'res': '$temp_length52.16'}), (54, {'res': '$54load_global.17'}), (56, {'item': '$54load_global.17', 'res': '$56load_attr.18'}), (58, {'res': '$const58.19'}), (60, {'func': '$50load_attr.15', 'args': ['$temp_length52.16', '$56load_attr.18'], 'names': '$const58.19', 'res': '$60call_function_kw.20'}), (62, {'value': '$60call_function_kw.20'}), (64, {'res': '$64load_global.21'}), (66, {'item': '$64load_global.21', 'res': '$66load_attr.22'}), (68, {'res': '$temp_length68.23'}), (70, {'res': '$70load_global.24'}), (72, {'item': '$70load_global.24', 'res': '$72load_attr.25'}), (74, {'res': '$const74.26'}), (76, {'func': '$66load_attr.22', 'args': ['$temp_length68.23', '$72load_attr.25'], 'names': '$const74.26', 'res': '$76call_function_kw.27'}), (78, {'value': '$76call_function_kw.27'}), (80, {'res': '$80load_global.28'}), (82, {'item': '$80load_global.28', 'res': '$82load_attr.29'}), (84, {'res': '$temp_length84.30'}), (86, {'res': '$86load_global.31'}), (88, {'item': '$86load_global.31', 'res': '$88load_attr.32'}), (90, {'res': '$const90.33'}), (92, {'func': '$82load_attr.29', 'args': ['$temp_length84.30', '$88load_attr.32'], 'names': '$const90.33', 'res': '$92call_function_kw.34'}), (94, {'value': '$92call_function_kw.34'}), (96, {'res': '$96load_global.35'}), (98, {'item': '$96load_global.35', 'res': '$98load_attr.36'}), (100, {'res': '$temp_length100.37'}), (102, {'res': '$102load_global.38'}), (104, {'item': '$102load_global.38', 'res': '$104load_attr.39'}), (106, {'res': '$const106.40'}), (108, {'func': '$98load_attr.36', 'args': ['$temp_length100.37', '$104load_attr.39'], 'names': '$const106.40', 'res': '$108call_function_kw.41'}), (110, {'value': '$108call_function_kw.41'}), (112, {'res': '$112load_global.42'}), (114, {'item': '$112load_global.42', 'res': '$114load_attr.43'}), (116, {'res': '$temp_length116.44'}), (118, {'res': '$118load_global.45'}), (120, {'item': '$118load_global.45', 'res': '$120load_attr.46'}), (122, {'res': '$const122.47'}), (124, {'func': '$114load_attr.43', 'args': ['$temp_length116.44', '$120load_attr.46'], 'names': '$const122.47', 'res': '$124call_function_kw.48'}), (126, {'value': '$124call_function_kw.48'}), (128, {'res': '$self128.49'}), (130, {'item': '$self128.49', 'res': '$130load_attr.50'}), (132, {'res': '$temp_nus132.51'}), (134, {'res': '$const134.52'}), (136, {'res': '$self136.53'}), (138, {'item': '$self136.53', 'res': '$138load_attr.54'}), (140, {'start': '$const134.52', 'stop': '$138load_attr.54', 'step': None, 'res': '$140build_slice.56', 'slicevar': '$140build_slice.55'}), (142, {'target': '$temp_nus132.51', 'index': '$140build_slice.56', 'value': '$130load_attr.50'}), (144, {'res': '$self144.57'}), (146, {'item': '$self144.57', 'res': '$146load_attr.58'}), (148, {'res': '$temp_energies148.59'}), (150, {'res': '$const150.60'}), (152, {'res': '$self152.61'}), (154, {'item': '$self152.61', 'res': '$154load_attr.62'}), (156, {'start': '$const150.60', 'stop': '$154load_attr.62', 'step': None, 'res': '$156build_slice.64', 'slicevar': '$156build_slice.63'}), (158, {'target': '$temp_energies148.59', 'index': '$156build_slice.64', 'value': '$146load_attr.58'}), (160, {'res': '$self160.65'}), (162, {'item': '$self160.65', 'res': '$162load_attr.66'}), (164, {'res': '$temp_last_interaction_in_nu164.67'}), (166, {'res': '$const166.68'}), (168, {'res': '$self168.69'}), (170, {'item': '$self168.69', 'res': '$170load_attr.70'}), (172, {'start': '$const166.68', 'stop': '$170load_attr.70', 'step': None, 'res': '$172build_slice.72', 'slicevar': '$172build_slice.71'}), (174, {'target': '$temp_last_interaction_in_nu164.67', 'index': '$172build_slice.72', 'value': '$162load_attr.66'}), (176, {'res': '$self176.73'}), (178, {'item': '$self176.73', 'res': '$178load_attr.74'}), (180, {'res': '$temp_last_interaction_type180.75'}), (182, {'res': '$const182.76'}), (184, {'res': '$self184.77'}), (186, {'item': '$self184.77', 'res': '$186load_attr.78'}), (188, {'start': '$const182.76', 'stop': '$186load_attr.78', 'step': None, 'res': '$188build_slice.80', 'slicevar': '$188build_slice.79'}), (190, {'target': '$temp_last_interaction_type180.75', 'index': '$188build_slice.80', 'value': '$178load_attr.74'}), (192, {'res': '$self192.81'}), (194, {'item': '$self192.81', 'res': '$194load_attr.82'}), (196, {'res': '$temp_last_interaction_in_id196.83'}), (198, {'res': '$const198.84'}), (200, {'res': '$self200.85'}), (202, {'item': '$self200.85', 'res': '$202load_attr.86'}), (204, {'start': '$const198.84', 'stop': '$202load_attr.86', 'step': None, 'res': '$204build_slice.88', 'slicevar': '$204build_slice.87'}), (206, {'target': '$temp_last_interaction_in_id196.83', 'index': '$204build_slice.88', 'value': '$194load_attr.82'}), (208, {'res': '$self208.89'}), (210, {'item': '$self208.89', 'res': '$210load_attr.90'}), (212, {'res': '$temp_last_interaction_out_id212.91'}), (214, {'res': '$const214.92'}), (216, {'res': '$self216.93'}), (218, {'item': '$self216.93', 'res': '$218load_attr.94'}), (220, {'start': '$const214.92', 'stop': '$218load_attr.94', 'step': None, 'res': '$220build_slice.96', 'slicevar': '$220build_slice.95'}), (222, {'target': '$temp_last_interaction_out_id212.91', 'index': '$220build_slice.96', 'value': '$210load_attr.90'}), (224, {'res': '$temp_nus224.97'}), (226, {'res': '$self226.98'}), (228, {'target': '$self226.98', 'value': '$temp_nus224.97'}), (230, {'res': '$temp_energies230.99'}), (232, {'res': '$self232.100'}), (234, {'target': '$self232.100', 'value': '$temp_energies230.99'}), (236, {'res': '$temp_last_interaction_in_nu236.101'}), (238, {'res': '$self238.102'}), (240, {'target': '$self238.102', 'value': '$temp_last_interaction_in_nu236.101'}), (242, {'res': '$temp_last_interaction_type242.103'}), (244, {'res': '$self244.104'}), (246, {'target': '$self244.104', 'value': '$temp_last_interaction_type242.103'}), (248, {'res': '$temp_last_interaction_in_id248.105'}), (250, {'res': '$self250.106'}), (252, {'target': '$self250.106', 'value': '$temp_last_interaction_in_id248.105'}), (254, {'res': '$temp_last_interaction_out_id254.107'}), (256, {'res': '$self256.108'}), (258, {'target': '$self256.108', 'value': '$temp_last_interaction_out_id254.107'}), (260, {'res': '$temp_length260.109'}), (262, {'res': '$self262.110'}), (264, {'target': '$self262.110', 'value': '$temp_length260.109'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={266: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=266 nstack_initial=0):
AdaptBlockInfo(insts=((266, {'res': '$nu266.0'}), (268, {'res': '$self268.1'}), (270, {'item': '$self268.1', 'res': '$270load_attr.2'}), (272, {'res': '$self272.3'}), (274, {'item': '$self272.3', 'res': '$274load_attr.4'}), (276, {'target': '$270load_attr.2', 'index': '$274load_attr.4', 'value': '$nu266.0'}), (278, {'res': '$energy278.5'}), (280, {'res': '$self280.6'}), (282, {'item': '$self280.6', 'res': '$282load_attr.7'}), (284, {'res': '$self284.8'}), (286, {'item': '$self284.8', 'res': '$286load_attr.9'}), (288, {'target': '$282load_attr.7', 'index': '$286load_attr.9', 'value': '$energy278.5'}), (290, {'res': '$last_interaction_in_nu290.10'}), (292, {'res': '$self292.11'}), (294, {'item': '$self292.11', 'res': '$294load_attr.12'}), (296, {'res': '$self296.13'}), (298, {'item': '$self296.13', 'res': '$298load_attr.14'}), (300, {'target': '$294load_attr.12', 'index': '$298load_attr.14', 'value': '$last_interaction_in_nu290.10'}), (302, {'res': '$last_interaction_type302.15'}), (304, {'res': '$self304.16'}), (306, {'item': '$self304.16', 'res': '$306load_attr.17'}), (308, {'res': '$self308.18'}), (310, {'item': '$self308.18', 'res': '$310load_attr.19'}), (312, {'target': '$306load_attr.17', 'index': '$310load_attr.19', 'value': '$last_interaction_type302.15'}), (314, {'res': '$last_interaction_in_id314.20'}), (316, {'res': '$self316.21'}), (318, {'item': '$self316.21', 'res': '$318load_attr.22'}), (320, {'res': '$self320.23'}), (322, {'item': '$self320.23', 'res': '$322load_attr.24'}), (324, {'target': '$318load_attr.22', 'index': '$322load_attr.24', 'value': '$last_interaction_in_id314.20'}), (326, {'res': '$last_interaction_out_id326.25'}), (328, {'res': '$self328.26'}), (330, {'item': '$self328.26', 'res': '$330load_attr.27'}), (332, {'res': '$self332.28'}), (334, {'item': '$self332.28', 'res': '$334load_attr.29'}), (336, {'target': '$330load_attr.27', 'index': '$334load_attr.29', 'value': '$last_interaction_out_id326.25'}), (338, {'res': '$self338.30'}), (340, {'orig': ['$self338.30'], 'duped': ['$340dup_top.31']}), (342, {'item': '$340dup_top.31', 'res': '$342load_attr.32'}), (344, {'res': '$const344.33'}), (346, {'lhs': '$342load_attr.32', 'rhs': '$const344.33', 'res': '$346inplace_add.34'}), (350, {'target': '$self338.30', 'value': '$346inplace_add.34'}), (352, {'res': '$const352.35'}), (354, {'retval': '$const352.35', 'castval': '$354return_value.36'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    self = arg(0, name=self)                 ['self']
    nu = arg(1, name=nu)                     ['nu']
    energy = arg(2, name=energy)             ['energy']
    last_interaction_in_nu = arg(3, name=last_interaction_in_nu) ['last_interaction_in_nu']
    last_interaction_type = arg(4, name=last_interaction_type) ['last_interaction_type']
    last_interaction_in_id = arg(5, name=last_interaction_in_id) ['last_interaction_in_id']
    last_interaction_out_id = arg(6, name=last_interaction_out_id) ['last_interaction_out_id']
    $4load_attr.1 = getattr(value=self, attr=idx) ['$4load_attr.1', 'self']
    $8load_attr.3 = getattr(value=self, attr=length) ['$8load_attr.3', 'self']
    $10compare_op.4 = $4load_attr.1 >= $8load_attr.3 ['$10compare_op.4', '$4load_attr.1', '$8load_attr.3']
    bool12 = global(bool: <class 'bool'>)    ['bool12']
    $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, numba_interface.py:240),), kws=(), vararg=None) ['$10compare_op.4', '$12pred', 'bool12']
    branch $12pred, 16, 266                  ['$12pred']
label 16:
    $18load_attr.1 = getattr(value=self, attr=length) ['$18load_attr.1', 'self']
    $const20.2 = const(int, 2)               ['$const20.2']
    $22binary_multiply.3 = $18load_attr.1 * $const20.2 ['$18load_attr.1', '$22binary_multiply.3', '$const20.2']
    $26load_attr.5 = getattr(value=self, attr=number_of_vpackets) ['$26load_attr.5', 'self']
    $28binary_add.6 = $22binary_multiply.3 + $26load_attr.5 ['$22binary_multiply.3', '$26load_attr.5', '$28binary_add.6']
    temp_length = $28binary_add.6            ['$28binary_add.6', 'temp_length']
    $32load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$32load_global.7']
    $34load_attr.8 = getattr(value=$32load_global.7, attr=empty) ['$32load_global.7', '$34load_attr.8']
    $38load_global.10 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$38load_global.10']
    $40load_attr.11 = getattr(value=$38load_global.10, attr=float64) ['$38load_global.10', '$40load_attr.11']
    $44call_function_kw.13 = call $34load_attr.8(temp_length, func=$34load_attr.8, args=[Var(temp_length, numba_interface.py:241)], kws=[('dtype', Var($40load_attr.11, numba_interface.py:242))], vararg=None) ['$34load_attr.8', '$40load_attr.11', '$44call_function_kw.13', 'temp_length']
    temp_nus = $44call_function_kw.13        ['$44call_function_kw.13', 'temp_nus']
    $48load_global.14 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$48load_global.14']
    $50load_attr.15 = getattr(value=$48load_global.14, attr=empty) ['$48load_global.14', '$50load_attr.15']
    $54load_global.17 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$54load_global.17']
    $56load_attr.18 = getattr(value=$54load_global.17, attr=float64) ['$54load_global.17', '$56load_attr.18']
    $60call_function_kw.20 = call $50load_attr.15(temp_length, func=$50load_attr.15, args=[Var(temp_length, numba_interface.py:241)], kws=[('dtype', Var($56load_attr.18, numba_interface.py:243))], vararg=None) ['$50load_attr.15', '$56load_attr.18', '$60call_function_kw.20', 'temp_length']
    temp_energies = $60call_function_kw.20   ['$60call_function_kw.20', 'temp_energies']
    $64load_global.21 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$64load_global.21']
    $66load_attr.22 = getattr(value=$64load_global.21, attr=empty) ['$64load_global.21', '$66load_attr.22']
    $70load_global.24 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$70load_global.24']
    $72load_attr.25 = getattr(value=$70load_global.24, attr=float64) ['$70load_global.24', '$72load_attr.25']
    $76call_function_kw.27 = call $66load_attr.22(temp_length, func=$66load_attr.22, args=[Var(temp_length, numba_interface.py:241)], kws=[('dtype', Var($72load_attr.25, numba_interface.py:244))], vararg=None) ['$66load_attr.22', '$72load_attr.25', '$76call_function_kw.27', 'temp_length']
    temp_last_interaction_in_nu = $76call_function_kw.27 ['$76call_function_kw.27', 'temp_last_interaction_in_nu']
    $80load_global.28 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$80load_global.28']
    $82load_attr.29 = getattr(value=$80load_global.28, attr=empty) ['$80load_global.28', '$82load_attr.29']
    $86load_global.31 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$86load_global.31']
    $88load_attr.32 = getattr(value=$86load_global.31, attr=int64) ['$86load_global.31', '$88load_attr.32']
    $92call_function_kw.34 = call $82load_attr.29(temp_length, func=$82load_attr.29, args=[Var(temp_length, numba_interface.py:241)], kws=[('dtype', Var($88load_attr.32, numba_interface.py:245))], vararg=None) ['$82load_attr.29', '$88load_attr.32', '$92call_function_kw.34', 'temp_length']
    temp_last_interaction_type = $92call_function_kw.34 ['$92call_function_kw.34', 'temp_last_interaction_type']
    $96load_global.35 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$96load_global.35']
    $98load_attr.36 = getattr(value=$96load_global.35, attr=empty) ['$96load_global.35', '$98load_attr.36']
    $102load_global.38 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$102load_global.38']
    $104load_attr.39 = getattr(value=$102load_global.38, attr=int64) ['$102load_global.38', '$104load_attr.39']
    $108call_function_kw.41 = call $98load_attr.36(temp_length, func=$98load_attr.36, args=[Var(temp_length, numba_interface.py:241)], kws=[('dtype', Var($104load_attr.39, numba_interface.py:246))], vararg=None) ['$104load_attr.39', '$108call_function_kw.41', '$98load_attr.36', 'temp_length']
    temp_last_interaction_in_id = $108call_function_kw.41 ['$108call_function_kw.41', 'temp_last_interaction_in_id']
    $112load_global.42 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$112load_global.42']
    $114load_attr.43 = getattr(value=$112load_global.42, attr=empty) ['$112load_global.42', '$114load_attr.43']
    $118load_global.45 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$118load_global.45']
    $120load_attr.46 = getattr(value=$118load_global.45, attr=int64) ['$118load_global.45', '$120load_attr.46']
    $124call_function_kw.48 = call $114load_attr.43(temp_length, func=$114load_attr.43, args=[Var(temp_length, numba_interface.py:241)], kws=[('dtype', Var($120load_attr.46, numba_interface.py:247))], vararg=None) ['$114load_attr.43', '$120load_attr.46', '$124call_function_kw.48', 'temp_length']
    temp_last_interaction_out_id = $124call_function_kw.48 ['$124call_function_kw.48', 'temp_last_interaction_out_id']
    $130load_attr.50 = getattr(value=self, attr=nus) ['$130load_attr.50', 'self']
    $const134.52 = const(NoneType, None)     ['$const134.52']
    $138load_attr.54 = getattr(value=self, attr=length) ['$138load_attr.54', 'self']
    $140build_slice.55 = global(slice: <class 'slice'>) ['$140build_slice.55']
    $140build_slice.56 = call $140build_slice.55($const134.52, $138load_attr.54, func=$140build_slice.55, args=(Var($const134.52, numba_interface.py:248), Var($138load_attr.54, numba_interface.py:248)), kws=(), vararg=None) ['$138load_attr.54', '$140build_slice.55', '$140build_slice.56', '$const134.52']
    temp_nus[$140build_slice.56] = $130load_attr.50 ['$130load_attr.50', '$140build_slice.56', 'temp_nus']
    $146load_attr.58 = getattr(value=self, attr=energies) ['$146load_attr.58', 'self']
    $const150.60 = const(NoneType, None)     ['$const150.60']
    $154load_attr.62 = getattr(value=self, attr=length) ['$154load_attr.62', 'self']
    $156build_slice.63 = global(slice: <class 'slice'>) ['$156build_slice.63']
    $156build_slice.64 = call $156build_slice.63($const150.60, $154load_attr.62, func=$156build_slice.63, args=(Var($const150.60, numba_interface.py:249), Var($154load_attr.62, numba_interface.py:249)), kws=(), vararg=None) ['$154load_attr.62', '$156build_slice.63', '$156build_slice.64', '$const150.60']
    temp_energies[$156build_slice.64] = $146load_attr.58 ['$146load_attr.58', '$156build_slice.64', 'temp_energies']
    $162load_attr.66 = getattr(value=self, attr=last_interaction_in_nu) ['$162load_attr.66', 'self']
    $const166.68 = const(NoneType, None)     ['$const166.68']
    $170load_attr.70 = getattr(value=self, attr=length) ['$170load_attr.70', 'self']
    $172build_slice.71 = global(slice: <class 'slice'>) ['$172build_slice.71']
    $172build_slice.72 = call $172build_slice.71($const166.68, $170load_attr.70, func=$172build_slice.71, args=(Var($const166.68, numba_interface.py:250), Var($170load_attr.70, numba_interface.py:250)), kws=(), vararg=None) ['$170load_attr.70', '$172build_slice.71', '$172build_slice.72', '$const166.68']
    temp_last_interaction_in_nu[$172build_slice.72] = $162load_attr.66 ['$162load_attr.66', '$172build_slice.72', 'temp_last_interaction_in_nu']
    $178load_attr.74 = getattr(value=self, attr=last_interaction_type) ['$178load_attr.74', 'self']
    $const182.76 = const(NoneType, None)     ['$const182.76']
    $186load_attr.78 = getattr(value=self, attr=length) ['$186load_attr.78', 'self']
    $188build_slice.79 = global(slice: <class 'slice'>) ['$188build_slice.79']
    $188build_slice.80 = call $188build_slice.79($const182.76, $186load_attr.78, func=$188build_slice.79, args=(Var($const182.76, numba_interface.py:251), Var($186load_attr.78, numba_interface.py:251)), kws=(), vararg=None) ['$186load_attr.78', '$188build_slice.79', '$188build_slice.80', '$const182.76']
    temp_last_interaction_type[$188build_slice.80] = $178load_attr.74 ['$178load_attr.74', '$188build_slice.80', 'temp_last_interaction_type']
    $194load_attr.82 = getattr(value=self, attr=last_interaction_in_id) ['$194load_attr.82', 'self']
    $const198.84 = const(NoneType, None)     ['$const198.84']
    $202load_attr.86 = getattr(value=self, attr=length) ['$202load_attr.86', 'self']
    $204build_slice.87 = global(slice: <class 'slice'>) ['$204build_slice.87']
    $204build_slice.88 = call $204build_slice.87($const198.84, $202load_attr.86, func=$204build_slice.87, args=(Var($const198.84, numba_interface.py:252), Var($202load_attr.86, numba_interface.py:252)), kws=(), vararg=None) ['$202load_attr.86', '$204build_slice.87', '$204build_slice.88', '$const198.84']
    temp_last_interaction_in_id[$204build_slice.88] = $194load_attr.82 ['$194load_attr.82', '$204build_slice.88', 'temp_last_interaction_in_id']
    $210load_attr.90 = getattr(value=self, attr=last_interaction_out_id) ['$210load_attr.90', 'self']
    $const214.92 = const(NoneType, None)     ['$const214.92']
    $218load_attr.94 = getattr(value=self, attr=length) ['$218load_attr.94', 'self']
    $220build_slice.95 = global(slice: <class 'slice'>) ['$220build_slice.95']
    $220build_slice.96 = call $220build_slice.95($const214.92, $218load_attr.94, func=$220build_slice.95, args=(Var($const214.92, numba_interface.py:253), Var($218load_attr.94, numba_interface.py:253)), kws=(), vararg=None) ['$218load_attr.94', '$220build_slice.95', '$220build_slice.96', '$const214.92']
    temp_last_interaction_out_id[$220build_slice.96] = $210load_attr.90 ['$210load_attr.90', '$220build_slice.96', 'temp_last_interaction_out_id']
    (self).nus = temp_nus                    ['self', 'temp_nus']
    (self).energies = temp_energies          ['self', 'temp_energies']
    (self).last_interaction_in_nu = temp_last_interaction_in_nu ['self', 'temp_last_interaction_in_nu']
    (self).last_interaction_type = temp_last_interaction_type ['self', 'temp_last_interaction_type']
    (self).last_interaction_in_id = temp_last_interaction_in_id ['self', 'temp_last_interaction_in_id']
    (self).last_interaction_out_id = temp_last_interaction_out_id ['self', 'temp_last_interaction_out_id']
    (self).length = temp_length              ['self', 'temp_length']
    jump 266                                 []
label 266:
    $270load_attr.2 = getattr(value=self, attr=nus) ['$270load_attr.2', 'self']
    $274load_attr.4 = getattr(value=self, attr=idx) ['$274load_attr.4', 'self']
    $270load_attr.2[$274load_attr.4] = nu    ['$270load_attr.2', '$274load_attr.4', 'nu']
    $282load_attr.7 = getattr(value=self, attr=energies) ['$282load_attr.7', 'self']
    $286load_attr.9 = getattr(value=self, attr=idx) ['$286load_attr.9', 'self']
    $282load_attr.7[$286load_attr.9] = energy ['$282load_attr.7', '$286load_attr.9', 'energy']
    $294load_attr.12 = getattr(value=self, attr=last_interaction_in_nu) ['$294load_attr.12', 'self']
    $298load_attr.14 = getattr(value=self, attr=idx) ['$298load_attr.14', 'self']
    $294load_attr.12[$298load_attr.14] = last_interaction_in_nu ['$294load_attr.12', '$298load_attr.14', 'last_interaction_in_nu']
    $306load_attr.17 = getattr(value=self, attr=last_interaction_type) ['$306load_attr.17', 'self']
    $310load_attr.19 = getattr(value=self, attr=idx) ['$310load_attr.19', 'self']
    $306load_attr.17[$310load_attr.19] = last_interaction_type ['$306load_attr.17', '$310load_attr.19', 'last_interaction_type']
    $318load_attr.22 = getattr(value=self, attr=last_interaction_in_id) ['$318load_attr.22', 'self']
    $322load_attr.24 = getattr(value=self, attr=idx) ['$322load_attr.24', 'self']
    $318load_attr.22[$322load_attr.24] = last_interaction_in_id ['$318load_attr.22', '$322load_attr.24', 'last_interaction_in_id']
    $330load_attr.27 = getattr(value=self, attr=last_interaction_out_id) ['$330load_attr.27', 'self']
    $334load_attr.29 = getattr(value=self, attr=idx) ['$334load_attr.29', 'self']
    $330load_attr.27[$334load_attr.29] = last_interaction_out_id ['$330load_attr.27', '$334load_attr.29', 'last_interaction_out_id']
    $342load_attr.32 = getattr(value=self, attr=idx) ['$342load_attr.32', 'self']
    $const344.33 = const(int, 1)             ['$const344.33']
    $346inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$342load_attr.32, rhs=$const344.33, static_lhs=Undefined, static_rhs=Undefined) ['$342load_attr.32', '$346inplace_add.34', '$const344.33']
    (self).idx = $346inplace_add.34          ['$346inplace_add.34', 'self']
    $const352.35 = const(NoneType, None)     ['$const352.35']
    $354return_value.36 = cast(value=$const352.35) ['$354return_value.36', '$const352.35']
    return $354return_value.36               ['$354return_value.36']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b60e90>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: nu = arg(1, name=nu)
DEBUG:numba.core.ssa:on stmt: energy = arg(2, name=energy)
DEBUG:numba.core.ssa:on stmt: last_interaction_in_nu = arg(3, name=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: last_interaction_type = arg(4, name=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: last_interaction_in_id = arg(5, name=last_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: last_interaction_out_id = arg(6, name=last_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=self, attr=idx)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=self, attr=length)
DEBUG:numba.core.ssa:on stmt: $10compare_op.4 = $4load_attr.1 >= $8load_attr.3
DEBUG:numba.core.ssa:on stmt: bool12 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $12pred = call bool12($10compare_op.4, func=bool12, args=(Var($10compare_op.4, numba_interface.py:240),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $12pred, 16, 266
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b60e90>
DEBUG:numba.core.ssa:on stmt: $18load_attr.1 = getattr(value=self, attr=length)
DEBUG:numba.core.ssa:on stmt: $const20.2 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.3 = $18load_attr.1 * $const20.2
DEBUG:numba.core.ssa:on stmt: $26load_attr.5 = getattr(value=self, attr=number_of_vpackets)
DEBUG:numba.core.ssa:on stmt: $28binary_add.6 = $22binary_multiply.3 + $26load_attr.5
DEBUG:numba.core.ssa:on stmt: temp_length = $28binary_add.6
DEBUG:numba.core.ssa:on stmt: $32load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $34load_attr.8 = getattr(value=$32load_global.7, attr=empty)
DEBUG:numba.core.ssa:on stmt: $38load_global.10 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.11 = getattr(value=$38load_global.10, attr=float64)
DEBUG:numba.core.ssa:on stmt: $44call_function_kw.13 = call $34load_attr.8(temp_length, func=$34load_attr.8, args=[Var(temp_length, numba_interface.py:241)], kws=[('dtype', Var($40load_attr.11, numba_interface.py:242))], vararg=None)
DEBUG:numba.core.ssa:on stmt: temp_nus = $44call_function_kw.13
DEBUG:numba.core.ssa:on stmt: $48load_global.14 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $50load_attr.15 = getattr(value=$48load_global.14, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.17 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_attr.18 = getattr(value=$54load_global.17, attr=float64)
DEBUG:numba.core.ssa:on stmt: $60call_function_kw.20 = call $50load_attr.15(temp_length, func=$50load_attr.15, args=[Var(temp_length, numba_interface.py:241)], kws=[('dtype', Var($56load_attr.18, numba_interface.py:243))], vararg=None)
DEBUG:numba.core.ssa:on stmt: temp_energies = $60call_function_kw.20
DEBUG:numba.core.ssa:on stmt: $64load_global.21 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.22 = getattr(value=$64load_global.21, attr=empty)
DEBUG:numba.core.ssa:on stmt: $70load_global.24 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.25 = getattr(value=$70load_global.24, attr=float64)
DEBUG:numba.core.ssa:on stmt: $76call_function_kw.27 = call $66load_attr.22(temp_length, func=$66load_attr.22, args=[Var(temp_length, numba_interface.py:241)], kws=[('dtype', Var($72load_attr.25, numba_interface.py:244))], vararg=None)
DEBUG:numba.core.ssa:on stmt: temp_last_interaction_in_nu = $76call_function_kw.27
DEBUG:numba.core.ssa:on stmt: $80load_global.28 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $82load_attr.29 = getattr(value=$80load_global.28, attr=empty)
DEBUG:numba.core.ssa:on stmt: $86load_global.31 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $88load_attr.32 = getattr(value=$86load_global.31, attr=int64)
DEBUG:numba.core.ssa:on stmt: $92call_function_kw.34 = call $82load_attr.29(temp_length, func=$82load_attr.29, args=[Var(temp_length, numba_interface.py:241)], kws=[('dtype', Var($88load_attr.32, numba_interface.py:245))], vararg=None)
DEBUG:numba.core.ssa:on stmt: temp_last_interaction_type = $92call_function_kw.34
DEBUG:numba.core.ssa:on stmt: $96load_global.35 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $98load_attr.36 = getattr(value=$96load_global.35, attr=empty)
DEBUG:numba.core.ssa:on stmt: $102load_global.38 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $104load_attr.39 = getattr(value=$102load_global.38, attr=int64)
DEBUG:numba.core.ssa:on stmt: $108call_function_kw.41 = call $98load_attr.36(temp_length, func=$98load_attr.36, args=[Var(temp_length, numba_interface.py:241)], kws=[('dtype', Var($104load_attr.39, numba_interface.py:246))], vararg=None)
DEBUG:numba.core.ssa:on stmt: temp_last_interaction_in_id = $108call_function_kw.41
DEBUG:numba.core.ssa:on stmt: $112load_global.42 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $114load_attr.43 = getattr(value=$112load_global.42, attr=empty)
DEBUG:numba.core.ssa:on stmt: $118load_global.45 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $120load_attr.46 = getattr(value=$118load_global.45, attr=int64)
DEBUG:numba.core.ssa:on stmt: $124call_function_kw.48 = call $114load_attr.43(temp_length, func=$114load_attr.43, args=[Var(temp_length, numba_interface.py:241)], kws=[('dtype', Var($120load_attr.46, numba_interface.py:247))], vararg=None)
DEBUG:numba.core.ssa:on stmt: temp_last_interaction_out_id = $124call_function_kw.48
DEBUG:numba.core.ssa:on stmt: $130load_attr.50 = getattr(value=self, attr=nus)
DEBUG:numba.core.ssa:on stmt: $const134.52 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $138load_attr.54 = getattr(value=self, attr=length)
DEBUG:numba.core.ssa:on stmt: $140build_slice.55 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $140build_slice.56 = call $140build_slice.55($const134.52, $138load_attr.54, func=$140build_slice.55, args=(Var($const134.52, numba_interface.py:248), Var($138load_attr.54, numba_interface.py:248)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: temp_nus[$140build_slice.56] = $130load_attr.50
DEBUG:numba.core.ssa:on stmt: $146load_attr.58 = getattr(value=self, attr=energies)
DEBUG:numba.core.ssa:on stmt: $const150.60 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $154load_attr.62 = getattr(value=self, attr=length)
DEBUG:numba.core.ssa:on stmt: $156build_slice.63 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $156build_slice.64 = call $156build_slice.63($const150.60, $154load_attr.62, func=$156build_slice.63, args=(Var($const150.60, numba_interface.py:249), Var($154load_attr.62, numba_interface.py:249)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: temp_energies[$156build_slice.64] = $146load_attr.58
DEBUG:numba.core.ssa:on stmt: $162load_attr.66 = getattr(value=self, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $const166.68 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $170load_attr.70 = getattr(value=self, attr=length)
DEBUG:numba.core.ssa:on stmt: $172build_slice.71 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $172build_slice.72 = call $172build_slice.71($const166.68, $170load_attr.70, func=$172build_slice.71, args=(Var($const166.68, numba_interface.py:250), Var($170load_attr.70, numba_interface.py:250)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: temp_last_interaction_in_nu[$172build_slice.72] = $162load_attr.66
DEBUG:numba.core.ssa:on stmt: $178load_attr.74 = getattr(value=self, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $const182.76 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $186load_attr.78 = getattr(value=self, attr=length)
DEBUG:numba.core.ssa:on stmt: $188build_slice.79 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $188build_slice.80 = call $188build_slice.79($const182.76, $186load_attr.78, func=$188build_slice.79, args=(Var($const182.76, numba_interface.py:251), Var($186load_attr.78, numba_interface.py:251)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: temp_last_interaction_type[$188build_slice.80] = $178load_attr.74
DEBUG:numba.core.ssa:on stmt: $194load_attr.82 = getattr(value=self, attr=last_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $const198.84 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $202load_attr.86 = getattr(value=self, attr=length)
DEBUG:numba.core.ssa:on stmt: $204build_slice.87 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $204build_slice.88 = call $204build_slice.87($const198.84, $202load_attr.86, func=$204build_slice.87, args=(Var($const198.84, numba_interface.py:252), Var($202load_attr.86, numba_interface.py:252)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: temp_last_interaction_in_id[$204build_slice.88] = $194load_attr.82
DEBUG:numba.core.ssa:on stmt: $210load_attr.90 = getattr(value=self, attr=last_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $const214.92 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $218load_attr.94 = getattr(value=self, attr=length)
DEBUG:numba.core.ssa:on stmt: $220build_slice.95 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $220build_slice.96 = call $220build_slice.95($const214.92, $218load_attr.94, func=$220build_slice.95, args=(Var($const214.92, numba_interface.py:253), Var($218load_attr.94, numba_interface.py:253)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: temp_last_interaction_out_id[$220build_slice.96] = $210load_attr.90
DEBUG:numba.core.ssa:on stmt: (self).nus = temp_nus
DEBUG:numba.core.ssa:on stmt: (self).energies = temp_energies
DEBUG:numba.core.ssa:on stmt: (self).last_interaction_in_nu = temp_last_interaction_in_nu
DEBUG:numba.core.ssa:on stmt: (self).last_interaction_type = temp_last_interaction_type
DEBUG:numba.core.ssa:on stmt: (self).last_interaction_in_id = temp_last_interaction_in_id
DEBUG:numba.core.ssa:on stmt: (self).last_interaction_out_id = temp_last_interaction_out_id
DEBUG:numba.core.ssa:on stmt: (self).length = temp_length
DEBUG:numba.core.ssa:on stmt: jump 266
DEBUG:numba.core.ssa:==== SSA block analysis pass on 266
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b60e90>
DEBUG:numba.core.ssa:on stmt: $270load_attr.2 = getattr(value=self, attr=nus)
DEBUG:numba.core.ssa:on stmt: $274load_attr.4 = getattr(value=self, attr=idx)
DEBUG:numba.core.ssa:on stmt: $270load_attr.2[$274load_attr.4] = nu
DEBUG:numba.core.ssa:on stmt: $282load_attr.7 = getattr(value=self, attr=energies)
DEBUG:numba.core.ssa:on stmt: $286load_attr.9 = getattr(value=self, attr=idx)
DEBUG:numba.core.ssa:on stmt: $282load_attr.7[$286load_attr.9] = energy
DEBUG:numba.core.ssa:on stmt: $294load_attr.12 = getattr(value=self, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $298load_attr.14 = getattr(value=self, attr=idx)
DEBUG:numba.core.ssa:on stmt: $294load_attr.12[$298load_attr.14] = last_interaction_in_nu
DEBUG:numba.core.ssa:on stmt: $306load_attr.17 = getattr(value=self, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $310load_attr.19 = getattr(value=self, attr=idx)
DEBUG:numba.core.ssa:on stmt: $306load_attr.17[$310load_attr.19] = last_interaction_type
DEBUG:numba.core.ssa:on stmt: $318load_attr.22 = getattr(value=self, attr=last_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $322load_attr.24 = getattr(value=self, attr=idx)
DEBUG:numba.core.ssa:on stmt: $318load_attr.22[$322load_attr.24] = last_interaction_in_id
DEBUG:numba.core.ssa:on stmt: $330load_attr.27 = getattr(value=self, attr=last_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $334load_attr.29 = getattr(value=self, attr=idx)
DEBUG:numba.core.ssa:on stmt: $330load_attr.27[$334load_attr.29] = last_interaction_out_id
DEBUG:numba.core.ssa:on stmt: $342load_attr.32 = getattr(value=self, attr=idx)
DEBUG:numba.core.ssa:on stmt: $const344.33 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $346inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$342load_attr.32, rhs=$const344.33, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: (self).idx = $346inplace_add.34
DEBUG:numba.core.ssa:on stmt: $const352.35 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $354return_value.36 = cast(value=$const352.35)
DEBUG:numba.core.ssa:on stmt: return $354return_value.36
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102load_global.38': [<numba.core.ir.Assign object at 0x7f6e46167350>],
             '$104load_attr.39': [<numba.core.ir.Assign object at 0x7f6e46167290>],
             '$108call_function_kw.41': [<numba.core.ir.Assign object at 0x7f6e46167dd0>],
             '$10compare_op.4': [<numba.core.ir.Assign object at 0x7f6e45a8ed90>],
             '$112load_global.42': [<numba.core.ir.Assign object at 0x7f6e46167ed0>],
             '$114load_attr.43': [<numba.core.ir.Assign object at 0x7f6e46167f50>],
             '$118load_global.45': [<numba.core.ir.Assign object at 0x7f6e46167750>],
             '$120load_attr.46': [<numba.core.ir.Assign object at 0x7f6e46167310>],
             '$124call_function_kw.48': [<numba.core.ir.Assign object at 0x7f6e46167850>],
             '$12pred': [<numba.core.ir.Assign object at 0x7f6e45a8efd0>],
             '$130load_attr.50': [<numba.core.ir.Assign object at 0x7f6e46167090>],
             '$138load_attr.54': [<numba.core.ir.Assign object at 0x7f6e45b78750>],
             '$140build_slice.55': [<numba.core.ir.Assign object at 0x7f6e45b784d0>],
             '$140build_slice.56': [<numba.core.ir.Assign object at 0x7f6e45b78a90>],
             '$146load_attr.58': [<numba.core.ir.Assign object at 0x7f6e45b78550>],
             '$154load_attr.62': [<numba.core.ir.Assign object at 0x7f6e45b78e10>],
             '$156build_slice.63': [<numba.core.ir.Assign object at 0x7f6e45b78d50>],
             '$156build_slice.64': [<numba.core.ir.Assign object at 0x7f6e45b78890>],
             '$162load_attr.66': [<numba.core.ir.Assign object at 0x7f6e45b78bd0>],
             '$170load_attr.70': [<numba.core.ir.Assign object at 0x7f6e462c7710>],
             '$172build_slice.71': [<numba.core.ir.Assign object at 0x7f6e462c7950>],
             '$172build_slice.72': [<numba.core.ir.Assign object at 0x7f6e462c7b90>],
             '$178load_attr.74': [<numba.core.ir.Assign object at 0x7f6e462ab350>],
             '$186load_attr.78': [<numba.core.ir.Assign object at 0x7f6e45c17350>],
             '$188build_slice.79': [<numba.core.ir.Assign object at 0x7f6e45b138d0>],
             '$188build_slice.80': [<numba.core.ir.Assign object at 0x7f6e45b13750>],
             '$18load_attr.1': [<numba.core.ir.Assign object at 0x7f6e46020550>],
             '$194load_attr.82': [<numba.core.ir.Assign object at 0x7f6e45c1bc50>],
             '$202load_attr.86': [<numba.core.ir.Assign object at 0x7f6e463118d0>],
             '$204build_slice.87': [<numba.core.ir.Assign object at 0x7f6e463119d0>],
             '$204build_slice.88': [<numba.core.ir.Assign object at 0x7f6e46311a90>],
             '$210load_attr.90': [<numba.core.ir.Assign object at 0x7f6e46311cd0>],
             '$218load_attr.94': [<numba.core.ir.Assign object at 0x7f6e45b71090>],
             '$220build_slice.95': [<numba.core.ir.Assign object at 0x7f6e45b71190>],
             '$220build_slice.96': [<numba.core.ir.Assign object at 0x7f6e45b71250>],
             '$22binary_multiply.3': [<numba.core.ir.Assign object at 0x7f6e46326810>],
             '$26load_attr.5': [<numba.core.ir.Assign object at 0x7f6e463264d0>],
             '$270load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45b78c50>],
             '$274load_attr.4': [<numba.core.ir.Assign object at 0x7f6e46311fd0>],
             '$282load_attr.7': [<numba.core.ir.Assign object at 0x7f6e45b71a90>],
             '$286load_attr.9': [<numba.core.ir.Assign object at 0x7f6e462bc290>],
             '$28binary_add.6': [<numba.core.ir.Assign object at 0x7f6e46326a10>],
             '$294load_attr.12': [<numba.core.ir.Assign object at 0x7f6e45b74350>],
             '$298load_attr.14': [<numba.core.ir.Assign object at 0x7f6e45b744d0>],
             '$306load_attr.17': [<numba.core.ir.Assign object at 0x7f6e45b74750>],
             '$310load_attr.19': [<numba.core.ir.Assign object at 0x7f6e45b748d0>],
             '$318load_attr.22': [<numba.core.ir.Assign object at 0x7f6e45b74bd0>],
             '$322load_attr.24': [<numba.core.ir.Assign object at 0x7f6e45b74ed0>],
             '$32load_global.7': [<numba.core.ir.Assign object at 0x7f6e46326d50>],
             '$330load_attr.27': [<numba.core.ir.Assign object at 0x7f6e45b62250>],
             '$334load_attr.29': [<numba.core.ir.Assign object at 0x7f6e45b62410>],
             '$342load_attr.32': [<numba.core.ir.Assign object at 0x7f6e45b62710>],
             '$346inplace_add.34': [<numba.core.ir.Assign object at 0x7f6e45b62910>],
             '$34load_attr.8': [<numba.core.ir.Assign object at 0x7f6e46326ed0>],
             '$354return_value.36': [<numba.core.ir.Assign object at 0x7f6e45b62bd0>],
             '$38load_global.10': [<numba.core.ir.Assign object at 0x7f6e46326f90>],
             '$40load_attr.11': [<numba.core.ir.Assign object at 0x7f6e46187190>],
             '$44call_function_kw.13': [<numba.core.ir.Assign object at 0x7f6e46187e90>],
             '$48load_global.14': [<numba.core.ir.Assign object at 0x7f6e46187dd0>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45caccd0>],
             '$50load_attr.15': [<numba.core.ir.Assign object at 0x7f6e46187c10>],
             '$54load_global.17': [<numba.core.ir.Assign object at 0x7f6e461878d0>],
             '$56load_attr.18': [<numba.core.ir.Assign object at 0x7f6e461877d0>],
             '$60call_function_kw.20': [<numba.core.ir.Assign object at 0x7f6e46187390>],
             '$64load_global.21': [<numba.core.ir.Assign object at 0x7f6e46187990>],
             '$66load_attr.22': [<numba.core.ir.Assign object at 0x7f6e461874d0>],
             '$70load_global.24': [<numba.core.ir.Assign object at 0x7f6e461682d0>],
             '$72load_attr.25': [<numba.core.ir.Assign object at 0x7f6e46168410>],
             '$76call_function_kw.27': [<numba.core.ir.Assign object at 0x7f6e46168510>],
             '$80load_global.28': [<numba.core.ir.Assign object at 0x7f6e461681d0>],
             '$82load_attr.29': [<numba.core.ir.Assign object at 0x7f6e46168f10>],
             '$86load_global.31': [<numba.core.ir.Assign object at 0x7f6e46168b90>],
             '$88load_attr.32': [<numba.core.ir.Assign object at 0x7f6e46168c10>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f6e45e08d10>],
             '$92call_function_kw.34': [<numba.core.ir.Assign object at 0x7f6e46168cd0>],
             '$96load_global.35': [<numba.core.ir.Assign object at 0x7f6e46168790>],
             '$98load_attr.36': [<numba.core.ir.Assign object at 0x7f6e461688d0>],
             '$const134.52': [<numba.core.ir.Assign object at 0x7f6e462b4090>],
             '$const150.60': [<numba.core.ir.Assign object at 0x7f6e45b78e90>],
             '$const166.68': [<numba.core.ir.Assign object at 0x7f6e46295f50>],
             '$const182.76': [<numba.core.ir.Assign object at 0x7f6e45b11fd0>],
             '$const198.84': [<numba.core.ir.Assign object at 0x7f6e46311450>],
             '$const20.2': [<numba.core.ir.Assign object at 0x7f6e4675e510>],
             '$const214.92': [<numba.core.ir.Assign object at 0x7f6e46311e90>],
             '$const344.33': [<numba.core.ir.Assign object at 0x7f6e45b62810>],
             '$const352.35': [<numba.core.ir.Assign object at 0x7f6e45b62a90>],
             'bool12': [<numba.core.ir.Assign object at 0x7f6e45a8e6d0>],
             'energy': [<numba.core.ir.Assign object at 0x7f6e46311710>],
             'last_interaction_in_id': [<numba.core.ir.Assign object at 0x7f6e45de7e50>],
             'last_interaction_in_nu': [<numba.core.ir.Assign object at 0x7f6e46311750>],
             'last_interaction_out_id': [<numba.core.ir.Assign object at 0x7f6e45d56990>],
             'last_interaction_type': [<numba.core.ir.Assign object at 0x7f6e46311810>],
             'nu': [<numba.core.ir.Assign object at 0x7f6e463115d0>],
             'self': [<numba.core.ir.Assign object at 0x7f6e46311510>],
             'temp_energies': [<numba.core.ir.Assign object at 0x7f6e46187490>],
             'temp_last_interaction_in_id': [<numba.core.ir.Assign object at 0x7f6e46167b10>],
             'temp_last_interaction_in_nu': [<numba.core.ir.Assign object at 0x7f6e46168150>],
             'temp_last_interaction_out_id': [<numba.core.ir.Assign object at 0x7f6e46167710>],
             'temp_last_interaction_type': [<numba.core.ir.Assign object at 0x7f6e46168f90>],
             'temp_length': [<numba.core.ir.Assign object at 0x7f6e46326050>],
             'temp_nus': [<numba.core.ir.Assign object at 0x7f6e46187d50>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=357)
           2	LOAD_FAST(arg=1, lineno=357)
           4	LOAD_ATTR(arg=0, lineno=357)
           6	LOAD_FAST(arg=0, lineno=357)
           8	LOAD_ATTR(arg=1, lineno=357)
          10	BINARY_SUBSCR(arg=None, lineno=357)
          12	STORE_FAST(arg=4, lineno=357)
          14	LOAD_FAST(arg=1, lineno=358)
          16	LOAD_ATTR(arg=2, lineno=358)
          18	LOAD_FAST(arg=0, lineno=358)
          20	LOAD_ATTR(arg=1, lineno=358)
          22	BINARY_SUBSCR(arg=None, lineno=358)
          24	STORE_FAST(arg=5, lineno=358)
          26	LOAD_GLOBAL(arg=3, lineno=360)
          28	LOAD_FAST(arg=0, lineno=361)
          30	LOAD_ATTR(arg=4, lineno=361)
          32	LOAD_FAST(arg=0, lineno=361)
          34	LOAD_ATTR(arg=5, lineno=361)
          36	LOAD_FAST(arg=4, lineno=361)
          38	LOAD_FAST(arg=5, lineno=361)
          40	CALL_FUNCTION(arg=4, lineno=361)
          42	UNPACK_SEQUENCE(arg=2, lineno=361)
          44	STORE_FAST(arg=6, lineno=361)
          46	STORE_FAST(arg=7, lineno=361)
          48	LOAD_FAST(arg=0, lineno=365)
          50	LOAD_ATTR(arg=6, lineno=365)
          52	STORE_FAST(arg=8, lineno=365)
          54	LOAD_GLOBAL(arg=7, lineno=368)
          56	LOAD_METHOD(arg=8, lineno=368)
          58	LOAD_GLOBAL(arg=7, lineno=368)
          60	LOAD_ATTR(arg=9, lineno=368)
          62	LOAD_METHOD(arg=9, lineno=368)
          64	CALL_METHOD(arg=0, lineno=368)
          66	CALL_METHOD(arg=1, lineno=368)
          68	UNARY_NEGATIVE(arg=None, lineno=368)
          70	STORE_FAST(arg=9, lineno=368)
          72	LOAD_CONST(arg=1, lineno=369)
          74	STORE_FAST(arg=10, lineno=369)
          76	LOAD_FAST(arg=2, lineno=373)
          78	LOAD_ATTR(arg=10, lineno=373)
          80	LOAD_FAST(arg=0, lineno=374)
          82	LOAD_ATTR(arg=1, lineno=374)
          84	BINARY_SUBSCR(arg=None, lineno=374)
          86	STORE_FAST(arg=11, lineno=374)
          88	LOAD_GLOBAL(arg=11, lineno=376)
          90	LOAD_FAST(arg=11, lineno=377)
          92	LOAD_FAST(arg=9, lineno=377)
          94	CALL_FUNCTION(arg=2, lineno=377)
          96	STORE_FAST(arg=12, lineno=377)
          98	LOAD_GLOBAL(arg=12, lineno=381)
         100	LOAD_FAST(arg=0, lineno=382)
         102	LOAD_ATTR(arg=4, lineno=382)
         104	LOAD_FAST(arg=0, lineno=382)
         106	LOAD_ATTR(arg=5, lineno=382)
         108	LOAD_FAST(arg=1, lineno=382)
         110	LOAD_ATTR(arg=13, lineno=382)
         112	CALL_FUNCTION(arg=3, lineno=382)
         114	STORE_FAST(arg=13, lineno=382)
         116	LOAD_FAST(arg=0, lineno=384)
         118	LOAD_ATTR(arg=14, lineno=384)
         120	LOAD_FAST(arg=13, lineno=384)
         122	BINARY_MULTIPLY(arg=None, lineno=384)
         124	STORE_FAST(arg=14, lineno=384)
         126	LOAD_FAST(arg=8, lineno=386)
         128	STORE_FAST(arg=15, lineno=386)
         130	LOAD_GLOBAL(arg=15, lineno=388)
         132	LOAD_FAST(arg=2, lineno=388)
         134	LOAD_ATTR(arg=16, lineno=388)
         136	CALL_FUNCTION(arg=1, lineno=388)
         138	LOAD_CONST(arg=2, lineno=388)
         140	BINARY_SUBTRACT(arg=None, lineno=388)
         142	STORE_FAST(arg=16, lineno=388)
         144	SETUP_LOOP(arg=380, lineno=390)
         148	LOAD_GLOBAL(arg=17, lineno=390)
         150	LOAD_FAST(arg=8, lineno=390)
         152	LOAD_GLOBAL(arg=15, lineno=390)
         154	LOAD_FAST(arg=2, lineno=390)
         156	LOAD_ATTR(arg=16, lineno=390)
         158	CALL_FUNCTION(arg=1, lineno=390)
         160	CALL_FUNCTION(arg=2, lineno=390)
         162	GET_ITER(arg=None, lineno=390)
>        164	FOR_ITER(arg=298, lineno=390)
         168	STORE_FAST(arg=15, lineno=390)
         170	LOAD_FAST(arg=2, lineno=393)
         172	LOAD_ATTR(arg=16, lineno=393)
         174	LOAD_FAST(arg=15, lineno=393)
         176	BINARY_SUBSCR(arg=None, lineno=393)
         178	STORE_FAST(arg=17, lineno=393)
         180	LOAD_FAST(arg=2, lineno=394)
         182	LOAD_ATTR(arg=16, lineno=394)
         184	LOAD_FAST(arg=15, lineno=394)
         186	LOAD_CONST(arg=2, lineno=394)
         188	BINARY_SUBTRACT(arg=None, lineno=394)
         190	BINARY_SUBSCR(arg=None, lineno=394)
         192	STORE_FAST(arg=18, lineno=394)
         194	LOAD_FAST(arg=2, lineno=397)
         196	LOAD_ATTR(arg=18, lineno=397)
         198	LOAD_FAST(arg=15, lineno=398)
         200	LOAD_FAST(arg=0, lineno=398)
         202	LOAD_ATTR(arg=1, lineno=398)
         204	BUILD_TUPLE(arg=2, lineno=398)
         206	BINARY_SUBSCR(arg=None, lineno=398)
         208	STORE_FAST(arg=19, lineno=398)
         210	LOAD_FAST(arg=10, lineno=402)
         212	LOAD_FAST(arg=19, lineno=402)
         214	INPLACE_ADD(arg=None, lineno=402)
         216	STORE_FAST(arg=10, lineno=402)
         218	LOAD_FAST(arg=15, lineno=406)
         220	LOAD_FAST(arg=16, lineno=406)
         222	COMPARE_OP(arg=2, lineno=406)
         224	STORE_FAST(arg=20, lineno=406)
         226	LOAD_GLOBAL(arg=19, lineno=408)
         228	LOAD_FAST(arg=0, lineno=409)
         230	LOAD_FAST(arg=14, lineno=410)
         232	LOAD_FAST(arg=20, lineno=411)
         234	LOAD_FAST(arg=17, lineno=412)
         236	LOAD_FAST(arg=1, lineno=413)
         238	LOAD_ATTR(arg=13, lineno=413)
         240	CALL_FUNCTION(arg=5, lineno=413)
         242	STORE_FAST(arg=21, lineno=413)
         244	LOAD_GLOBAL(arg=20, lineno=417)
         246	LOAD_FAST(arg=11, lineno=418)
         248	LOAD_FAST(arg=21, lineno=418)
         250	CALL_FUNCTION(arg=2, lineno=418)
         252	STORE_FAST(arg=22, lineno=418)
         254	LOAD_FAST(arg=10, lineno=422)
         256	LOAD_FAST(arg=22, lineno=422)
         258	BINARY_ADD(arg=None, lineno=422)
         260	STORE_FAST(arg=23, lineno=422)
         262	LOAD_FAST(arg=6, lineno=425)
         264	LOAD_FAST(arg=21, lineno=425)
         266	COMPARE_OP(arg=1, lineno=425)
         268	POP_JUMP_IF_FALSE(arg=310, lineno=425)
         272	LOAD_FAST(arg=6, lineno=426)
         274	LOAD_FAST(arg=12, lineno=426)
         276	COMPARE_OP(arg=1, lineno=426)
         278	POP_JUMP_IF_FALSE(arg=310, lineno=426)
         282	LOAD_FAST(arg=21, lineno=427)
         284	LOAD_CONST(arg=1, lineno=427)
         286	COMPARE_OP(arg=3, lineno=427)
         288	POP_JUMP_IF_FALSE(arg=310, lineno=427)
         292	LOAD_GLOBAL(arg=21, lineno=428)
         294	LOAD_ATTR(arg=22, lineno=428)
         296	STORE_FAST(arg=24, lineno=428)
         298	LOAD_FAST(arg=15, lineno=429)
         300	LOAD_FAST(arg=0, lineno=429)
         302	STORE_ATTR(arg=6, lineno=429)
         304	LOAD_FAST(arg=6, lineno=430)
         306	STORE_FAST(arg=25, lineno=430)
         308	BREAK_LOOP(arg=None, lineno=431)
>        310	LOAD_FAST(arg=12, lineno=434)
         312	LOAD_FAST(arg=21, lineno=434)
         314	COMPARE_OP(arg=0, lineno=434)
         316	POP_JUMP_IF_FALSE(arg=358, lineno=434)
         320	LOAD_FAST(arg=12, lineno=435)
         322	LOAD_FAST(arg=6, lineno=435)
         324	COMPARE_OP(arg=0, lineno=435)
         326	POP_JUMP_IF_FALSE(arg=358, lineno=435)
         330	LOAD_FAST(arg=21, lineno=436)
         332	LOAD_CONST(arg=1, lineno=436)
         334	COMPARE_OP(arg=3, lineno=436)
         336	POP_JUMP_IF_FALSE(arg=358, lineno=436)
         340	LOAD_GLOBAL(arg=21, lineno=437)
         342	LOAD_ATTR(arg=23, lineno=437)
         344	STORE_FAST(arg=24, lineno=437)
         346	LOAD_FAST(arg=12, lineno=439)
         348	STORE_FAST(arg=25, lineno=439)
         350	LOAD_FAST(arg=15, lineno=440)
         352	LOAD_FAST(arg=0, lineno=440)
         354	STORE_ATTR(arg=6, lineno=440)
         356	BREAK_LOOP(arg=None, lineno=441)
>        358	LOAD_GLOBAL(arg=24, lineno=447)
         360	LOAD_FAST(arg=3, lineno=448)
         362	LOAD_FAST(arg=0, lineno=449)
         364	LOAD_FAST(arg=15, lineno=450)
         366	LOAD_FAST(arg=21, lineno=451)
         368	LOAD_FAST(arg=1, lineno=452)
         370	LOAD_ATTR(arg=13, lineno=452)
         372	CALL_FUNCTION(arg=5, lineno=452)
         374	POP_TOP(arg=None, lineno=452)
         376	LOAD_FAST(arg=23, lineno=456)
         378	LOAD_FAST(arg=9, lineno=456)
         380	COMPARE_OP(arg=4, lineno=456)
         382	POP_JUMP_IF_FALSE(arg=426, lineno=456)
         386	LOAD_GLOBAL(arg=25, lineno=457)
         388	LOAD_ATTR(arg=26, lineno=457)
         390	POP_JUMP_IF_TRUE(arg=426, lineno=457)
         394	LOAD_GLOBAL(arg=21, lineno=459)
         396	LOAD_ATTR(arg=27, lineno=459)
         398	STORE_FAST(arg=24, lineno=459)
         400	LOAD_FAST(arg=0, lineno=460)
         402	LOAD_ATTR(arg=14, lineno=460)
         404	LOAD_FAST(arg=0, lineno=460)
         406	STORE_ATTR(arg=28, lineno=460)
         408	LOAD_FAST(arg=15, lineno=461)
         410	LOAD_FAST(arg=0, lineno=461)
         412	STORE_ATTR(arg=29, lineno=461)
         414	LOAD_FAST(arg=15, lineno=462)
         416	LOAD_FAST(arg=0, lineno=462)
         418	STORE_ATTR(arg=6, lineno=462)
         420	LOAD_FAST(arg=21, lineno=463)
         422	STORE_FAST(arg=25, lineno=463)
         424	BREAK_LOOP(arg=None, lineno=464)
>        426	LOAD_FAST(arg=20, lineno=466)
         428	POP_JUMP_IF_TRUE(arg=450, lineno=466)
         432	LOAD_GLOBAL(arg=30, lineno=467)
         434	LOAD_FAST(arg=0, lineno=468)
         436	LOAD_FAST(arg=15, lineno=468)
         438	LOAD_CONST(arg=2, lineno=468)
         440	BINARY_ADD(arg=None, lineno=468)
         442	LOAD_FAST(arg=17, lineno=468)
         444	LOAD_FAST(arg=2, lineno=468)
         446	CALL_FUNCTION(arg=4, lineno=468)
         448	POP_TOP(arg=None, lineno=468)
>        450	LOAD_GLOBAL(arg=11, lineno=473)
         452	LOAD_FAST(arg=11, lineno=474)
         454	LOAD_FAST(arg=9, lineno=474)
         456	LOAD_FAST(arg=10, lineno=474)
         458	BINARY_SUBTRACT(arg=None, lineno=474)
         460	CALL_FUNCTION(arg=2, lineno=474)
         462	STORE_FAST(arg=12, lineno=474)
         464	JUMP_ABSOLUTE(arg=164, lineno=474)
>        466	POP_BLOCK(arg=None, lineno=474)
         468	LOAD_FAST(arg=15, lineno=480)
         470	LOAD_GLOBAL(arg=15, lineno=480)
         472	LOAD_FAST(arg=2, lineno=480)
         474	LOAD_ATTR(arg=16, lineno=480)
         476	CALL_FUNCTION(arg=1, lineno=480)
         478	LOAD_CONST(arg=2, lineno=480)
         480	BINARY_SUBTRACT(arg=None, lineno=480)
         482	COMPARE_OP(arg=2, lineno=480)
         484	POP_JUMP_IF_FALSE(arg=496, lineno=480)
         488	LOAD_FAST(arg=15, lineno=482)
         490	LOAD_CONST(arg=2, lineno=482)
         492	INPLACE_ADD(arg=None, lineno=482)
         494	STORE_FAST(arg=15, lineno=482)
>        496	LOAD_FAST(arg=12, lineno=483)
         498	LOAD_FAST(arg=6, lineno=483)
         500	COMPARE_OP(arg=0, lineno=483)
         502	POP_JUMP_IF_FALSE(arg=518, lineno=483)
         506	LOAD_FAST(arg=12, lineno=484)
         508	STORE_FAST(arg=25, lineno=484)
         510	LOAD_GLOBAL(arg=21, lineno=485)
         512	LOAD_ATTR(arg=23, lineno=485)
         514	STORE_FAST(arg=24, lineno=485)
         516	JUMP_FORWARD(arg=10, lineno=485)
>        518	LOAD_FAST(arg=6, lineno=488)
         520	STORE_FAST(arg=25, lineno=488)
         522	LOAD_GLOBAL(arg=21, lineno=489)
         524	LOAD_ATTR(arg=22, lineno=489)
         526	STORE_FAST(arg=24, lineno=489)
>        528	LOAD_FAST(arg=25, lineno=493)
         530	LOAD_FAST(arg=24, lineno=493)
         532	LOAD_FAST(arg=7, lineno=493)
         534	BUILD_TUPLE(arg=3, lineno=493)
         536	RETURN_VALUE(arg=None, lineno=493)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=357)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=357)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=357)
DEBUG:numba.core.byteflow:stack ['$numba_model2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=357)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=357)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$r_packet6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=357)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_FAST(arg=4, lineno=357)
DEBUG:numba.core.byteflow:stack ['$10binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=358)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_ATTR(arg=2, lineno=358)
DEBUG:numba.core.byteflow:stack ['$numba_model14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=358)
DEBUG:numba.core.byteflow:stack ['$16load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_ATTR(arg=1, lineno=358)
DEBUG:numba.core.byteflow:stack ['$16load_attr.6', '$r_packet18.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=358)
DEBUG:numba.core.byteflow:stack ['$16load_attr.6', '$20load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_FAST(arg=5, lineno=358)
DEBUG:numba.core.byteflow:stack ['$22binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_GLOBAL(arg=3, lineno=360)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=361)
DEBUG:numba.core.byteflow:stack ['$26load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=4, lineno=361)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$r_packet28.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=361)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_ATTR(arg=5, lineno=361)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12', '$r_packet32.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=361)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12', '$34load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=5, lineno=361)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12', '$34load_attr.14', '$r_inner36.15']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=CALL_FUNCTION(arg=4, lineno=361)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12', '$34load_attr.14', '$r_inner36.15', '$r_outer38.16']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=UNPACK_SEQUENCE(arg=2, lineno=361)
DEBUG:numba.core.byteflow:stack ['$40call_function.17']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_FAST(arg=6, lineno=361)
DEBUG:numba.core.byteflow:stack ['$42unpack_sequence.19', '$42unpack_sequence.18']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=7, lineno=361)
DEBUG:numba.core.byteflow:stack ['$42unpack_sequence.19']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=365)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_ATTR(arg=6, lineno=365)
DEBUG:numba.core.byteflow:stack ['$r_packet48.21']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=STORE_FAST(arg=8, lineno=365)
DEBUG:numba.core.byteflow:stack ['$50load_attr.22']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=7, lineno=368)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_METHOD(arg=8, lineno=368)
DEBUG:numba.core.byteflow:stack ['$54load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_GLOBAL(arg=7, lineno=368)
DEBUG:numba.core.byteflow:stack ['$56load_method.24']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_ATTR(arg=9, lineno=368)
DEBUG:numba.core.byteflow:stack ['$56load_method.24', '$58load_global.25']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_METHOD(arg=9, lineno=368)
DEBUG:numba.core.byteflow:stack ['$56load_method.24', '$60load_attr.26']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=CALL_METHOD(arg=0, lineno=368)
DEBUG:numba.core.byteflow:stack ['$56load_method.24', '$62load_method.27']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=CALL_METHOD(arg=1, lineno=368)
DEBUG:numba.core.byteflow:stack ['$56load_method.24', '$64call_method.28']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=UNARY_NEGATIVE(arg=None, lineno=368)
DEBUG:numba.core.byteflow:stack ['$66call_method.29']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=STORE_FAST(arg=9, lineno=368)
DEBUG:numba.core.byteflow:stack ['$68unary_negative.30']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_CONST(arg=1, lineno=369)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_FAST(arg=10, lineno=369)
DEBUG:numba.core.byteflow:stack ['$const72.31']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=2, lineno=373)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_ATTR(arg=10, lineno=373)
DEBUG:numba.core.byteflow:stack ['$numba_plasma76.32']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=374)
DEBUG:numba.core.byteflow:stack ['$78load_attr.33']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_ATTR(arg=1, lineno=374)
DEBUG:numba.core.byteflow:stack ['$78load_attr.33', '$r_packet80.34']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=BINARY_SUBSCR(arg=None, lineno=374)
DEBUG:numba.core.byteflow:stack ['$78load_attr.33', '$82load_attr.35']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=STORE_FAST(arg=11, lineno=374)
DEBUG:numba.core.byteflow:stack ['$84binary_subscr.36']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_GLOBAL(arg=11, lineno=376)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=11, lineno=377)
DEBUG:numba.core.byteflow:stack ['$88load_global.37']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=9, lineno=377)
DEBUG:numba.core.byteflow:stack ['$88load_global.37', '$cur_electron_density90.38']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=CALL_FUNCTION(arg=2, lineno=377)
DEBUG:numba.core.byteflow:stack ['$88load_global.37', '$cur_electron_density90.38', '$tau_event92.39']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=STORE_FAST(arg=12, lineno=377)
DEBUG:numba.core.byteflow:stack ['$94call_function.40']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_GLOBAL(arg=12, lineno=381)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=0, lineno=382)
DEBUG:numba.core.byteflow:stack ['$98load_global.41']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_ATTR(arg=4, lineno=382)
DEBUG:numba.core.byteflow:stack ['$98load_global.41', '$r_packet100.42']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=382)
DEBUG:numba.core.byteflow:stack ['$98load_global.41', '$102load_attr.43']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_ATTR(arg=5, lineno=382)
DEBUG:numba.core.byteflow:stack ['$98load_global.41', '$102load_attr.43', '$r_packet104.44']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=1, lineno=382)
DEBUG:numba.core.byteflow:stack ['$98load_global.41', '$102load_attr.43', '$106load_attr.45']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_ATTR(arg=13, lineno=382)
DEBUG:numba.core.byteflow:stack ['$98load_global.41', '$102load_attr.43', '$106load_attr.45', '$numba_model108.46']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=CALL_FUNCTION(arg=3, lineno=382)
DEBUG:numba.core.byteflow:stack ['$98load_global.41', '$102load_attr.43', '$106load_attr.45', '$110load_attr.47']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=STORE_FAST(arg=13, lineno=382)
DEBUG:numba.core.byteflow:stack ['$112call_function.48']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=0, lineno=384)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_ATTR(arg=14, lineno=384)
DEBUG:numba.core.byteflow:stack ['$r_packet116.49']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=13, lineno=384)
DEBUG:numba.core.byteflow:stack ['$118load_attr.50']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=BINARY_MULTIPLY(arg=None, lineno=384)
DEBUG:numba.core.byteflow:stack ['$118load_attr.50', '$doppler_factor120.51']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=STORE_FAST(arg=14, lineno=384)
DEBUG:numba.core.byteflow:stack ['$122binary_multiply.52']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=8, lineno=386)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=STORE_FAST(arg=15, lineno=386)
DEBUG:numba.core.byteflow:stack ['$start_line_id126.53']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_GLOBAL(arg=15, lineno=388)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_FAST(arg=2, lineno=388)
DEBUG:numba.core.byteflow:stack ['$130load_global.54']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_ATTR(arg=16, lineno=388)
DEBUG:numba.core.byteflow:stack ['$130load_global.54', '$numba_plasma132.55']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=CALL_FUNCTION(arg=1, lineno=388)
DEBUG:numba.core.byteflow:stack ['$130load_global.54', '$134load_attr.56']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_CONST(arg=2, lineno=388)
DEBUG:numba.core.byteflow:stack ['$136call_function.57']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=BINARY_SUBTRACT(arg=None, lineno=388)
DEBUG:numba.core.byteflow:stack ['$136call_function.57', '$const138.58']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=STORE_FAST(arg=16, lineno=388)
DEBUG:numba.core.byteflow:stack ['$140binary_subtract.59']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=144, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=144 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=144, inst=SETUP_LOOP(arg=380, lineno=390)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_GLOBAL(arg=17, lineno=390)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_FAST(arg=8, lineno=390)
DEBUG:numba.core.byteflow:stack ['$148load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_GLOBAL(arg=15, lineno=390)
DEBUG:numba.core.byteflow:stack ['$148load_global.0', '$start_line_id150.1']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=2, lineno=390)
DEBUG:numba.core.byteflow:stack ['$148load_global.0', '$start_line_id150.1', '$152load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_ATTR(arg=16, lineno=390)
DEBUG:numba.core.byteflow:stack ['$148load_global.0', '$start_line_id150.1', '$152load_global.2', '$numba_plasma154.3']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=CALL_FUNCTION(arg=1, lineno=390)
DEBUG:numba.core.byteflow:stack ['$148load_global.0', '$start_line_id150.1', '$152load_global.2', '$156load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=CALL_FUNCTION(arg=2, lineno=390)
DEBUG:numba.core.byteflow:stack ['$148load_global.0', '$start_line_id150.1', '$158call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=GET_ITER(arg=None, lineno=390)
DEBUG:numba.core.byteflow:stack ['$160call_function.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=164, stack=('$162get_iter.7',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=164 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi164.0']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=FOR_ITER(arg=298, lineno=390)
DEBUG:numba.core.byteflow:stack ['$phi164.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=466, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=168, stack=('$phi164.0', '$164for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=466 nstack_initial=0), State(pc_initial=168 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=466, inst=POP_BLOCK(arg=None, lineno=474)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=468, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=168 nstack_initial=2), State(pc_initial=468 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi168.0', '$phi168.1']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=STORE_FAST(arg=15, lineno=390)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$phi168.1']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=393)
DEBUG:numba.core.byteflow:stack ['$phi168.0']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_ATTR(arg=16, lineno=393)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$numba_plasma170.2']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_FAST(arg=15, lineno=393)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$172load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=BINARY_SUBSCR(arg=None, lineno=393)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$172load_attr.3', '$cur_line_id174.4']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=STORE_FAST(arg=17, lineno=393)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$176binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_FAST(arg=2, lineno=394)
DEBUG:numba.core.byteflow:stack ['$phi168.0']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_ATTR(arg=16, lineno=394)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$numba_plasma180.6']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=LOAD_FAST(arg=15, lineno=394)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$182load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=LOAD_CONST(arg=2, lineno=394)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$182load_attr.7', '$cur_line_id184.8']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=BINARY_SUBTRACT(arg=None, lineno=394)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$182load_attr.7', '$cur_line_id184.8', '$const186.9']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=BINARY_SUBSCR(arg=None, lineno=394)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$182load_attr.7', '$188binary_subtract.10']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=STORE_FAST(arg=18, lineno=394)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$190binary_subscr.11']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_FAST(arg=2, lineno=397)
DEBUG:numba.core.byteflow:stack ['$phi168.0']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_ATTR(arg=18, lineno=397)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$numba_plasma194.12']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=15, lineno=398)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$196load_attr.13']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=0, lineno=398)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$196load_attr.13', '$cur_line_id198.14']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_ATTR(arg=1, lineno=398)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$196load_attr.13', '$cur_line_id198.14', '$r_packet200.15']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=BUILD_TUPLE(arg=2, lineno=398)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$196load_attr.13', '$cur_line_id198.14', '$202load_attr.16']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=BINARY_SUBSCR(arg=None, lineno=398)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$196load_attr.13', '$204build_tuple.17']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=STORE_FAST(arg=19, lineno=398)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$206binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_FAST(arg=10, lineno=402)
DEBUG:numba.core.byteflow:stack ['$phi168.0']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=19, lineno=402)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$tau_trace_line_combined210.19']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=INPLACE_ADD(arg=None, lineno=402)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$tau_trace_line_combined210.19', '$tau_trace_line212.20']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=STORE_FAST(arg=10, lineno=402)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$214inplace_add.21']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=LOAD_FAST(arg=15, lineno=406)
DEBUG:numba.core.byteflow:stack ['$phi168.0']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=16, lineno=406)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$cur_line_id218.22']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=COMPARE_OP(arg=2, lineno=406)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$cur_line_id218.22', '$last_line_id220.23']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=STORE_FAST(arg=20, lineno=406)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$222compare_op.24']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_GLOBAL(arg=19, lineno=408)
DEBUG:numba.core.byteflow:stack ['$phi168.0']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=LOAD_FAST(arg=0, lineno=409)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$226load_global.25']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_FAST(arg=14, lineno=410)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$226load_global.25', '$r_packet228.26']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_FAST(arg=20, lineno=411)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$226load_global.25', '$r_packet228.26', '$comov_nu230.27']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_FAST(arg=17, lineno=412)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$226load_global.25', '$r_packet228.26', '$comov_nu230.27', '$is_last_line232.28']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=LOAD_FAST(arg=1, lineno=413)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$226load_global.25', '$r_packet228.26', '$comov_nu230.27', '$is_last_line232.28', '$nu_line234.29']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=LOAD_ATTR(arg=13, lineno=413)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$226load_global.25', '$r_packet228.26', '$comov_nu230.27', '$is_last_line232.28', '$nu_line234.29', '$numba_model236.30']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=CALL_FUNCTION(arg=5, lineno=413)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$226load_global.25', '$r_packet228.26', '$comov_nu230.27', '$is_last_line232.28', '$nu_line234.29', '$238load_attr.31']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=STORE_FAST(arg=21, lineno=413)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$240call_function.32']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_GLOBAL(arg=20, lineno=417)
DEBUG:numba.core.byteflow:stack ['$phi168.0']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=LOAD_FAST(arg=11, lineno=418)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$244load_global.33']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=21, lineno=418)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$244load_global.33', '$cur_electron_density246.34']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=CALL_FUNCTION(arg=2, lineno=418)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$244load_global.33', '$cur_electron_density246.34', '$distance_trace248.35']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=STORE_FAST(arg=22, lineno=418)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$250call_function.36']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=LOAD_FAST(arg=10, lineno=422)
DEBUG:numba.core.byteflow:stack ['$phi168.0']
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_FAST(arg=22, lineno=422)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$tau_trace_line_combined254.37']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=BINARY_ADD(arg=None, lineno=422)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$tau_trace_line_combined254.37', '$tau_trace_electron256.38']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=STORE_FAST(arg=23, lineno=422)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$258binary_add.39']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=6, lineno=425)
DEBUG:numba.core.byteflow:stack ['$phi168.0']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=LOAD_FAST(arg=21, lineno=425)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$distance_boundary262.40']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=COMPARE_OP(arg=1, lineno=425)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$distance_boundary262.40', '$distance_trace264.41']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=POP_JUMP_IF_FALSE(arg=310, lineno=425)
DEBUG:numba.core.byteflow:stack ['$phi168.0', '$266compare_op.42']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=272, stack=('$phi168.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=310, stack=('$phi168.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=468 nstack_initial=0), State(pc_initial=272 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=468, inst=LOAD_FAST(arg=15, lineno=480)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=470, inst=LOAD_GLOBAL(arg=15, lineno=480)
DEBUG:numba.core.byteflow:stack ['$cur_line_id468.0']
DEBUG:numba.core.byteflow:dispatch pc=472, inst=LOAD_FAST(arg=2, lineno=480)
DEBUG:numba.core.byteflow:stack ['$cur_line_id468.0', '$470load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=474, inst=LOAD_ATTR(arg=16, lineno=480)
DEBUG:numba.core.byteflow:stack ['$cur_line_id468.0', '$470load_global.1', '$numba_plasma472.2']
DEBUG:numba.core.byteflow:dispatch pc=476, inst=CALL_FUNCTION(arg=1, lineno=480)
DEBUG:numba.core.byteflow:stack ['$cur_line_id468.0', '$470load_global.1', '$474load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=478, inst=LOAD_CONST(arg=2, lineno=480)
DEBUG:numba.core.byteflow:stack ['$cur_line_id468.0', '$476call_function.4']
DEBUG:numba.core.byteflow:dispatch pc=480, inst=BINARY_SUBTRACT(arg=None, lineno=480)
DEBUG:numba.core.byteflow:stack ['$cur_line_id468.0', '$476call_function.4', '$const478.5']
DEBUG:numba.core.byteflow:dispatch pc=482, inst=COMPARE_OP(arg=2, lineno=480)
DEBUG:numba.core.byteflow:stack ['$cur_line_id468.0', '$480binary_subtract.6']
DEBUG:numba.core.byteflow:dispatch pc=484, inst=POP_JUMP_IF_FALSE(arg=496, lineno=480)
DEBUG:numba.core.byteflow:stack ['$482compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=488, stack=(), blockstack=(), npush=0), Edge(pc=496, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=272 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=488 nstack_initial=0), State(pc_initial=496 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi272.0']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_FAST(arg=6, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi272.0']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_FAST(arg=12, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$distance_boundary272.1']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=COMPARE_OP(arg=1, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$distance_boundary272.1', '$distance_electron274.2']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=POP_JUMP_IF_FALSE(arg=310, lineno=426)
DEBUG:numba.core.byteflow:stack ['$phi272.0', '$276compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=282, stack=('$phi272.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=310, stack=('$phi272.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=488 nstack_initial=0), State(pc_initial=496 nstack_initial=0), State(pc_initial=282 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi310.0']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=12, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi310.0']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_FAST(arg=21, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi310.0', '$distance_electron310.1']
DEBUG:numba.core.byteflow:dispatch pc=314, inst=COMPARE_OP(arg=0, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi310.0', '$distance_electron310.1', '$distance_trace312.2']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=POP_JUMP_IF_FALSE(arg=358, lineno=434)
DEBUG:numba.core.byteflow:stack ['$phi310.0', '$314compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=320, stack=('$phi310.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=358, stack=('$phi310.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=488 nstack_initial=0), State(pc_initial=496 nstack_initial=0), State(pc_initial=282 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=320 nstack_initial=1), State(pc_initial=358 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=488, inst=LOAD_FAST(arg=15, lineno=482)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=490, inst=LOAD_CONST(arg=2, lineno=482)
DEBUG:numba.core.byteflow:stack ['$cur_line_id488.0']
DEBUG:numba.core.byteflow:dispatch pc=492, inst=INPLACE_ADD(arg=None, lineno=482)
DEBUG:numba.core.byteflow:stack ['$cur_line_id488.0', '$const490.1']
DEBUG:numba.core.byteflow:dispatch pc=494, inst=STORE_FAST(arg=15, lineno=482)
DEBUG:numba.core.byteflow:stack ['$492inplace_add.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=496, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=496 nstack_initial=0), State(pc_initial=282 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=320 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=496 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=496, inst=LOAD_FAST(arg=12, lineno=483)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=498, inst=LOAD_FAST(arg=6, lineno=483)
DEBUG:numba.core.byteflow:stack ['$distance_electron496.0']
DEBUG:numba.core.byteflow:dispatch pc=500, inst=COMPARE_OP(arg=0, lineno=483)
DEBUG:numba.core.byteflow:stack ['$distance_electron496.0', '$distance_boundary498.1']
DEBUG:numba.core.byteflow:dispatch pc=502, inst=POP_JUMP_IF_FALSE(arg=518, lineno=483)
DEBUG:numba.core.byteflow:stack ['$500compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=506, stack=(), blockstack=(), npush=0), Edge(pc=518, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=282 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=320 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=496 nstack_initial=0), State(pc_initial=506 nstack_initial=0), State(pc_initial=518 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi282.0']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=LOAD_FAST(arg=21, lineno=427)
DEBUG:numba.core.byteflow:stack ['$phi282.0']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=LOAD_CONST(arg=1, lineno=427)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$distance_trace282.1']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=COMPARE_OP(arg=3, lineno=427)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$distance_trace282.1', '$const284.2']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=POP_JUMP_IF_FALSE(arg=310, lineno=427)
DEBUG:numba.core.byteflow:stack ['$phi282.0', '$286compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=292, stack=('$phi282.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=310, stack=('$phi282.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=320 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=496 nstack_initial=0), State(pc_initial=506 nstack_initial=0), State(pc_initial=518 nstack_initial=0), State(pc_initial=292 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=320 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=496 nstack_initial=0), State(pc_initial=506 nstack_initial=0), State(pc_initial=518 nstack_initial=0), State(pc_initial=292 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi320.0']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=LOAD_FAST(arg=12, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi320.0']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=LOAD_FAST(arg=6, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi320.0', '$distance_electron320.1']
DEBUG:numba.core.byteflow:dispatch pc=324, inst=COMPARE_OP(arg=0, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi320.0', '$distance_electron320.1', '$distance_boundary322.2']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=POP_JUMP_IF_FALSE(arg=358, lineno=435)
DEBUG:numba.core.byteflow:stack ['$phi320.0', '$324compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=330, stack=('$phi320.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=358, stack=('$phi320.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=358 nstack_initial=1), State(pc_initial=496 nstack_initial=0), State(pc_initial=506 nstack_initial=0), State(pc_initial=518 nstack_initial=0), State(pc_initial=292 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=330 nstack_initial=1), State(pc_initial=358 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi358.0']
DEBUG:numba.core.byteflow:dispatch pc=358, inst=LOAD_GLOBAL(arg=24, lineno=447)
DEBUG:numba.core.byteflow:stack ['$phi358.0']
DEBUG:numba.core.byteflow:dispatch pc=360, inst=LOAD_FAST(arg=3, lineno=448)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$358load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=362, inst=LOAD_FAST(arg=0, lineno=449)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$358load_global.1', '$estimators360.2']
DEBUG:numba.core.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=15, lineno=450)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$358load_global.1', '$estimators360.2', '$r_packet362.3']
DEBUG:numba.core.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=21, lineno=451)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$358load_global.1', '$estimators360.2', '$r_packet362.3', '$cur_line_id364.4']
DEBUG:numba.core.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=1, lineno=452)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$358load_global.1', '$estimators360.2', '$r_packet362.3', '$cur_line_id364.4', '$distance_trace366.5']
DEBUG:numba.core.byteflow:dispatch pc=370, inst=LOAD_ATTR(arg=13, lineno=452)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$358load_global.1', '$estimators360.2', '$r_packet362.3', '$cur_line_id364.4', '$distance_trace366.5', '$numba_model368.6']
DEBUG:numba.core.byteflow:dispatch pc=372, inst=CALL_FUNCTION(arg=5, lineno=452)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$358load_global.1', '$estimators360.2', '$r_packet362.3', '$cur_line_id364.4', '$distance_trace366.5', '$370load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=374, inst=POP_TOP(arg=None, lineno=452)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$372call_function.8']
DEBUG:numba.core.byteflow:dispatch pc=376, inst=LOAD_FAST(arg=23, lineno=456)
DEBUG:numba.core.byteflow:stack ['$phi358.0']
DEBUG:numba.core.byteflow:dispatch pc=378, inst=LOAD_FAST(arg=9, lineno=456)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$tau_trace_combined376.9']
DEBUG:numba.core.byteflow:dispatch pc=380, inst=COMPARE_OP(arg=4, lineno=456)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$tau_trace_combined376.9', '$tau_event378.10']
DEBUG:numba.core.byteflow:dispatch pc=382, inst=POP_JUMP_IF_FALSE(arg=426, lineno=456)
DEBUG:numba.core.byteflow:stack ['$phi358.0', '$380compare_op.11']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=386, stack=('$phi358.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=426, stack=('$phi358.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=496 nstack_initial=0), State(pc_initial=506 nstack_initial=0), State(pc_initial=518 nstack_initial=0), State(pc_initial=292 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=330 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=386 nstack_initial=1), State(pc_initial=426 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=506 nstack_initial=0), State(pc_initial=518 nstack_initial=0), State(pc_initial=292 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=330 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=386 nstack_initial=1), State(pc_initial=426 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=506, inst=LOAD_FAST(arg=12, lineno=484)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=508, inst=STORE_FAST(arg=25, lineno=484)
DEBUG:numba.core.byteflow:stack ['$distance_electron506.0']
DEBUG:numba.core.byteflow:dispatch pc=510, inst=LOAD_GLOBAL(arg=21, lineno=485)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=512, inst=LOAD_ATTR(arg=23, lineno=485)
DEBUG:numba.core.byteflow:stack ['$510load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=514, inst=STORE_FAST(arg=24, lineno=485)
DEBUG:numba.core.byteflow:stack ['$512load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=516, inst=JUMP_FORWARD(arg=10, lineno=485)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=528, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=518 nstack_initial=0), State(pc_initial=292 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=330 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=386 nstack_initial=1), State(pc_initial=426 nstack_initial=1), State(pc_initial=528 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=518, inst=LOAD_FAST(arg=6, lineno=488)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=520, inst=STORE_FAST(arg=25, lineno=488)
DEBUG:numba.core.byteflow:stack ['$distance_boundary518.0']
DEBUG:numba.core.byteflow:dispatch pc=522, inst=LOAD_GLOBAL(arg=21, lineno=489)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=524, inst=LOAD_ATTR(arg=22, lineno=489)
DEBUG:numba.core.byteflow:stack ['$522load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=526, inst=STORE_FAST(arg=24, lineno=489)
DEBUG:numba.core.byteflow:stack ['$524load_attr.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=528, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=292 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=330 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=386 nstack_initial=1), State(pc_initial=426 nstack_initial=1), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi292.0']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=LOAD_GLOBAL(arg=21, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi292.0']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_ATTR(arg=22, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi292.0', '$292load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=STORE_FAST(arg=24, lineno=428)
DEBUG:numba.core.byteflow:stack ['$phi292.0', '$294load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=298, inst=LOAD_FAST(arg=15, lineno=429)
DEBUG:numba.core.byteflow:stack ['$phi292.0']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=0, lineno=429)
DEBUG:numba.core.byteflow:stack ['$phi292.0', '$cur_line_id298.3']
DEBUG:numba.core.byteflow:dispatch pc=302, inst=STORE_ATTR(arg=6, lineno=429)
DEBUG:numba.core.byteflow:stack ['$phi292.0', '$cur_line_id298.3', '$r_packet300.4']
DEBUG:numba.core.byteflow:dispatch pc=304, inst=LOAD_FAST(arg=6, lineno=430)
DEBUG:numba.core.byteflow:stack ['$phi292.0']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=STORE_FAST(arg=25, lineno=430)
DEBUG:numba.core.byteflow:stack ['$phi292.0', '$distance_boundary304.5']
DEBUG:numba.core.byteflow:dispatch pc=308, inst=BREAK_LOOP(arg=None, lineno=431)
DEBUG:numba.core.byteflow:stack ['$phi292.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=528, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=330 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=386 nstack_initial=1), State(pc_initial=426 nstack_initial=1), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=330 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=386 nstack_initial=1), State(pc_initial=426 nstack_initial=1), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi330.0']
DEBUG:numba.core.byteflow:dispatch pc=330, inst=LOAD_FAST(arg=21, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi330.0']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=LOAD_CONST(arg=1, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi330.0', '$distance_trace330.1']
DEBUG:numba.core.byteflow:dispatch pc=334, inst=COMPARE_OP(arg=3, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi330.0', '$distance_trace330.1', '$const332.2']
DEBUG:numba.core.byteflow:dispatch pc=336, inst=POP_JUMP_IF_FALSE(arg=358, lineno=436)
DEBUG:numba.core.byteflow:stack ['$phi330.0', '$334compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=340, stack=('$phi330.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=358, stack=('$phi330.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=358 nstack_initial=1), State(pc_initial=386 nstack_initial=1), State(pc_initial=426 nstack_initial=1), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=340 nstack_initial=1), State(pc_initial=358 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=386 nstack_initial=1), State(pc_initial=426 nstack_initial=1), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=340 nstack_initial=1), State(pc_initial=358 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi386.0']
DEBUG:numba.core.byteflow:dispatch pc=386, inst=LOAD_GLOBAL(arg=25, lineno=457)
DEBUG:numba.core.byteflow:stack ['$phi386.0']
DEBUG:numba.core.byteflow:dispatch pc=388, inst=LOAD_ATTR(arg=26, lineno=457)
DEBUG:numba.core.byteflow:stack ['$phi386.0', '$386load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=390, inst=POP_JUMP_IF_TRUE(arg=426, lineno=457)
DEBUG:numba.core.byteflow:stack ['$phi386.0', '$388load_attr.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=394, stack=('$phi386.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=426, stack=('$phi386.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=426 nstack_initial=1), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=340 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=394 nstack_initial=1), State(pc_initial=426 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi426.0']
DEBUG:numba.core.byteflow:dispatch pc=426, inst=LOAD_FAST(arg=20, lineno=466)
DEBUG:numba.core.byteflow:stack ['$phi426.0']
DEBUG:numba.core.byteflow:dispatch pc=428, inst=POP_JUMP_IF_TRUE(arg=450, lineno=466)
DEBUG:numba.core.byteflow:stack ['$phi426.0', '$is_last_line426.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=432, stack=('$phi426.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=450, stack=('$phi426.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=340 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=394 nstack_initial=1), State(pc_initial=426 nstack_initial=1), State(pc_initial=432 nstack_initial=1), State(pc_initial=450 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=528, inst=LOAD_FAST(arg=25, lineno=493)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=530, inst=LOAD_FAST(arg=24, lineno=493)
DEBUG:numba.core.byteflow:stack ['$distance528.0']
DEBUG:numba.core.byteflow:dispatch pc=532, inst=LOAD_FAST(arg=7, lineno=493)
DEBUG:numba.core.byteflow:stack ['$distance528.0', '$interaction_type530.1']
DEBUG:numba.core.byteflow:dispatch pc=534, inst=BUILD_TUPLE(arg=3, lineno=493)
DEBUG:numba.core.byteflow:stack ['$distance528.0', '$interaction_type530.1', '$delta_shell532.2']
DEBUG:numba.core.byteflow:dispatch pc=536, inst=RETURN_VALUE(arg=None, lineno=493)
DEBUG:numba.core.byteflow:stack ['$534build_tuple.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=340 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=394 nstack_initial=1), State(pc_initial=426 nstack_initial=1), State(pc_initial=432 nstack_initial=1), State(pc_initial=450 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=528 nstack_initial=0), State(pc_initial=340 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=394 nstack_initial=1), State(pc_initial=426 nstack_initial=1), State(pc_initial=432 nstack_initial=1), State(pc_initial=450 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=340 nstack_initial=1), State(pc_initial=358 nstack_initial=1), State(pc_initial=394 nstack_initial=1), State(pc_initial=426 nstack_initial=1), State(pc_initial=432 nstack_initial=1), State(pc_initial=450 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi340.0']
DEBUG:numba.core.byteflow:dispatch pc=340, inst=LOAD_GLOBAL(arg=21, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi340.0']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=LOAD_ATTR(arg=23, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi340.0', '$340load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=STORE_FAST(arg=24, lineno=437)
DEBUG:numba.core.byteflow:stack ['$phi340.0', '$342load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=346, inst=LOAD_FAST(arg=12, lineno=439)
DEBUG:numba.core.byteflow:stack ['$phi340.0']
DEBUG:numba.core.byteflow:dispatch pc=348, inst=STORE_FAST(arg=25, lineno=439)
DEBUG:numba.core.byteflow:stack ['$phi340.0', '$distance_electron346.3']
DEBUG:numba.core.byteflow:dispatch pc=350, inst=LOAD_FAST(arg=15, lineno=440)
DEBUG:numba.core.byteflow:stack ['$phi340.0']
DEBUG:numba.core.byteflow:dispatch pc=352, inst=LOAD_FAST(arg=0, lineno=440)
DEBUG:numba.core.byteflow:stack ['$phi340.0', '$cur_line_id350.4']
DEBUG:numba.core.byteflow:dispatch pc=354, inst=STORE_ATTR(arg=6, lineno=440)
DEBUG:numba.core.byteflow:stack ['$phi340.0', '$cur_line_id350.4', '$r_packet352.5']
DEBUG:numba.core.byteflow:dispatch pc=356, inst=BREAK_LOOP(arg=None, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi340.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=528, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=358 nstack_initial=1), State(pc_initial=394 nstack_initial=1), State(pc_initial=426 nstack_initial=1), State(pc_initial=432 nstack_initial=1), State(pc_initial=450 nstack_initial=1), State(pc_initial=528 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=394 nstack_initial=1), State(pc_initial=426 nstack_initial=1), State(pc_initial=432 nstack_initial=1), State(pc_initial=450 nstack_initial=1), State(pc_initial=528 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi394.0']
DEBUG:numba.core.byteflow:dispatch pc=394, inst=LOAD_GLOBAL(arg=21, lineno=459)
DEBUG:numba.core.byteflow:stack ['$phi394.0']
DEBUG:numba.core.byteflow:dispatch pc=396, inst=LOAD_ATTR(arg=27, lineno=459)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$394load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=398, inst=STORE_FAST(arg=24, lineno=459)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$396load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=LOAD_FAST(arg=0, lineno=460)
DEBUG:numba.core.byteflow:stack ['$phi394.0']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=LOAD_ATTR(arg=14, lineno=460)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$r_packet400.3']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=0, lineno=460)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$402load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=406, inst=STORE_ATTR(arg=28, lineno=460)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$402load_attr.4', '$r_packet404.5']
DEBUG:numba.core.byteflow:dispatch pc=408, inst=LOAD_FAST(arg=15, lineno=461)
DEBUG:numba.core.byteflow:stack ['$phi394.0']
DEBUG:numba.core.byteflow:dispatch pc=410, inst=LOAD_FAST(arg=0, lineno=461)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$cur_line_id408.6']
DEBUG:numba.core.byteflow:dispatch pc=412, inst=STORE_ATTR(arg=29, lineno=461)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$cur_line_id408.6', '$r_packet410.7']
DEBUG:numba.core.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=15, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi394.0']
DEBUG:numba.core.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=0, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$cur_line_id414.8']
DEBUG:numba.core.byteflow:dispatch pc=418, inst=STORE_ATTR(arg=6, lineno=462)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$cur_line_id414.8', '$r_packet416.9']
DEBUG:numba.core.byteflow:dispatch pc=420, inst=LOAD_FAST(arg=21, lineno=463)
DEBUG:numba.core.byteflow:stack ['$phi394.0']
DEBUG:numba.core.byteflow:dispatch pc=422, inst=STORE_FAST(arg=25, lineno=463)
DEBUG:numba.core.byteflow:stack ['$phi394.0', '$distance_trace420.10']
DEBUG:numba.core.byteflow:dispatch pc=424, inst=BREAK_LOOP(arg=None, lineno=464)
DEBUG:numba.core.byteflow:stack ['$phi394.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=528, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=426 nstack_initial=1), State(pc_initial=432 nstack_initial=1), State(pc_initial=450 nstack_initial=1), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=432 nstack_initial=1), State(pc_initial=450 nstack_initial=1), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi432.0']
DEBUG:numba.core.byteflow:dispatch pc=432, inst=LOAD_GLOBAL(arg=30, lineno=467)
DEBUG:numba.core.byteflow:stack ['$phi432.0']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=LOAD_FAST(arg=0, lineno=468)
DEBUG:numba.core.byteflow:stack ['$phi432.0', '$432load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=LOAD_FAST(arg=15, lineno=468)
DEBUG:numba.core.byteflow:stack ['$phi432.0', '$432load_global.1', '$r_packet434.2']
DEBUG:numba.core.byteflow:dispatch pc=438, inst=LOAD_CONST(arg=2, lineno=468)
DEBUG:numba.core.byteflow:stack ['$phi432.0', '$432load_global.1', '$r_packet434.2', '$cur_line_id436.3']
DEBUG:numba.core.byteflow:dispatch pc=440, inst=BINARY_ADD(arg=None, lineno=468)
DEBUG:numba.core.byteflow:stack ['$phi432.0', '$432load_global.1', '$r_packet434.2', '$cur_line_id436.3', '$const438.4']
DEBUG:numba.core.byteflow:dispatch pc=442, inst=LOAD_FAST(arg=17, lineno=468)
DEBUG:numba.core.byteflow:stack ['$phi432.0', '$432load_global.1', '$r_packet434.2', '$440binary_add.5']
DEBUG:numba.core.byteflow:dispatch pc=444, inst=LOAD_FAST(arg=2, lineno=468)
DEBUG:numba.core.byteflow:stack ['$phi432.0', '$432load_global.1', '$r_packet434.2', '$440binary_add.5', '$nu_line442.6']
DEBUG:numba.core.byteflow:dispatch pc=446, inst=CALL_FUNCTION(arg=4, lineno=468)
DEBUG:numba.core.byteflow:stack ['$phi432.0', '$432load_global.1', '$r_packet434.2', '$440binary_add.5', '$nu_line442.6', '$numba_plasma444.7']
DEBUG:numba.core.byteflow:dispatch pc=448, inst=POP_TOP(arg=None, lineno=468)
DEBUG:numba.core.byteflow:stack ['$phi432.0', '$446call_function.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=450, stack=('$phi432.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=450 nstack_initial=1), State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=450 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi450.0']
DEBUG:numba.core.byteflow:dispatch pc=450, inst=LOAD_GLOBAL(arg=11, lineno=473)
DEBUG:numba.core.byteflow:stack ['$phi450.0']
DEBUG:numba.core.byteflow:dispatch pc=452, inst=LOAD_FAST(arg=11, lineno=474)
DEBUG:numba.core.byteflow:stack ['$phi450.0', '$450load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=454, inst=LOAD_FAST(arg=9, lineno=474)
DEBUG:numba.core.byteflow:stack ['$phi450.0', '$450load_global.1', '$cur_electron_density452.2']
DEBUG:numba.core.byteflow:dispatch pc=456, inst=LOAD_FAST(arg=10, lineno=474)
DEBUG:numba.core.byteflow:stack ['$phi450.0', '$450load_global.1', '$cur_electron_density452.2', '$tau_event454.3']
DEBUG:numba.core.byteflow:dispatch pc=458, inst=BINARY_SUBTRACT(arg=None, lineno=474)
DEBUG:numba.core.byteflow:stack ['$phi450.0', '$450load_global.1', '$cur_electron_density452.2', '$tau_event454.3', '$tau_trace_line_combined456.4']
DEBUG:numba.core.byteflow:dispatch pc=460, inst=CALL_FUNCTION(arg=2, lineno=474)
DEBUG:numba.core.byteflow:stack ['$phi450.0', '$450load_global.1', '$cur_electron_density452.2', '$458binary_subtract.5']
DEBUG:numba.core.byteflow:dispatch pc=462, inst=STORE_FAST(arg=12, lineno=474)
DEBUG:numba.core.byteflow:stack ['$phi450.0', '$460call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=464, inst=JUMP_ABSOLUTE(arg=164, lineno=474)
DEBUG:numba.core.byteflow:stack ['$phi450.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=164, stack=('$phi450.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=528 nstack_initial=0), State(pc_initial=528 nstack_initial=0), State(pc_initial=450 nstack_initial=1), State(pc_initial=164 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=528 nstack_initial=0), State(pc_initial=450 nstack_initial=1), State(pc_initial=164 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=450 nstack_initial=1), State(pc_initial=164 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=164 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=144 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=1): {'$phi164.0'},
             State(pc_initial=168 nstack_initial=2): {'$phi168.1'},
             State(pc_initial=272 nstack_initial=1): set(),
             State(pc_initial=282 nstack_initial=1): set(),
             State(pc_initial=292 nstack_initial=1): set(),
             State(pc_initial=310 nstack_initial=1): set(),
             State(pc_initial=320 nstack_initial=1): set(),
             State(pc_initial=330 nstack_initial=1): set(),
             State(pc_initial=340 nstack_initial=1): set(),
             State(pc_initial=358 nstack_initial=1): set(),
             State(pc_initial=386 nstack_initial=1): set(),
             State(pc_initial=394 nstack_initial=1): set(),
             State(pc_initial=426 nstack_initial=1): set(),
             State(pc_initial=432 nstack_initial=1): set(),
             State(pc_initial=450 nstack_initial=1): set(),
             State(pc_initial=466 nstack_initial=0): set(),
             State(pc_initial=468 nstack_initial=0): set(),
             State(pc_initial=488 nstack_initial=0): set(),
             State(pc_initial=496 nstack_initial=0): set(),
             State(pc_initial=506 nstack_initial=0): set(),
             State(pc_initial=518 nstack_initial=0): set(),
             State(pc_initial=528 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi164.0': State(pc_initial=144 nstack_initial=0),
 '$phi168.1': State(pc_initial=164 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi164.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi450.0',
                            State(pc_initial=450 nstack_initial=1))},
             '$phi168.0': {('$phi164.0',
                            State(pc_initial=164 nstack_initial=1))},
             '$phi168.1': {('$164for_iter.2',
                            State(pc_initial=164 nstack_initial=1))},
             '$phi272.0': {('$phi168.0',
                            State(pc_initial=168 nstack_initial=2))},
             '$phi282.0': {('$phi272.0',
                            State(pc_initial=272 nstack_initial=1))},
             '$phi292.0': {('$phi282.0',
                            State(pc_initial=282 nstack_initial=1))},
             '$phi310.0': {('$phi168.0',
                            State(pc_initial=168 nstack_initial=2)),
                           ('$phi272.0',
                            State(pc_initial=272 nstack_initial=1)),
                           ('$phi282.0',
                            State(pc_initial=282 nstack_initial=1))},
             '$phi320.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1))},
             '$phi330.0': {('$phi320.0',
                            State(pc_initial=320 nstack_initial=1))},
             '$phi340.0': {('$phi330.0',
                            State(pc_initial=330 nstack_initial=1))},
             '$phi358.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1)),
                           ('$phi320.0',
                            State(pc_initial=320 nstack_initial=1)),
                           ('$phi330.0',
                            State(pc_initial=330 nstack_initial=1))},
             '$phi386.0': {('$phi358.0',
                            State(pc_initial=358 nstack_initial=1))},
             '$phi394.0': {('$phi386.0',
                            State(pc_initial=386 nstack_initial=1))},
             '$phi426.0': {('$phi358.0',
                            State(pc_initial=358 nstack_initial=1)),
                           ('$phi386.0',
                            State(pc_initial=386 nstack_initial=1))},
             '$phi432.0': {('$phi426.0',
                            State(pc_initial=426 nstack_initial=1))},
             '$phi450.0': {('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi164.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi168.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi168.1': {('$164for_iter.2',
                            State(pc_initial=164 nstack_initial=1))},
             '$phi272.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi282.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi292.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi310.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi320.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi330.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi340.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi358.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi386.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi394.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi426.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi426.0',
                            State(pc_initial=426 nstack_initial=1)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi432.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0)),
                           ('$phi432.0',
                            State(pc_initial=432 nstack_initial=1))},
             '$phi450.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi164.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi168.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi168.1': {('$164for_iter.2',
                            State(pc_initial=164 nstack_initial=1))},
             '$phi272.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi282.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi292.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi310.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi320.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi330.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi340.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi358.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi386.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi394.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi426.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi432.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi450.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi164.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi168.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi168.1': {('$164for_iter.2',
                            State(pc_initial=164 nstack_initial=1))},
             '$phi272.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi282.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi292.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi310.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi320.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi330.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi340.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi358.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi386.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi394.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi426.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi432.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))},
             '$phi450.0': {('$162get_iter.7',
                            State(pc_initial=144 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi164.0': {('$162get_iter.7', State(pc_initial=144 nstack_initial=0))},
 '$phi168.1': {('$164for_iter.2', State(pc_initial=164 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=144 nstack_initial=0): {'$phi164.0': '$162get_iter.7'},
             State(pc_initial=164 nstack_initial=1): {'$phi168.1': '$164for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$numba_model2.0'}), (4, {'item': '$numba_model2.0', 'res': '$4load_attr.1'}), (6, {'res': '$r_packet6.2'}), (8, {'item': '$r_packet6.2', 'res': '$8load_attr.3'}), (10, {'index': '$8load_attr.3', 'target': '$4load_attr.1', 'res': '$10binary_subscr.4'}), (12, {'value': '$10binary_subscr.4'}), (14, {'res': '$numba_model14.5'}), (16, {'item': '$numba_model14.5', 'res': '$16load_attr.6'}), (18, {'res': '$r_packet18.7'}), (20, {'item': '$r_packet18.7', 'res': '$20load_attr.8'}), (22, {'index': '$20load_attr.8', 'target': '$16load_attr.6', 'res': '$22binary_subscr.9'}), (24, {'value': '$22binary_subscr.9'}), (26, {'res': '$26load_global.10'}), (28, {'res': '$r_packet28.11'}), (30, {'item': '$r_packet28.11', 'res': '$30load_attr.12'}), (32, {'res': '$r_packet32.13'}), (34, {'item': '$r_packet32.13', 'res': '$34load_attr.14'}), (36, {'res': '$r_inner36.15'}), (38, {'res': '$r_outer38.16'}), (40, {'func': '$26load_global.10', 'args': ['$30load_attr.12', '$34load_attr.14', '$r_inner36.15', '$r_outer38.16'], 'res': '$40call_function.17'}), (42, {'iterable': '$40call_function.17', 'stores': ['$42unpack_sequence.18', '$42unpack_sequence.19'], 'tupleobj': '$42unpack_sequence.20'}), (44, {'value': '$42unpack_sequence.18'}), (46, {'value': '$42unpack_sequence.19'}), (48, {'res': '$r_packet48.21'}), (50, {'item': '$r_packet48.21', 'res': '$50load_attr.22'}), (52, {'value': '$50load_attr.22'}), (54, {'res': '$54load_global.23'}), (56, {'item': '$54load_global.23', 'res': '$56load_method.24'}), (58, {'res': '$58load_global.25'}), (60, {'item': '$58load_global.25', 'res': '$60load_attr.26'}), (62, {'item': '$60load_attr.26', 'res': '$62load_method.27'}), (64, {'func': '$62load_method.27', 'args': [], 'res': '$64call_method.28'}), (66, {'func': '$56load_method.24', 'args': ['$64call_method.28'], 'res': '$66call_method.29'}), (68, {'value': '$66call_method.29', 'res': '$68unary_negative.30'}), (70, {'value': '$68unary_negative.30'}), (72, {'res': '$const72.31'}), (74, {'value': '$const72.31'}), (76, {'res': '$numba_plasma76.32'}), (78, {'item': '$numba_plasma76.32', 'res': '$78load_attr.33'}), (80, {'res': '$r_packet80.34'}), (82, {'item': '$r_packet80.34', 'res': '$82load_attr.35'}), (84, {'index': '$82load_attr.35', 'target': '$78load_attr.33', 'res': '$84binary_subscr.36'}), (86, {'value': '$84binary_subscr.36'}), (88, {'res': '$88load_global.37'}), (90, {'res': '$cur_electron_density90.38'}), (92, {'res': '$tau_event92.39'}), (94, {'func': '$88load_global.37', 'args': ['$cur_electron_density90.38', '$tau_event92.39'], 'res': '$94call_function.40'}), (96, {'value': '$94call_function.40'}), (98, {'res': '$98load_global.41'}), (100, {'res': '$r_packet100.42'}), (102, {'item': '$r_packet100.42', 'res': '$102load_attr.43'}), (104, {'res': '$r_packet104.44'}), (106, {'item': '$r_packet104.44', 'res': '$106load_attr.45'}), (108, {'res': '$numba_model108.46'}), (110, {'item': '$numba_model108.46', 'res': '$110load_attr.47'}), (112, {'func': '$98load_global.41', 'args': ['$102load_attr.43', '$106load_attr.45', '$110load_attr.47'], 'res': '$112call_function.48'}), (114, {'value': '$112call_function.48'}), (116, {'res': '$r_packet116.49'}), (118, {'item': '$r_packet116.49', 'res': '$118load_attr.50'}), (120, {'res': '$doppler_factor120.51'}), (122, {'lhs': '$118load_attr.50', 'rhs': '$doppler_factor120.51', 'res': '$122binary_multiply.52'}), (124, {'value': '$122binary_multiply.52'}), (126, {'res': '$start_line_id126.53'}), (128, {'value': '$start_line_id126.53'}), (130, {'res': '$130load_global.54'}), (132, {'res': '$numba_plasma132.55'}), (134, {'item': '$numba_plasma132.55', 'res': '$134load_attr.56'}), (136, {'func': '$130load_global.54', 'args': ['$134load_attr.56'], 'res': '$136call_function.57'}), (138, {'res': '$const138.58'}), (140, {'lhs': '$136call_function.57', 'rhs': '$const138.58', 'res': '$140binary_subtract.59'}), (142, {'value': '$140binary_subtract.59'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={144: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=144 nstack_initial=0):
AdaptBlockInfo(insts=((148, {'res': '$148load_global.0'}), (150, {'res': '$start_line_id150.1'}), (152, {'res': '$152load_global.2'}), (154, {'res': '$numba_plasma154.3'}), (156, {'item': '$numba_plasma154.3', 'res': '$156load_attr.4'}), (158, {'func': '$152load_global.2', 'args': ['$156load_attr.4'], 'res': '$158call_function.5'}), (160, {'func': '$148load_global.0', 'args': ['$start_line_id150.1', '$158call_function.5'], 'res': '$160call_function.6'}), (162, {'value': '$160call_function.6', 'res': '$162get_iter.7'})), outgoing_phis={'$phi164.0': '$162get_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: ('$162get_iter.7',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=164 nstack_initial=1):
AdaptBlockInfo(insts=((164, {'iterator': '$phi164.0', 'pair': '$164for_iter.1', 'indval': '$164for_iter.2', 'pred': '$164for_iter.3'}),), outgoing_phis={'$phi168.1': '$164for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={466: (), 168: ('$phi164.0', '$164for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=168 nstack_initial=2):
AdaptBlockInfo(insts=((168, {'value': '$phi168.1'}), (170, {'res': '$numba_plasma170.2'}), (172, {'item': '$numba_plasma170.2', 'res': '$172load_attr.3'}), (174, {'res': '$cur_line_id174.4'}), (176, {'index': '$cur_line_id174.4', 'target': '$172load_attr.3', 'res': '$176binary_subscr.5'}), (178, {'value': '$176binary_subscr.5'}), (180, {'res': '$numba_plasma180.6'}), (182, {'item': '$numba_plasma180.6', 'res': '$182load_attr.7'}), (184, {'res': '$cur_line_id184.8'}), (186, {'res': '$const186.9'}), (188, {'lhs': '$cur_line_id184.8', 'rhs': '$const186.9', 'res': '$188binary_subtract.10'}), (190, {'index': '$188binary_subtract.10', 'target': '$182load_attr.7', 'res': '$190binary_subscr.11'}), (192, {'value': '$190binary_subscr.11'}), (194, {'res': '$numba_plasma194.12'}), (196, {'item': '$numba_plasma194.12', 'res': '$196load_attr.13'}), (198, {'res': '$cur_line_id198.14'}), (200, {'res': '$r_packet200.15'}), (202, {'item': '$r_packet200.15', 'res': '$202load_attr.16'}), (204, {'items': ['$cur_line_id198.14', '$202load_attr.16'], 'res': '$204build_tuple.17'}), (206, {'index': '$204build_tuple.17', 'target': '$196load_attr.13', 'res': '$206binary_subscr.18'}), (208, {'value': '$206binary_subscr.18'}), (210, {'res': '$tau_trace_line_combined210.19'}), (212, {'res': '$tau_trace_line212.20'}), (214, {'lhs': '$tau_trace_line_combined210.19', 'rhs': '$tau_trace_line212.20', 'res': '$214inplace_add.21'}), (216, {'value': '$214inplace_add.21'}), (218, {'res': '$cur_line_id218.22'}), (220, {'res': '$last_line_id220.23'}), (222, {'lhs': '$cur_line_id218.22', 'rhs': '$last_line_id220.23', 'res': '$222compare_op.24'}), (224, {'value': '$222compare_op.24'}), (226, {'res': '$226load_global.25'}), (228, {'res': '$r_packet228.26'}), (230, {'res': '$comov_nu230.27'}), (232, {'res': '$is_last_line232.28'}), (234, {'res': '$nu_line234.29'}), (236, {'res': '$numba_model236.30'}), (238, {'item': '$numba_model236.30', 'res': '$238load_attr.31'}), (240, {'func': '$226load_global.25', 'args': ['$r_packet228.26', '$comov_nu230.27', '$is_last_line232.28', '$nu_line234.29', '$238load_attr.31'], 'res': '$240call_function.32'}), (242, {'value': '$240call_function.32'}), (244, {'res': '$244load_global.33'}), (246, {'res': '$cur_electron_density246.34'}), (248, {'res': '$distance_trace248.35'}), (250, {'func': '$244load_global.33', 'args': ['$cur_electron_density246.34', '$distance_trace248.35'], 'res': '$250call_function.36'}), (252, {'value': '$250call_function.36'}), (254, {'res': '$tau_trace_line_combined254.37'}), (256, {'res': '$tau_trace_electron256.38'}), (258, {'lhs': '$tau_trace_line_combined254.37', 'rhs': '$tau_trace_electron256.38', 'res': '$258binary_add.39'}), (260, {'value': '$258binary_add.39'}), (262, {'res': '$distance_boundary262.40'}), (264, {'res': '$distance_trace264.41'}), (266, {'lhs': '$distance_boundary262.40', 'rhs': '$distance_trace264.41', 'res': '$266compare_op.42'}), (268, {'pred': '$266compare_op.42'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={272: ('$phi168.0',), 310: ('$phi168.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=272 nstack_initial=1):
AdaptBlockInfo(insts=((272, {'res': '$distance_boundary272.1'}), (274, {'res': '$distance_electron274.2'}), (276, {'lhs': '$distance_boundary272.1', 'rhs': '$distance_electron274.2', 'res': '$276compare_op.3'}), (278, {'pred': '$276compare_op.3'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={282: ('$phi272.0',), 310: ('$phi272.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=282 nstack_initial=1):
AdaptBlockInfo(insts=((282, {'res': '$distance_trace282.1'}), (284, {'res': '$const284.2'}), (286, {'lhs': '$distance_trace282.1', 'rhs': '$const284.2', 'res': '$286compare_op.3'}), (288, {'pred': '$286compare_op.3'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={292: ('$phi282.0',), 310: ('$phi282.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=292 nstack_initial=1):
AdaptBlockInfo(insts=((292, {'res': '$292load_global.1'}), (294, {'item': '$292load_global.1', 'res': '$294load_attr.2'}), (296, {'value': '$294load_attr.2'}), (298, {'res': '$cur_line_id298.3'}), (300, {'res': '$r_packet300.4'}), (302, {'target': '$r_packet300.4', 'value': '$cur_line_id298.3'}), (304, {'res': '$distance_boundary304.5'}), (306, {'value': '$distance_boundary304.5'}), (308, {'end': 528})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={528: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=310 nstack_initial=1):
AdaptBlockInfo(insts=((310, {'res': '$distance_electron310.1'}), (312, {'res': '$distance_trace312.2'}), (314, {'lhs': '$distance_electron310.1', 'rhs': '$distance_trace312.2', 'res': '$314compare_op.3'}), (316, {'pred': '$314compare_op.3'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={320: ('$phi310.0',), 358: ('$phi310.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=320 nstack_initial=1):
AdaptBlockInfo(insts=((320, {'res': '$distance_electron320.1'}), (322, {'res': '$distance_boundary322.2'}), (324, {'lhs': '$distance_electron320.1', 'rhs': '$distance_boundary322.2', 'res': '$324compare_op.3'}), (326, {'pred': '$324compare_op.3'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={330: ('$phi320.0',), 358: ('$phi320.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=330 nstack_initial=1):
AdaptBlockInfo(insts=((330, {'res': '$distance_trace330.1'}), (332, {'res': '$const332.2'}), (334, {'lhs': '$distance_trace330.1', 'rhs': '$const332.2', 'res': '$334compare_op.3'}), (336, {'pred': '$334compare_op.3'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={340: ('$phi330.0',), 358: ('$phi330.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=340 nstack_initial=1):
AdaptBlockInfo(insts=((340, {'res': '$340load_global.1'}), (342, {'item': '$340load_global.1', 'res': '$342load_attr.2'}), (344, {'value': '$342load_attr.2'}), (346, {'res': '$distance_electron346.3'}), (348, {'value': '$distance_electron346.3'}), (350, {'res': '$cur_line_id350.4'}), (352, {'res': '$r_packet352.5'}), (354, {'target': '$r_packet352.5', 'value': '$cur_line_id350.4'}), (356, {'end': 528})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={528: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=358 nstack_initial=1):
AdaptBlockInfo(insts=((358, {'res': '$358load_global.1'}), (360, {'res': '$estimators360.2'}), (362, {'res': '$r_packet362.3'}), (364, {'res': '$cur_line_id364.4'}), (366, {'res': '$distance_trace366.5'}), (368, {'res': '$numba_model368.6'}), (370, {'item': '$numba_model368.6', 'res': '$370load_attr.7'}), (372, {'func': '$358load_global.1', 'args': ['$estimators360.2', '$r_packet362.3', '$cur_line_id364.4', '$distance_trace366.5', '$370load_attr.7'], 'res': '$372call_function.8'}), (376, {'res': '$tau_trace_combined376.9'}), (378, {'res': '$tau_event378.10'}), (380, {'lhs': '$tau_trace_combined376.9', 'rhs': '$tau_event378.10', 'res': '$380compare_op.11'}), (382, {'pred': '$380compare_op.11'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={386: ('$phi358.0',), 426: ('$phi358.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=386 nstack_initial=1):
AdaptBlockInfo(insts=((386, {'res': '$386load_global.1'}), (388, {'item': '$386load_global.1', 'res': '$388load_attr.2'}), (390, {'pred': '$388load_attr.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={394: ('$phi386.0',), 426: ('$phi386.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=394 nstack_initial=1):
AdaptBlockInfo(insts=((394, {'res': '$394load_global.1'}), (396, {'item': '$394load_global.1', 'res': '$396load_attr.2'}), (398, {'value': '$396load_attr.2'}), (400, {'res': '$r_packet400.3'}), (402, {'item': '$r_packet400.3', 'res': '$402load_attr.4'}), (404, {'res': '$r_packet404.5'}), (406, {'target': '$r_packet404.5', 'value': '$402load_attr.4'}), (408, {'res': '$cur_line_id408.6'}), (410, {'res': '$r_packet410.7'}), (412, {'target': '$r_packet410.7', 'value': '$cur_line_id408.6'}), (414, {'res': '$cur_line_id414.8'}), (416, {'res': '$r_packet416.9'}), (418, {'target': '$r_packet416.9', 'value': '$cur_line_id414.8'}), (420, {'res': '$distance_trace420.10'}), (422, {'value': '$distance_trace420.10'}), (424, {'end': 528})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={528: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=426 nstack_initial=1):
AdaptBlockInfo(insts=((426, {'res': '$is_last_line426.1'}), (428, {'pred': '$is_last_line426.1'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={432: ('$phi426.0',), 450: ('$phi426.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=432 nstack_initial=1):
AdaptBlockInfo(insts=((432, {'res': '$432load_global.1'}), (434, {'res': '$r_packet434.2'}), (436, {'res': '$cur_line_id436.3'}), (438, {'res': '$const438.4'}), (440, {'lhs': '$cur_line_id436.3', 'rhs': '$const438.4', 'res': '$440binary_add.5'}), (442, {'res': '$nu_line442.6'}), (444, {'res': '$numba_plasma444.7'}), (446, {'func': '$432load_global.1', 'args': ['$r_packet434.2', '$440binary_add.5', '$nu_line442.6', '$numba_plasma444.7'], 'res': '$446call_function.8'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={450: ('$phi432.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=450 nstack_initial=1):
AdaptBlockInfo(insts=((450, {'res': '$450load_global.1'}), (452, {'res': '$cur_electron_density452.2'}), (454, {'res': '$tau_event454.3'}), (456, {'res': '$tau_trace_line_combined456.4'}), (458, {'lhs': '$tau_event454.3', 'rhs': '$tau_trace_line_combined456.4', 'res': '$458binary_subtract.5'}), (460, {'func': '$450load_global.1', 'args': ['$cur_electron_density452.2', '$458binary_subtract.5'], 'res': '$460call_function.6'}), (462, {'value': '$460call_function.6'}), (464, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={164: ('$phi450.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=466 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 528, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={468: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=468 nstack_initial=0):
AdaptBlockInfo(insts=((468, {'res': '$cur_line_id468.0'}), (470, {'res': '$470load_global.1'}), (472, {'res': '$numba_plasma472.2'}), (474, {'item': '$numba_plasma472.2', 'res': '$474load_attr.3'}), (476, {'func': '$470load_global.1', 'args': ['$474load_attr.3'], 'res': '$476call_function.4'}), (478, {'res': '$const478.5'}), (480, {'lhs': '$476call_function.4', 'rhs': '$const478.5', 'res': '$480binary_subtract.6'}), (482, {'lhs': '$cur_line_id468.0', 'rhs': '$480binary_subtract.6', 'res': '$482compare_op.7'}), (484, {'pred': '$482compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={488: (), 496: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=488 nstack_initial=0):
AdaptBlockInfo(insts=((488, {'res': '$cur_line_id488.0'}), (490, {'res': '$const490.1'}), (492, {'lhs': '$cur_line_id488.0', 'rhs': '$const490.1', 'res': '$492inplace_add.2'}), (494, {'value': '$492inplace_add.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={496: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=496 nstack_initial=0):
AdaptBlockInfo(insts=((496, {'res': '$distance_electron496.0'}), (498, {'res': '$distance_boundary498.1'}), (500, {'lhs': '$distance_electron496.0', 'rhs': '$distance_boundary498.1', 'res': '$500compare_op.2'}), (502, {'pred': '$500compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={506: (), 518: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=506 nstack_initial=0):
AdaptBlockInfo(insts=((506, {'res': '$distance_electron506.0'}), (508, {'value': '$distance_electron506.0'}), (510, {'res': '$510load_global.1'}), (512, {'item': '$510load_global.1', 'res': '$512load_attr.2'}), (514, {'value': '$512load_attr.2'}), (516, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={528: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=518 nstack_initial=0):
AdaptBlockInfo(insts=((518, {'res': '$distance_boundary518.0'}), (520, {'value': '$distance_boundary518.0'}), (522, {'res': '$522load_global.1'}), (524, {'item': '$522load_global.1', 'res': '$524load_attr.2'}), (526, {'value': '$524load_attr.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={528: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=528 nstack_initial=0):
AdaptBlockInfo(insts=((528, {'res': '$distance528.0'}), (530, {'res': '$interaction_type530.1'}), (532, {'res': '$delta_shell532.2'}), (534, {'items': ['$distance528.0', '$interaction_type530.1', '$delta_shell532.2'], 'res': '$534build_tuple.3'}), (536, {'retval': '$534build_tuple.3', 'castval': '$536return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    numba_model = arg(1, name=numba_model)   ['numba_model']
    numba_plasma = arg(2, name=numba_plasma) ['numba_plasma']
    estimators = arg(3, name=estimators)     ['estimators']
    $4load_attr.1 = getattr(value=numba_model, attr=r_inner) ['$4load_attr.1', 'numba_model']
    $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id) ['$8load_attr.3', 'r_packet']
    $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3) ['$10binary_subscr.4', '$4load_attr.1', '$8load_attr.3']
    r_inner = $10binary_subscr.4             ['$10binary_subscr.4', 'r_inner']
    $16load_attr.6 = getattr(value=numba_model, attr=r_outer) ['$16load_attr.6', 'numba_model']
    $20load_attr.8 = getattr(value=r_packet, attr=current_shell_id) ['$20load_attr.8', 'r_packet']
    $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8) ['$16load_attr.6', '$20load_attr.8', '$22binary_subscr.9']
    r_outer = $22binary_subscr.9             ['$22binary_subscr.9', 'r_outer']
    $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>)) ['$26load_global.10']
    $30load_attr.12 = getattr(value=r_packet, attr=r) ['$30load_attr.12', 'r_packet']
    $34load_attr.14 = getattr(value=r_packet, attr=mu) ['$34load_attr.14', 'r_packet']
    $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, r_packet.py:361), Var($34load_attr.14, r_packet.py:361), Var(r_inner, r_packet.py:357), Var(r_outer, r_packet.py:358)], kws=(), vararg=None) ['$26load_global.10', '$30load_attr.12', '$34load_attr.14', '$40call_function.17', 'r_inner', 'r_outer']
    $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2) ['$40call_function.17', '$42unpack_sequence.20']
    $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None) ['$42unpack_sequence.18', '$42unpack_sequence.20']
    $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None) ['$42unpack_sequence.19', '$42unpack_sequence.20']
    distance_boundary = $42unpack_sequence.18 ['$42unpack_sequence.18', 'distance_boundary']
    delta_shell = $42unpack_sequence.19      ['$42unpack_sequence.19', 'delta_shell']
    $50load_attr.22 = getattr(value=r_packet, attr=next_line_id) ['$50load_attr.22', 'r_packet']
    start_line_id = $50load_attr.22          ['$50load_attr.22', 'start_line_id']
    $54load_global.23 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$54load_global.23']
    $56load_method.24 = getattr(value=$54load_global.23, attr=log) ['$54load_global.23', '$56load_method.24']
    $58load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$58load_global.25']
    $60load_attr.26 = getattr(value=$58load_global.25, attr=random) ['$58load_global.25', '$60load_attr.26']
    $62load_method.27 = getattr(value=$60load_attr.26, attr=random) ['$60load_attr.26', '$62load_method.27']
    $64call_method.28 = call $62load_method.27(func=$62load_method.27, args=[], kws=(), vararg=None) ['$62load_method.27', '$64call_method.28']
    $66call_method.29 = call $56load_method.24($64call_method.28, func=$56load_method.24, args=[Var($64call_method.28, r_packet.py:368)], kws=(), vararg=None) ['$56load_method.24', '$64call_method.28', '$66call_method.29']
    $68unary_negative.30 = unary(fn=<built-in function neg>, value=$66call_method.29) ['$66call_method.29', '$68unary_negative.30']
    tau_event = $68unary_negative.30         ['$68unary_negative.30', 'tau_event']
    $const72.31 = const(float, 0.0)          ['$const72.31']
    tau_trace_line_combined = $const72.31    ['$const72.31', 'tau_trace_line_combined']
    $78load_attr.33 = getattr(value=numba_plasma, attr=electron_density) ['$78load_attr.33', 'numba_plasma']
    $82load_attr.35 = getattr(value=r_packet, attr=current_shell_id) ['$82load_attr.35', 'r_packet']
    $84binary_subscr.36 = getitem(value=$78load_attr.33, index=$82load_attr.35) ['$78load_attr.33', '$82load_attr.35', '$84binary_subscr.36']
    cur_electron_density = $84binary_subscr.36 ['$84binary_subscr.36', 'cur_electron_density']
    $88load_global.37 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>)) ['$88load_global.37']
    $94call_function.40 = call $88load_global.37(cur_electron_density, tau_event, func=$88load_global.37, args=[Var(cur_electron_density, r_packet.py:374), Var(tau_event, r_packet.py:368)], kws=(), vararg=None) ['$88load_global.37', '$94call_function.40', 'cur_electron_density', 'tau_event']
    distance_electron = $94call_function.40  ['$94call_function.40', 'distance_electron']
    $98load_global.41 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>)) ['$98load_global.41']
    $102load_attr.43 = getattr(value=r_packet, attr=r) ['$102load_attr.43', 'r_packet']
    $106load_attr.45 = getattr(value=r_packet, attr=mu) ['$106load_attr.45', 'r_packet']
    $110load_attr.47 = getattr(value=numba_model, attr=time_explosion) ['$110load_attr.47', 'numba_model']
    $112call_function.48 = call $98load_global.41($102load_attr.43, $106load_attr.45, $110load_attr.47, func=$98load_global.41, args=[Var($102load_attr.43, r_packet.py:382), Var($106load_attr.45, r_packet.py:382), Var($110load_attr.47, r_packet.py:382)], kws=(), vararg=None) ['$102load_attr.43', '$106load_attr.45', '$110load_attr.47', '$112call_function.48', '$98load_global.41']
    doppler_factor = $112call_function.48    ['$112call_function.48', 'doppler_factor']
    $118load_attr.50 = getattr(value=r_packet, attr=nu) ['$118load_attr.50', 'r_packet']
    $122binary_multiply.52 = $118load_attr.50 * doppler_factor ['$118load_attr.50', '$122binary_multiply.52', 'doppler_factor']
    comov_nu = $122binary_multiply.52        ['$122binary_multiply.52', 'comov_nu']
    cur_line_id = start_line_id              ['cur_line_id', 'start_line_id']
    $130load_global.54 = global(len: <built-in function len>) ['$130load_global.54']
    $134load_attr.56 = getattr(value=numba_plasma, attr=line_list_nu) ['$134load_attr.56', 'numba_plasma']
    $136call_function.57 = call $130load_global.54($134load_attr.56, func=$130load_global.54, args=[Var($134load_attr.56, r_packet.py:388)], kws=(), vararg=None) ['$130load_global.54', '$134load_attr.56', '$136call_function.57']
    $const138.58 = const(int, 1)             ['$const138.58']
    $140binary_subtract.59 = $136call_function.57 - $const138.58 ['$136call_function.57', '$140binary_subtract.59', '$const138.58']
    last_line_id = $140binary_subtract.59    ['$140binary_subtract.59', 'last_line_id']
    jump 144                                 []
label 144:
    $148load_global.0 = global(range: <class 'range'>) ['$148load_global.0']
    $152load_global.2 = global(len: <built-in function len>) ['$152load_global.2']
    $156load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu) ['$156load_attr.4', 'numba_plasma']
    $158call_function.5 = call $152load_global.2($156load_attr.4, func=$152load_global.2, args=[Var($156load_attr.4, r_packet.py:390)], kws=(), vararg=None) ['$152load_global.2', '$156load_attr.4', '$158call_function.5']
    $160call_function.6 = call $148load_global.0(start_line_id, $158call_function.5, func=$148load_global.0, args=[Var(start_line_id, r_packet.py:365), Var($158call_function.5, r_packet.py:390)], kws=(), vararg=None) ['$148load_global.0', '$158call_function.5', '$160call_function.6', 'start_line_id']
    $162get_iter.7 = getiter(value=$160call_function.6) ['$160call_function.6', '$162get_iter.7']
    $phi164.0 = $162get_iter.7               ['$162get_iter.7', '$phi164.0']
    jump 164                                 []
label 164:
    $164for_iter.1 = iternext(value=$phi164.0) ['$164for_iter.1', '$phi164.0']
    $164for_iter.2 = pair_first(value=$164for_iter.1) ['$164for_iter.1', '$164for_iter.2']
    $164for_iter.3 = pair_second(value=$164for_iter.1) ['$164for_iter.1', '$164for_iter.3']
    $phi168.1 = $164for_iter.2               ['$164for_iter.2', '$phi168.1']
    branch $164for_iter.3, 168, 466          ['$164for_iter.3']
label 168:
    cur_line_id = $phi168.1                  ['$phi168.1', 'cur_line_id']
    $172load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu) ['$172load_attr.3', 'numba_plasma']
    $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id) ['$172load_attr.3', '$176binary_subscr.5', 'cur_line_id']
    nu_line = $176binary_subscr.5            ['$176binary_subscr.5', 'nu_line']
    $182load_attr.7 = getattr(value=numba_plasma, attr=line_list_nu) ['$182load_attr.7', 'numba_plasma']
    $const186.9 = const(int, 1)              ['$const186.9']
    $188binary_subtract.10 = cur_line_id - $const186.9 ['$188binary_subtract.10', '$const186.9', 'cur_line_id']
    $190binary_subscr.11 = getitem(value=$182load_attr.7, index=$188binary_subtract.10) ['$182load_attr.7', '$188binary_subtract.10', '$190binary_subscr.11']
    nu_line_last_interaction = $190binary_subscr.11 ['$190binary_subscr.11', 'nu_line_last_interaction']
    $196load_attr.13 = getattr(value=numba_plasma, attr=tau_sobolev) ['$196load_attr.13', 'numba_plasma']
    $202load_attr.16 = getattr(value=r_packet, attr=current_shell_id) ['$202load_attr.16', 'r_packet']
    $204build_tuple.17 = build_tuple(items=[Var(cur_line_id, r_packet.py:386), Var($202load_attr.16, r_packet.py:398)]) ['$202load_attr.16', '$204build_tuple.17', 'cur_line_id']
    $206binary_subscr.18 = getitem(value=$196load_attr.13, index=$204build_tuple.17) ['$196load_attr.13', '$204build_tuple.17', '$206binary_subscr.18']
    tau_trace_line = $206binary_subscr.18    ['$206binary_subscr.18', 'tau_trace_line']
    $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined) ['$214inplace_add.21', 'tau_trace_line', 'tau_trace_line_combined']
    tau_trace_line_combined = $214inplace_add.21 ['$214inplace_add.21', 'tau_trace_line_combined']
    $222compare_op.24 = cur_line_id == last_line_id ['$222compare_op.24', 'cur_line_id', 'last_line_id']
    is_last_line = $222compare_op.24         ['$222compare_op.24', 'is_last_line']
    $226load_global.25 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>)) ['$226load_global.25']
    $238load_attr.31 = getattr(value=numba_model, attr=time_explosion) ['$238load_attr.31', 'numba_model']
    $240call_function.32 = call $226load_global.25(r_packet, comov_nu, is_last_line, nu_line, $238load_attr.31, func=$226load_global.25, args=[Var(r_packet, r_packet.py:357), Var(comov_nu, r_packet.py:384), Var(is_last_line, r_packet.py:406), Var(nu_line, r_packet.py:393), Var($238load_attr.31, r_packet.py:413)], kws=(), vararg=None) ['$226load_global.25', '$238load_attr.31', '$240call_function.32', 'comov_nu', 'is_last_line', 'nu_line', 'r_packet']
    distance_trace = $240call_function.32    ['$240call_function.32', 'distance_trace']
    $244load_global.33 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>)) ['$244load_global.33']
    $250call_function.36 = call $244load_global.33(cur_electron_density, distance_trace, func=$244load_global.33, args=[Var(cur_electron_density, r_packet.py:374), Var(distance_trace, r_packet.py:413)], kws=(), vararg=None) ['$244load_global.33', '$250call_function.36', 'cur_electron_density', 'distance_trace']
    tau_trace_electron = $250call_function.36 ['$250call_function.36', 'tau_trace_electron']
    $258binary_add.39 = tau_trace_line_combined + tau_trace_electron ['$258binary_add.39', 'tau_trace_electron', 'tau_trace_line_combined']
    tau_trace_combined = $258binary_add.39   ['$258binary_add.39', 'tau_trace_combined']
    $266compare_op.42 = distance_boundary <= distance_trace ['$266compare_op.42', 'distance_boundary', 'distance_trace']
    bool268 = global(bool: <class 'bool'>)   ['bool268']
    $268pred = call bool268($266compare_op.42, func=bool268, args=(Var($266compare_op.42, r_packet.py:425),), kws=(), vararg=None) ['$266compare_op.42', '$268pred', 'bool268']
    branch $268pred, 272, 310                ['$268pred']
label 272:
    $276compare_op.3 = distance_boundary <= distance_electron ['$276compare_op.3', 'distance_boundary', 'distance_electron']
    bool278 = global(bool: <class 'bool'>)   ['bool278']
    $278pred = call bool278($276compare_op.3, func=bool278, args=(Var($276compare_op.3, r_packet.py:426),), kws=(), vararg=None) ['$276compare_op.3', '$278pred', 'bool278']
    branch $278pred, 282, 310                ['$278pred']
label 282:
    $const284.2 = const(float, 0.0)          ['$const284.2']
    $286compare_op.3 = distance_trace != $const284.2 ['$286compare_op.3', '$const284.2', 'distance_trace']
    bool288 = global(bool: <class 'bool'>)   ['bool288']
    $288pred = call bool288($286compare_op.3, func=bool288, args=(Var($286compare_op.3, r_packet.py:427),), kws=(), vararg=None) ['$286compare_op.3', '$288pred', 'bool288']
    branch $288pred, 292, 310                ['$288pred']
label 292:
    $292load_global.1 = global(InteractionType: <enum 'InteractionType'>) ['$292load_global.1']
    $294load_attr.2 = getattr(value=$292load_global.1, attr=BOUNDARY) ['$292load_global.1', '$294load_attr.2']
    interaction_type = $294load_attr.2       ['$294load_attr.2', 'interaction_type']
    (r_packet).next_line_id = cur_line_id    ['cur_line_id', 'r_packet']
    distance = distance_boundary             ['distance', 'distance_boundary']
    jump 528                                 []
label 310:
    $314compare_op.3 = distance_electron < distance_trace ['$314compare_op.3', 'distance_electron', 'distance_trace']
    bool316 = global(bool: <class 'bool'>)   ['bool316']
    $316pred = call bool316($314compare_op.3, func=bool316, args=(Var($314compare_op.3, r_packet.py:434),), kws=(), vararg=None) ['$314compare_op.3', '$316pred', 'bool316']
    branch $316pred, 320, 358                ['$316pred']
label 320:
    $324compare_op.3 = distance_electron < distance_boundary ['$324compare_op.3', 'distance_boundary', 'distance_electron']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.3, func=bool326, args=(Var($324compare_op.3, r_packet.py:435),), kws=(), vararg=None) ['$324compare_op.3', '$326pred', 'bool326']
    branch $326pred, 330, 358                ['$326pred']
label 330:
    $const332.2 = const(float, 0.0)          ['$const332.2']
    $334compare_op.3 = distance_trace != $const332.2 ['$334compare_op.3', '$const332.2', 'distance_trace']
    bool336 = global(bool: <class 'bool'>)   ['bool336']
    $336pred = call bool336($334compare_op.3, func=bool336, args=(Var($334compare_op.3, r_packet.py:436),), kws=(), vararg=None) ['$334compare_op.3', '$336pred', 'bool336']
    branch $336pred, 340, 358                ['$336pred']
label 340:
    $340load_global.1 = global(InteractionType: <enum 'InteractionType'>) ['$340load_global.1']
    $342load_attr.2 = getattr(value=$340load_global.1, attr=ESCATTERING) ['$340load_global.1', '$342load_attr.2']
    interaction_type = $342load_attr.2       ['$342load_attr.2', 'interaction_type']
    distance = distance_electron             ['distance', 'distance_electron']
    (r_packet).next_line_id = cur_line_id    ['cur_line_id', 'r_packet']
    jump 528                                 []
label 358:
    $358load_global.1 = global(update_line_estimators: CPUDispatcher(<function update_line_estimators at 0x7f6e4a0f6b00>)) ['$358load_global.1']
    $370load_attr.7 = getattr(value=numba_model, attr=time_explosion) ['$370load_attr.7', 'numba_model']
    $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id, r_packet.py:386), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None) ['$358load_global.1', '$370load_attr.7', '$372call_function.8', 'cur_line_id', 'distance_trace', 'estimators', 'r_packet']
    $380compare_op.11 = tau_trace_combined > tau_event ['$380compare_op.11', 'tau_event', 'tau_trace_combined']
    bool382 = global(bool: <class 'bool'>)   ['bool382']
    $382pred = call bool382($380compare_op.11, func=bool382, args=(Var($380compare_op.11, r_packet.py:456),), kws=(), vararg=None) ['$380compare_op.11', '$382pred', 'bool382']
    branch $382pred, 386, 426                ['$382pred']
label 386:
    $386load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$386load_global.1']
    $388load_attr.2 = getattr(value=$386load_global.1, attr=disable_line_scattering) ['$386load_global.1', '$388load_attr.2']
    bool390 = global(bool: <class 'bool'>)   ['bool390']
    $390pred = call bool390($388load_attr.2, func=bool390, args=(Var($388load_attr.2, r_packet.py:457),), kws=(), vararg=None) ['$388load_attr.2', '$390pred', 'bool390']
    branch $390pred, 426, 394                ['$390pred']
label 394:
    $394load_global.1 = global(InteractionType: <enum 'InteractionType'>) ['$394load_global.1']
    $396load_attr.2 = getattr(value=$394load_global.1, attr=LINE) ['$394load_global.1', '$396load_attr.2']
    interaction_type = $396load_attr.2       ['$396load_attr.2', 'interaction_type']
    $402load_attr.4 = getattr(value=r_packet, attr=nu) ['$402load_attr.4', 'r_packet']
    (r_packet).last_interaction_in_nu = $402load_attr.4 ['$402load_attr.4', 'r_packet']
    (r_packet).last_line_interaction_in_id = cur_line_id ['cur_line_id', 'r_packet']
    (r_packet).next_line_id = cur_line_id    ['cur_line_id', 'r_packet']
    distance = distance_trace                ['distance', 'distance_trace']
    jump 528                                 []
label 426:
    bool428 = global(bool: <class 'bool'>)   ['bool428']
    $428pred = call bool428(is_last_line, func=bool428, args=(Var(is_last_line, r_packet.py:406),), kws=(), vararg=None) ['$428pred', 'bool428', 'is_last_line']
    branch $428pred, 450, 432                ['$428pred']
label 432:
    $432load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>)) ['$432load_global.1']
    $const438.4 = const(int, 1)              ['$const438.4']
    $440binary_add.5 = cur_line_id + $const438.4 ['$440binary_add.5', '$const438.4', 'cur_line_id']
    $446call_function.8 = call $432load_global.1(r_packet, $440binary_add.5, nu_line, numba_plasma, func=$432load_global.1, args=[Var(r_packet, r_packet.py:357), Var($440binary_add.5, r_packet.py:468), Var(nu_line, r_packet.py:393), Var(numba_plasma, r_packet.py:357)], kws=(), vararg=None) ['$432load_global.1', '$440binary_add.5', '$446call_function.8', 'nu_line', 'numba_plasma', 'r_packet']
    jump 450                                 []
label 450:
    $450load_global.1 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>)) ['$450load_global.1']
    $458binary_subtract.5 = tau_event - tau_trace_line_combined ['$458binary_subtract.5', 'tau_event', 'tau_trace_line_combined']
    $460call_function.6 = call $450load_global.1(cur_electron_density, $458binary_subtract.5, func=$450load_global.1, args=[Var(cur_electron_density, r_packet.py:374), Var($458binary_subtract.5, r_packet.py:474)], kws=(), vararg=None) ['$450load_global.1', '$458binary_subtract.5', '$460call_function.6', 'cur_electron_density']
    distance_electron = $460call_function.6  ['$460call_function.6', 'distance_electron']
    jump 164                                 []
label 466:
    jump 468                                 []
label 468:
    $470load_global.1 = global(len: <built-in function len>) ['$470load_global.1']
    $474load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu) ['$474load_attr.3', 'numba_plasma']
    $476call_function.4 = call $470load_global.1($474load_attr.3, func=$470load_global.1, args=[Var($474load_attr.3, r_packet.py:480)], kws=(), vararg=None) ['$470load_global.1', '$474load_attr.3', '$476call_function.4']
    $const478.5 = const(int, 1)              ['$const478.5']
    $480binary_subtract.6 = $476call_function.4 - $const478.5 ['$476call_function.4', '$480binary_subtract.6', '$const478.5']
    $482compare_op.7 = cur_line_id == $480binary_subtract.6 ['$480binary_subtract.6', '$482compare_op.7', 'cur_line_id']
    bool484 = global(bool: <class 'bool'>)   ['bool484']
    $484pred = call bool484($482compare_op.7, func=bool484, args=(Var($482compare_op.7, r_packet.py:480),), kws=(), vararg=None) ['$482compare_op.7', '$484pred', 'bool484']
    branch $484pred, 488, 496                ['$484pred']
label 488:
    $const490.1 = const(int, 1)              ['$const490.1']
    $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined) ['$492inplace_add.2', '$const490.1', 'cur_line_id']
    cur_line_id = $492inplace_add.2          ['$492inplace_add.2', 'cur_line_id']
    jump 496                                 []
label 496:
    $500compare_op.2 = distance_electron < distance_boundary ['$500compare_op.2', 'distance_boundary', 'distance_electron']
    bool502 = global(bool: <class 'bool'>)   ['bool502']
    $502pred = call bool502($500compare_op.2, func=bool502, args=(Var($500compare_op.2, r_packet.py:483),), kws=(), vararg=None) ['$500compare_op.2', '$502pred', 'bool502']
    branch $502pred, 506, 518                ['$502pred']
label 506:
    distance = distance_electron             ['distance', 'distance_electron']
    $510load_global.1 = global(InteractionType: <enum 'InteractionType'>) ['$510load_global.1']
    $512load_attr.2 = getattr(value=$510load_global.1, attr=ESCATTERING) ['$510load_global.1', '$512load_attr.2']
    interaction_type = $512load_attr.2       ['$512load_attr.2', 'interaction_type']
    jump 528                                 []
label 518:
    distance = distance_boundary             ['distance', 'distance_boundary']
    $522load_global.1 = global(InteractionType: <enum 'InteractionType'>) ['$522load_global.1']
    $524load_attr.2 = getattr(value=$522load_global.1, attr=BOUNDARY) ['$522load_global.1', '$524load_attr.2']
    interaction_type = $524load_attr.2       ['$524load_attr.2', 'interaction_type']
    jump 528                                 []
label 528:
    $534build_tuple.3 = build_tuple(items=[Var(distance, r_packet.py:430), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)]) ['$534build_tuple.3', 'delta_shell', 'distance', 'interaction_type']
    $536return_value.4 = cast(value=$534build_tuple.3) ['$534build_tuple.3', '$536return_value.4']
    return $536return_value.4                ['$536return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, r_packet.py:361), Var($34load_attr.14, r_packet.py:361), Var(r_inner, r_packet.py:357), Var(r_outer, r_packet.py:358)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $54load_global.23 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.24 = getattr(value=$54load_global.23, attr=log)
DEBUG:numba.core.ssa:on stmt: $58load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=$58load_global.25, attr=random)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_attr.26, attr=random)
DEBUG:numba.core.ssa:on stmt: $64call_method.28 = call $62load_method.27(func=$62load_method.27, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $66call_method.29 = call $56load_method.24($64call_method.28, func=$56load_method.24, args=[Var($64call_method.28, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $68unary_negative.30 = unary(fn=<built-in function neg>, value=$66call_method.29)
DEBUG:numba.core.ssa:on stmt: tau_event = $68unary_negative.30
DEBUG:numba.core.ssa:on stmt: $const72.31 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:on stmt: $78load_attr.33 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $82load_attr.35 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.36 = getitem(value=$78load_attr.33, index=$82load_attr.35)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $84binary_subscr.36
DEBUG:numba.core.ssa:on stmt: $88load_global.37 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $88load_global.37(cur_electron_density, tau_event, func=$88load_global.37, args=[Var(cur_electron_density, r_packet.py:374), Var(tau_event, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $98load_global.41 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $102load_attr.43 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $106load_attr.45 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $110load_attr.47 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $112call_function.48 = call $98load_global.41($102load_attr.43, $106load_attr.45, $110load_attr.47, func=$98load_global.41, args=[Var($102load_attr.43, r_packet.py:382), Var($106load_attr.45, r_packet.py:382), Var($110load_attr.47, r_packet.py:382)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $112call_function.48
DEBUG:numba.core.ssa:on stmt: $118load_attr.50 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $122binary_multiply.52 = $118load_attr.50 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $122binary_multiply.52
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: $130load_global.54 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $134load_attr.56 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $136call_function.57 = call $130load_global.54($134load_attr.56, func=$130load_global.54, args=[Var($134load_attr.56, r_packet.py:388)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const138.58 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $140binary_subtract.59 = $136call_function.57 - $const138.58
DEBUG:numba.core.ssa:on stmt: last_line_id = $140binary_subtract.59
DEBUG:numba.core.ssa:on stmt: jump 144
DEBUG:numba.core.ssa:==== SSA block analysis pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $148load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $152load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $158call_function.5 = call $152load_global.2($156load_attr.4, func=$152load_global.2, args=[Var($156load_attr.4, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160call_function.6 = call $148load_global.0(start_line_id, $158call_function.5, func=$148load_global.0, args=[Var(start_line_id, r_packet.py:365), Var($158call_function.5, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $162get_iter.7 = getiter(value=$160call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi164.0 = $162get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block analysis pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $164for_iter.1 = iternext(value=$phi164.0)
DEBUG:numba.core.ssa:on stmt: $164for_iter.2 = pair_first(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $164for_iter.3 = pair_second(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi168.1 = $164for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $164for_iter.3, 168, 466
DEBUG:numba.core.ssa:==== SSA block analysis pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: cur_line_id = $phi168.1
DEBUG:numba.core.ssa:on stmt: $172load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id)
DEBUG:numba.core.ssa:on stmt: nu_line = $176binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_attr.7 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const186.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $188binary_subtract.10 = cur_line_id - $const186.9
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.11 = getitem(value=$182load_attr.7, index=$188binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: nu_line_last_interaction = $190binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $196load_attr.13 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $202load_attr.16 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $204build_tuple.17 = build_tuple(items=[Var(cur_line_id, r_packet.py:386), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:on stmt: $206binary_subscr.18 = getitem(value=$196load_attr.13, index=$204build_tuple.17)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $206binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $214inplace_add.21
DEBUG:numba.core.ssa:on stmt: $222compare_op.24 = cur_line_id == last_line_id
DEBUG:numba.core.ssa:on stmt: is_last_line = $222compare_op.24
DEBUG:numba.core.ssa:on stmt: $226load_global.25 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $238load_attr.31 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $240call_function.32 = call $226load_global.25(r_packet, comov_nu, is_last_line, nu_line, $238load_attr.31, func=$226load_global.25, args=[Var(r_packet, r_packet.py:357), Var(comov_nu, r_packet.py:384), Var(is_last_line, r_packet.py:406), Var(nu_line, r_packet.py:393), Var($238load_attr.31, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace = $240call_function.32
DEBUG:numba.core.ssa:on stmt: $244load_global.33 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $250call_function.36 = call $244load_global.33(cur_electron_density, distance_trace, func=$244load_global.33, args=[Var(cur_electron_density, r_packet.py:374), Var(distance_trace, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_electron = $250call_function.36
DEBUG:numba.core.ssa:on stmt: $258binary_add.39 = tau_trace_line_combined + tau_trace_electron
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $258binary_add.39
DEBUG:numba.core.ssa:on stmt: $266compare_op.42 = distance_boundary <= distance_trace
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.42, func=bool268, args=(Var($266compare_op.42, r_packet.py:425),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 272, 310
DEBUG:numba.core.ssa:==== SSA block analysis pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $276compare_op.3 = distance_boundary <= distance_electron
DEBUG:numba.core.ssa:on stmt: bool278 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $278pred = call bool278($276compare_op.3, func=bool278, args=(Var($276compare_op.3, r_packet.py:426),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $278pred, 282, 310
DEBUG:numba.core.ssa:==== SSA block analysis pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $const284.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $286compare_op.3 = distance_trace != $const284.2
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.3, func=bool288, args=(Var($286compare_op.3, r_packet.py:427),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 310
DEBUG:numba.core.ssa:==== SSA block analysis pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $292load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $294load_attr.2 = getattr(value=$292load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block analysis pass on 310
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $314compare_op.3 = distance_electron < distance_trace
DEBUG:numba.core.ssa:on stmt: bool316 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $316pred = call bool316($314compare_op.3, func=bool316, args=(Var($314compare_op.3, r_packet.py:434),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $316pred, 320, 358
DEBUG:numba.core.ssa:==== SSA block analysis pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $324compare_op.3 = distance_electron < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($324compare_op.3, func=bool326, args=(Var($324compare_op.3, r_packet.py:435),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 330, 358
DEBUG:numba.core.ssa:==== SSA block analysis pass on 330
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $const332.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $334compare_op.3 = distance_trace != $const332.2
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336($334compare_op.3, func=bool336, args=(Var($334compare_op.3, r_packet.py:436),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 340, 358
DEBUG:numba.core.ssa:==== SSA block analysis pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $340load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $342load_attr.2 = getattr(value=$340load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $342load_attr.2
DEBUG:numba.core.ssa:on stmt: distance = distance_electron
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block analysis pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $358load_global.1 = global(update_line_estimators: CPUDispatcher(<function update_line_estimators at 0x7f6e4a0f6b00>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id, r_packet.py:386), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $380compare_op.11 = tau_trace_combined > tau_event
DEBUG:numba.core.ssa:on stmt: bool382 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $382pred = call bool382($380compare_op.11, func=bool382, args=(Var($380compare_op.11, r_packet.py:456),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $382pred, 386, 426
DEBUG:numba.core.ssa:==== SSA block analysis pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $386load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $388load_attr.2 = getattr(value=$386load_global.1, attr=disable_line_scattering)
DEBUG:numba.core.ssa:on stmt: bool390 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $390pred = call bool390($388load_attr.2, func=bool390, args=(Var($388load_attr.2, r_packet.py:457),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $390pred, 426, 394
DEBUG:numba.core.ssa:==== SSA block analysis pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $394load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $396load_attr.2 = getattr(value=$394load_global.1, attr=LINE)
DEBUG:numba.core.ssa:on stmt: interaction_type = $396load_attr.2
DEBUG:numba.core.ssa:on stmt: $402load_attr.4 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_in_nu = $402load_attr.4
DEBUG:numba.core.ssa:on stmt: (r_packet).last_line_interaction_in_id = cur_line_id
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:on stmt: distance = distance_trace
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block analysis pass on 426
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: bool428 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $428pred = call bool428(is_last_line, func=bool428, args=(Var(is_last_line, r_packet.py:406),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $428pred, 450, 432
DEBUG:numba.core.ssa:==== SSA block analysis pass on 432
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $432load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $const438.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $440binary_add.5 = cur_line_id + $const438.4
DEBUG:numba.core.ssa:on stmt: $446call_function.8 = call $432load_global.1(r_packet, $440binary_add.5, nu_line, numba_plasma, func=$432load_global.1, args=[Var(r_packet, r_packet.py:357), Var($440binary_add.5, r_packet.py:468), Var(nu_line, r_packet.py:393), Var(numba_plasma, r_packet.py:357)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 450
DEBUG:numba.core.ssa:==== SSA block analysis pass on 450
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $450load_global.1 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $458binary_subtract.5 = tau_event - tau_trace_line_combined
DEBUG:numba.core.ssa:on stmt: $460call_function.6 = call $450load_global.1(cur_electron_density, $458binary_subtract.5, func=$450load_global.1, args=[Var(cur_electron_density, r_packet.py:374), Var($458binary_subtract.5, r_packet.py:474)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $460call_function.6
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block analysis pass on 466
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: jump 468
DEBUG:numba.core.ssa:==== SSA block analysis pass on 468
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $470load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $474load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $476call_function.4 = call $470load_global.1($474load_attr.3, func=$470load_global.1, args=[Var($474load_attr.3, r_packet.py:480)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const478.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.6 = $476call_function.4 - $const478.5
DEBUG:numba.core.ssa:on stmt: $482compare_op.7 = cur_line_id == $480binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool484 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $484pred = call bool484($482compare_op.7, func=bool484, args=(Var($482compare_op.7, r_packet.py:480),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $484pred, 488, 496
DEBUG:numba.core.ssa:==== SSA block analysis pass on 488
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $const490.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id = $492inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 496
DEBUG:numba.core.ssa:==== SSA block analysis pass on 496
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $500compare_op.2 = distance_electron < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool502 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $502pred = call bool502($500compare_op.2, func=bool502, args=(Var($500compare_op.2, r_packet.py:483),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $502pred, 506, 518
DEBUG:numba.core.ssa:==== SSA block analysis pass on 506
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: distance = distance_electron
DEBUG:numba.core.ssa:on stmt: $510load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $512load_attr.2 = getattr(value=$510load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $512load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block analysis pass on 518
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: $522load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $524load_attr.2 = getattr(value=$522load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $524load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block analysis pass on 528
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43602490>
DEBUG:numba.core.ssa:on stmt: $534build_tuple.3 = build_tuple(items=[Var(distance, r_packet.py:430), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:on stmt: $536return_value.4 = cast(value=$534build_tuple.3)
DEBUG:numba.core.ssa:on stmt: return $536return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102load_attr.43': [<numba.core.ir.Assign object at 0x7f6e43592590>],
             '$106load_attr.45': [<numba.core.ir.Assign object at 0x7f6e43592790>],
             '$10binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e45f02750>],
             '$110load_attr.47': [<numba.core.ir.Assign object at 0x7f6e43592710>],
             '$112call_function.48': [<numba.core.ir.Assign object at 0x7f6e43592150>],
             '$118load_attr.50': [<numba.core.ir.Assign object at 0x7f6e4570ce50>],
             '$122binary_multiply.52': [<numba.core.ir.Assign object at 0x7f6e4570c1d0>],
             '$130load_global.54': [<numba.core.ir.Assign object at 0x7f6e4570c8d0>],
             '$134load_attr.56': [<numba.core.ir.Assign object at 0x7f6e4570c990>],
             '$136call_function.57': [<numba.core.ir.Assign object at 0x7f6e4570cc10>],
             '$140binary_subtract.59': [<numba.core.ir.Assign object at 0x7f6e4570c690>],
             '$148load_global.0': [<numba.core.ir.Assign object at 0x7f6e4359dd50>],
             '$152load_global.2': [<numba.core.ir.Assign object at 0x7f6e4570c510>],
             '$156load_attr.4': [<numba.core.ir.Assign object at 0x7f6e45a3f710>],
             '$158call_function.5': [<numba.core.ir.Assign object at 0x7f6e45720fd0>],
             '$160call_function.6': [<numba.core.ir.Assign object at 0x7f6e456fa590>],
             '$162get_iter.7': [<numba.core.ir.Assign object at 0x7f6e4578da10>],
             '$164for_iter.1': [<numba.core.ir.Assign object at 0x7f6e45eda810>],
             '$164for_iter.2': [<numba.core.ir.Assign object at 0x7f6e45edaf50>],
             '$164for_iter.3': [<numba.core.ir.Assign object at 0x7f6e45edaa90>],
             '$16load_attr.6': [<numba.core.ir.Assign object at 0x7f6e45f02690>],
             '$172load_attr.3': [<numba.core.ir.Assign object at 0x7f6e45eda950>],
             '$176binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e45edaf10>],
             '$182load_attr.7': [<numba.core.ir.Assign object at 0x7f6e45ececd0>],
             '$188binary_subtract.10': [<numba.core.ir.Assign object at 0x7f6e4622e050>],
             '$190binary_subscr.11': [<numba.core.ir.Assign object at 0x7f6e45f06ad0>],
             '$196load_attr.13': [<numba.core.ir.Assign object at 0x7f6e43656d50>],
             '$202load_attr.16': [<numba.core.ir.Assign object at 0x7f6e45b77ed0>],
             '$204build_tuple.17': [<numba.core.ir.Assign object at 0x7f6e45b77790>],
             '$206binary_subscr.18': [<numba.core.ir.Assign object at 0x7f6e45b77f10>],
             '$20load_attr.8': [<numba.core.ir.Assign object at 0x7f6e4359d9d0>],
             '$214inplace_add.21': [<numba.core.ir.Assign object at 0x7f6e45b775d0>],
             '$222compare_op.24': [<numba.core.ir.Assign object at 0x7f6e435b1a10>],
             '$226load_global.25': [<numba.core.ir.Assign object at 0x7f6e435b1750>],
             '$22binary_subscr.9': [<numba.core.ir.Assign object at 0x7f6e4359dfd0>],
             '$238load_attr.31': [<numba.core.ir.Assign object at 0x7f6e435b1210>],
             '$240call_function.32': [<numba.core.ir.Assign object at 0x7f6e435b10d0>],
             '$244load_global.33': [<numba.core.ir.Assign object at 0x7f6e435b1bd0>],
             '$250call_function.36': [<numba.core.ir.Assign object at 0x7f6e435b1f10>],
             '$258binary_add.39': [<numba.core.ir.Assign object at 0x7f6e43642210>],
             '$266compare_op.42': [<numba.core.ir.Assign object at 0x7f6e43642550>],
             '$268pred': [<numba.core.ir.Assign object at 0x7f6e43642790>],
             '$26load_global.10': [<numba.core.ir.Assign object at 0x7f6e4359d0d0>],
             '$276compare_op.3': [<numba.core.ir.Assign object at 0x7f6e435b1d90>],
             '$278pred': [<numba.core.ir.Assign object at 0x7f6e43642390>],
             '$286compare_op.3': [<numba.core.ir.Assign object at 0x7f6e43642a90>],
             '$288pred': [<numba.core.ir.Assign object at 0x7f6e43642cd0>],
             '$292load_global.1': [<numba.core.ir.Assign object at 0x7f6e43642e90>],
             '$294load_attr.2': [<numba.core.ir.Assign object at 0x7f6e43642f90>],
             '$30load_attr.12': [<numba.core.ir.Assign object at 0x7f6e4359db90>],
             '$314compare_op.3': [<numba.core.ir.Assign object at 0x7f6e4361e750>],
             '$316pred': [<numba.core.ir.Assign object at 0x7f6e4361e990>],
             '$324compare_op.3': [<numba.core.ir.Assign object at 0x7f6e4361ec50>],
             '$326pred': [<numba.core.ir.Assign object at 0x7f6e4361ee90>],
             '$334compare_op.3': [<numba.core.ir.Assign object at 0x7f6e435a91d0>],
             '$336pred': [<numba.core.ir.Assign object at 0x7f6e435a9410>],
             '$340load_global.1': [<numba.core.ir.Assign object at 0x7f6e435a95d0>],
             '$342load_attr.2': [<numba.core.ir.Assign object at 0x7f6e435a96d0>],
             '$34load_attr.14': [<numba.core.ir.Assign object at 0x7f6e4359d850>],
             '$358load_global.1': [<numba.core.ir.Assign object at 0x7f6e435a9c10>],
             '$370load_attr.7': [<numba.core.ir.Assign object at 0x7f6e435a7150>],
             '$372call_function.8': [<numba.core.ir.Assign object at 0x7f6e435a72d0>],
             '$380compare_op.11': [<numba.core.ir.Assign object at 0x7f6e435a74d0>],
             '$382pred': [<numba.core.ir.Assign object at 0x7f6e435a7710>],
             '$386load_global.1': [<numba.core.ir.Assign object at 0x7f6e435a7350>],
             '$388load_attr.2': [<numba.core.ir.Assign object at 0x7f6e435a7850>],
             '$390pred': [<numba.core.ir.Assign object at 0x7f6e435a7a90>],
             '$394load_global.1': [<numba.core.ir.Assign object at 0x7f6e435a7c90>],
             '$396load_attr.2': [<numba.core.ir.Assign object at 0x7f6e435a7d90>],
             '$402load_attr.4': [<numba.core.ir.Assign object at 0x7f6e435a7fd0>],
             '$40call_function.17': [<numba.core.ir.Assign object at 0x7f6e4359d250>],
             '$428pred': [<numba.core.ir.Assign object at 0x7f6e435a48d0>],
             '$42unpack_sequence.18': [<numba.core.ir.Assign object at 0x7f6e4359d310>],
             '$42unpack_sequence.19': [<numba.core.ir.Assign object at 0x7f6e4359d910>],
             '$42unpack_sequence.20': [<numba.core.ir.Assign object at 0x7f6e4359d1d0>],
             '$432load_global.1': [<numba.core.ir.Assign object at 0x7f6e435a4a50>],
             '$440binary_add.5': [<numba.core.ir.Assign object at 0x7f6e435a4dd0>],
             '$446call_function.8': [<numba.core.ir.Assign object at 0x7f6e43598b90>],
             '$450load_global.1': [<numba.core.ir.Assign object at 0x7f6e43598a50>],
             '$458binary_subtract.5': [<numba.core.ir.Assign object at 0x7f6e43598890>],
             '$460call_function.6': [<numba.core.ir.Assign object at 0x7f6e43598550>],
             '$470load_global.1': [<numba.core.ir.Assign object at 0x7f6e43598d10>],
             '$474load_attr.3': [<numba.core.ir.Assign object at 0x7f6e43598f90>],
             '$476call_function.4': [<numba.core.ir.Assign object at 0x7f6e43598410>],
             '$480binary_subtract.6': [<numba.core.ir.Assign object at 0x7f6e435980d0>],
             '$482compare_op.7': [<numba.core.ir.Assign object at 0x7f6e43598310>],
             '$484pred': [<numba.core.ir.Assign object at 0x7f6e43597190>],
             '$492inplace_add.2': [<numba.core.ir.Assign object at 0x7f6e43597490>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45f020d0>],
             '$500compare_op.2': [<numba.core.ir.Assign object at 0x7f6e43597810>],
             '$502pred': [<numba.core.ir.Assign object at 0x7f6e43597a50>],
             '$50load_attr.22': [<numba.core.ir.Assign object at 0x7f6e435ac610>],
             '$510load_global.1': [<numba.core.ir.Assign object at 0x7f6e43597cd0>],
             '$512load_attr.2': [<numba.core.ir.Assign object at 0x7f6e43597dd0>],
             '$522load_global.1': [<numba.core.ir.Assign object at 0x7f6e4358e250>],
             '$524load_attr.2': [<numba.core.ir.Assign object at 0x7f6e4358e350>],
             '$534build_tuple.3': [<numba.core.ir.Assign object at 0x7f6e4358e850>],
             '$536return_value.4': [<numba.core.ir.Assign object at 0x7f6e4358e950>],
             '$54load_global.23': [<numba.core.ir.Assign object at 0x7f6e435ac2d0>],
             '$56load_method.24': [<numba.core.ir.Assign object at 0x7f6e435ac350>],
             '$58load_global.25': [<numba.core.ir.Assign object at 0x7f6e435ac0d0>],
             '$60load_attr.26': [<numba.core.ir.Assign object at 0x7f6e435ac750>],
             '$62load_method.27': [<numba.core.ir.Assign object at 0x7f6e435ac210>],
             '$64call_method.28': [<numba.core.ir.Assign object at 0x7f6e435ac810>],
             '$66call_method.29': [<numba.core.ir.Assign object at 0x7f6e435ace90>],
             '$68unary_negative.30': [<numba.core.ir.Assign object at 0x7f6e435acbd0>],
             '$78load_attr.33': [<numba.core.ir.Assign object at 0x7f6e435acc10>],
             '$82load_attr.35': [<numba.core.ir.Assign object at 0x7f6e43592e90>],
             '$84binary_subscr.36': [<numba.core.ir.Assign object at 0x7f6e43592290>],
             '$88load_global.37': [<numba.core.ir.Assign object at 0x7f6e43592d10>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f6e45f02ed0>],
             '$94call_function.40': [<numba.core.ir.Assign object at 0x7f6e43592c10>],
             '$98load_global.41': [<numba.core.ir.Assign object at 0x7f6e43592990>],
             '$const138.58': [<numba.core.ir.Assign object at 0x7f6e4570ccd0>],
             '$const186.9': [<numba.core.ir.Assign object at 0x7f6e4622ed90>],
             '$const284.2': [<numba.core.ir.Assign object at 0x7f6e43642990>],
             '$const332.2': [<numba.core.ir.Assign object at 0x7f6e435a90d0>],
             '$const438.4': [<numba.core.ir.Assign object at 0x7f6e435a4cd0>],
             '$const478.5': [<numba.core.ir.Assign object at 0x7f6e435988d0>],
             '$const490.1': [<numba.core.ir.Assign object at 0x7f6e43597390>],
             '$const72.31': [<numba.core.ir.Assign object at 0x7f6e435acf10>],
             '$phi164.0': [<numba.core.ir.Assign object at 0x7f6e4359d5d0>],
             '$phi168.1': [<numba.core.ir.Assign object at 0x7f6e45edae90>],
             'bool268': [<numba.core.ir.Assign object at 0x7f6e43642690>],
             'bool278': [<numba.core.ir.Assign object at 0x7f6e45edab50>],
             'bool288': [<numba.core.ir.Assign object at 0x7f6e43642bd0>],
             'bool316': [<numba.core.ir.Assign object at 0x7f6e4361e890>],
             'bool326': [<numba.core.ir.Assign object at 0x7f6e4361ed90>],
             'bool336': [<numba.core.ir.Assign object at 0x7f6e435a9310>],
             'bool382': [<numba.core.ir.Assign object at 0x7f6e435a7610>],
             'bool390': [<numba.core.ir.Assign object at 0x7f6e435a7990>],
             'bool428': [<numba.core.ir.Assign object at 0x7f6e435a47d0>],
             'bool484': [<numba.core.ir.Assign object at 0x7f6e435970d0>],
             'bool502': [<numba.core.ir.Assign object at 0x7f6e43597950>],
             'comov_nu': [<numba.core.ir.Assign object at 0x7f6e4570cf10>],
             'cur_electron_density': [<numba.core.ir.Assign object at 0x7f6e43592cd0>],
             'cur_line_id': [<numba.core.ir.Assign object at 0x7f6e4570c850>,
                             <numba.core.ir.Assign object at 0x7f6e4570c490>,
                             <numba.core.ir.Assign object at 0x7f6e435985d0>],
             'delta_shell': [<numba.core.ir.Assign object at 0x7f6e4359d590>],
             'distance': [<numba.core.ir.Assign object at 0x7f6e4361e490>,
                          <numba.core.ir.Assign object at 0x7f6e435a9750>,
                          <numba.core.ir.Assign object at 0x7f6e435a7e10>,
                          <numba.core.ir.Assign object at 0x7f6e43597510>,
                          <numba.core.ir.Assign object at 0x7f6e43597e50>],
             'distance_boundary': [<numba.core.ir.Assign object at 0x7f6e4359d950>],
             'distance_electron': [<numba.core.ir.Assign object at 0x7f6e43592b10>,
                                   <numba.core.ir.Assign object at 0x7f6e435a4690>],
             'distance_trace': [<numba.core.ir.Assign object at 0x7f6e435b1090>],
             'doppler_factor': [<numba.core.ir.Assign object at 0x7f6e4623f890>],
             'estimators': [<numba.core.ir.Assign object at 0x7f6e4603bd10>],
             'interaction_type': [<numba.core.ir.Assign object at 0x7f6e4361e090>,
                                  <numba.core.ir.Assign object at 0x7f6e4361e450>,
                                  <numba.core.ir.Assign object at 0x7f6e435a9890>,
                                  <numba.core.ir.Assign object at 0x7f6e43597bd0>,
                                  <numba.core.ir.Assign object at 0x7f6e4358e110>],
             'is_last_line': [<numba.core.ir.Assign object at 0x7f6e435b1810>],
             'last_line_id': [<numba.core.ir.Assign object at 0x7f6e43637510>],
             'nu_line': [<numba.core.ir.Assign object at 0x7f6e45edabd0>],
             'nu_line_last_interaction': [<numba.core.ir.Assign object at 0x7f6e462285d0>],
             'numba_model': [<numba.core.ir.Assign object at 0x7f6e45a57e50>],
             'numba_plasma': [<numba.core.ir.Assign object at 0x7f6e4603b490>],
             'r_inner': [<numba.core.ir.Assign object at 0x7f6e45f02d90>],
             'r_outer': [<numba.core.ir.Assign object at 0x7f6e4359df10>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e45a5ebd0>],
             'start_line_id': [<numba.core.ir.Assign object at 0x7f6e435ac590>],
             'tau_event': [<numba.core.ir.Assign object at 0x7f6e435acdd0>],
             'tau_trace_combined': [<numba.core.ir.Assign object at 0x7f6e436422d0>],
             'tau_trace_electron': [<numba.core.ir.Assign object at 0x7f6e435b1f90>],
             'tau_trace_line': [<numba.core.ir.Assign object at 0x7f6e45b77310>],
             'tau_trace_line_combined': [<numba.core.ir.Assign object at 0x7f6e435ac910>,
                                         <numba.core.ir.Assign object at 0x7f6e45b77150>]})
DEBUG:numba.core.ssa:SSA violators {'cur_line_id',
 'distance',
 'distance_electron',
 'interaction_type',
 'tau_trace_line_combined'}
DEBUG:numba.core.ssa:Fix SSA violator on var cur_line_id
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, r_packet.py:361), Var($34load_attr.14, r_packet.py:361), Var(r_inner, r_packet.py:357), Var(r_outer, r_packet.py:358)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $54load_global.23 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.24 = getattr(value=$54load_global.23, attr=log)
DEBUG:numba.core.ssa:on stmt: $58load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=$58load_global.25, attr=random)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_attr.26, attr=random)
DEBUG:numba.core.ssa:on stmt: $64call_method.28 = call $62load_method.27(func=$62load_method.27, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $66call_method.29 = call $56load_method.24($64call_method.28, func=$56load_method.24, args=[Var($64call_method.28, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $68unary_negative.30 = unary(fn=<built-in function neg>, value=$66call_method.29)
DEBUG:numba.core.ssa:on stmt: tau_event = $68unary_negative.30
DEBUG:numba.core.ssa:on stmt: $const72.31 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:on stmt: $78load_attr.33 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $82load_attr.35 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.36 = getitem(value=$78load_attr.33, index=$82load_attr.35)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $84binary_subscr.36
DEBUG:numba.core.ssa:on stmt: $88load_global.37 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $88load_global.37(cur_electron_density, tau_event, func=$88load_global.37, args=[Var(cur_electron_density, r_packet.py:374), Var(tau_event, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $98load_global.41 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $102load_attr.43 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $106load_attr.45 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $110load_attr.47 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $112call_function.48 = call $98load_global.41($102load_attr.43, $106load_attr.45, $110load_attr.47, func=$98load_global.41, args=[Var($102load_attr.43, r_packet.py:382), Var($106load_attr.45, r_packet.py:382), Var($110load_attr.47, r_packet.py:382)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $112call_function.48
DEBUG:numba.core.ssa:on stmt: $118load_attr.50 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $122binary_multiply.52 = $118load_attr.50 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $122binary_multiply.52
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:first assign: cur_line_id
DEBUG:numba.core.ssa:replaced with: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: $130load_global.54 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $134load_attr.56 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $136call_function.57 = call $130load_global.54($134load_attr.56, func=$130load_global.54, args=[Var($134load_attr.56, r_packet.py:388)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const138.58 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $140binary_subtract.59 = $136call_function.57 - $const138.58
DEBUG:numba.core.ssa:on stmt: last_line_id = $140binary_subtract.59
DEBUG:numba.core.ssa:on stmt: jump 144
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $148load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $152load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $158call_function.5 = call $152load_global.2($156load_attr.4, func=$152load_global.2, args=[Var($156load_attr.4, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160call_function.6 = call $148load_global.0(start_line_id, $158call_function.5, func=$148load_global.0, args=[Var(start_line_id, r_packet.py:365), Var($158call_function.5, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $162get_iter.7 = getiter(value=$160call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi164.0 = $162get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $164for_iter.1 = iternext(value=$phi164.0)
DEBUG:numba.core.ssa:on stmt: $164for_iter.2 = pair_first(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $164for_iter.3 = pair_second(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi168.1 = $164for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $164for_iter.3, 168, 466
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: cur_line_id = $phi168.1
DEBUG:numba.core.ssa:replaced with: cur_line_id.1 = $phi168.1
DEBUG:numba.core.ssa:on stmt: $172load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id)
DEBUG:numba.core.ssa:on stmt: nu_line = $176binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_attr.7 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const186.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $188binary_subtract.10 = cur_line_id - $const186.9
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.11 = getitem(value=$182load_attr.7, index=$188binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: nu_line_last_interaction = $190binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $196load_attr.13 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $202load_attr.16 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $204build_tuple.17 = build_tuple(items=[Var(cur_line_id, r_packet.py:386), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:on stmt: $206binary_subscr.18 = getitem(value=$196load_attr.13, index=$204build_tuple.17)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $206binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $214inplace_add.21
DEBUG:numba.core.ssa:on stmt: $222compare_op.24 = cur_line_id == last_line_id
DEBUG:numba.core.ssa:on stmt: is_last_line = $222compare_op.24
DEBUG:numba.core.ssa:on stmt: $226load_global.25 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $238load_attr.31 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $240call_function.32 = call $226load_global.25(r_packet, comov_nu, is_last_line, nu_line, $238load_attr.31, func=$226load_global.25, args=[Var(r_packet, r_packet.py:357), Var(comov_nu, r_packet.py:384), Var(is_last_line, r_packet.py:406), Var(nu_line, r_packet.py:393), Var($238load_attr.31, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace = $240call_function.32
DEBUG:numba.core.ssa:on stmt: $244load_global.33 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $250call_function.36 = call $244load_global.33(cur_electron_density, distance_trace, func=$244load_global.33, args=[Var(cur_electron_density, r_packet.py:374), Var(distance_trace, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_electron = $250call_function.36
DEBUG:numba.core.ssa:on stmt: $258binary_add.39 = tau_trace_line_combined + tau_trace_electron
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $258binary_add.39
DEBUG:numba.core.ssa:on stmt: $266compare_op.42 = distance_boundary <= distance_trace
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.42, func=bool268, args=(Var($266compare_op.42, r_packet.py:425),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 272, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $276compare_op.3 = distance_boundary <= distance_electron
DEBUG:numba.core.ssa:on stmt: bool278 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $278pred = call bool278($276compare_op.3, func=bool278, args=(Var($276compare_op.3, r_packet.py:426),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $278pred, 282, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $const284.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $286compare_op.3 = distance_trace != $const284.2
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.3, func=bool288, args=(Var($286compare_op.3, r_packet.py:427),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $292load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $294load_attr.2 = getattr(value=$292load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 310
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $314compare_op.3 = distance_electron < distance_trace
DEBUG:numba.core.ssa:on stmt: bool316 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $316pred = call bool316($314compare_op.3, func=bool316, args=(Var($314compare_op.3, r_packet.py:434),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $316pred, 320, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $324compare_op.3 = distance_electron < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($324compare_op.3, func=bool326, args=(Var($324compare_op.3, r_packet.py:435),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 330, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 330
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $const332.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $334compare_op.3 = distance_trace != $const332.2
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336($334compare_op.3, func=bool336, args=(Var($334compare_op.3, r_packet.py:436),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 340, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $340load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $342load_attr.2 = getattr(value=$340load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $342load_attr.2
DEBUG:numba.core.ssa:on stmt: distance = distance_electron
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $358load_global.1 = global(update_line_estimators: CPUDispatcher(<function update_line_estimators at 0x7f6e4a0f6b00>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id, r_packet.py:386), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $380compare_op.11 = tau_trace_combined > tau_event
DEBUG:numba.core.ssa:on stmt: bool382 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $382pred = call bool382($380compare_op.11, func=bool382, args=(Var($380compare_op.11, r_packet.py:456),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $382pred, 386, 426
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $386load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $388load_attr.2 = getattr(value=$386load_global.1, attr=disable_line_scattering)
DEBUG:numba.core.ssa:on stmt: bool390 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $390pred = call bool390($388load_attr.2, func=bool390, args=(Var($388load_attr.2, r_packet.py:457),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $390pred, 426, 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $394load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $396load_attr.2 = getattr(value=$394load_global.1, attr=LINE)
DEBUG:numba.core.ssa:on stmt: interaction_type = $396load_attr.2
DEBUG:numba.core.ssa:on stmt: $402load_attr.4 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_in_nu = $402load_attr.4
DEBUG:numba.core.ssa:on stmt: (r_packet).last_line_interaction_in_id = cur_line_id
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:on stmt: distance = distance_trace
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 426
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: bool428 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $428pred = call bool428(is_last_line, func=bool428, args=(Var(is_last_line, r_packet.py:406),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $428pred, 450, 432
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 432
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $432load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $const438.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $440binary_add.5 = cur_line_id + $const438.4
DEBUG:numba.core.ssa:on stmt: $446call_function.8 = call $432load_global.1(r_packet, $440binary_add.5, nu_line, numba_plasma, func=$432load_global.1, args=[Var(r_packet, r_packet.py:357), Var($440binary_add.5, r_packet.py:468), Var(nu_line, r_packet.py:393), Var(numba_plasma, r_packet.py:357)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 450
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 450
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $450load_global.1 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $458binary_subtract.5 = tau_event - tau_trace_line_combined
DEBUG:numba.core.ssa:on stmt: $460call_function.6 = call $450load_global.1(cur_electron_density, $458binary_subtract.5, func=$450load_global.1, args=[Var(cur_electron_density, r_packet.py:374), Var($458binary_subtract.5, r_packet.py:474)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $460call_function.6
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 466
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: jump 468
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 468
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $470load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $474load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $476call_function.4 = call $470load_global.1($474load_attr.3, func=$470load_global.1, args=[Var($474load_attr.3, r_packet.py:480)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const478.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.6 = $476call_function.4 - $const478.5
DEBUG:numba.core.ssa:on stmt: $482compare_op.7 = cur_line_id == $480binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool484 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $484pred = call bool484($482compare_op.7, func=bool484, args=(Var($482compare_op.7, r_packet.py:480),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $484pred, 488, 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 488
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $const490.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id = $492inplace_add.2
DEBUG:numba.core.ssa:replaced with: cur_line_id.2 = $492inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 496
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $500compare_op.2 = distance_electron < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool502 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $502pred = call bool502($500compare_op.2, func=bool502, args=(Var($500compare_op.2, r_packet.py:483),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $502pred, 506, 518
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 506
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: distance = distance_electron
DEBUG:numba.core.ssa:on stmt: $510load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $512load_attr.2 = getattr(value=$510load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $512load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 518
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: $522load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $524load_attr.2 = getattr(value=$522load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $524load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 528
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f92a50>
DEBUG:numba.core.ssa:on stmt: $534build_tuple.3 = build_tuple(items=[Var(distance, r_packet.py:430), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:on stmt: $536return_value.4 = cast(value=$534build_tuple.3)
DEBUG:numba.core.ssa:on stmt: return $536return_value.4
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e4358f850>],
             168: [<numba.core.ir.Assign object at 0x7f6e4358fb50>],
             488: [<numba.core.ir.Assign object at 0x7f6e4358fa50>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, r_packet.py:361), Var($34load_attr.14, r_packet.py:361), Var(r_inner, r_packet.py:357), Var(r_outer, r_packet.py:358)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $54load_global.23 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.24 = getattr(value=$54load_global.23, attr=log)
DEBUG:numba.core.ssa:on stmt: $58load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=$58load_global.25, attr=random)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_attr.26, attr=random)
DEBUG:numba.core.ssa:on stmt: $64call_method.28 = call $62load_method.27(func=$62load_method.27, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $66call_method.29 = call $56load_method.24($64call_method.28, func=$56load_method.24, args=[Var($64call_method.28, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $68unary_negative.30 = unary(fn=<built-in function neg>, value=$66call_method.29)
DEBUG:numba.core.ssa:on stmt: tau_event = $68unary_negative.30
DEBUG:numba.core.ssa:on stmt: $const72.31 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:on stmt: $78load_attr.33 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $82load_attr.35 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.36 = getitem(value=$78load_attr.33, index=$82load_attr.35)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $84binary_subscr.36
DEBUG:numba.core.ssa:on stmt: $88load_global.37 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $88load_global.37(cur_electron_density, tau_event, func=$88load_global.37, args=[Var(cur_electron_density, r_packet.py:374), Var(tau_event, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $98load_global.41 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $102load_attr.43 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $106load_attr.45 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $110load_attr.47 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $112call_function.48 = call $98load_global.41($102load_attr.43, $106load_attr.45, $110load_attr.47, func=$98load_global.41, args=[Var($102load_attr.43, r_packet.py:382), Var($106load_attr.45, r_packet.py:382), Var($110load_attr.47, r_packet.py:382)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $112call_function.48
DEBUG:numba.core.ssa:on stmt: $118load_attr.50 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $122binary_multiply.52 = $118load_attr.50 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $122binary_multiply.52
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: $130load_global.54 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $134load_attr.56 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $136call_function.57 = call $130load_global.54($134load_attr.56, func=$130load_global.54, args=[Var($134load_attr.56, r_packet.py:388)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const138.58 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $140binary_subtract.59 = $136call_function.57 - $const138.58
DEBUG:numba.core.ssa:on stmt: last_line_id = $140binary_subtract.59
DEBUG:numba.core.ssa:on stmt: jump 144
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $148load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $152load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $158call_function.5 = call $152load_global.2($156load_attr.4, func=$152load_global.2, args=[Var($156load_attr.4, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160call_function.6 = call $148load_global.0(start_line_id, $158call_function.5, func=$148load_global.0, args=[Var(start_line_id, r_packet.py:365), Var($158call_function.5, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $162get_iter.7 = getiter(value=$160call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi164.0 = $162get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $164for_iter.1 = iternext(value=$phi164.0)
DEBUG:numba.core.ssa:on stmt: $164for_iter.2 = pair_first(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $164for_iter.3 = pair_second(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi168.1 = $164for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $164for_iter.3, 168, 466
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi168.1
DEBUG:numba.core.ssa:on stmt: $172load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id)
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id)
DEBUG:numba.core.ssa:replaced with: $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $176binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_attr.7 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const186.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $188binary_subtract.10 = cur_line_id - $const186.9
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$188binary_subtract.10 = cur_line_id - $const186.9
DEBUG:numba.core.ssa:replaced with: $188binary_subtract.10 = cur_line_id.1 - $const186.9
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.11 = getitem(value=$182load_attr.7, index=$188binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: nu_line_last_interaction = $190binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $196load_attr.13 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $202load_attr.16 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $204build_tuple.17 = build_tuple(items=[Var(cur_line_id, r_packet.py:386), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$204build_tuple.17 = build_tuple(items=[Var(cur_line_id, r_packet.py:386), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:replaced with: $204build_tuple.17 = build_tuple(items=[Var(cur_line_id.1, r_packet.py:390), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:on stmt: $206binary_subscr.18 = getitem(value=$196load_attr.13, index=$204build_tuple.17)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $206binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $214inplace_add.21
DEBUG:numba.core.ssa:on stmt: $222compare_op.24 = cur_line_id == last_line_id
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$222compare_op.24 = cur_line_id == last_line_id
DEBUG:numba.core.ssa:replaced with: $222compare_op.24 = cur_line_id.1 == last_line_id
DEBUG:numba.core.ssa:on stmt: is_last_line = $222compare_op.24
DEBUG:numba.core.ssa:on stmt: $226load_global.25 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $238load_attr.31 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $240call_function.32 = call $226load_global.25(r_packet, comov_nu, is_last_line, nu_line, $238load_attr.31, func=$226load_global.25, args=[Var(r_packet, r_packet.py:357), Var(comov_nu, r_packet.py:384), Var(is_last_line, r_packet.py:406), Var(nu_line, r_packet.py:393), Var($238load_attr.31, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace = $240call_function.32
DEBUG:numba.core.ssa:on stmt: $244load_global.33 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $250call_function.36 = call $244load_global.33(cur_electron_density, distance_trace, func=$244load_global.33, args=[Var(cur_electron_density, r_packet.py:374), Var(distance_trace, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_electron = $250call_function.36
DEBUG:numba.core.ssa:on stmt: $258binary_add.39 = tau_trace_line_combined + tau_trace_electron
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $258binary_add.39
DEBUG:numba.core.ssa:on stmt: $266compare_op.42 = distance_boundary <= distance_trace
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.42, func=bool268, args=(Var($266compare_op.42, r_packet.py:425),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 272, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $276compare_op.3 = distance_boundary <= distance_electron
DEBUG:numba.core.ssa:on stmt: bool278 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $278pred = call bool278($276compare_op.3, func=bool278, args=(Var($276compare_op.3, r_packet.py:426),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $278pred, 282, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $const284.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $286compare_op.3 = distance_trace != $const284.2
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.3, func=bool288, args=(Var($286compare_op.3, r_packet.py:427),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $292load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $294load_attr.2 = getattr(value=$292load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=(r_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:find_def_from_top label 292
DEBUG:numba.core.ssa:idom 282 from label 292
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:idom 272 from label 282
DEBUG:numba.core.ssa:find_def_from_bottom label 272
DEBUG:numba.core.ssa:find_def_from_top label 272
DEBUG:numba.core.ssa:idom 168 from label 272
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:replaced with: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 310
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $314compare_op.3 = distance_electron < distance_trace
DEBUG:numba.core.ssa:on stmt: bool316 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $316pred = call bool316($314compare_op.3, func=bool316, args=(Var($314compare_op.3, r_packet.py:434),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $316pred, 320, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $324compare_op.3 = distance_electron < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($324compare_op.3, func=bool326, args=(Var($324compare_op.3, r_packet.py:435),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 330, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 330
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $const332.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $334compare_op.3 = distance_trace != $const332.2
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336($334compare_op.3, func=bool336, args=(Var($334compare_op.3, r_packet.py:436),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 340, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $340load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $342load_attr.2 = getattr(value=$340load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $342load_attr.2
DEBUG:numba.core.ssa:on stmt: distance = distance_electron
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=(r_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:find_def_from_top label 340
DEBUG:numba.core.ssa:idom 330 from label 340
DEBUG:numba.core.ssa:find_def_from_bottom label 330
DEBUG:numba.core.ssa:find_def_from_top label 330
DEBUG:numba.core.ssa:idom 320 from label 330
DEBUG:numba.core.ssa:find_def_from_bottom label 320
DEBUG:numba.core.ssa:find_def_from_top label 320
DEBUG:numba.core.ssa:idom 310 from label 320
DEBUG:numba.core.ssa:find_def_from_bottom label 310
DEBUG:numba.core.ssa:find_def_from_top label 310
DEBUG:numba.core.ssa:idom 168 from label 310
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:replaced with: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $358load_global.1 = global(update_line_estimators: CPUDispatcher(<function update_line_estimators at 0x7f6e4a0f6b00>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id, r_packet.py:386), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id, r_packet.py:386), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def_from_top label 358
DEBUG:numba.core.ssa:idom 310 from label 358
DEBUG:numba.core.ssa:find_def_from_bottom label 310
DEBUG:numba.core.ssa:find_def_from_top label 310
DEBUG:numba.core.ssa:idom 168 from label 310
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:replaced with: $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id.1, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id.1, r_packet.py:390), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $380compare_op.11 = tau_trace_combined > tau_event
DEBUG:numba.core.ssa:on stmt: bool382 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $382pred = call bool382($380compare_op.11, func=bool382, args=(Var($380compare_op.11, r_packet.py:456),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $382pred, 386, 426
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $386load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $388load_attr.2 = getattr(value=$386load_global.1, attr=disable_line_scattering)
DEBUG:numba.core.ssa:on stmt: bool390 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $390pred = call bool390($388load_attr.2, func=bool390, args=(Var($388load_attr.2, r_packet.py:457),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $390pred, 426, 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $394load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $396load_attr.2 = getattr(value=$394load_global.1, attr=LINE)
DEBUG:numba.core.ssa:on stmt: interaction_type = $396load_attr.2
DEBUG:numba.core.ssa:on stmt: $402load_attr.4 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_in_nu = $402load_attr.4
DEBUG:numba.core.ssa:on stmt: (r_packet).last_line_interaction_in_id = cur_line_id
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=(r_packet).last_line_interaction_in_id = cur_line_id
DEBUG:numba.core.ssa:find_def_from_top label 394
DEBUG:numba.core.ssa:idom 386 from label 394
DEBUG:numba.core.ssa:find_def_from_bottom label 386
DEBUG:numba.core.ssa:find_def_from_top label 386
DEBUG:numba.core.ssa:idom 358 from label 386
DEBUG:numba.core.ssa:find_def_from_bottom label 358
DEBUG:numba.core.ssa:find_def_from_top label 358
DEBUG:numba.core.ssa:idom 310 from label 358
DEBUG:numba.core.ssa:find_def_from_bottom label 310
DEBUG:numba.core.ssa:find_def_from_top label 310
DEBUG:numba.core.ssa:idom 168 from label 310
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:replaced with: (r_packet).last_line_interaction_in_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=(r_packet).next_line_id = cur_line_id
DEBUG:numba.core.ssa:find_def_from_top label 394
DEBUG:numba.core.ssa:idom 386 from label 394
DEBUG:numba.core.ssa:find_def_from_bottom label 386
DEBUG:numba.core.ssa:find_def_from_top label 386
DEBUG:numba.core.ssa:idom 358 from label 386
DEBUG:numba.core.ssa:find_def_from_bottom label 358
DEBUG:numba.core.ssa:find_def_from_top label 358
DEBUG:numba.core.ssa:idom 310 from label 358
DEBUG:numba.core.ssa:find_def_from_bottom label 310
DEBUG:numba.core.ssa:find_def_from_top label 310
DEBUG:numba.core.ssa:idom 168 from label 310
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:replaced with: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_trace
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 426
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: bool428 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $428pred = call bool428(is_last_line, func=bool428, args=(Var(is_last_line, r_packet.py:406),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $428pred, 450, 432
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 432
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $432load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $const438.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $440binary_add.5 = cur_line_id + $const438.4
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$440binary_add.5 = cur_line_id + $const438.4
DEBUG:numba.core.ssa:find_def_from_top label 432
DEBUG:numba.core.ssa:idom 426 from label 432
DEBUG:numba.core.ssa:find_def_from_bottom label 426
DEBUG:numba.core.ssa:find_def_from_top label 426
DEBUG:numba.core.ssa:idom 358 from label 426
DEBUG:numba.core.ssa:find_def_from_bottom label 358
DEBUG:numba.core.ssa:find_def_from_top label 358
DEBUG:numba.core.ssa:idom 310 from label 358
DEBUG:numba.core.ssa:find_def_from_bottom label 310
DEBUG:numba.core.ssa:find_def_from_top label 310
DEBUG:numba.core.ssa:idom 168 from label 310
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:replaced with: $440binary_add.5 = cur_line_id.1 + $const438.4
DEBUG:numba.core.ssa:on stmt: $446call_function.8 = call $432load_global.1(r_packet, $440binary_add.5, nu_line, numba_plasma, func=$432load_global.1, args=[Var(r_packet, r_packet.py:357), Var($440binary_add.5, r_packet.py:468), Var(nu_line, r_packet.py:393), Var(numba_plasma, r_packet.py:357)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 450
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 450
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $450load_global.1 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $458binary_subtract.5 = tau_event - tau_trace_line_combined
DEBUG:numba.core.ssa:on stmt: $460call_function.6 = call $450load_global.1(cur_electron_density, $458binary_subtract.5, func=$450load_global.1, args=[Var(cur_electron_density, r_packet.py:374), Var($458binary_subtract.5, r_packet.py:474)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $460call_function.6
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 466
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: jump 468
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 468
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $470load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $474load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $476call_function.4 = call $470load_global.1($474load_attr.3, func=$470load_global.1, args=[Var($474load_attr.3, r_packet.py:480)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const478.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.6 = $476call_function.4 - $const478.5
DEBUG:numba.core.ssa:on stmt: $482compare_op.7 = cur_line_id == $480binary_subtract.6
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$482compare_op.7 = cur_line_id == $480binary_subtract.6
DEBUG:numba.core.ssa:find_def_from_top label 468
DEBUG:numba.core.ssa:idom 466 from label 468
DEBUG:numba.core.ssa:find_def_from_bottom label 466
DEBUG:numba.core.ssa:find_def_from_top label 466
DEBUG:numba.core.ssa:idom 164 from label 466
DEBUG:numba.core.ssa:find_def_from_bottom label 164
DEBUG:numba.core.ssa:find_def_from_top label 164
DEBUG:numba.core.ssa:insert phi node cur_line_id.3 = phi(incoming_values=[], incoming_blocks=[]) at 164
DEBUG:numba.core.ssa:find_def_from_bottom label 144
DEBUG:numba.core.ssa:find_def_from_top label 144
DEBUG:numba.core.ssa:idom 0 from label 144
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def cur_line_id = start_line_id
DEBUG:numba.core.ssa:find_def_from_bottom label 450
DEBUG:numba.core.ssa:find_def_from_top label 450
DEBUG:numba.core.ssa:idom 426 from label 450
DEBUG:numba.core.ssa:find_def_from_bottom label 426
DEBUG:numba.core.ssa:find_def_from_top label 426
DEBUG:numba.core.ssa:idom 358 from label 426
DEBUG:numba.core.ssa:find_def_from_bottom label 358
DEBUG:numba.core.ssa:find_def_from_top label 358
DEBUG:numba.core.ssa:idom 310 from label 358
DEBUG:numba.core.ssa:find_def_from_bottom label 310
DEBUG:numba.core.ssa:find_def_from_top label 310
DEBUG:numba.core.ssa:idom 168 from label 310
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:incoming_def cur_line_id.1 = $phi168.1
DEBUG:numba.core.ssa:replaced with: $482compare_op.7 = cur_line_id.3 == $480binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool484 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $484pred = call bool484($482compare_op.7, func=bool484, args=(Var($482compare_op.7, r_packet.py:480),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $484pred, 488, 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 488
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $const490.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='cur_line_id' stmt=$492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 488
DEBUG:numba.core.ssa:idom 468 from label 488
DEBUG:numba.core.ssa:find_def_from_bottom label 468
DEBUG:numba.core.ssa:find_def_from_top label 468
DEBUG:numba.core.ssa:idom 466 from label 468
DEBUG:numba.core.ssa:find_def_from_bottom label 466
DEBUG:numba.core.ssa:find_def_from_top label 466
DEBUG:numba.core.ssa:idom 164 from label 466
DEBUG:numba.core.ssa:find_def_from_bottom label 164
DEBUG:numba.core.ssa:replaced with: $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $492inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 496
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $500compare_op.2 = distance_electron < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool502 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $502pred = call bool502($500compare_op.2, func=bool502, args=(Var($500compare_op.2, r_packet.py:483),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $502pred, 506, 518
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 506
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: distance = distance_electron
DEBUG:numba.core.ssa:on stmt: $510load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $512load_attr.2 = getattr(value=$510load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $512load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 518
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: $522load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $524load_attr.2 = getattr(value=$522load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $524load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 528
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4358f890>
DEBUG:numba.core.ssa:on stmt: $534build_tuple.3 = build_tuple(items=[Var(distance, r_packet.py:430), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:on stmt: $536return_value.4 = cast(value=$534build_tuple.3)
DEBUG:numba.core.ssa:on stmt: return $536return_value.4
DEBUG:numba.core.ssa:Fix SSA violator on var distance_electron
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, r_packet.py:361), Var($34load_attr.14, r_packet.py:361), Var(r_inner, r_packet.py:357), Var(r_outer, r_packet.py:358)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $54load_global.23 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.24 = getattr(value=$54load_global.23, attr=log)
DEBUG:numba.core.ssa:on stmt: $58load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=$58load_global.25, attr=random)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_attr.26, attr=random)
DEBUG:numba.core.ssa:on stmt: $64call_method.28 = call $62load_method.27(func=$62load_method.27, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $66call_method.29 = call $56load_method.24($64call_method.28, func=$56load_method.24, args=[Var($64call_method.28, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $68unary_negative.30 = unary(fn=<built-in function neg>, value=$66call_method.29)
DEBUG:numba.core.ssa:on stmt: tau_event = $68unary_negative.30
DEBUG:numba.core.ssa:on stmt: $const72.31 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:on stmt: $78load_attr.33 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $82load_attr.35 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.36 = getitem(value=$78load_attr.33, index=$82load_attr.35)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $84binary_subscr.36
DEBUG:numba.core.ssa:on stmt: $88load_global.37 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $88load_global.37(cur_electron_density, tau_event, func=$88load_global.37, args=[Var(cur_electron_density, r_packet.py:374), Var(tau_event, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $94call_function.40
DEBUG:numba.core.ssa:first assign: distance_electron
DEBUG:numba.core.ssa:replaced with: distance_electron = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $98load_global.41 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $102load_attr.43 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $106load_attr.45 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $110load_attr.47 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $112call_function.48 = call $98load_global.41($102load_attr.43, $106load_attr.45, $110load_attr.47, func=$98load_global.41, args=[Var($102load_attr.43, r_packet.py:382), Var($106load_attr.45, r_packet.py:382), Var($110load_attr.47, r_packet.py:382)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $112call_function.48
DEBUG:numba.core.ssa:on stmt: $118load_attr.50 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $122binary_multiply.52 = $118load_attr.50 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $122binary_multiply.52
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: $130load_global.54 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $134load_attr.56 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $136call_function.57 = call $130load_global.54($134load_attr.56, func=$130load_global.54, args=[Var($134load_attr.56, r_packet.py:388)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const138.58 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $140binary_subtract.59 = $136call_function.57 - $const138.58
DEBUG:numba.core.ssa:on stmt: last_line_id = $140binary_subtract.59
DEBUG:numba.core.ssa:on stmt: jump 144
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $148load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $152load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $158call_function.5 = call $152load_global.2($156load_attr.4, func=$152load_global.2, args=[Var($156load_attr.4, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160call_function.6 = call $148load_global.0(start_line_id, $158call_function.5, func=$148load_global.0, args=[Var(start_line_id, r_packet.py:365), Var($158call_function.5, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $162get_iter.7 = getiter(value=$160call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi164.0 = $162get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, r_packet.py:386), Var(cur_line_id.1, r_packet.py:390)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: $164for_iter.1 = iternext(value=$phi164.0)
DEBUG:numba.core.ssa:on stmt: $164for_iter.2 = pair_first(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $164for_iter.3 = pair_second(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi168.1 = $164for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $164for_iter.3, 168, 466
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi168.1
DEBUG:numba.core.ssa:on stmt: $172load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $176binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_attr.7 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const186.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $188binary_subtract.10 = cur_line_id.1 - $const186.9
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.11 = getitem(value=$182load_attr.7, index=$188binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: nu_line_last_interaction = $190binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $196load_attr.13 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $202load_attr.16 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $204build_tuple.17 = build_tuple(items=[Var(cur_line_id.1, r_packet.py:390), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:on stmt: $206binary_subscr.18 = getitem(value=$196load_attr.13, index=$204build_tuple.17)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $206binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $214inplace_add.21
DEBUG:numba.core.ssa:on stmt: $222compare_op.24 = cur_line_id.1 == last_line_id
DEBUG:numba.core.ssa:on stmt: is_last_line = $222compare_op.24
DEBUG:numba.core.ssa:on stmt: $226load_global.25 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $238load_attr.31 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $240call_function.32 = call $226load_global.25(r_packet, comov_nu, is_last_line, nu_line, $238load_attr.31, func=$226load_global.25, args=[Var(r_packet, r_packet.py:357), Var(comov_nu, r_packet.py:384), Var(is_last_line, r_packet.py:406), Var(nu_line, r_packet.py:393), Var($238load_attr.31, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace = $240call_function.32
DEBUG:numba.core.ssa:on stmt: $244load_global.33 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $250call_function.36 = call $244load_global.33(cur_electron_density, distance_trace, func=$244load_global.33, args=[Var(cur_electron_density, r_packet.py:374), Var(distance_trace, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_electron = $250call_function.36
DEBUG:numba.core.ssa:on stmt: $258binary_add.39 = tau_trace_line_combined + tau_trace_electron
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $258binary_add.39
DEBUG:numba.core.ssa:on stmt: $266compare_op.42 = distance_boundary <= distance_trace
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.42, func=bool268, args=(Var($266compare_op.42, r_packet.py:425),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 272, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $276compare_op.3 = distance_boundary <= distance_electron
DEBUG:numba.core.ssa:on stmt: bool278 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $278pred = call bool278($276compare_op.3, func=bool278, args=(Var($276compare_op.3, r_packet.py:426),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $278pred, 282, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $const284.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $286compare_op.3 = distance_trace != $const284.2
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.3, func=bool288, args=(Var($286compare_op.3, r_packet.py:427),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $292load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $294load_attr.2 = getattr(value=$292load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 310
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $314compare_op.3 = distance_electron < distance_trace
DEBUG:numba.core.ssa:on stmt: bool316 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $316pred = call bool316($314compare_op.3, func=bool316, args=(Var($314compare_op.3, r_packet.py:434),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $316pred, 320, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $324compare_op.3 = distance_electron < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($324compare_op.3, func=bool326, args=(Var($324compare_op.3, r_packet.py:435),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 330, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 330
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $const332.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $334compare_op.3 = distance_trace != $const332.2
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336($334compare_op.3, func=bool336, args=(Var($334compare_op.3, r_packet.py:436),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 340, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $340load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $342load_attr.2 = getattr(value=$340load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $342load_attr.2
DEBUG:numba.core.ssa:on stmt: distance = distance_electron
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $358load_global.1 = global(update_line_estimators: CPUDispatcher(<function update_line_estimators at 0x7f6e4a0f6b00>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id.1, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id.1, r_packet.py:390), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $380compare_op.11 = tau_trace_combined > tau_event
DEBUG:numba.core.ssa:on stmt: bool382 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $382pred = call bool382($380compare_op.11, func=bool382, args=(Var($380compare_op.11, r_packet.py:456),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $382pred, 386, 426
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $386load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $388load_attr.2 = getattr(value=$386load_global.1, attr=disable_line_scattering)
DEBUG:numba.core.ssa:on stmt: bool390 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $390pred = call bool390($388load_attr.2, func=bool390, args=(Var($388load_attr.2, r_packet.py:457),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $390pred, 426, 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $394load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $396load_attr.2 = getattr(value=$394load_global.1, attr=LINE)
DEBUG:numba.core.ssa:on stmt: interaction_type = $396load_attr.2
DEBUG:numba.core.ssa:on stmt: $402load_attr.4 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_in_nu = $402load_attr.4
DEBUG:numba.core.ssa:on stmt: (r_packet).last_line_interaction_in_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_trace
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 426
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: bool428 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $428pred = call bool428(is_last_line, func=bool428, args=(Var(is_last_line, r_packet.py:406),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $428pred, 450, 432
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 432
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $432load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $const438.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $440binary_add.5 = cur_line_id.1 + $const438.4
DEBUG:numba.core.ssa:on stmt: $446call_function.8 = call $432load_global.1(r_packet, $440binary_add.5, nu_line, numba_plasma, func=$432load_global.1, args=[Var(r_packet, r_packet.py:357), Var($440binary_add.5, r_packet.py:468), Var(nu_line, r_packet.py:393), Var(numba_plasma, r_packet.py:357)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 450
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 450
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $450load_global.1 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $458binary_subtract.5 = tau_event - tau_trace_line_combined
DEBUG:numba.core.ssa:on stmt: $460call_function.6 = call $450load_global.1(cur_electron_density, $458binary_subtract.5, func=$450load_global.1, args=[Var(cur_electron_density, r_packet.py:374), Var($458binary_subtract.5, r_packet.py:474)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $460call_function.6
DEBUG:numba.core.ssa:replaced with: distance_electron.1 = $460call_function.6
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 466
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: jump 468
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 468
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $470load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $474load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $476call_function.4 = call $470load_global.1($474load_attr.3, func=$470load_global.1, args=[Var($474load_attr.3, r_packet.py:480)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const478.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.6 = $476call_function.4 - $const478.5
DEBUG:numba.core.ssa:on stmt: $482compare_op.7 = cur_line_id.3 == $480binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool484 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $484pred = call bool484($482compare_op.7, func=bool484, args=(Var($482compare_op.7, r_packet.py:480),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $484pred, 488, 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 488
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $const490.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $492inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 496
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $500compare_op.2 = distance_electron < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool502 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $502pred = call bool502($500compare_op.2, func=bool502, args=(Var($500compare_op.2, r_packet.py:483),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $502pred, 506, 518
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 506
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: distance = distance_electron
DEBUG:numba.core.ssa:on stmt: $510load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $512load_attr.2 = getattr(value=$510load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $512load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 518
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: $522load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $524load_attr.2 = getattr(value=$522load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $524load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 528
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e435a7b50>
DEBUG:numba.core.ssa:on stmt: $534build_tuple.3 = build_tuple(items=[Var(distance, r_packet.py:430), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:on stmt: $536return_value.4 = cast(value=$534build_tuple.3)
DEBUG:numba.core.ssa:on stmt: return $536return_value.4
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e435865d0>],
             450: [<numba.core.ir.Assign object at 0x7f6e4358fd10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, r_packet.py:361), Var($34load_attr.14, r_packet.py:361), Var(r_inner, r_packet.py:357), Var(r_outer, r_packet.py:358)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $54load_global.23 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.24 = getattr(value=$54load_global.23, attr=log)
DEBUG:numba.core.ssa:on stmt: $58load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=$58load_global.25, attr=random)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_attr.26, attr=random)
DEBUG:numba.core.ssa:on stmt: $64call_method.28 = call $62load_method.27(func=$62load_method.27, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $66call_method.29 = call $56load_method.24($64call_method.28, func=$56load_method.24, args=[Var($64call_method.28, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $68unary_negative.30 = unary(fn=<built-in function neg>, value=$66call_method.29)
DEBUG:numba.core.ssa:on stmt: tau_event = $68unary_negative.30
DEBUG:numba.core.ssa:on stmt: $const72.31 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:on stmt: $78load_attr.33 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $82load_attr.35 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.36 = getitem(value=$78load_attr.33, index=$82load_attr.35)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $84binary_subscr.36
DEBUG:numba.core.ssa:on stmt: $88load_global.37 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $88load_global.37(cur_electron_density, tau_event, func=$88load_global.37, args=[Var(cur_electron_density, r_packet.py:374), Var(tau_event, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $98load_global.41 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $102load_attr.43 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $106load_attr.45 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $110load_attr.47 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $112call_function.48 = call $98load_global.41($102load_attr.43, $106load_attr.45, $110load_attr.47, func=$98load_global.41, args=[Var($102load_attr.43, r_packet.py:382), Var($106load_attr.45, r_packet.py:382), Var($110load_attr.47, r_packet.py:382)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $112call_function.48
DEBUG:numba.core.ssa:on stmt: $118load_attr.50 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $122binary_multiply.52 = $118load_attr.50 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $122binary_multiply.52
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: $130load_global.54 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $134load_attr.56 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $136call_function.57 = call $130load_global.54($134load_attr.56, func=$130load_global.54, args=[Var($134load_attr.56, r_packet.py:388)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const138.58 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $140binary_subtract.59 = $136call_function.57 - $const138.58
DEBUG:numba.core.ssa:on stmt: last_line_id = $140binary_subtract.59
DEBUG:numba.core.ssa:on stmt: jump 144
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $148load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $152load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $158call_function.5 = call $152load_global.2($156load_attr.4, func=$152load_global.2, args=[Var($156load_attr.4, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160call_function.6 = call $148load_global.0(start_line_id, $158call_function.5, func=$148load_global.0, args=[Var(start_line_id, r_packet.py:365), Var($158call_function.5, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $162get_iter.7 = getiter(value=$160call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi164.0 = $162get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, r_packet.py:386), Var(cur_line_id.1, r_packet.py:390)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: $164for_iter.1 = iternext(value=$phi164.0)
DEBUG:numba.core.ssa:on stmt: $164for_iter.2 = pair_first(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $164for_iter.3 = pair_second(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi168.1 = $164for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $164for_iter.3, 168, 466
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi168.1
DEBUG:numba.core.ssa:on stmt: $172load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $176binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_attr.7 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const186.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $188binary_subtract.10 = cur_line_id.1 - $const186.9
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.11 = getitem(value=$182load_attr.7, index=$188binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: nu_line_last_interaction = $190binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $196load_attr.13 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $202load_attr.16 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $204build_tuple.17 = build_tuple(items=[Var(cur_line_id.1, r_packet.py:390), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:on stmt: $206binary_subscr.18 = getitem(value=$196load_attr.13, index=$204build_tuple.17)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $206binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $214inplace_add.21
DEBUG:numba.core.ssa:on stmt: $222compare_op.24 = cur_line_id.1 == last_line_id
DEBUG:numba.core.ssa:on stmt: is_last_line = $222compare_op.24
DEBUG:numba.core.ssa:on stmt: $226load_global.25 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $238load_attr.31 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $240call_function.32 = call $226load_global.25(r_packet, comov_nu, is_last_line, nu_line, $238load_attr.31, func=$226load_global.25, args=[Var(r_packet, r_packet.py:357), Var(comov_nu, r_packet.py:384), Var(is_last_line, r_packet.py:406), Var(nu_line, r_packet.py:393), Var($238load_attr.31, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace = $240call_function.32
DEBUG:numba.core.ssa:on stmt: $244load_global.33 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $250call_function.36 = call $244load_global.33(cur_electron_density, distance_trace, func=$244load_global.33, args=[Var(cur_electron_density, r_packet.py:374), Var(distance_trace, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_electron = $250call_function.36
DEBUG:numba.core.ssa:on stmt: $258binary_add.39 = tau_trace_line_combined + tau_trace_electron
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $258binary_add.39
DEBUG:numba.core.ssa:on stmt: $266compare_op.42 = distance_boundary <= distance_trace
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.42, func=bool268, args=(Var($266compare_op.42, r_packet.py:425),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 272, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $276compare_op.3 = distance_boundary <= distance_electron
DEBUG:numba.core.ssa:find_def var='distance_electron' stmt=$276compare_op.3 = distance_boundary <= distance_electron
DEBUG:numba.core.ssa:find_def_from_top label 272
DEBUG:numba.core.ssa:idom 168 from label 272
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:find_def_from_top label 168
DEBUG:numba.core.ssa:idom 164 from label 168
DEBUG:numba.core.ssa:find_def_from_bottom label 164
DEBUG:numba.core.ssa:find_def_from_top label 164
DEBUG:numba.core.ssa:insert phi node distance_electron.2 = phi(incoming_values=[], incoming_blocks=[]) at 164
DEBUG:numba.core.ssa:find_def_from_bottom label 144
DEBUG:numba.core.ssa:find_def_from_top label 144
DEBUG:numba.core.ssa:idom 0 from label 144
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def distance_electron = $94call_function.40
DEBUG:numba.core.ssa:find_def_from_bottom label 450
DEBUG:numba.core.ssa:incoming_def distance_electron.1 = $460call_function.6
DEBUG:numba.core.ssa:replaced with: $276compare_op.3 = distance_boundary <= distance_electron.2
DEBUG:numba.core.ssa:on stmt: bool278 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $278pred = call bool278($276compare_op.3, func=bool278, args=(Var($276compare_op.3, r_packet.py:426),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $278pred, 282, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $const284.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $286compare_op.3 = distance_trace != $const284.2
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.3, func=bool288, args=(Var($286compare_op.3, r_packet.py:427),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $292load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $294load_attr.2 = getattr(value=$292load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 310
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $314compare_op.3 = distance_electron < distance_trace
DEBUG:numba.core.ssa:find_def var='distance_electron' stmt=$314compare_op.3 = distance_electron < distance_trace
DEBUG:numba.core.ssa:find_def_from_top label 310
DEBUG:numba.core.ssa:idom 168 from label 310
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:find_def_from_top label 168
DEBUG:numba.core.ssa:idom 164 from label 168
DEBUG:numba.core.ssa:find_def_from_bottom label 164
DEBUG:numba.core.ssa:replaced with: $314compare_op.3 = distance_electron.2 < distance_trace
DEBUG:numba.core.ssa:on stmt: bool316 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $316pred = call bool316($314compare_op.3, func=bool316, args=(Var($314compare_op.3, r_packet.py:434),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $316pred, 320, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $324compare_op.3 = distance_electron < distance_boundary
DEBUG:numba.core.ssa:find_def var='distance_electron' stmt=$324compare_op.3 = distance_electron < distance_boundary
DEBUG:numba.core.ssa:find_def_from_top label 320
DEBUG:numba.core.ssa:idom 310 from label 320
DEBUG:numba.core.ssa:find_def_from_bottom label 310
DEBUG:numba.core.ssa:find_def_from_top label 310
DEBUG:numba.core.ssa:idom 168 from label 310
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:find_def_from_top label 168
DEBUG:numba.core.ssa:idom 164 from label 168
DEBUG:numba.core.ssa:find_def_from_bottom label 164
DEBUG:numba.core.ssa:replaced with: $324compare_op.3 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($324compare_op.3, func=bool326, args=(Var($324compare_op.3, r_packet.py:435),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 330, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 330
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $const332.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $334compare_op.3 = distance_trace != $const332.2
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336($334compare_op.3, func=bool336, args=(Var($334compare_op.3, r_packet.py:436),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 340, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $340load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $342load_attr.2 = getattr(value=$340load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $342load_attr.2
DEBUG:numba.core.ssa:on stmt: distance = distance_electron
DEBUG:numba.core.ssa:find_def var='distance_electron' stmt=distance = distance_electron
DEBUG:numba.core.ssa:find_def_from_top label 340
DEBUG:numba.core.ssa:idom 330 from label 340
DEBUG:numba.core.ssa:find_def_from_bottom label 330
DEBUG:numba.core.ssa:find_def_from_top label 330
DEBUG:numba.core.ssa:idom 320 from label 330
DEBUG:numba.core.ssa:find_def_from_bottom label 320
DEBUG:numba.core.ssa:find_def_from_top label 320
DEBUG:numba.core.ssa:idom 310 from label 320
DEBUG:numba.core.ssa:find_def_from_bottom label 310
DEBUG:numba.core.ssa:find_def_from_top label 310
DEBUG:numba.core.ssa:idom 168 from label 310
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:find_def_from_top label 168
DEBUG:numba.core.ssa:idom 164 from label 168
DEBUG:numba.core.ssa:find_def_from_bottom label 164
DEBUG:numba.core.ssa:replaced with: distance = distance_electron.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $358load_global.1 = global(update_line_estimators: CPUDispatcher(<function update_line_estimators at 0x7f6e4a0f6b00>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id.1, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id.1, r_packet.py:390), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $380compare_op.11 = tau_trace_combined > tau_event
DEBUG:numba.core.ssa:on stmt: bool382 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $382pred = call bool382($380compare_op.11, func=bool382, args=(Var($380compare_op.11, r_packet.py:456),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $382pred, 386, 426
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $386load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $388load_attr.2 = getattr(value=$386load_global.1, attr=disable_line_scattering)
DEBUG:numba.core.ssa:on stmt: bool390 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $390pred = call bool390($388load_attr.2, func=bool390, args=(Var($388load_attr.2, r_packet.py:457),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $390pred, 426, 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $394load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $396load_attr.2 = getattr(value=$394load_global.1, attr=LINE)
DEBUG:numba.core.ssa:on stmt: interaction_type = $396load_attr.2
DEBUG:numba.core.ssa:on stmt: $402load_attr.4 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_in_nu = $402load_attr.4
DEBUG:numba.core.ssa:on stmt: (r_packet).last_line_interaction_in_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_trace
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 426
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: bool428 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $428pred = call bool428(is_last_line, func=bool428, args=(Var(is_last_line, r_packet.py:406),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $428pred, 450, 432
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 432
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $432load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $const438.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $440binary_add.5 = cur_line_id.1 + $const438.4
DEBUG:numba.core.ssa:on stmt: $446call_function.8 = call $432load_global.1(r_packet, $440binary_add.5, nu_line, numba_plasma, func=$432load_global.1, args=[Var(r_packet, r_packet.py:357), Var($440binary_add.5, r_packet.py:468), Var(nu_line, r_packet.py:393), Var(numba_plasma, r_packet.py:357)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 450
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 450
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $450load_global.1 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $458binary_subtract.5 = tau_event - tau_trace_line_combined
DEBUG:numba.core.ssa:on stmt: $460call_function.6 = call $450load_global.1(cur_electron_density, $458binary_subtract.5, func=$450load_global.1, args=[Var(cur_electron_density, r_packet.py:374), Var($458binary_subtract.5, r_packet.py:474)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron.1 = $460call_function.6
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 466
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: jump 468
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 468
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $470load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $474load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $476call_function.4 = call $470load_global.1($474load_attr.3, func=$470load_global.1, args=[Var($474load_attr.3, r_packet.py:480)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const478.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.6 = $476call_function.4 - $const478.5
DEBUG:numba.core.ssa:on stmt: $482compare_op.7 = cur_line_id.3 == $480binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool484 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $484pred = call bool484($482compare_op.7, func=bool484, args=(Var($482compare_op.7, r_packet.py:480),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $484pred, 488, 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 488
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $const490.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $492inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 496
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $500compare_op.2 = distance_electron < distance_boundary
DEBUG:numba.core.ssa:find_def var='distance_electron' stmt=$500compare_op.2 = distance_electron < distance_boundary
DEBUG:numba.core.ssa:find_def_from_top label 496
DEBUG:numba.core.ssa:idom 468 from label 496
DEBUG:numba.core.ssa:find_def_from_bottom label 468
DEBUG:numba.core.ssa:find_def_from_top label 468
DEBUG:numba.core.ssa:idom 466 from label 468
DEBUG:numba.core.ssa:find_def_from_bottom label 466
DEBUG:numba.core.ssa:find_def_from_top label 466
DEBUG:numba.core.ssa:idom 164 from label 466
DEBUG:numba.core.ssa:find_def_from_bottom label 164
DEBUG:numba.core.ssa:replaced with: $500compare_op.2 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool502 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $502pred = call bool502($500compare_op.2, func=bool502, args=(Var($500compare_op.2, r_packet.py:483),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $502pred, 506, 518
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 506
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: distance = distance_electron
DEBUG:numba.core.ssa:find_def var='distance_electron' stmt=distance = distance_electron
DEBUG:numba.core.ssa:find_def_from_top label 506
DEBUG:numba.core.ssa:idom 496 from label 506
DEBUG:numba.core.ssa:find_def_from_bottom label 496
DEBUG:numba.core.ssa:find_def_from_top label 496
DEBUG:numba.core.ssa:idom 468 from label 496
DEBUG:numba.core.ssa:find_def_from_bottom label 468
DEBUG:numba.core.ssa:find_def_from_top label 468
DEBUG:numba.core.ssa:idom 466 from label 468
DEBUG:numba.core.ssa:find_def_from_bottom label 466
DEBUG:numba.core.ssa:find_def_from_top label 466
DEBUG:numba.core.ssa:idom 164 from label 466
DEBUG:numba.core.ssa:find_def_from_bottom label 164
DEBUG:numba.core.ssa:replaced with: distance = distance_electron.2
DEBUG:numba.core.ssa:on stmt: $510load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $512load_attr.2 = getattr(value=$510load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $512load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 518
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: $522load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $524load_attr.2 = getattr(value=$522load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $524load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 528
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586790>
DEBUG:numba.core.ssa:on stmt: $534build_tuple.3 = build_tuple(items=[Var(distance, r_packet.py:430), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:on stmt: $536return_value.4 = cast(value=$534build_tuple.3)
DEBUG:numba.core.ssa:on stmt: return $536return_value.4
DEBUG:numba.core.ssa:Fix SSA violator on var tau_trace_line_combined
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, r_packet.py:361), Var($34load_attr.14, r_packet.py:361), Var(r_inner, r_packet.py:357), Var(r_outer, r_packet.py:358)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $54load_global.23 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.24 = getattr(value=$54load_global.23, attr=log)
DEBUG:numba.core.ssa:on stmt: $58load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=$58load_global.25, attr=random)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_attr.26, attr=random)
DEBUG:numba.core.ssa:on stmt: $64call_method.28 = call $62load_method.27(func=$62load_method.27, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $66call_method.29 = call $56load_method.24($64call_method.28, func=$56load_method.24, args=[Var($64call_method.28, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $68unary_negative.30 = unary(fn=<built-in function neg>, value=$66call_method.29)
DEBUG:numba.core.ssa:on stmt: tau_event = $68unary_negative.30
DEBUG:numba.core.ssa:on stmt: $const72.31 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:first assign: tau_trace_line_combined
DEBUG:numba.core.ssa:replaced with: tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:on stmt: $78load_attr.33 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $82load_attr.35 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.36 = getitem(value=$78load_attr.33, index=$82load_attr.35)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $84binary_subscr.36
DEBUG:numba.core.ssa:on stmt: $88load_global.37 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $88load_global.37(cur_electron_density, tau_event, func=$88load_global.37, args=[Var(cur_electron_density, r_packet.py:374), Var(tau_event, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $98load_global.41 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $102load_attr.43 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $106load_attr.45 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $110load_attr.47 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $112call_function.48 = call $98load_global.41($102load_attr.43, $106load_attr.45, $110load_attr.47, func=$98load_global.41, args=[Var($102load_attr.43, r_packet.py:382), Var($106load_attr.45, r_packet.py:382), Var($110load_attr.47, r_packet.py:382)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $112call_function.48
DEBUG:numba.core.ssa:on stmt: $118load_attr.50 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $122binary_multiply.52 = $118load_attr.50 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $122binary_multiply.52
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: $130load_global.54 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $134load_attr.56 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $136call_function.57 = call $130load_global.54($134load_attr.56, func=$130load_global.54, args=[Var($134load_attr.56, r_packet.py:388)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const138.58 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $140binary_subtract.59 = $136call_function.57 - $const138.58
DEBUG:numba.core.ssa:on stmt: last_line_id = $140binary_subtract.59
DEBUG:numba.core.ssa:on stmt: jump 144
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $148load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $152load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $158call_function.5 = call $152load_global.2($156load_attr.4, func=$152load_global.2, args=[Var($156load_attr.4, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160call_function.6 = call $148load_global.0(start_line_id, $158call_function.5, func=$148load_global.0, args=[Var(start_line_id, r_packet.py:365), Var($158call_function.5, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $162get_iter.7 = getiter(value=$160call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi164.0 = $162get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: distance_electron.2 = phi(incoming_values=[Var(distance_electron, r_packet.py:377), Var(distance_electron.1, r_packet.py:474)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, r_packet.py:386), Var(cur_line_id.1, r_packet.py:390)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: $164for_iter.1 = iternext(value=$phi164.0)
DEBUG:numba.core.ssa:on stmt: $164for_iter.2 = pair_first(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $164for_iter.3 = pair_second(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi168.1 = $164for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $164for_iter.3, 168, 466
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi168.1
DEBUG:numba.core.ssa:on stmt: $172load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $176binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_attr.7 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const186.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $188binary_subtract.10 = cur_line_id.1 - $const186.9
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.11 = getitem(value=$182load_attr.7, index=$188binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: nu_line_last_interaction = $190binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $196load_attr.13 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $202load_attr.16 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $204build_tuple.17 = build_tuple(items=[Var(cur_line_id.1, r_packet.py:390), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:on stmt: $206binary_subscr.18 = getitem(value=$196load_attr.13, index=$204build_tuple.17)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $206binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $214inplace_add.21
DEBUG:numba.core.ssa:replaced with: tau_trace_line_combined.1 = $214inplace_add.21
DEBUG:numba.core.ssa:on stmt: $222compare_op.24 = cur_line_id.1 == last_line_id
DEBUG:numba.core.ssa:on stmt: is_last_line = $222compare_op.24
DEBUG:numba.core.ssa:on stmt: $226load_global.25 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $238load_attr.31 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $240call_function.32 = call $226load_global.25(r_packet, comov_nu, is_last_line, nu_line, $238load_attr.31, func=$226load_global.25, args=[Var(r_packet, r_packet.py:357), Var(comov_nu, r_packet.py:384), Var(is_last_line, r_packet.py:406), Var(nu_line, r_packet.py:393), Var($238load_attr.31, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace = $240call_function.32
DEBUG:numba.core.ssa:on stmt: $244load_global.33 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $250call_function.36 = call $244load_global.33(cur_electron_density, distance_trace, func=$244load_global.33, args=[Var(cur_electron_density, r_packet.py:374), Var(distance_trace, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_electron = $250call_function.36
DEBUG:numba.core.ssa:on stmt: $258binary_add.39 = tau_trace_line_combined + tau_trace_electron
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $258binary_add.39
DEBUG:numba.core.ssa:on stmt: $266compare_op.42 = distance_boundary <= distance_trace
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.42, func=bool268, args=(Var($266compare_op.42, r_packet.py:425),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 272, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $276compare_op.3 = distance_boundary <= distance_electron.2
DEBUG:numba.core.ssa:on stmt: bool278 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $278pred = call bool278($276compare_op.3, func=bool278, args=(Var($276compare_op.3, r_packet.py:426),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $278pred, 282, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $const284.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $286compare_op.3 = distance_trace != $const284.2
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.3, func=bool288, args=(Var($286compare_op.3, r_packet.py:427),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $292load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $294load_attr.2 = getattr(value=$292load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 310
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $314compare_op.3 = distance_electron.2 < distance_trace
DEBUG:numba.core.ssa:on stmt: bool316 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $316pred = call bool316($314compare_op.3, func=bool316, args=(Var($314compare_op.3, r_packet.py:434),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $316pred, 320, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $324compare_op.3 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($324compare_op.3, func=bool326, args=(Var($324compare_op.3, r_packet.py:435),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 330, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 330
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $const332.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $334compare_op.3 = distance_trace != $const332.2
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336($334compare_op.3, func=bool336, args=(Var($334compare_op.3, r_packet.py:436),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 340, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $340load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $342load_attr.2 = getattr(value=$340load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $342load_attr.2
DEBUG:numba.core.ssa:on stmt: distance = distance_electron.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $358load_global.1 = global(update_line_estimators: CPUDispatcher(<function update_line_estimators at 0x7f6e4a0f6b00>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id.1, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id.1, r_packet.py:390), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $380compare_op.11 = tau_trace_combined > tau_event
DEBUG:numba.core.ssa:on stmt: bool382 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $382pred = call bool382($380compare_op.11, func=bool382, args=(Var($380compare_op.11, r_packet.py:456),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $382pred, 386, 426
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $386load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $388load_attr.2 = getattr(value=$386load_global.1, attr=disable_line_scattering)
DEBUG:numba.core.ssa:on stmt: bool390 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $390pred = call bool390($388load_attr.2, func=bool390, args=(Var($388load_attr.2, r_packet.py:457),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $390pred, 426, 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $394load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $396load_attr.2 = getattr(value=$394load_global.1, attr=LINE)
DEBUG:numba.core.ssa:on stmt: interaction_type = $396load_attr.2
DEBUG:numba.core.ssa:on stmt: $402load_attr.4 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_in_nu = $402load_attr.4
DEBUG:numba.core.ssa:on stmt: (r_packet).last_line_interaction_in_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_trace
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 426
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: bool428 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $428pred = call bool428(is_last_line, func=bool428, args=(Var(is_last_line, r_packet.py:406),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $428pred, 450, 432
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 432
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $432load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $const438.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $440binary_add.5 = cur_line_id.1 + $const438.4
DEBUG:numba.core.ssa:on stmt: $446call_function.8 = call $432load_global.1(r_packet, $440binary_add.5, nu_line, numba_plasma, func=$432load_global.1, args=[Var(r_packet, r_packet.py:357), Var($440binary_add.5, r_packet.py:468), Var(nu_line, r_packet.py:393), Var(numba_plasma, r_packet.py:357)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 450
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 450
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $450load_global.1 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $458binary_subtract.5 = tau_event - tau_trace_line_combined
DEBUG:numba.core.ssa:on stmt: $460call_function.6 = call $450load_global.1(cur_electron_density, $458binary_subtract.5, func=$450load_global.1, args=[Var(cur_electron_density, r_packet.py:374), Var($458binary_subtract.5, r_packet.py:474)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron.1 = $460call_function.6
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 466
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: jump 468
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 468
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $470load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $474load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $476call_function.4 = call $470load_global.1($474load_attr.3, func=$470load_global.1, args=[Var($474load_attr.3, r_packet.py:480)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const478.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.6 = $476call_function.4 - $const478.5
DEBUG:numba.core.ssa:on stmt: $482compare_op.7 = cur_line_id.3 == $480binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool484 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $484pred = call bool484($482compare_op.7, func=bool484, args=(Var($482compare_op.7, r_packet.py:480),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $484pred, 488, 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 488
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $const490.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $492inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 496
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $500compare_op.2 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool502 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $502pred = call bool502($500compare_op.2, func=bool502, args=(Var($500compare_op.2, r_packet.py:483),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $502pred, 506, 518
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 506
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: distance = distance_electron.2
DEBUG:numba.core.ssa:on stmt: $510load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $512load_attr.2 = getattr(value=$510load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $512load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 518
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: $522load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $524load_attr.2 = getattr(value=$522load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $524load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 528
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4358f950>
DEBUG:numba.core.ssa:on stmt: $534build_tuple.3 = build_tuple(items=[Var(distance, r_packet.py:430), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:on stmt: $536return_value.4 = cast(value=$534build_tuple.3)
DEBUG:numba.core.ssa:on stmt: return $536return_value.4
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e4358f710>],
             168: [<numba.core.ir.Assign object at 0x7f6e4358f5d0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, r_packet.py:361), Var($34load_attr.14, r_packet.py:361), Var(r_inner, r_packet.py:357), Var(r_outer, r_packet.py:358)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $54load_global.23 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.24 = getattr(value=$54load_global.23, attr=log)
DEBUG:numba.core.ssa:on stmt: $58load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=$58load_global.25, attr=random)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_attr.26, attr=random)
DEBUG:numba.core.ssa:on stmt: $64call_method.28 = call $62load_method.27(func=$62load_method.27, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $66call_method.29 = call $56load_method.24($64call_method.28, func=$56load_method.24, args=[Var($64call_method.28, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $68unary_negative.30 = unary(fn=<built-in function neg>, value=$66call_method.29)
DEBUG:numba.core.ssa:on stmt: tau_event = $68unary_negative.30
DEBUG:numba.core.ssa:on stmt: $const72.31 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:on stmt: $78load_attr.33 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $82load_attr.35 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.36 = getitem(value=$78load_attr.33, index=$82load_attr.35)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $84binary_subscr.36
DEBUG:numba.core.ssa:on stmt: $88load_global.37 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $88load_global.37(cur_electron_density, tau_event, func=$88load_global.37, args=[Var(cur_electron_density, r_packet.py:374), Var(tau_event, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $98load_global.41 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $102load_attr.43 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $106load_attr.45 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $110load_attr.47 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $112call_function.48 = call $98load_global.41($102load_attr.43, $106load_attr.45, $110load_attr.47, func=$98load_global.41, args=[Var($102load_attr.43, r_packet.py:382), Var($106load_attr.45, r_packet.py:382), Var($110load_attr.47, r_packet.py:382)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $112call_function.48
DEBUG:numba.core.ssa:on stmt: $118load_attr.50 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $122binary_multiply.52 = $118load_attr.50 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $122binary_multiply.52
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: $130load_global.54 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $134load_attr.56 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $136call_function.57 = call $130load_global.54($134load_attr.56, func=$130load_global.54, args=[Var($134load_attr.56, r_packet.py:388)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const138.58 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $140binary_subtract.59 = $136call_function.57 - $const138.58
DEBUG:numba.core.ssa:on stmt: last_line_id = $140binary_subtract.59
DEBUG:numba.core.ssa:on stmt: jump 144
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $148load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $152load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $158call_function.5 = call $152load_global.2($156load_attr.4, func=$152load_global.2, args=[Var($156load_attr.4, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160call_function.6 = call $148load_global.0(start_line_id, $158call_function.5, func=$148load_global.0, args=[Var(start_line_id, r_packet.py:365), Var($158call_function.5, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $162get_iter.7 = getiter(value=$160call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi164.0 = $162get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: distance_electron.2 = phi(incoming_values=[Var(distance_electron, r_packet.py:377), Var(distance_electron.1, r_packet.py:474)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, r_packet.py:386), Var(cur_line_id.1, r_packet.py:390)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: $164for_iter.1 = iternext(value=$phi164.0)
DEBUG:numba.core.ssa:on stmt: $164for_iter.2 = pair_first(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $164for_iter.3 = pair_second(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi168.1 = $164for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $164for_iter.3, 168, 466
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi168.1
DEBUG:numba.core.ssa:on stmt: $172load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $176binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_attr.7 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const186.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $188binary_subtract.10 = cur_line_id.1 - $const186.9
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.11 = getitem(value=$182load_attr.7, index=$188binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: nu_line_last_interaction = $190binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $196load_attr.13 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $202load_attr.16 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $204build_tuple.17 = build_tuple(items=[Var(cur_line_id.1, r_packet.py:390), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:on stmt: $206binary_subscr.18 = getitem(value=$196load_attr.13, index=$204build_tuple.17)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $206binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='tau_trace_line_combined' stmt=$214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 168
DEBUG:numba.core.ssa:idom 164 from label 168
DEBUG:numba.core.ssa:find_def_from_bottom label 164
DEBUG:numba.core.ssa:find_def_from_top label 164
DEBUG:numba.core.ssa:insert phi node tau_trace_line_combined.2 = phi(incoming_values=[], incoming_blocks=[]) at 164
DEBUG:numba.core.ssa:find_def_from_bottom label 144
DEBUG:numba.core.ssa:find_def_from_top label 144
DEBUG:numba.core.ssa:idom 0 from label 144
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:find_def_from_bottom label 450
DEBUG:numba.core.ssa:find_def_from_top label 450
DEBUG:numba.core.ssa:idom 426 from label 450
DEBUG:numba.core.ssa:find_def_from_bottom label 426
DEBUG:numba.core.ssa:find_def_from_top label 426
DEBUG:numba.core.ssa:idom 358 from label 426
DEBUG:numba.core.ssa:find_def_from_bottom label 358
DEBUG:numba.core.ssa:find_def_from_top label 358
DEBUG:numba.core.ssa:idom 310 from label 358
DEBUG:numba.core.ssa:find_def_from_bottom label 310
DEBUG:numba.core.ssa:find_def_from_top label 310
DEBUG:numba.core.ssa:idom 168 from label 310
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:incoming_def tau_trace_line_combined.1 = $214inplace_add.21
DEBUG:numba.core.ssa:replaced with: $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined.2, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined.1 = $214inplace_add.21
DEBUG:numba.core.ssa:on stmt: $222compare_op.24 = cur_line_id.1 == last_line_id
DEBUG:numba.core.ssa:on stmt: is_last_line = $222compare_op.24
DEBUG:numba.core.ssa:on stmt: $226load_global.25 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $238load_attr.31 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $240call_function.32 = call $226load_global.25(r_packet, comov_nu, is_last_line, nu_line, $238load_attr.31, func=$226load_global.25, args=[Var(r_packet, r_packet.py:357), Var(comov_nu, r_packet.py:384), Var(is_last_line, r_packet.py:406), Var(nu_line, r_packet.py:393), Var($238load_attr.31, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace = $240call_function.32
DEBUG:numba.core.ssa:on stmt: $244load_global.33 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $250call_function.36 = call $244load_global.33(cur_electron_density, distance_trace, func=$244load_global.33, args=[Var(cur_electron_density, r_packet.py:374), Var(distance_trace, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_electron = $250call_function.36
DEBUG:numba.core.ssa:on stmt: $258binary_add.39 = tau_trace_line_combined + tau_trace_electron
DEBUG:numba.core.ssa:find_def var='tau_trace_line_combined' stmt=$258binary_add.39 = tau_trace_line_combined + tau_trace_electron
DEBUG:numba.core.ssa:replaced with: $258binary_add.39 = tau_trace_line_combined.1 + tau_trace_electron
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $258binary_add.39
DEBUG:numba.core.ssa:on stmt: $266compare_op.42 = distance_boundary <= distance_trace
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.42, func=bool268, args=(Var($266compare_op.42, r_packet.py:425),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 272, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $276compare_op.3 = distance_boundary <= distance_electron.2
DEBUG:numba.core.ssa:on stmt: bool278 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $278pred = call bool278($276compare_op.3, func=bool278, args=(Var($276compare_op.3, r_packet.py:426),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $278pred, 282, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $const284.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $286compare_op.3 = distance_trace != $const284.2
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.3, func=bool288, args=(Var($286compare_op.3, r_packet.py:427),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $292load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $294load_attr.2 = getattr(value=$292load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 310
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $314compare_op.3 = distance_electron.2 < distance_trace
DEBUG:numba.core.ssa:on stmt: bool316 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $316pred = call bool316($314compare_op.3, func=bool316, args=(Var($314compare_op.3, r_packet.py:434),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $316pred, 320, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $324compare_op.3 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($324compare_op.3, func=bool326, args=(Var($324compare_op.3, r_packet.py:435),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 330, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 330
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $const332.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $334compare_op.3 = distance_trace != $const332.2
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336($334compare_op.3, func=bool336, args=(Var($334compare_op.3, r_packet.py:436),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 340, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $340load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $342load_attr.2 = getattr(value=$340load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $342load_attr.2
DEBUG:numba.core.ssa:on stmt: distance = distance_electron.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $358load_global.1 = global(update_line_estimators: CPUDispatcher(<function update_line_estimators at 0x7f6e4a0f6b00>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id.1, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id.1, r_packet.py:390), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $380compare_op.11 = tau_trace_combined > tau_event
DEBUG:numba.core.ssa:on stmt: bool382 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $382pred = call bool382($380compare_op.11, func=bool382, args=(Var($380compare_op.11, r_packet.py:456),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $382pred, 386, 426
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $386load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $388load_attr.2 = getattr(value=$386load_global.1, attr=disable_line_scattering)
DEBUG:numba.core.ssa:on stmt: bool390 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $390pred = call bool390($388load_attr.2, func=bool390, args=(Var($388load_attr.2, r_packet.py:457),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $390pred, 426, 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $394load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $396load_attr.2 = getattr(value=$394load_global.1, attr=LINE)
DEBUG:numba.core.ssa:on stmt: interaction_type = $396load_attr.2
DEBUG:numba.core.ssa:on stmt: $402load_attr.4 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_in_nu = $402load_attr.4
DEBUG:numba.core.ssa:on stmt: (r_packet).last_line_interaction_in_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_trace
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 426
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: bool428 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $428pred = call bool428(is_last_line, func=bool428, args=(Var(is_last_line, r_packet.py:406),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $428pred, 450, 432
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 432
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $432load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $const438.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $440binary_add.5 = cur_line_id.1 + $const438.4
DEBUG:numba.core.ssa:on stmt: $446call_function.8 = call $432load_global.1(r_packet, $440binary_add.5, nu_line, numba_plasma, func=$432load_global.1, args=[Var(r_packet, r_packet.py:357), Var($440binary_add.5, r_packet.py:468), Var(nu_line, r_packet.py:393), Var(numba_plasma, r_packet.py:357)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 450
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 450
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $450load_global.1 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $458binary_subtract.5 = tau_event - tau_trace_line_combined
DEBUG:numba.core.ssa:find_def var='tau_trace_line_combined' stmt=$458binary_subtract.5 = tau_event - tau_trace_line_combined
DEBUG:numba.core.ssa:find_def_from_top label 450
DEBUG:numba.core.ssa:idom 426 from label 450
DEBUG:numba.core.ssa:find_def_from_bottom label 426
DEBUG:numba.core.ssa:find_def_from_top label 426
DEBUG:numba.core.ssa:idom 358 from label 426
DEBUG:numba.core.ssa:find_def_from_bottom label 358
DEBUG:numba.core.ssa:find_def_from_top label 358
DEBUG:numba.core.ssa:idom 310 from label 358
DEBUG:numba.core.ssa:find_def_from_bottom label 310
DEBUG:numba.core.ssa:find_def_from_top label 310
DEBUG:numba.core.ssa:idom 168 from label 310
DEBUG:numba.core.ssa:find_def_from_bottom label 168
DEBUG:numba.core.ssa:replaced with: $458binary_subtract.5 = tau_event - tau_trace_line_combined.1
DEBUG:numba.core.ssa:on stmt: $460call_function.6 = call $450load_global.1(cur_electron_density, $458binary_subtract.5, func=$450load_global.1, args=[Var(cur_electron_density, r_packet.py:374), Var($458binary_subtract.5, r_packet.py:474)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron.1 = $460call_function.6
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 466
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: jump 468
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 468
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $470load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $474load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $476call_function.4 = call $470load_global.1($474load_attr.3, func=$470load_global.1, args=[Var($474load_attr.3, r_packet.py:480)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const478.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.6 = $476call_function.4 - $const478.5
DEBUG:numba.core.ssa:on stmt: $482compare_op.7 = cur_line_id.3 == $480binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool484 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $484pred = call bool484($482compare_op.7, func=bool484, args=(Var($482compare_op.7, r_packet.py:480),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $484pred, 488, 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 488
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $const490.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $492inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 496
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $500compare_op.2 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool502 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $502pred = call bool502($500compare_op.2, func=bool502, args=(Var($500compare_op.2, r_packet.py:483),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $502pred, 506, 518
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 506
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: distance = distance_electron.2
DEBUG:numba.core.ssa:on stmt: $510load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $512load_attr.2 = getattr(value=$510load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $512load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 518
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: $522load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $524load_attr.2 = getattr(value=$522load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $524load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 528
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43586190>
DEBUG:numba.core.ssa:on stmt: $534build_tuple.3 = build_tuple(items=[Var(distance, r_packet.py:430), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:on stmt: $536return_value.4 = cast(value=$534build_tuple.3)
DEBUG:numba.core.ssa:on stmt: return $536return_value.4
DEBUG:numba.core.ssa:Fix SSA violator on var distance
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, r_packet.py:361), Var($34load_attr.14, r_packet.py:361), Var(r_inner, r_packet.py:357), Var(r_outer, r_packet.py:358)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $54load_global.23 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.24 = getattr(value=$54load_global.23, attr=log)
DEBUG:numba.core.ssa:on stmt: $58load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=$58load_global.25, attr=random)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_attr.26, attr=random)
DEBUG:numba.core.ssa:on stmt: $64call_method.28 = call $62load_method.27(func=$62load_method.27, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $66call_method.29 = call $56load_method.24($64call_method.28, func=$56load_method.24, args=[Var($64call_method.28, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $68unary_negative.30 = unary(fn=<built-in function neg>, value=$66call_method.29)
DEBUG:numba.core.ssa:on stmt: tau_event = $68unary_negative.30
DEBUG:numba.core.ssa:on stmt: $const72.31 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:on stmt: $78load_attr.33 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $82load_attr.35 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.36 = getitem(value=$78load_attr.33, index=$82load_attr.35)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $84binary_subscr.36
DEBUG:numba.core.ssa:on stmt: $88load_global.37 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $88load_global.37(cur_electron_density, tau_event, func=$88load_global.37, args=[Var(cur_electron_density, r_packet.py:374), Var(tau_event, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $98load_global.41 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $102load_attr.43 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $106load_attr.45 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $110load_attr.47 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $112call_function.48 = call $98load_global.41($102load_attr.43, $106load_attr.45, $110load_attr.47, func=$98load_global.41, args=[Var($102load_attr.43, r_packet.py:382), Var($106load_attr.45, r_packet.py:382), Var($110load_attr.47, r_packet.py:382)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $112call_function.48
DEBUG:numba.core.ssa:on stmt: $118load_attr.50 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $122binary_multiply.52 = $118load_attr.50 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $122binary_multiply.52
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: $130load_global.54 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $134load_attr.56 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $136call_function.57 = call $130load_global.54($134load_attr.56, func=$130load_global.54, args=[Var($134load_attr.56, r_packet.py:388)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const138.58 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $140binary_subtract.59 = $136call_function.57 - $const138.58
DEBUG:numba.core.ssa:on stmt: last_line_id = $140binary_subtract.59
DEBUG:numba.core.ssa:on stmt: jump 144
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $148load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $152load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $158call_function.5 = call $152load_global.2($156load_attr.4, func=$152load_global.2, args=[Var($156load_attr.4, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160call_function.6 = call $148load_global.0(start_line_id, $158call_function.5, func=$148load_global.0, args=[Var(start_line_id, r_packet.py:365), Var($158call_function.5, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $162get_iter.7 = getiter(value=$160call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi164.0 = $162get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined.2 = phi(incoming_values=[Var(tau_trace_line_combined, r_packet.py:369), Var(tau_trace_line_combined.1, r_packet.py:402)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: distance_electron.2 = phi(incoming_values=[Var(distance_electron, r_packet.py:377), Var(distance_electron.1, r_packet.py:474)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, r_packet.py:386), Var(cur_line_id.1, r_packet.py:390)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: $164for_iter.1 = iternext(value=$phi164.0)
DEBUG:numba.core.ssa:on stmt: $164for_iter.2 = pair_first(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $164for_iter.3 = pair_second(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi168.1 = $164for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $164for_iter.3, 168, 466
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi168.1
DEBUG:numba.core.ssa:on stmt: $172load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $176binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_attr.7 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const186.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $188binary_subtract.10 = cur_line_id.1 - $const186.9
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.11 = getitem(value=$182load_attr.7, index=$188binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: nu_line_last_interaction = $190binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $196load_attr.13 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $202load_attr.16 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $204build_tuple.17 = build_tuple(items=[Var(cur_line_id.1, r_packet.py:390), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:on stmt: $206binary_subscr.18 = getitem(value=$196load_attr.13, index=$204build_tuple.17)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $206binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined.2, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined.1 = $214inplace_add.21
DEBUG:numba.core.ssa:on stmt: $222compare_op.24 = cur_line_id.1 == last_line_id
DEBUG:numba.core.ssa:on stmt: is_last_line = $222compare_op.24
DEBUG:numba.core.ssa:on stmt: $226load_global.25 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $238load_attr.31 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $240call_function.32 = call $226load_global.25(r_packet, comov_nu, is_last_line, nu_line, $238load_attr.31, func=$226load_global.25, args=[Var(r_packet, r_packet.py:357), Var(comov_nu, r_packet.py:384), Var(is_last_line, r_packet.py:406), Var(nu_line, r_packet.py:393), Var($238load_attr.31, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace = $240call_function.32
DEBUG:numba.core.ssa:on stmt: $244load_global.33 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $250call_function.36 = call $244load_global.33(cur_electron_density, distance_trace, func=$244load_global.33, args=[Var(cur_electron_density, r_packet.py:374), Var(distance_trace, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_electron = $250call_function.36
DEBUG:numba.core.ssa:on stmt: $258binary_add.39 = tau_trace_line_combined.1 + tau_trace_electron
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $258binary_add.39
DEBUG:numba.core.ssa:on stmt: $266compare_op.42 = distance_boundary <= distance_trace
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.42, func=bool268, args=(Var($266compare_op.42, r_packet.py:425),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 272, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $276compare_op.3 = distance_boundary <= distance_electron.2
DEBUG:numba.core.ssa:on stmt: bool278 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $278pred = call bool278($276compare_op.3, func=bool278, args=(Var($276compare_op.3, r_packet.py:426),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $278pred, 282, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $const284.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $286compare_op.3 = distance_trace != $const284.2
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.3, func=bool288, args=(Var($286compare_op.3, r_packet.py:427),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $292load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $294load_attr.2 = getattr(value=$292load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:first assign: distance
DEBUG:numba.core.ssa:replaced with: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 310
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $314compare_op.3 = distance_electron.2 < distance_trace
DEBUG:numba.core.ssa:on stmt: bool316 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $316pred = call bool316($314compare_op.3, func=bool316, args=(Var($314compare_op.3, r_packet.py:434),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $316pred, 320, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $324compare_op.3 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($324compare_op.3, func=bool326, args=(Var($324compare_op.3, r_packet.py:435),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 330, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 330
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $const332.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $334compare_op.3 = distance_trace != $const332.2
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336($334compare_op.3, func=bool336, args=(Var($334compare_op.3, r_packet.py:436),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 340, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $340load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $342load_attr.2 = getattr(value=$340load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $342load_attr.2
DEBUG:numba.core.ssa:on stmt: distance = distance_electron.2
DEBUG:numba.core.ssa:replaced with: distance.1 = distance_electron.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $358load_global.1 = global(update_line_estimators: CPUDispatcher(<function update_line_estimators at 0x7f6e4a0f6b00>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id.1, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id.1, r_packet.py:390), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $380compare_op.11 = tau_trace_combined > tau_event
DEBUG:numba.core.ssa:on stmt: bool382 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $382pred = call bool382($380compare_op.11, func=bool382, args=(Var($380compare_op.11, r_packet.py:456),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $382pred, 386, 426
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $386load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $388load_attr.2 = getattr(value=$386load_global.1, attr=disable_line_scattering)
DEBUG:numba.core.ssa:on stmt: bool390 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $390pred = call bool390($388load_attr.2, func=bool390, args=(Var($388load_attr.2, r_packet.py:457),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $390pred, 426, 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $394load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $396load_attr.2 = getattr(value=$394load_global.1, attr=LINE)
DEBUG:numba.core.ssa:on stmt: interaction_type = $396load_attr.2
DEBUG:numba.core.ssa:on stmt: $402load_attr.4 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_in_nu = $402load_attr.4
DEBUG:numba.core.ssa:on stmt: (r_packet).last_line_interaction_in_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_trace
DEBUG:numba.core.ssa:replaced with: distance.2 = distance_trace
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 426
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: bool428 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $428pred = call bool428(is_last_line, func=bool428, args=(Var(is_last_line, r_packet.py:406),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $428pred, 450, 432
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 432
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $432load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $const438.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $440binary_add.5 = cur_line_id.1 + $const438.4
DEBUG:numba.core.ssa:on stmt: $446call_function.8 = call $432load_global.1(r_packet, $440binary_add.5, nu_line, numba_plasma, func=$432load_global.1, args=[Var(r_packet, r_packet.py:357), Var($440binary_add.5, r_packet.py:468), Var(nu_line, r_packet.py:393), Var(numba_plasma, r_packet.py:357)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 450
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 450
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $450load_global.1 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $458binary_subtract.5 = tau_event - tau_trace_line_combined.1
DEBUG:numba.core.ssa:on stmt: $460call_function.6 = call $450load_global.1(cur_electron_density, $458binary_subtract.5, func=$450load_global.1, args=[Var(cur_electron_density, r_packet.py:374), Var($458binary_subtract.5, r_packet.py:474)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron.1 = $460call_function.6
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 466
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: jump 468
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 468
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $470load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $474load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $476call_function.4 = call $470load_global.1($474load_attr.3, func=$470load_global.1, args=[Var($474load_attr.3, r_packet.py:480)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const478.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.6 = $476call_function.4 - $const478.5
DEBUG:numba.core.ssa:on stmt: $482compare_op.7 = cur_line_id.3 == $480binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool484 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $484pred = call bool484($482compare_op.7, func=bool484, args=(Var($482compare_op.7, r_packet.py:480),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $484pred, 488, 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 488
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $const490.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $492inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 496
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $500compare_op.2 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool502 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $502pred = call bool502($500compare_op.2, func=bool502, args=(Var($500compare_op.2, r_packet.py:483),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $502pred, 506, 518
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 506
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: distance = distance_electron.2
DEBUG:numba.core.ssa:replaced with: distance.3 = distance_electron.2
DEBUG:numba.core.ssa:on stmt: $510load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $512load_attr.2 = getattr(value=$510load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $512load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 518
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:replaced with: distance.4 = distance_boundary
DEBUG:numba.core.ssa:on stmt: $522load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $524load_attr.2 = getattr(value=$522load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $524load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 528
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e460207d0>
DEBUG:numba.core.ssa:on stmt: $534build_tuple.3 = build_tuple(items=[Var(distance, r_packet.py:430), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:on stmt: $536return_value.4 = cast(value=$534build_tuple.3)
DEBUG:numba.core.ssa:on stmt: return $536return_value.4
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {292: [<numba.core.ir.Assign object at 0x7f6e4358f190>],
             340: [<numba.core.ir.Assign object at 0x7f6e4358f8d0>],
             394: [<numba.core.ir.Assign object at 0x7f6e4358fed0>],
             506: [<numba.core.ir.Assign object at 0x7f6e43605610>],
             518: [<numba.core.ir.Assign object at 0x7f6e45ed0450>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, r_packet.py:361), Var($34load_attr.14, r_packet.py:361), Var(r_inner, r_packet.py:357), Var(r_outer, r_packet.py:358)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $54load_global.23 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.24 = getattr(value=$54load_global.23, attr=log)
DEBUG:numba.core.ssa:on stmt: $58load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=$58load_global.25, attr=random)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_attr.26, attr=random)
DEBUG:numba.core.ssa:on stmt: $64call_method.28 = call $62load_method.27(func=$62load_method.27, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $66call_method.29 = call $56load_method.24($64call_method.28, func=$56load_method.24, args=[Var($64call_method.28, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $68unary_negative.30 = unary(fn=<built-in function neg>, value=$66call_method.29)
DEBUG:numba.core.ssa:on stmt: tau_event = $68unary_negative.30
DEBUG:numba.core.ssa:on stmt: $const72.31 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:on stmt: $78load_attr.33 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $82load_attr.35 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.36 = getitem(value=$78load_attr.33, index=$82load_attr.35)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $84binary_subscr.36
DEBUG:numba.core.ssa:on stmt: $88load_global.37 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $88load_global.37(cur_electron_density, tau_event, func=$88load_global.37, args=[Var(cur_electron_density, r_packet.py:374), Var(tau_event, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $98load_global.41 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $102load_attr.43 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $106load_attr.45 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $110load_attr.47 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $112call_function.48 = call $98load_global.41($102load_attr.43, $106load_attr.45, $110load_attr.47, func=$98load_global.41, args=[Var($102load_attr.43, r_packet.py:382), Var($106load_attr.45, r_packet.py:382), Var($110load_attr.47, r_packet.py:382)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $112call_function.48
DEBUG:numba.core.ssa:on stmt: $118load_attr.50 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $122binary_multiply.52 = $118load_attr.50 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $122binary_multiply.52
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: $130load_global.54 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $134load_attr.56 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $136call_function.57 = call $130load_global.54($134load_attr.56, func=$130load_global.54, args=[Var($134load_attr.56, r_packet.py:388)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const138.58 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $140binary_subtract.59 = $136call_function.57 - $const138.58
DEBUG:numba.core.ssa:on stmt: last_line_id = $140binary_subtract.59
DEBUG:numba.core.ssa:on stmt: jump 144
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $148load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $152load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $158call_function.5 = call $152load_global.2($156load_attr.4, func=$152load_global.2, args=[Var($156load_attr.4, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160call_function.6 = call $148load_global.0(start_line_id, $158call_function.5, func=$148load_global.0, args=[Var(start_line_id, r_packet.py:365), Var($158call_function.5, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $162get_iter.7 = getiter(value=$160call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi164.0 = $162get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined.2 = phi(incoming_values=[Var(tau_trace_line_combined, r_packet.py:369), Var(tau_trace_line_combined.1, r_packet.py:402)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: distance_electron.2 = phi(incoming_values=[Var(distance_electron, r_packet.py:377), Var(distance_electron.1, r_packet.py:474)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, r_packet.py:386), Var(cur_line_id.1, r_packet.py:390)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: $164for_iter.1 = iternext(value=$phi164.0)
DEBUG:numba.core.ssa:on stmt: $164for_iter.2 = pair_first(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $164for_iter.3 = pair_second(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi168.1 = $164for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $164for_iter.3, 168, 466
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi168.1
DEBUG:numba.core.ssa:on stmt: $172load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $176binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_attr.7 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const186.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $188binary_subtract.10 = cur_line_id.1 - $const186.9
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.11 = getitem(value=$182load_attr.7, index=$188binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: nu_line_last_interaction = $190binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $196load_attr.13 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $202load_attr.16 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $204build_tuple.17 = build_tuple(items=[Var(cur_line_id.1, r_packet.py:390), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:on stmt: $206binary_subscr.18 = getitem(value=$196load_attr.13, index=$204build_tuple.17)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $206binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined.2, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined.1 = $214inplace_add.21
DEBUG:numba.core.ssa:on stmt: $222compare_op.24 = cur_line_id.1 == last_line_id
DEBUG:numba.core.ssa:on stmt: is_last_line = $222compare_op.24
DEBUG:numba.core.ssa:on stmt: $226load_global.25 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $238load_attr.31 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $240call_function.32 = call $226load_global.25(r_packet, comov_nu, is_last_line, nu_line, $238load_attr.31, func=$226load_global.25, args=[Var(r_packet, r_packet.py:357), Var(comov_nu, r_packet.py:384), Var(is_last_line, r_packet.py:406), Var(nu_line, r_packet.py:393), Var($238load_attr.31, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace = $240call_function.32
DEBUG:numba.core.ssa:on stmt: $244load_global.33 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $250call_function.36 = call $244load_global.33(cur_electron_density, distance_trace, func=$244load_global.33, args=[Var(cur_electron_density, r_packet.py:374), Var(distance_trace, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_electron = $250call_function.36
DEBUG:numba.core.ssa:on stmt: $258binary_add.39 = tau_trace_line_combined.1 + tau_trace_electron
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $258binary_add.39
DEBUG:numba.core.ssa:on stmt: $266compare_op.42 = distance_boundary <= distance_trace
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.42, func=bool268, args=(Var($266compare_op.42, r_packet.py:425),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 272, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $276compare_op.3 = distance_boundary <= distance_electron.2
DEBUG:numba.core.ssa:on stmt: bool278 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $278pred = call bool278($276compare_op.3, func=bool278, args=(Var($276compare_op.3, r_packet.py:426),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $278pred, 282, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $const284.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $286compare_op.3 = distance_trace != $const284.2
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.3, func=bool288, args=(Var($286compare_op.3, r_packet.py:427),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $292load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $294load_attr.2 = getattr(value=$292load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 310
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $314compare_op.3 = distance_electron.2 < distance_trace
DEBUG:numba.core.ssa:on stmt: bool316 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $316pred = call bool316($314compare_op.3, func=bool316, args=(Var($314compare_op.3, r_packet.py:434),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $316pred, 320, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $324compare_op.3 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($324compare_op.3, func=bool326, args=(Var($324compare_op.3, r_packet.py:435),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 330, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 330
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $const332.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $334compare_op.3 = distance_trace != $const332.2
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336($334compare_op.3, func=bool336, args=(Var($334compare_op.3, r_packet.py:436),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 340, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $340load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $342load_attr.2 = getattr(value=$340load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $342load_attr.2
DEBUG:numba.core.ssa:on stmt: distance.1 = distance_electron.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $358load_global.1 = global(update_line_estimators: CPUDispatcher(<function update_line_estimators at 0x7f6e4a0f6b00>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id.1, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id.1, r_packet.py:390), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $380compare_op.11 = tau_trace_combined > tau_event
DEBUG:numba.core.ssa:on stmt: bool382 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $382pred = call bool382($380compare_op.11, func=bool382, args=(Var($380compare_op.11, r_packet.py:456),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $382pred, 386, 426
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $386load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $388load_attr.2 = getattr(value=$386load_global.1, attr=disable_line_scattering)
DEBUG:numba.core.ssa:on stmt: bool390 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $390pred = call bool390($388load_attr.2, func=bool390, args=(Var($388load_attr.2, r_packet.py:457),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $390pred, 426, 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $394load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $396load_attr.2 = getattr(value=$394load_global.1, attr=LINE)
DEBUG:numba.core.ssa:on stmt: interaction_type = $396load_attr.2
DEBUG:numba.core.ssa:on stmt: $402load_attr.4 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_in_nu = $402load_attr.4
DEBUG:numba.core.ssa:on stmt: (r_packet).last_line_interaction_in_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance.2 = distance_trace
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 426
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: bool428 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $428pred = call bool428(is_last_line, func=bool428, args=(Var(is_last_line, r_packet.py:406),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $428pred, 450, 432
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 432
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $432load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $const438.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $440binary_add.5 = cur_line_id.1 + $const438.4
DEBUG:numba.core.ssa:on stmt: $446call_function.8 = call $432load_global.1(r_packet, $440binary_add.5, nu_line, numba_plasma, func=$432load_global.1, args=[Var(r_packet, r_packet.py:357), Var($440binary_add.5, r_packet.py:468), Var(nu_line, r_packet.py:393), Var(numba_plasma, r_packet.py:357)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 450
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 450
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $450load_global.1 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $458binary_subtract.5 = tau_event - tau_trace_line_combined.1
DEBUG:numba.core.ssa:on stmt: $460call_function.6 = call $450load_global.1(cur_electron_density, $458binary_subtract.5, func=$450load_global.1, args=[Var(cur_electron_density, r_packet.py:374), Var($458binary_subtract.5, r_packet.py:474)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron.1 = $460call_function.6
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 466
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: jump 468
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 468
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $470load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $474load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $476call_function.4 = call $470load_global.1($474load_attr.3, func=$470load_global.1, args=[Var($474load_attr.3, r_packet.py:480)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const478.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.6 = $476call_function.4 - $const478.5
DEBUG:numba.core.ssa:on stmt: $482compare_op.7 = cur_line_id.3 == $480binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool484 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $484pred = call bool484($482compare_op.7, func=bool484, args=(Var($482compare_op.7, r_packet.py:480),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $484pred, 488, 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 488
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $const490.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $492inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 496
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $500compare_op.2 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool502 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $502pred = call bool502($500compare_op.2, func=bool502, args=(Var($500compare_op.2, r_packet.py:483),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $502pred, 506, 518
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 506
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: distance.3 = distance_electron.2
DEBUG:numba.core.ssa:on stmt: $510load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $512load_attr.2 = getattr(value=$510load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $512load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 518
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: distance.4 = distance_boundary
DEBUG:numba.core.ssa:on stmt: $522load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $524load_attr.2 = getattr(value=$522load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $524load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 528
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e43605390>
DEBUG:numba.core.ssa:on stmt: $534build_tuple.3 = build_tuple(items=[Var(distance, r_packet.py:430), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:find_def var='distance' stmt=$534build_tuple.3 = build_tuple(items=[Var(distance, r_packet.py:430), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:find_def_from_top label 528
DEBUG:numba.core.ssa:insert phi node distance.5 = phi(incoming_values=[], incoming_blocks=[]) at 528
DEBUG:numba.core.ssa:find_def_from_bottom label 292
DEBUG:numba.core.ssa:incoming_def distance = distance_boundary
DEBUG:numba.core.ssa:find_def_from_bottom label 518
DEBUG:numba.core.ssa:incoming_def distance.4 = distance_boundary
DEBUG:numba.core.ssa:find_def_from_bottom label 394
DEBUG:numba.core.ssa:incoming_def distance.2 = distance_trace
DEBUG:numba.core.ssa:find_def_from_bottom label 340
DEBUG:numba.core.ssa:incoming_def distance.1 = distance_electron.2
DEBUG:numba.core.ssa:find_def_from_bottom label 506
DEBUG:numba.core.ssa:incoming_def distance.3 = distance_electron.2
DEBUG:numba.core.ssa:replaced with: $534build_tuple.3 = build_tuple(items=[Var(distance.5, r_packet.py:493), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:on stmt: $536return_value.4 = cast(value=$534build_tuple.3)
DEBUG:numba.core.ssa:on stmt: return $536return_value.4
DEBUG:numba.core.ssa:Fix SSA violator on var interaction_type
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, r_packet.py:361), Var($34load_attr.14, r_packet.py:361), Var(r_inner, r_packet.py:357), Var(r_outer, r_packet.py:358)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $54load_global.23 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.24 = getattr(value=$54load_global.23, attr=log)
DEBUG:numba.core.ssa:on stmt: $58load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=$58load_global.25, attr=random)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_attr.26, attr=random)
DEBUG:numba.core.ssa:on stmt: $64call_method.28 = call $62load_method.27(func=$62load_method.27, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $66call_method.29 = call $56load_method.24($64call_method.28, func=$56load_method.24, args=[Var($64call_method.28, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $68unary_negative.30 = unary(fn=<built-in function neg>, value=$66call_method.29)
DEBUG:numba.core.ssa:on stmt: tau_event = $68unary_negative.30
DEBUG:numba.core.ssa:on stmt: $const72.31 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:on stmt: $78load_attr.33 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $82load_attr.35 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.36 = getitem(value=$78load_attr.33, index=$82load_attr.35)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $84binary_subscr.36
DEBUG:numba.core.ssa:on stmt: $88load_global.37 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $88load_global.37(cur_electron_density, tau_event, func=$88load_global.37, args=[Var(cur_electron_density, r_packet.py:374), Var(tau_event, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $98load_global.41 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $102load_attr.43 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $106load_attr.45 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $110load_attr.47 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $112call_function.48 = call $98load_global.41($102load_attr.43, $106load_attr.45, $110load_attr.47, func=$98load_global.41, args=[Var($102load_attr.43, r_packet.py:382), Var($106load_attr.45, r_packet.py:382), Var($110load_attr.47, r_packet.py:382)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $112call_function.48
DEBUG:numba.core.ssa:on stmt: $118load_attr.50 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $122binary_multiply.52 = $118load_attr.50 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $122binary_multiply.52
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: $130load_global.54 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $134load_attr.56 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $136call_function.57 = call $130load_global.54($134load_attr.56, func=$130load_global.54, args=[Var($134load_attr.56, r_packet.py:388)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const138.58 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $140binary_subtract.59 = $136call_function.57 - $const138.58
DEBUG:numba.core.ssa:on stmt: last_line_id = $140binary_subtract.59
DEBUG:numba.core.ssa:on stmt: jump 144
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $148load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $152load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $158call_function.5 = call $152load_global.2($156load_attr.4, func=$152load_global.2, args=[Var($156load_attr.4, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160call_function.6 = call $148load_global.0(start_line_id, $158call_function.5, func=$148load_global.0, args=[Var(start_line_id, r_packet.py:365), Var($158call_function.5, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $162get_iter.7 = getiter(value=$160call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi164.0 = $162get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined.2 = phi(incoming_values=[Var(tau_trace_line_combined, r_packet.py:369), Var(tau_trace_line_combined.1, r_packet.py:402)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: distance_electron.2 = phi(incoming_values=[Var(distance_electron, r_packet.py:377), Var(distance_electron.1, r_packet.py:474)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, r_packet.py:386), Var(cur_line_id.1, r_packet.py:390)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: $164for_iter.1 = iternext(value=$phi164.0)
DEBUG:numba.core.ssa:on stmt: $164for_iter.2 = pair_first(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $164for_iter.3 = pair_second(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi168.1 = $164for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $164for_iter.3, 168, 466
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi168.1
DEBUG:numba.core.ssa:on stmt: $172load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $176binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_attr.7 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const186.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $188binary_subtract.10 = cur_line_id.1 - $const186.9
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.11 = getitem(value=$182load_attr.7, index=$188binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: nu_line_last_interaction = $190binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $196load_attr.13 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $202load_attr.16 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $204build_tuple.17 = build_tuple(items=[Var(cur_line_id.1, r_packet.py:390), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:on stmt: $206binary_subscr.18 = getitem(value=$196load_attr.13, index=$204build_tuple.17)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $206binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined.2, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined.1 = $214inplace_add.21
DEBUG:numba.core.ssa:on stmt: $222compare_op.24 = cur_line_id.1 == last_line_id
DEBUG:numba.core.ssa:on stmt: is_last_line = $222compare_op.24
DEBUG:numba.core.ssa:on stmt: $226load_global.25 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $238load_attr.31 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $240call_function.32 = call $226load_global.25(r_packet, comov_nu, is_last_line, nu_line, $238load_attr.31, func=$226load_global.25, args=[Var(r_packet, r_packet.py:357), Var(comov_nu, r_packet.py:384), Var(is_last_line, r_packet.py:406), Var(nu_line, r_packet.py:393), Var($238load_attr.31, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace = $240call_function.32
DEBUG:numba.core.ssa:on stmt: $244load_global.33 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $250call_function.36 = call $244load_global.33(cur_electron_density, distance_trace, func=$244load_global.33, args=[Var(cur_electron_density, r_packet.py:374), Var(distance_trace, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_electron = $250call_function.36
DEBUG:numba.core.ssa:on stmt: $258binary_add.39 = tau_trace_line_combined.1 + tau_trace_electron
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $258binary_add.39
DEBUG:numba.core.ssa:on stmt: $266compare_op.42 = distance_boundary <= distance_trace
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.42, func=bool268, args=(Var($266compare_op.42, r_packet.py:425),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 272, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $276compare_op.3 = distance_boundary <= distance_electron.2
DEBUG:numba.core.ssa:on stmt: bool278 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $278pred = call bool278($276compare_op.3, func=bool278, args=(Var($276compare_op.3, r_packet.py:426),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $278pred, 282, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $const284.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $286compare_op.3 = distance_trace != $const284.2
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.3, func=bool288, args=(Var($286compare_op.3, r_packet.py:427),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $292load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $294load_attr.2 = getattr(value=$292load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:first assign: interaction_type
DEBUG:numba.core.ssa:replaced with: interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 310
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $314compare_op.3 = distance_electron.2 < distance_trace
DEBUG:numba.core.ssa:on stmt: bool316 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $316pred = call bool316($314compare_op.3, func=bool316, args=(Var($314compare_op.3, r_packet.py:434),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $316pred, 320, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $324compare_op.3 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($324compare_op.3, func=bool326, args=(Var($324compare_op.3, r_packet.py:435),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 330, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 330
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $const332.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $334compare_op.3 = distance_trace != $const332.2
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336($334compare_op.3, func=bool336, args=(Var($334compare_op.3, r_packet.py:436),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 340, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $340load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $342load_attr.2 = getattr(value=$340load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $342load_attr.2
DEBUG:numba.core.ssa:replaced with: interaction_type.1 = $342load_attr.2
DEBUG:numba.core.ssa:on stmt: distance.1 = distance_electron.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $358load_global.1 = global(update_line_estimators: CPUDispatcher(<function update_line_estimators at 0x7f6e4a0f6b00>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id.1, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id.1, r_packet.py:390), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $380compare_op.11 = tau_trace_combined > tau_event
DEBUG:numba.core.ssa:on stmt: bool382 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $382pred = call bool382($380compare_op.11, func=bool382, args=(Var($380compare_op.11, r_packet.py:456),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $382pred, 386, 426
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $386load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $388load_attr.2 = getattr(value=$386load_global.1, attr=disable_line_scattering)
DEBUG:numba.core.ssa:on stmt: bool390 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $390pred = call bool390($388load_attr.2, func=bool390, args=(Var($388load_attr.2, r_packet.py:457),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $390pred, 426, 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $394load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $396load_attr.2 = getattr(value=$394load_global.1, attr=LINE)
DEBUG:numba.core.ssa:on stmt: interaction_type = $396load_attr.2
DEBUG:numba.core.ssa:replaced with: interaction_type.2 = $396load_attr.2
DEBUG:numba.core.ssa:on stmt: $402load_attr.4 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_in_nu = $402load_attr.4
DEBUG:numba.core.ssa:on stmt: (r_packet).last_line_interaction_in_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance.2 = distance_trace
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 426
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: bool428 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $428pred = call bool428(is_last_line, func=bool428, args=(Var(is_last_line, r_packet.py:406),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $428pred, 450, 432
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 432
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $432load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $const438.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $440binary_add.5 = cur_line_id.1 + $const438.4
DEBUG:numba.core.ssa:on stmt: $446call_function.8 = call $432load_global.1(r_packet, $440binary_add.5, nu_line, numba_plasma, func=$432load_global.1, args=[Var(r_packet, r_packet.py:357), Var($440binary_add.5, r_packet.py:468), Var(nu_line, r_packet.py:393), Var(numba_plasma, r_packet.py:357)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 450
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 450
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $450load_global.1 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $458binary_subtract.5 = tau_event - tau_trace_line_combined.1
DEBUG:numba.core.ssa:on stmt: $460call_function.6 = call $450load_global.1(cur_electron_density, $458binary_subtract.5, func=$450load_global.1, args=[Var(cur_electron_density, r_packet.py:374), Var($458binary_subtract.5, r_packet.py:474)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron.1 = $460call_function.6
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 466
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: jump 468
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 468
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $470load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $474load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $476call_function.4 = call $470load_global.1($474load_attr.3, func=$470load_global.1, args=[Var($474load_attr.3, r_packet.py:480)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const478.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.6 = $476call_function.4 - $const478.5
DEBUG:numba.core.ssa:on stmt: $482compare_op.7 = cur_line_id.3 == $480binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool484 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $484pred = call bool484($482compare_op.7, func=bool484, args=(Var($482compare_op.7, r_packet.py:480),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $484pred, 488, 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 488
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $const490.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $492inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 496
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: $500compare_op.2 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool502 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $502pred = call bool502($500compare_op.2, func=bool502, args=(Var($500compare_op.2, r_packet.py:483),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $502pred, 506, 518
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 506
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: distance.3 = distance_electron.2
DEBUG:numba.core.ssa:on stmt: $510load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $512load_attr.2 = getattr(value=$510load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type = $512load_attr.2
DEBUG:numba.core.ssa:replaced with: interaction_type.3 = $512load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 518
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: distance.4 = distance_boundary
DEBUG:numba.core.ssa:on stmt: $522load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $524load_attr.2 = getattr(value=$522load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $524load_attr.2
DEBUG:numba.core.ssa:replaced with: interaction_type.4 = $524load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 528
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45ed0250>
DEBUG:numba.core.ssa:on stmt: distance.5 = phi(incoming_values=[Var(distance, r_packet.py:430), Var(distance.4, r_packet.py:488), Var(distance.2, r_packet.py:463), Var(distance.1, r_packet.py:439), Var(distance.3, r_packet.py:484)], incoming_blocks=[292, 518, 394, 340, 506])
DEBUG:numba.core.ssa:on stmt: $534build_tuple.3 = build_tuple(items=[Var(distance.5, r_packet.py:493), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:on stmt: $536return_value.4 = cast(value=$534build_tuple.3)
DEBUG:numba.core.ssa:on stmt: return $536return_value.4
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {292: [<numba.core.ir.Assign object at 0x7f6e4358fc50>],
             340: [<numba.core.ir.Assign object at 0x7f6e4358f910>],
             394: [<numba.core.ir.Assign object at 0x7f6e4600c6d0>],
             506: [<numba.core.ir.Assign object at 0x7f6e436027d0>],
             518: [<numba.core.ir.Assign object at 0x7f6e43602d10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_model = arg(1, name=numba_model)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(2, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: estimators = arg(3, name=estimators)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: r_inner = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $16load_attr.6 = getattr(value=numba_model, attr=r_outer)
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.9 = getitem(value=$16load_attr.6, index=$20load_attr.8)
DEBUG:numba.core.ssa:on stmt: r_outer = $22binary_subscr.9
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(calculate_distance_boundary: CPUDispatcher(<function calculate_distance_boundary at 0x7f6e4a0e6b00>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $40call_function.17 = call $26load_global.10($30load_attr.12, $34load_attr.14, r_inner, r_outer, func=$26load_global.10, args=[Var($30load_attr.12, r_packet.py:361), Var($34load_attr.14, r_packet.py:361), Var(r_inner, r_packet.py:357), Var(r_outer, r_packet.py:358)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.20 = exhaust_iter(value=$40call_function.17, count=2)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.18 = static_getitem(value=$42unpack_sequence.20, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $42unpack_sequence.19 = static_getitem(value=$42unpack_sequence.20, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: distance_boundary = $42unpack_sequence.18
DEBUG:numba.core.ssa:on stmt: delta_shell = $42unpack_sequence.19
DEBUG:numba.core.ssa:on stmt: $50load_attr.22 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: start_line_id = $50load_attr.22
DEBUG:numba.core.ssa:on stmt: $54load_global.23 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_method.24 = getattr(value=$54load_global.23, attr=log)
DEBUG:numba.core.ssa:on stmt: $58load_global.25 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.26 = getattr(value=$58load_global.25, attr=random)
DEBUG:numba.core.ssa:on stmt: $62load_method.27 = getattr(value=$60load_attr.26, attr=random)
DEBUG:numba.core.ssa:on stmt: $64call_method.28 = call $62load_method.27(func=$62load_method.27, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $66call_method.29 = call $56load_method.24($64call_method.28, func=$56load_method.24, args=[Var($64call_method.28, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $68unary_negative.30 = unary(fn=<built-in function neg>, value=$66call_method.29)
DEBUG:numba.core.ssa:on stmt: tau_event = $68unary_negative.30
DEBUG:numba.core.ssa:on stmt: $const72.31 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined = $const72.31
DEBUG:numba.core.ssa:on stmt: $78load_attr.33 = getattr(value=numba_plasma, attr=electron_density)
DEBUG:numba.core.ssa:on stmt: $82load_attr.35 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $84binary_subscr.36 = getitem(value=$78load_attr.33, index=$82load_attr.35)
DEBUG:numba.core.ssa:on stmt: cur_electron_density = $84binary_subscr.36
DEBUG:numba.core.ssa:on stmt: $88load_global.37 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $94call_function.40 = call $88load_global.37(cur_electron_density, tau_event, func=$88load_global.37, args=[Var(cur_electron_density, r_packet.py:374), Var(tau_event, r_packet.py:368)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron = $94call_function.40
DEBUG:numba.core.ssa:on stmt: $98load_global.41 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $102load_attr.43 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $106load_attr.45 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $110load_attr.47 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $112call_function.48 = call $98load_global.41($102load_attr.43, $106load_attr.45, $110load_attr.47, func=$98load_global.41, args=[Var($102load_attr.43, r_packet.py:382), Var($106load_attr.45, r_packet.py:382), Var($110load_attr.47, r_packet.py:382)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $112call_function.48
DEBUG:numba.core.ssa:on stmt: $118load_attr.50 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $122binary_multiply.52 = $118load_attr.50 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $122binary_multiply.52
DEBUG:numba.core.ssa:on stmt: cur_line_id = start_line_id
DEBUG:numba.core.ssa:on stmt: $130load_global.54 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $134load_attr.56 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $136call_function.57 = call $130load_global.54($134load_attr.56, func=$130load_global.54, args=[Var($134load_attr.56, r_packet.py:388)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const138.58 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $140binary_subtract.59 = $136call_function.57 - $const138.58
DEBUG:numba.core.ssa:on stmt: last_line_id = $140binary_subtract.59
DEBUG:numba.core.ssa:on stmt: jump 144
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 144
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $148load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $152load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.4 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $158call_function.5 = call $152load_global.2($156load_attr.4, func=$152load_global.2, args=[Var($156load_attr.4, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $160call_function.6 = call $148load_global.0(start_line_id, $158call_function.5, func=$148load_global.0, args=[Var(start_line_id, r_packet.py:365), Var($158call_function.5, r_packet.py:390)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $162get_iter.7 = getiter(value=$160call_function.6)
DEBUG:numba.core.ssa:on stmt: $phi164.0 = $162get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined.2 = phi(incoming_values=[Var(tau_trace_line_combined, r_packet.py:369), Var(tau_trace_line_combined.1, r_packet.py:402)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: distance_electron.2 = phi(incoming_values=[Var(distance_electron, r_packet.py:377), Var(distance_electron.1, r_packet.py:474)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: cur_line_id.3 = phi(incoming_values=[Var(cur_line_id, r_packet.py:386), Var(cur_line_id.1, r_packet.py:390)], incoming_blocks=[144, 450])
DEBUG:numba.core.ssa:on stmt: $164for_iter.1 = iternext(value=$phi164.0)
DEBUG:numba.core.ssa:on stmt: $164for_iter.2 = pair_first(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $164for_iter.3 = pair_second(value=$164for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi168.1 = $164for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $164for_iter.3, 168, 466
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: cur_line_id.1 = $phi168.1
DEBUG:numba.core.ssa:on stmt: $172load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $176binary_subscr.5 = getitem(value=$172load_attr.3, index=cur_line_id.1)
DEBUG:numba.core.ssa:on stmt: nu_line = $176binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $182load_attr.7 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $const186.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $188binary_subtract.10 = cur_line_id.1 - $const186.9
DEBUG:numba.core.ssa:on stmt: $190binary_subscr.11 = getitem(value=$182load_attr.7, index=$188binary_subtract.10)
DEBUG:numba.core.ssa:on stmt: nu_line_last_interaction = $190binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $196load_attr.13 = getattr(value=numba_plasma, attr=tau_sobolev)
DEBUG:numba.core.ssa:on stmt: $202load_attr.16 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $204build_tuple.17 = build_tuple(items=[Var(cur_line_id.1, r_packet.py:390), Var($202load_attr.16, r_packet.py:398)])
DEBUG:numba.core.ssa:on stmt: $206binary_subscr.18 = getitem(value=$196load_attr.13, index=$204build_tuple.17)
DEBUG:numba.core.ssa:on stmt: tau_trace_line = $206binary_subscr.18
DEBUG:numba.core.ssa:on stmt: $214inplace_add.21 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=tau_trace_line_combined.2, rhs=tau_trace_line, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: tau_trace_line_combined.1 = $214inplace_add.21
DEBUG:numba.core.ssa:on stmt: $222compare_op.24 = cur_line_id.1 == last_line_id
DEBUG:numba.core.ssa:on stmt: is_last_line = $222compare_op.24
DEBUG:numba.core.ssa:on stmt: $226load_global.25 = global(calculate_distance_line: CPUDispatcher(<function calculate_distance_line at 0x7f6e4a0e6b90>))
DEBUG:numba.core.ssa:on stmt: $238load_attr.31 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $240call_function.32 = call $226load_global.25(r_packet, comov_nu, is_last_line, nu_line, $238load_attr.31, func=$226load_global.25, args=[Var(r_packet, r_packet.py:357), Var(comov_nu, r_packet.py:384), Var(is_last_line, r_packet.py:406), Var(nu_line, r_packet.py:393), Var($238load_attr.31, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_trace = $240call_function.32
DEBUG:numba.core.ssa:on stmt: $244load_global.33 = global(calculate_tau_electron: CPUDispatcher(<function calculate_tau_electron at 0x7f6e4a0ef440>))
DEBUG:numba.core.ssa:on stmt: $250call_function.36 = call $244load_global.33(cur_electron_density, distance_trace, func=$244load_global.33, args=[Var(cur_electron_density, r_packet.py:374), Var(distance_trace, r_packet.py:413)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: tau_trace_electron = $250call_function.36
DEBUG:numba.core.ssa:on stmt: $258binary_add.39 = tau_trace_line_combined.1 + tau_trace_electron
DEBUG:numba.core.ssa:on stmt: tau_trace_combined = $258binary_add.39
DEBUG:numba.core.ssa:on stmt: $266compare_op.42 = distance_boundary <= distance_trace
DEBUG:numba.core.ssa:on stmt: bool268 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $268pred = call bool268($266compare_op.42, func=bool268, args=(Var($266compare_op.42, r_packet.py:425),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $268pred, 272, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $276compare_op.3 = distance_boundary <= distance_electron.2
DEBUG:numba.core.ssa:on stmt: bool278 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $278pred = call bool278($276compare_op.3, func=bool278, args=(Var($276compare_op.3, r_packet.py:426),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $278pred, 282, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $const284.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $286compare_op.3 = distance_trace != $const284.2
DEBUG:numba.core.ssa:on stmt: bool288 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $288pred = call bool288($286compare_op.3, func=bool288, args=(Var($286compare_op.3, r_packet.py:427),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $288pred, 292, 310
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $292load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $294load_attr.2 = getattr(value=$292load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance = distance_boundary
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 310
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $314compare_op.3 = distance_electron.2 < distance_trace
DEBUG:numba.core.ssa:on stmt: bool316 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $316pred = call bool316($314compare_op.3, func=bool316, args=(Var($314compare_op.3, r_packet.py:434),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $316pred, 320, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 320
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $324compare_op.3 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($324compare_op.3, func=bool326, args=(Var($324compare_op.3, r_packet.py:435),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 330, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 330
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $const332.2 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $334compare_op.3 = distance_trace != $const332.2
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336($334compare_op.3, func=bool336, args=(Var($334compare_op.3, r_packet.py:436),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 340, 358
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 340
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $340load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $342load_attr.2 = getattr(value=$340load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type.1 = $342load_attr.2
DEBUG:numba.core.ssa:on stmt: distance.1 = distance_electron.2
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 358
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $358load_global.1 = global(update_line_estimators: CPUDispatcher(<function update_line_estimators at 0x7f6e4a0f6b00>))
DEBUG:numba.core.ssa:on stmt: $370load_attr.7 = getattr(value=numba_model, attr=time_explosion)
DEBUG:numba.core.ssa:on stmt: $372call_function.8 = call $358load_global.1(estimators, r_packet, cur_line_id.1, distance_trace, $370load_attr.7, func=$358load_global.1, args=[Var(estimators, r_packet.py:357), Var(r_packet, r_packet.py:357), Var(cur_line_id.1, r_packet.py:390), Var(distance_trace, r_packet.py:413), Var($370load_attr.7, r_packet.py:452)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $380compare_op.11 = tau_trace_combined > tau_event
DEBUG:numba.core.ssa:on stmt: bool382 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $382pred = call bool382($380compare_op.11, func=bool382, args=(Var($380compare_op.11, r_packet.py:456),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $382pred, 386, 426
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 386
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $386load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $388load_attr.2 = getattr(value=$386load_global.1, attr=disable_line_scattering)
DEBUG:numba.core.ssa:on stmt: bool390 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $390pred = call bool390($388load_attr.2, func=bool390, args=(Var($388load_attr.2, r_packet.py:457),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $390pred, 426, 394
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 394
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $394load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $396load_attr.2 = getattr(value=$394load_global.1, attr=LINE)
DEBUG:numba.core.ssa:on stmt: interaction_type.2 = $396load_attr.2
DEBUG:numba.core.ssa:on stmt: $402load_attr.4 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_interaction_in_nu = $402load_attr.4
DEBUG:numba.core.ssa:on stmt: (r_packet).last_line_interaction_in_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = cur_line_id.1
DEBUG:numba.core.ssa:on stmt: distance.2 = distance_trace
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 426
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: bool428 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $428pred = call bool428(is_last_line, func=bool428, args=(Var(is_last_line, r_packet.py:406),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $428pred, 450, 432
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 432
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $432load_global.1 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $const438.4 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $440binary_add.5 = cur_line_id.1 + $const438.4
DEBUG:numba.core.ssa:on stmt: $446call_function.8 = call $432load_global.1(r_packet, $440binary_add.5, nu_line, numba_plasma, func=$432load_global.1, args=[Var(r_packet, r_packet.py:357), Var($440binary_add.5, r_packet.py:468), Var(nu_line, r_packet.py:393), Var(numba_plasma, r_packet.py:357)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 450
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 450
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $450load_global.1 = global(calculate_distance_electron: CPUDispatcher(<function calculate_distance_electron at 0x7f6e4a0ef170>))
DEBUG:numba.core.ssa:on stmt: $458binary_subtract.5 = tau_event - tau_trace_line_combined.1
DEBUG:numba.core.ssa:on stmt: $460call_function.6 = call $450load_global.1(cur_electron_density, $458binary_subtract.5, func=$450load_global.1, args=[Var(cur_electron_density, r_packet.py:374), Var($458binary_subtract.5, r_packet.py:474)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: distance_electron.1 = $460call_function.6
DEBUG:numba.core.ssa:on stmt: jump 164
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 466
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: jump 468
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 468
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $470load_global.1 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $474load_attr.3 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $476call_function.4 = call $470load_global.1($474load_attr.3, func=$470load_global.1, args=[Var($474load_attr.3, r_packet.py:480)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const478.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $480binary_subtract.6 = $476call_function.4 - $const478.5
DEBUG:numba.core.ssa:on stmt: $482compare_op.7 = cur_line_id.3 == $480binary_subtract.6
DEBUG:numba.core.ssa:on stmt: bool484 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $484pred = call bool484($482compare_op.7, func=bool484, args=(Var($482compare_op.7, r_packet.py:480),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $484pred, 488, 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 488
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $const490.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $492inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=cur_line_id.3, rhs=$const490.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: cur_line_id.2 = $492inplace_add.2
DEBUG:numba.core.ssa:on stmt: jump 496
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 496
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: $500compare_op.2 = distance_electron.2 < distance_boundary
DEBUG:numba.core.ssa:on stmt: bool502 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $502pred = call bool502($500compare_op.2, func=bool502, args=(Var($500compare_op.2, r_packet.py:483),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $502pred, 506, 518
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 506
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: distance.3 = distance_electron.2
DEBUG:numba.core.ssa:on stmt: $510load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $512load_attr.2 = getattr(value=$510load_global.1, attr=ESCATTERING)
DEBUG:numba.core.ssa:on stmt: interaction_type.3 = $512load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 518
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: distance.4 = distance_boundary
DEBUG:numba.core.ssa:on stmt: $522load_global.1 = global(InteractionType: <enum 'InteractionType'>)
DEBUG:numba.core.ssa:on stmt: $524load_attr.2 = getattr(value=$522load_global.1, attr=BOUNDARY)
DEBUG:numba.core.ssa:on stmt: interaction_type.4 = $524load_attr.2
DEBUG:numba.core.ssa:on stmt: jump 528
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 528
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45f02190>
DEBUG:numba.core.ssa:on stmt: distance.5 = phi(incoming_values=[Var(distance, r_packet.py:430), Var(distance.4, r_packet.py:488), Var(distance.2, r_packet.py:463), Var(distance.1, r_packet.py:439), Var(distance.3, r_packet.py:484)], incoming_blocks=[292, 518, 394, 340, 506])
DEBUG:numba.core.ssa:on stmt: $534build_tuple.3 = build_tuple(items=[Var(distance.5, r_packet.py:493), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:find_def var='interaction_type' stmt=$534build_tuple.3 = build_tuple(items=[Var(distance.5, r_packet.py:493), Var(interaction_type, r_packet.py:428), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:find_def_from_top label 528
DEBUG:numba.core.ssa:insert phi node interaction_type.5 = phi(incoming_values=[], incoming_blocks=[]) at 528
DEBUG:numba.core.ssa:find_def_from_bottom label 292
DEBUG:numba.core.ssa:incoming_def interaction_type = $294load_attr.2
DEBUG:numba.core.ssa:find_def_from_bottom label 518
DEBUG:numba.core.ssa:incoming_def interaction_type.4 = $524load_attr.2
DEBUG:numba.core.ssa:find_def_from_bottom label 394
DEBUG:numba.core.ssa:incoming_def interaction_type.2 = $396load_attr.2
DEBUG:numba.core.ssa:find_def_from_bottom label 340
DEBUG:numba.core.ssa:incoming_def interaction_type.1 = $342load_attr.2
DEBUG:numba.core.ssa:find_def_from_bottom label 506
DEBUG:numba.core.ssa:incoming_def interaction_type.3 = $512load_attr.2
DEBUG:numba.core.ssa:replaced with: $534build_tuple.3 = build_tuple(items=[Var(distance.5, r_packet.py:493), Var(interaction_type.5, r_packet.py:493), Var(delta_shell, r_packet.py:361)])
DEBUG:numba.core.ssa:on stmt: $536return_value.4 = cast(value=$534build_tuple.3)
DEBUG:numba.core.ssa:on stmt: return $536return_value.4
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=216)
           2	LOAD_FAST(arg=1, lineno=216)
           4	LOAD_FAST(arg=0, lineno=216)
           6	LOAD_GLOBAL(arg=0, lineno=216)
           8	LOAD_ATTR(arg=1, lineno=216)
          10	BINARY_MULTIPLY(arg=None, lineno=216)
          12	BINARY_TRUE_DIVIDE(arg=None, lineno=216)
          14	RETURN_VALUE(arg=None, lineno=216)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=216)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=216)
DEBUG:numba.core.byteflow:stack ['$tau_event2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=216)
DEBUG:numba.core.byteflow:stack ['$tau_event2.0', '$electron_density4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$tau_event2.0', '$electron_density4.1', '$6load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_MULTIPLY(arg=None, lineno=216)
DEBUG:numba.core.byteflow:stack ['$tau_event2.0', '$electron_density4.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=216)
DEBUG:numba.core.byteflow:stack ['$tau_event2.0', '$10binary_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=216)
DEBUG:numba.core.byteflow:stack ['$12binary_true_divide.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$tau_event2.0'}), (4, {'res': '$electron_density4.1'}), (6, {'res': '$6load_global.2'}), (8, {'item': '$6load_global.2', 'res': '$8load_attr.3'}), (10, {'lhs': '$electron_density4.1', 'rhs': '$8load_attr.3', 'res': '$10binary_multiply.4'}), (12, {'lhs': '$tau_event2.0', 'rhs': '$10binary_multiply.4', 'res': '$12binary_true_divide.5'}), (14, {'retval': '$12binary_true_divide.5', 'castval': '$14return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    electron_density = arg(0, name=electron_density) ['electron_density']
    tau_event = arg(1, name=tau_event)       ['tau_event']
    $6load_global.2 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>) ['$6load_global.2']
    $8load_attr.3 = getattr(value=$6load_global.2, attr=SIGMA_THOMSON) ['$6load_global.2', '$8load_attr.3']
    $10binary_multiply.4 = electron_density * $8load_attr.3 ['$10binary_multiply.4', '$8load_attr.3', 'electron_density']
    $12binary_true_divide.5 = tau_event / $10binary_multiply.4 ['$10binary_multiply.4', '$12binary_true_divide.5', 'tau_event']
    $14return_value.6 = cast(value=$12binary_true_divide.5) ['$12binary_true_divide.5', '$14return_value.6']
    return $14return_value.6                 ['$14return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e435e7050>
DEBUG:numba.core.ssa:on stmt: electron_density = arg(0, name=electron_density)
DEBUG:numba.core.ssa:on stmt: tau_event = arg(1, name=tau_event)
DEBUG:numba.core.ssa:on stmt: $6load_global.2 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=$6load_global.2, attr=SIGMA_THOMSON)
DEBUG:numba.core.ssa:on stmt: $10binary_multiply.4 = electron_density * $8load_attr.3
DEBUG:numba.core.ssa:on stmt: $12binary_true_divide.5 = tau_event / $10binary_multiply.4
DEBUG:numba.core.ssa:on stmt: $14return_value.6 = cast(value=$12binary_true_divide.5)
DEBUG:numba.core.ssa:on stmt: return $14return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_multiply.4': [<numba.core.ir.Assign object at 0x7f6e4358f990>],
             '$12binary_true_divide.5': [<numba.core.ir.Assign object at 0x7f6e436022d0>],
             '$14return_value.6': [<numba.core.ir.Assign object at 0x7f6e43602090>],
             '$6load_global.2': [<numba.core.ir.Assign object at 0x7f6e4358ff90>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f6e4358f1d0>],
             'electron_density': [<numba.core.ir.Assign object at 0x7f6e43600190>],
             'tau_event': [<numba.core.ir.Assign object at 0x7f6e436003d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=152)
           2	LOAD_FAST(arg=0, lineno=152)
           4	LOAD_ATTR(arg=0, lineno=152)
           6	STORE_FAST(arg=5, lineno=152)
           8	LOAD_FAST(arg=2, lineno=154)
          10	POP_JUMP_IF_FALSE(arg=16, lineno=154)
          12	LOAD_GLOBAL(arg=1, lineno=155)
          14	RETURN_VALUE(arg=None, lineno=155)
>         16	LOAD_FAST(arg=1, lineno=157)
          18	LOAD_FAST(arg=3, lineno=157)
          20	BINARY_SUBTRACT(arg=None, lineno=157)
          22	STORE_FAST(arg=6, lineno=157)
          24	LOAD_FAST(arg=0, lineno=160)
          26	LOAD_ATTR(arg=2, lineno=160)
          28	POP_JUMP_IF_FALSE(arg=40, lineno=160)
          30	LOAD_CONST(arg=1, lineno=161)
          32	STORE_FAST(arg=6, lineno=161)
          34	LOAD_CONST(arg=2, lineno=162)
          36	LOAD_FAST(arg=0, lineno=162)
          38	STORE_ATTR(arg=2, lineno=162)
>         40	LOAD_FAST(arg=6, lineno=164)
          42	LOAD_CONST(arg=3, lineno=164)
          44	COMPARE_OP(arg=5, lineno=164)
          46	POP_JUMP_IF_FALSE(arg=66, lineno=164)
          48	LOAD_FAST(arg=6, lineno=165)
          50	LOAD_FAST(arg=5, lineno=165)
          52	BINARY_TRUE_DIVIDE(arg=None, lineno=165)
          54	LOAD_GLOBAL(arg=3, lineno=165)
          56	BINARY_MULTIPLY(arg=None, lineno=165)
          58	LOAD_FAST(arg=4, lineno=165)
          60	BINARY_MULTIPLY(arg=None, lineno=165)
          62	STORE_FAST(arg=7, lineno=165)
          64	JUMP_FORWARD(arg=16, lineno=165)
>         66	LOAD_GLOBAL(arg=4, lineno=167)
          68	LOAD_CONST(arg=4, lineno=167)
          70	CALL_FUNCTION(arg=1, lineno=167)
          72	POP_TOP(arg=None, lineno=167)
          74	LOAD_GLOBAL(arg=5, lineno=168)
          76	LOAD_CONST(arg=5, lineno=169)
          78	CALL_FUNCTION(arg=1, lineno=169)
          80	RAISE_VARARGS(arg=1, lineno=169)
>         82	LOAD_GLOBAL(arg=6, lineno=173)
          84	LOAD_ATTR(arg=7, lineno=173)
          86	POP_JUMP_IF_FALSE(arg=102, lineno=173)
          88	LOAD_GLOBAL(arg=8, lineno=174)
          90	LOAD_FAST(arg=3, lineno=175)
          92	LOAD_FAST(arg=5, lineno=175)
          94	LOAD_FAST(arg=4, lineno=175)
          96	LOAD_FAST(arg=0, lineno=175)
          98	CALL_FUNCTION(arg=4, lineno=175)
         100	RETURN_VALUE(arg=None, lineno=175)
>        102	LOAD_FAST(arg=7, lineno=177)
         104	RETURN_VALUE(arg=None, lineno=177)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=152)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=152)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=152)
DEBUG:numba.core.byteflow:stack ['$r_packet2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_FAST(arg=5, lineno=152)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=154)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=16, lineno=154)
DEBUG:numba.core.byteflow:stack ['$is_last_line8.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=16, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=16 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=155)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=155)
DEBUG:numba.core.byteflow:stack ['$12load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=157)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=157)
DEBUG:numba.core.byteflow:stack ['$comov_nu16.0']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_SUBTRACT(arg=None, lineno=157)
DEBUG:numba.core.byteflow:stack ['$comov_nu16.0', '$nu_line18.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=6, lineno=157)
DEBUG:numba.core.byteflow:stack ['$20binary_subtract.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=160)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_ATTR(arg=2, lineno=160)
DEBUG:numba.core.byteflow:stack ['$r_packet24.3']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=40, lineno=160)
DEBUG:numba.core.byteflow:stack ['$26load_attr.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=1, lineno=161)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=6, lineno=161)
DEBUG:numba.core.byteflow:stack ['$const30.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=2, lineno=162)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=162)
DEBUG:numba.core.byteflow:stack ['$const34.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_ATTR(arg=2, lineno=162)
DEBUG:numba.core.byteflow:stack ['$const34.1', '$r_packet36.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=6, lineno=164)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_CONST(arg=3, lineno=164)
DEBUG:numba.core.byteflow:stack ['$nu_diff40.0']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=COMPARE_OP(arg=5, lineno=164)
DEBUG:numba.core.byteflow:stack ['$nu_diff40.0', '$const42.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=POP_JUMP_IF_FALSE(arg=66, lineno=164)
DEBUG:numba.core.byteflow:stack ['$44compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=66, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=66 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=66 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=6, lineno=165)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=165)
DEBUG:numba.core.byteflow:stack ['$nu_diff48.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=165)
DEBUG:numba.core.byteflow:stack ['$nu_diff48.0', '$nu50.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=3, lineno=165)
DEBUG:numba.core.byteflow:stack ['$52binary_true_divide.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=BINARY_MULTIPLY(arg=None, lineno=165)
DEBUG:numba.core.byteflow:stack ['$52binary_true_divide.2', '$54load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=4, lineno=165)
DEBUG:numba.core.byteflow:stack ['$56binary_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=BINARY_MULTIPLY(arg=None, lineno=165)
DEBUG:numba.core.byteflow:stack ['$56binary_multiply.4', '$time_explosion58.5']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_FAST(arg=7, lineno=165)
DEBUG:numba.core.byteflow:stack ['$60binary_multiply.6']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=JUMP_FORWARD(arg=16, lineno=165)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=82 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_GLOBAL(arg=4, lineno=167)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=4, lineno=167)
DEBUG:numba.core.byteflow:stack ['$66load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=CALL_FUNCTION(arg=1, lineno=167)
DEBUG:numba.core.byteflow:stack ['$66load_global.0', '$const68.1']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=POP_TOP(arg=None, lineno=167)
DEBUG:numba.core.byteflow:stack ['$70call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_GLOBAL(arg=5, lineno=168)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_CONST(arg=5, lineno=169)
DEBUG:numba.core.byteflow:stack ['$74load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=CALL_FUNCTION(arg=1, lineno=169)
DEBUG:numba.core.byteflow:stack ['$74load_global.3', '$const76.4']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=RAISE_VARARGS(arg=1, lineno=169)
DEBUG:numba.core.byteflow:stack ['$78call_function.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=82 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_GLOBAL(arg=6, lineno=173)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_ATTR(arg=7, lineno=173)
DEBUG:numba.core.byteflow:stack ['$82load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=102, lineno=173)
DEBUG:numba.core.byteflow:stack ['$84load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=88, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=88 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_GLOBAL(arg=8, lineno=174)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=3, lineno=175)
DEBUG:numba.core.byteflow:stack ['$88load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=5, lineno=175)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$nu_line90.1']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=175)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$nu_line90.1', '$nu92.2']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=0, lineno=175)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$nu_line90.1', '$nu92.2', '$time_explosion94.3']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=CALL_FUNCTION(arg=4, lineno=175)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$nu_line90.1', '$nu92.2', '$time_explosion94.3', '$r_packet96.4']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=175)
DEBUG:numba.core.byteflow:stack ['$98call_function.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=7, lineno=177)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=RETURN_VALUE(arg=None, lineno=177)
DEBUG:numba.core.byteflow:stack ['$distance102.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=88 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$r_packet2.0'}), (4, {'item': '$r_packet2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$is_last_line8.2'}), (10, {'pred': '$is_last_line8.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 16: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'retval': '$12load_global.0', 'castval': '$14return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$comov_nu16.0'}), (18, {'res': '$nu_line18.1'}), (20, {'lhs': '$comov_nu16.0', 'rhs': '$nu_line18.1', 'res': '$20binary_subtract.2'}), (22, {'value': '$20binary_subtract.2'}), (24, {'res': '$r_packet24.3'}), (26, {'item': '$r_packet24.3', 'res': '$26load_attr.4'}), (28, {'pred': '$26load_attr.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$const30.0'}), (32, {'value': '$const30.0'}), (34, {'res': '$const34.1'}), (36, {'res': '$r_packet36.2'}), (38, {'target': '$r_packet36.2', 'value': '$const34.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$nu_diff40.0'}), (42, {'res': '$const42.1'}), (44, {'lhs': '$nu_diff40.0', 'rhs': '$const42.1', 'res': '$44compare_op.2'}), (46, {'pred': '$44compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 66: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$nu_diff48.0'}), (50, {'res': '$nu50.1'}), (52, {'lhs': '$nu_diff48.0', 'rhs': '$nu50.1', 'res': '$52binary_true_divide.2'}), (54, {'res': '$54load_global.3'}), (56, {'lhs': '$52binary_true_divide.2', 'rhs': '$54load_global.3', 'res': '$56binary_multiply.4'}), (58, {'res': '$time_explosion58.5'}), (60, {'lhs': '$56binary_multiply.4', 'rhs': '$time_explosion58.5', 'res': '$60binary_multiply.6'}), (62, {'value': '$60binary_multiply.6'}), (64, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$66load_global.0'}), (68, {'res': '$const68.1'}), (70, {'func': '$66load_global.0', 'args': ['$const68.1'], 'res': '$70call_function.2'}), (74, {'res': '$74load_global.3'}), (76, {'res': '$const76.4'}), (78, {'func': '$74load_global.3', 'args': ['$const76.4'], 'res': '$78call_function.5'}), (80, {'exc': '$78call_function.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_attr.1'}), (86, {'pred': '$84load_attr.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: (), 102: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$88load_global.0'}), (90, {'res': '$nu_line90.1'}), (92, {'res': '$nu92.2'}), (94, {'res': '$time_explosion94.3'}), (96, {'res': '$r_packet96.4'}), (98, {'func': '$88load_global.0', 'args': ['$nu_line90.1', '$nu92.2', '$time_explosion94.3', '$r_packet96.4'], 'res': '$98call_function.5'}), (100, {'retval': '$98call_function.5', 'castval': '$100return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$distance102.0'}), (104, {'retval': '$distance102.0', 'castval': '$104return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    comov_nu = arg(1, name=comov_nu)         ['comov_nu']
    is_last_line = arg(2, name=is_last_line) ['is_last_line']
    nu_line = arg(3, name=nu_line)           ['nu_line']
    time_explosion = arg(4, name=time_explosion) ['time_explosion']
    $4load_attr.1 = getattr(value=r_packet, attr=nu) ['$4load_attr.1', 'r_packet']
    nu = $4load_attr.1                       ['$4load_attr.1', 'nu']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10(is_last_line, func=bool10, args=(Var(is_last_line, r_packet.py:152),), kws=(), vararg=None) ['$10pred', 'bool10', 'is_last_line']
    branch $10pred, 12, 16                   ['$10pred']
label 12:
    $12load_global.0 = global(MISS_DISTANCE: 1e+99) ['$12load_global.0']
    $14return_value.1 = cast(value=$12load_global.0) ['$12load_global.0', '$14return_value.1']
    return $14return_value.1                 ['$14return_value.1']
label 16:
    $20binary_subtract.2 = comov_nu - nu_line ['$20binary_subtract.2', 'comov_nu', 'nu_line']
    nu_diff = $20binary_subtract.2           ['$20binary_subtract.2', 'nu_diff']
    $26load_attr.4 = getattr(value=r_packet, attr=is_close_line) ['$26load_attr.4', 'r_packet']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26load_attr.4, func=bool28, args=(Var($26load_attr.4, r_packet.py:160),), kws=(), vararg=None) ['$26load_attr.4', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    $const30.0 = const(float, 0.0)           ['$const30.0']
    nu_diff = $const30.0                     ['$const30.0', 'nu_diff']
    $const34.1 = const(bool, False)          ['$const34.1']
    (r_packet).is_close_line = $const34.1    ['$const34.1', 'r_packet']
    jump 40                                  []
label 40:
    $const42.1 = const(int, 0)               ['$const42.1']
    $44compare_op.2 = nu_diff >= $const42.1  ['$44compare_op.2', '$const42.1', 'nu_diff']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($44compare_op.2, func=bool46, args=(Var($44compare_op.2, r_packet.py:164),), kws=(), vararg=None) ['$44compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 66                   ['$46pred']
label 48:
    $52binary_true_divide.2 = nu_diff / nu   ['$52binary_true_divide.2', 'nu', 'nu_diff']
    $54load_global.3 = global(C_SPEED_OF_LIGHT: 29979245800.0) ['$54load_global.3']
    $56binary_multiply.4 = $52binary_true_divide.2 * $54load_global.3 ['$52binary_true_divide.2', '$54load_global.3', '$56binary_multiply.4']
    $60binary_multiply.6 = $56binary_multiply.4 * time_explosion ['$56binary_multiply.4', '$60binary_multiply.6', 'time_explosion']
    distance = $60binary_multiply.6          ['$60binary_multiply.6', 'distance']
    jump 82                                  []
label 66:
    $66load_global.0 = global(print: <built-in function print>) ['$66load_global.0']
    $const68.1 = const(str, WARNING: nu difference is less than 0.0) ['$const68.1']
    $70call_function.2 = call $66load_global.0($const68.1, func=$66load_global.0, args=[Var($const68.1, r_packet.py:167)], kws=(), vararg=None) ['$66load_global.0', '$70call_function.2', '$const68.1']
    $74load_global.3 = global(MonteCarloException: <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>) ['$74load_global.3']
    $const76.4 = const(str, nu difference is less than 0.0; for more information, see print statement beforehand) ['$const76.4']
    $78call_function.5 = call $74load_global.3($const76.4, func=$74load_global.3, args=[Var($const76.4, r_packet.py:169)], kws=(), vararg=None) ['$74load_global.3', '$78call_function.5', '$const76.4']
    raise $78call_function.5                 ['$78call_function.5']
label 82:
    $82load_global.0 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>) ['$82load_global.0']
    $84load_attr.1 = getattr(value=$82load_global.0, attr=ENABLE_FULL_RELATIVITY) ['$82load_global.0', '$84load_attr.1']
    bool86 = global(bool: <class 'bool'>)    ['bool86']
    $86pred = call bool86($84load_attr.1, func=bool86, args=(Var($84load_attr.1, r_packet.py:173),), kws=(), vararg=None) ['$84load_attr.1', '$86pred', 'bool86']
    branch $86pred, 88, 102                  ['$86pred']
label 88:
    $88load_global.0 = global(calculate_distance_line_full_relativity: CPUDispatcher(<function calculate_distance_line_full_relativity at 0x7f6e4a0e6e60>)) ['$88load_global.0']
    $98call_function.5 = call $88load_global.0(nu_line, nu, time_explosion, r_packet, func=$88load_global.0, args=[Var(nu_line, r_packet.py:152), Var(nu, r_packet.py:152), Var(time_explosion, r_packet.py:152), Var(r_packet, r_packet.py:152)], kws=(), vararg=None) ['$88load_global.0', '$98call_function.5', 'nu', 'nu_line', 'r_packet', 'time_explosion']
    $100return_value.6 = cast(value=$98call_function.5) ['$100return_value.6', '$98call_function.5']
    return $100return_value.6                ['$100return_value.6']
label 102:
    $104return_value.1 = cast(value=distance) ['$104return_value.1', 'distance']
    return $104return_value.1                ['$104return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4351a3d0>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: comov_nu = arg(1, name=comov_nu)
DEBUG:numba.core.ssa:on stmt: is_last_line = arg(2, name=is_last_line)
DEBUG:numba.core.ssa:on stmt: nu_line = arg(3, name=nu_line)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(4, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: nu = $4load_attr.1
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10(is_last_line, func=bool10, args=(Var(is_last_line, r_packet.py:152),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 12, 16
DEBUG:numba.core.ssa:==== SSA block analysis pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4351a3d0>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(MISS_DISTANCE: 1e+99)
DEBUG:numba.core.ssa:on stmt: $14return_value.1 = cast(value=$12load_global.0)
DEBUG:numba.core.ssa:on stmt: return $14return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4351a3d0>
DEBUG:numba.core.ssa:on stmt: $20binary_subtract.2 = comov_nu - nu_line
DEBUG:numba.core.ssa:on stmt: nu_diff = $20binary_subtract.2
DEBUG:numba.core.ssa:on stmt: $26load_attr.4 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26load_attr.4, func=bool28, args=(Var($26load_attr.4, r_packet.py:160),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 40
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4351a3d0>
DEBUG:numba.core.ssa:on stmt: $const30.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: nu_diff = $const30.0
DEBUG:numba.core.ssa:on stmt: $const34.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: (r_packet).is_close_line = $const34.1
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block analysis pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4351a3d0>
DEBUG:numba.core.ssa:on stmt: $const42.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44compare_op.2 = nu_diff >= $const42.1
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($44compare_op.2, func=bool46, args=(Var($44compare_op.2, r_packet.py:164),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 48, 66
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4351a3d0>
DEBUG:numba.core.ssa:on stmt: $52binary_true_divide.2 = nu_diff / nu
DEBUG:numba.core.ssa:on stmt: $54load_global.3 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $56binary_multiply.4 = $52binary_true_divide.2 * $54load_global.3
DEBUG:numba.core.ssa:on stmt: $60binary_multiply.6 = $56binary_multiply.4 * time_explosion
DEBUG:numba.core.ssa:on stmt: distance = $60binary_multiply.6
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block analysis pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4351a3d0>
DEBUG:numba.core.ssa:on stmt: $66load_global.0 = global(print: <built-in function print>)
DEBUG:numba.core.ssa:on stmt: $const68.1 = const(str, WARNING: nu difference is less than 0.0)
DEBUG:numba.core.ssa:on stmt: print($const68.1)
DEBUG:numba.core.ssa:on stmt: $70call_function.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $74load_global.3 = global(MonteCarloException: <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>)
DEBUG:numba.core.ssa:on stmt: $const76.4 = const(str, nu difference is less than 0.0; for more information, see print statement beforehand)
DEBUG:numba.core.ssa:on stmt: $78call_function.5 = call $74load_global.3($const76.4, func=$74load_global.3, args=[Var($const76.4, r_packet.py:169)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>('nu difference is less than 0.0; for more information, see print statement beforehand')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4351a3d0>
DEBUG:numba.core.ssa:on stmt: $82load_global.0 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $84load_attr.1 = getattr(value=$82load_global.0, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool86 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $86pred = call bool86($84load_attr.1, func=bool86, args=(Var($84load_attr.1, r_packet.py:173),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $86pred, 88, 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4351a3d0>
DEBUG:numba.core.ssa:on stmt: $88load_global.0 = global(calculate_distance_line_full_relativity: CPUDispatcher(<function calculate_distance_line_full_relativity at 0x7f6e4a0e6e60>))
DEBUG:numba.core.ssa:on stmt: $98call_function.5 = call $88load_global.0(nu_line, nu, time_explosion, r_packet, func=$88load_global.0, args=[Var(nu_line, r_packet.py:152), Var(nu, r_packet.py:152), Var(time_explosion, r_packet.py:152), Var(r_packet, r_packet.py:152)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $100return_value.6 = cast(value=$98call_function.5)
DEBUG:numba.core.ssa:on stmt: return $100return_value.6
DEBUG:numba.core.ssa:==== SSA block analysis pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4351a3d0>
DEBUG:numba.core.ssa:on stmt: $104return_value.1 = cast(value=distance)
DEBUG:numba.core.ssa:on stmt: return $104return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100return_value.6': [<numba.core.ir.Assign object at 0x7f6e4350f790>],
             '$104return_value.1': [<numba.core.ir.Assign object at 0x7f6e4350f8d0>],
             '$10pred': [<numba.core.ir.Assign object at 0x7f6e43506410>],
             '$12load_global.0': [<numba.core.ir.Assign object at 0x7f6e43506550>],
             '$14return_value.1': [<numba.core.ir.Assign object at 0x7f6e43506690>],
             '$20binary_subtract.2': [<numba.core.ir.Assign object at 0x7f6e435069d0>],
             '$26load_attr.4': [<numba.core.ir.Assign object at 0x7f6e43506c90>],
             '$28pred': [<numba.core.ir.Assign object at 0x7f6e43506ed0>],
             '$44compare_op.2': [<numba.core.ir.Assign object at 0x7f6e435096d0>],
             '$46pred': [<numba.core.ir.Assign object at 0x7f6e43509910>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e43506090>],
             '$52binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f6e43578a90>],
             '$54load_global.3': [<numba.core.ir.Assign object at 0x7f6e435788d0>],
             '$56binary_multiply.4': [<numba.core.ir.Assign object at 0x7f6e435e7610>],
             '$60binary_multiply.6': [<numba.core.ir.Assign object at 0x7f6e43576dd0>],
             '$66load_global.0': [<numba.core.ir.Assign object at 0x7f6e43576a50>],
             '$70call_function.2': [<numba.core.ir.Assign object at 0x7f6e4351a250>],
             '$74load_global.3': [<numba.core.ir.Assign object at 0x7f6e43571910>],
             '$78call_function.5': [<numba.core.ir.Assign object at 0x7f6e435093d0>],
             '$82load_global.0': [<numba.core.ir.Assign object at 0x7f6e43509cd0>],
             '$84load_attr.1': [<numba.core.ir.Assign object at 0x7f6e43509dd0>],
             '$86pred': [<numba.core.ir.Assign object at 0x7f6e4350f050>],
             '$88load_global.0': [<numba.core.ir.Assign object at 0x7f6e4350f250>],
             '$98call_function.5': [<numba.core.ir.Assign object at 0x7f6e4350f6d0>],
             '$const30.0': [<numba.core.ir.Assign object at 0x7f6e43506fd0>],
             '$const34.1': [<numba.core.ir.Assign object at 0x7f6e43509190>],
             '$const42.1': [<numba.core.ir.Assign object at 0x7f6e43509590>],
             '$const68.1': [<numba.core.ir.Assign object at 0x7f6e435762d0>],
             '$const76.4': [<numba.core.ir.Assign object at 0x7f6e435eb550>],
             'bool10': [<numba.core.ir.Assign object at 0x7f6e43506310>],
             'bool28': [<numba.core.ir.Assign object at 0x7f6e43506dd0>],
             'bool46': [<numba.core.ir.Assign object at 0x7f6e43509810>],
             'bool86': [<numba.core.ir.Assign object at 0x7f6e43509f10>],
             'comov_nu': [<numba.core.ir.Assign object at 0x7f6e43578c90>],
             'distance': [<numba.core.ir.Assign object at 0x7f6e43576cd0>],
             'is_last_line': [<numba.core.ir.Assign object at 0x7f6e43578c10>],
             'nu': [<numba.core.ir.Assign object at 0x7f6e43506150>],
             'nu_diff': [<numba.core.ir.Assign object at 0x7f6e43506a90>,
                         <numba.core.ir.Assign object at 0x7f6e43506a50>],
             'nu_line': [<numba.core.ir.Assign object at 0x7f6e43578d50>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e43578990>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e43578f10>]})
DEBUG:numba.core.ssa:SSA violators {'nu_diff'}
DEBUG:numba.core.ssa:Fix SSA violator on var nu_diff
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4351af10>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: comov_nu = arg(1, name=comov_nu)
DEBUG:numba.core.ssa:on stmt: is_last_line = arg(2, name=is_last_line)
DEBUG:numba.core.ssa:on stmt: nu_line = arg(3, name=nu_line)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(4, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: nu = $4load_attr.1
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10(is_last_line, func=bool10, args=(Var(is_last_line, r_packet.py:152),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 12, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4351af10>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(MISS_DISTANCE: 1e+99)
DEBUG:numba.core.ssa:on stmt: $14return_value.1 = cast(value=$12load_global.0)
DEBUG:numba.core.ssa:on stmt: return $14return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4351af10>
DEBUG:numba.core.ssa:on stmt: $20binary_subtract.2 = comov_nu - nu_line
DEBUG:numba.core.ssa:on stmt: nu_diff = $20binary_subtract.2
DEBUG:numba.core.ssa:first assign: nu_diff
DEBUG:numba.core.ssa:replaced with: nu_diff = $20binary_subtract.2
DEBUG:numba.core.ssa:on stmt: $26load_attr.4 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26load_attr.4, func=bool28, args=(Var($26load_attr.4, r_packet.py:160),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4351af10>
DEBUG:numba.core.ssa:on stmt: $const30.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: nu_diff = $const30.0
DEBUG:numba.core.ssa:replaced with: nu_diff.1 = $const30.0
DEBUG:numba.core.ssa:on stmt: $const34.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: (r_packet).is_close_line = $const34.1
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4351af10>
DEBUG:numba.core.ssa:on stmt: $const42.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44compare_op.2 = nu_diff >= $const42.1
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($44compare_op.2, func=bool46, args=(Var($44compare_op.2, r_packet.py:164),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 48, 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4351af10>
DEBUG:numba.core.ssa:on stmt: $52binary_true_divide.2 = nu_diff / nu
DEBUG:numba.core.ssa:on stmt: $54load_global.3 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $56binary_multiply.4 = $52binary_true_divide.2 * $54load_global.3
DEBUG:numba.core.ssa:on stmt: $60binary_multiply.6 = $56binary_multiply.4 * time_explosion
DEBUG:numba.core.ssa:on stmt: distance = $60binary_multiply.6
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4351af10>
DEBUG:numba.core.ssa:on stmt: $66load_global.0 = global(print: <built-in function print>)
DEBUG:numba.core.ssa:on stmt: $const68.1 = const(str, WARNING: nu difference is less than 0.0)
DEBUG:numba.core.ssa:on stmt: print($const68.1)
DEBUG:numba.core.ssa:on stmt: $70call_function.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $74load_global.3 = global(MonteCarloException: <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>)
DEBUG:numba.core.ssa:on stmt: $const76.4 = const(str, nu difference is less than 0.0; for more information, see print statement beforehand)
DEBUG:numba.core.ssa:on stmt: $78call_function.5 = call $74load_global.3($const76.4, func=$74load_global.3, args=[Var($const76.4, r_packet.py:169)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>('nu difference is less than 0.0; for more information, see print statement beforehand')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4351af10>
DEBUG:numba.core.ssa:on stmt: $82load_global.0 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $84load_attr.1 = getattr(value=$82load_global.0, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool86 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $86pred = call bool86($84load_attr.1, func=bool86, args=(Var($84load_attr.1, r_packet.py:173),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $86pred, 88, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4351af10>
DEBUG:numba.core.ssa:on stmt: $88load_global.0 = global(calculate_distance_line_full_relativity: CPUDispatcher(<function calculate_distance_line_full_relativity at 0x7f6e4a0e6e60>))
DEBUG:numba.core.ssa:on stmt: $98call_function.5 = call $88load_global.0(nu_line, nu, time_explosion, r_packet, func=$88load_global.0, args=[Var(nu_line, r_packet.py:152), Var(nu, r_packet.py:152), Var(time_explosion, r_packet.py:152), Var(r_packet, r_packet.py:152)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $100return_value.6 = cast(value=$98call_function.5)
DEBUG:numba.core.ssa:on stmt: return $100return_value.6
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e4351af10>
DEBUG:numba.core.ssa:on stmt: $104return_value.1 = cast(value=distance)
DEBUG:numba.core.ssa:on stmt: return $104return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {16: [<numba.core.ir.Assign object at 0x7f6e4351afd0>],
             30: [<numba.core.ir.Assign object at 0x7f6e4351ac10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4350fc90>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: comov_nu = arg(1, name=comov_nu)
DEBUG:numba.core.ssa:on stmt: is_last_line = arg(2, name=is_last_line)
DEBUG:numba.core.ssa:on stmt: nu_line = arg(3, name=nu_line)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(4, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: nu = $4load_attr.1
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10(is_last_line, func=bool10, args=(Var(is_last_line, r_packet.py:152),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 12, 16
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4350fc90>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(MISS_DISTANCE: 1e+99)
DEBUG:numba.core.ssa:on stmt: $14return_value.1 = cast(value=$12load_global.0)
DEBUG:numba.core.ssa:on stmt: return $14return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4350fc90>
DEBUG:numba.core.ssa:on stmt: $20binary_subtract.2 = comov_nu - nu_line
DEBUG:numba.core.ssa:on stmt: nu_diff = $20binary_subtract.2
DEBUG:numba.core.ssa:on stmt: $26load_attr.4 = getattr(value=r_packet, attr=is_close_line)
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26load_attr.4, func=bool28, args=(Var($26load_attr.4, r_packet.py:160),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4350fc90>
DEBUG:numba.core.ssa:on stmt: $const30.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: nu_diff.1 = $const30.0
DEBUG:numba.core.ssa:on stmt: $const34.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: (r_packet).is_close_line = $const34.1
DEBUG:numba.core.ssa:on stmt: jump 40
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 40
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4350fc90>
DEBUG:numba.core.ssa:on stmt: $const42.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $44compare_op.2 = nu_diff >= $const42.1
DEBUG:numba.core.ssa:find_def var='nu_diff' stmt=$44compare_op.2 = nu_diff >= $const42.1
DEBUG:numba.core.ssa:find_def_from_top label 40
DEBUG:numba.core.ssa:insert phi node nu_diff.2 = phi(incoming_values=[], incoming_blocks=[]) at 40
DEBUG:numba.core.ssa:find_def_from_bottom label 16
DEBUG:numba.core.ssa:incoming_def nu_diff = $20binary_subtract.2
DEBUG:numba.core.ssa:find_def_from_bottom label 30
DEBUG:numba.core.ssa:incoming_def nu_diff.1 = $const30.0
DEBUG:numba.core.ssa:replaced with: $44compare_op.2 = nu_diff.2 >= $const42.1
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($44compare_op.2, func=bool46, args=(Var($44compare_op.2, r_packet.py:164),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 48, 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4350fc90>
DEBUG:numba.core.ssa:on stmt: $52binary_true_divide.2 = nu_diff / nu
DEBUG:numba.core.ssa:find_def var='nu_diff' stmt=$52binary_true_divide.2 = nu_diff / nu
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 40 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 40
DEBUG:numba.core.ssa:replaced with: $52binary_true_divide.2 = nu_diff.2 / nu
DEBUG:numba.core.ssa:on stmt: $54load_global.3 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $56binary_multiply.4 = $52binary_true_divide.2 * $54load_global.3
DEBUG:numba.core.ssa:on stmt: $60binary_multiply.6 = $56binary_multiply.4 * time_explosion
DEBUG:numba.core.ssa:on stmt: distance = $60binary_multiply.6
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4350fc90>
DEBUG:numba.core.ssa:on stmt: $66load_global.0 = global(print: <built-in function print>)
DEBUG:numba.core.ssa:on stmt: $const68.1 = const(str, WARNING: nu difference is less than 0.0)
DEBUG:numba.core.ssa:on stmt: print($const68.1)
DEBUG:numba.core.ssa:on stmt: $70call_function.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $74load_global.3 = global(MonteCarloException: <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>)
DEBUG:numba.core.ssa:on stmt: $const76.4 = const(str, nu difference is less than 0.0; for more information, see print statement beforehand)
DEBUG:numba.core.ssa:on stmt: $78call_function.5 = call $74load_global.3($const76.4, func=$74load_global.3, args=[Var($const76.4, r_packet.py:169)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.r_packet.MonteCarloException'>('nu difference is less than 0.0; for more information, see print statement beforehand')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4350fc90>
DEBUG:numba.core.ssa:on stmt: $82load_global.0 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $84load_attr.1 = getattr(value=$82load_global.0, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool86 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $86pred = call bool86($84load_attr.1, func=bool86, args=(Var($84load_attr.1, r_packet.py:173),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $86pred, 88, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4350fc90>
DEBUG:numba.core.ssa:on stmt: $88load_global.0 = global(calculate_distance_line_full_relativity: CPUDispatcher(<function calculate_distance_line_full_relativity at 0x7f6e4a0e6e60>))
DEBUG:numba.core.ssa:on stmt: $98call_function.5 = call $88load_global.0(nu_line, nu, time_explosion, r_packet, func=$88load_global.0, args=[Var(nu_line, r_packet.py:152), Var(nu, r_packet.py:152), Var(time_explosion, r_packet.py:152), Var(r_packet, r_packet.py:152)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $100return_value.6 = cast(value=$98call_function.5)
DEBUG:numba.core.ssa:on stmt: return $100return_value.6
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e4350fc90>
DEBUG:numba.core.ssa:on stmt: $104return_value.1 = cast(value=distance)
DEBUG:numba.core.ssa:on stmt: return $104return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=185)
           2	LOAD_FAST(arg=0, lineno=185)
           4	LOAD_FAST(arg=1, lineno=185)
           6	BINARY_TRUE_DIVIDE(arg=None, lineno=185)
           8	STORE_FAST(arg=4, lineno=185)
          10	LOAD_GLOBAL(arg=0, lineno=186)
          12	LOAD_FAST(arg=2, lineno=186)
          14	BINARY_MULTIPLY(arg=None, lineno=186)
          16	STORE_FAST(arg=5, lineno=186)
          18	LOAD_FAST(arg=3, lineno=187)
          20	LOAD_ATTR(arg=1, lineno=187)
          22	UNARY_NEGATIVE(arg=None, lineno=187)
          24	LOAD_FAST(arg=3, lineno=187)
          26	LOAD_ATTR(arg=2, lineno=187)
          28	BINARY_MULTIPLY(arg=None, lineno=187)
          30	LOAD_FAST(arg=5, lineno=188)
          32	LOAD_FAST(arg=4, lineno=191)
          34	LOAD_FAST(arg=4, lineno=191)
          36	BINARY_MULTIPLY(arg=None, lineno=191)
          38	LOAD_GLOBAL(arg=3, lineno=191)
          40	LOAD_METHOD(arg=4, lineno=191)
          42	LOAD_FAST(arg=5, lineno=192)
          44	LOAD_FAST(arg=5, lineno=192)
          46	BINARY_MULTIPLY(arg=None, lineno=192)
          48	LOAD_CONST(arg=1, lineno=194)
          50	LOAD_FAST(arg=3, lineno=198)
          52	LOAD_ATTR(arg=2, lineno=198)
          54	LOAD_FAST(arg=3, lineno=198)
          56	LOAD_ATTR(arg=2, lineno=198)
          58	BINARY_MULTIPLY(arg=None, lineno=198)
          60	LOAD_CONST(arg=1, lineno=198)
          62	LOAD_FAST(arg=3, lineno=198)
          64	LOAD_ATTR(arg=1, lineno=198)
          66	LOAD_FAST(arg=3, lineno=198)
          68	LOAD_ATTR(arg=1, lineno=198)
          70	BINARY_MULTIPLY(arg=None, lineno=198)
          72	BINARY_SUBTRACT(arg=None, lineno=198)
          74	BINARY_MULTIPLY(arg=None, lineno=198)
          76	LOAD_CONST(arg=1, lineno=198)
          78	LOAD_CONST(arg=2, lineno=198)
          80	LOAD_FAST(arg=4, lineno=198)
          82	LOAD_FAST(arg=4, lineno=198)
          84	BINARY_MULTIPLY(arg=None, lineno=198)
          86	BINARY_TRUE_DIVIDE(arg=None, lineno=198)
          88	BINARY_ADD(arg=None, lineno=198)
          90	BINARY_MULTIPLY(arg=None, lineno=198)
          92	BINARY_ADD(arg=None, lineno=198)
          94	BINARY_SUBTRACT(arg=None, lineno=198)
          96	CALL_METHOD(arg=1, lineno=198)
          98	BINARY_MULTIPLY(arg=None, lineno=198)
         100	BINARY_SUBTRACT(arg=None, lineno=198)
         102	LOAD_CONST(arg=1, lineno=201)
         104	LOAD_FAST(arg=4, lineno=201)
         106	LOAD_FAST(arg=4, lineno=201)
         108	BINARY_MULTIPLY(arg=None, lineno=201)
         110	BINARY_ADD(arg=None, lineno=201)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=201)
         114	BINARY_ADD(arg=None, lineno=201)
         116	STORE_FAST(arg=6, lineno=201)
         118	LOAD_FAST(arg=6, lineno=202)
         120	RETURN_VALUE(arg=None, lineno=202)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=185)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=185)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=185)
DEBUG:numba.core.byteflow:stack ['$nu_line2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=185)
DEBUG:numba.core.byteflow:stack ['$nu_line2.0', '$nu4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=4, lineno=185)
DEBUG:numba.core.byteflow:stack ['$6binary_true_divide.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=186)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=186)
DEBUG:numba.core.byteflow:stack ['$10load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_MULTIPLY(arg=None, lineno=186)
DEBUG:numba.core.byteflow:stack ['$10load_global.3', '$time_explosion12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=5, lineno=186)
DEBUG:numba.core.byteflow:stack ['$14binary_multiply.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=187)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_ATTR(arg=1, lineno=187)
DEBUG:numba.core.byteflow:stack ['$r_packet18.6']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=187)
DEBUG:numba.core.byteflow:stack ['$20load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=187)
DEBUG:numba.core.byteflow:stack ['$22unary_negative.8']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_ATTR(arg=2, lineno=187)
DEBUG:numba.core.byteflow:stack ['$22unary_negative.8', '$r_packet24.9']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_MULTIPLY(arg=None, lineno=187)
DEBUG:numba.core.byteflow:stack ['$22unary_negative.8', '$26load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=5, lineno=188)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=4, lineno=191)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=191)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$nu_r32.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_MULTIPLY(arg=None, lineno=191)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$nu_r32.13', '$nu_r34.14']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=3, lineno=191)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_METHOD(arg=4, lineno=191)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$38load_global.16']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=5, lineno=192)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=5, lineno=192)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$ct42.18']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_MULTIPLY(arg=None, lineno=192)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$ct42.18', '$ct44.19']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=194)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=3, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_ATTR(arg=2, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$r_packet50.22']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=3, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$52load_attr.23']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_ATTR(arg=2, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$52load_attr.23', '$r_packet54.24']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=BINARY_MULTIPLY(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$52load_attr.23', '$56load_attr.25']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=3, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$const60.27']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_ATTR(arg=1, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$const60.27', '$r_packet62.28']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=3, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$const60.27', '$64load_attr.29']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_ATTR(arg=1, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$const60.27', '$64load_attr.29', '$r_packet66.30']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BINARY_MULTIPLY(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$const60.27', '$64load_attr.29', '$68load_attr.31']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_SUBTRACT(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$const60.27', '$70binary_multiply.32']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=BINARY_MULTIPLY(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$58binary_multiply.26', '$72binary_subtract.33']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_CONST(arg=1, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_CONST(arg=2, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$const76.35']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$const76.35', '$const78.36']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=4, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$const76.35', '$const78.36', '$nu_r80.37']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=BINARY_MULTIPLY(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$const76.35', '$const78.36', '$nu_r80.37', '$nu_r82.38']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$const76.35', '$const78.36', '$84binary_multiply.39']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=BINARY_ADD(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$const76.35', '$86binary_true_divide.40']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=BINARY_MULTIPLY(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$74binary_multiply.34', '$88binary_add.41']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=BINARY_ADD(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$const48.21', '$90binary_multiply.42']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$46binary_multiply.20', '$92binary_add.43']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$40load_method.17', '$94binary_subtract.44']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=BINARY_MULTIPLY(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$36binary_multiply.15', '$96call_method.45']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=BINARY_SUBTRACT(arg=None, lineno=198)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$ct30.12', '$98binary_multiply.46']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_CONST(arg=1, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$100binary_subtract.47']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=4, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$100binary_subtract.47', '$const102.48']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$100binary_subtract.47', '$const102.48', '$nu_r104.49']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=BINARY_MULTIPLY(arg=None, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$100binary_subtract.47', '$const102.48', '$nu_r104.49', '$nu_r106.50']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=BINARY_ADD(arg=None, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$100binary_subtract.47', '$const102.48', '$108binary_multiply.51']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$100binary_subtract.47', '$110binary_add.52']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=BINARY_ADD(arg=None, lineno=201)
DEBUG:numba.core.byteflow:stack ['$28binary_multiply.11', '$112binary_true_divide.53']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=STORE_FAST(arg=6, lineno=201)
DEBUG:numba.core.byteflow:stack ['$114binary_add.54']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=6, lineno=202)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=202)
DEBUG:numba.core.byteflow:stack ['$distance118.55']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$nu_line2.0'}), (4, {'res': '$nu4.1'}), (6, {'lhs': '$nu_line2.0', 'rhs': '$nu4.1', 'res': '$6binary_true_divide.2'}), (8, {'value': '$6binary_true_divide.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$time_explosion12.4'}), (14, {'lhs': '$10load_global.3', 'rhs': '$time_explosion12.4', 'res': '$14binary_multiply.5'}), (16, {'value': '$14binary_multiply.5'}), (18, {'res': '$r_packet18.6'}), (20, {'item': '$r_packet18.6', 'res': '$20load_attr.7'}), (22, {'value': '$20load_attr.7', 'res': '$22unary_negative.8'}), (24, {'res': '$r_packet24.9'}), (26, {'item': '$r_packet24.9', 'res': '$26load_attr.10'}), (28, {'lhs': '$22unary_negative.8', 'rhs': '$26load_attr.10', 'res': '$28binary_multiply.11'}), (30, {'res': '$ct30.12'}), (32, {'res': '$nu_r32.13'}), (34, {'res': '$nu_r34.14'}), (36, {'lhs': '$nu_r32.13', 'rhs': '$nu_r34.14', 'res': '$36binary_multiply.15'}), (38, {'res': '$38load_global.16'}), (40, {'item': '$38load_global.16', 'res': '$40load_method.17'}), (42, {'res': '$ct42.18'}), (44, {'res': '$ct44.19'}), (46, {'lhs': '$ct42.18', 'rhs': '$ct44.19', 'res': '$46binary_multiply.20'}), (48, {'res': '$const48.21'}), (50, {'res': '$r_packet50.22'}), (52, {'item': '$r_packet50.22', 'res': '$52load_attr.23'}), (54, {'res': '$r_packet54.24'}), (56, {'item': '$r_packet54.24', 'res': '$56load_attr.25'}), (58, {'lhs': '$52load_attr.23', 'rhs': '$56load_attr.25', 'res': '$58binary_multiply.26'}), (60, {'res': '$const60.27'}), (62, {'res': '$r_packet62.28'}), (64, {'item': '$r_packet62.28', 'res': '$64load_attr.29'}), (66, {'res': '$r_packet66.30'}), (68, {'item': '$r_packet66.30', 'res': '$68load_attr.31'}), (70, {'lhs': '$64load_attr.29', 'rhs': '$68load_attr.31', 'res': '$70binary_multiply.32'}), (72, {'lhs': '$const60.27', 'rhs': '$70binary_multiply.32', 'res': '$72binary_subtract.33'}), (74, {'lhs': '$58binary_multiply.26', 'rhs': '$72binary_subtract.33', 'res': '$74binary_multiply.34'}), (76, {'res': '$const76.35'}), (78, {'res': '$const78.36'}), (80, {'res': '$nu_r80.37'}), (82, {'res': '$nu_r82.38'}), (84, {'lhs': '$nu_r80.37', 'rhs': '$nu_r82.38', 'res': '$84binary_multiply.39'}), (86, {'lhs': '$const78.36', 'rhs': '$84binary_multiply.39', 'res': '$86binary_true_divide.40'}), (88, {'lhs': '$const76.35', 'rhs': '$86binary_true_divide.40', 'res': '$88binary_add.41'}), (90, {'lhs': '$74binary_multiply.34', 'rhs': '$88binary_add.41', 'res': '$90binary_multiply.42'}), (92, {'lhs': '$const48.21', 'rhs': '$90binary_multiply.42', 'res': '$92binary_add.43'}), (94, {'lhs': '$46binary_multiply.20', 'rhs': '$92binary_add.43', 'res': '$94binary_subtract.44'}), (96, {'func': '$40load_method.17', 'args': ['$94binary_subtract.44'], 'res': '$96call_method.45'}), (98, {'lhs': '$36binary_multiply.15', 'rhs': '$96call_method.45', 'res': '$98binary_multiply.46'}), (100, {'lhs': '$ct30.12', 'rhs': '$98binary_multiply.46', 'res': '$100binary_subtract.47'}), (102, {'res': '$const102.48'}), (104, {'res': '$nu_r104.49'}), (106, {'res': '$nu_r106.50'}), (108, {'lhs': '$nu_r104.49', 'rhs': '$nu_r106.50', 'res': '$108binary_multiply.51'}), (110, {'lhs': '$const102.48', 'rhs': '$108binary_multiply.51', 'res': '$110binary_add.52'}), (112, {'lhs': '$100binary_subtract.47', 'rhs': '$110binary_add.52', 'res': '$112binary_true_divide.53'}), (114, {'lhs': '$28binary_multiply.11', 'rhs': '$112binary_true_divide.53', 'res': '$114binary_add.54'}), (116, {'value': '$114binary_add.54'}), (118, {'res': '$distance118.55'}), (120, {'retval': '$distance118.55', 'castval': '$120return_value.56'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    nu_line = arg(0, name=nu_line)           ['nu_line']
    nu = arg(1, name=nu)                     ['nu']
    time_explosion = arg(2, name=time_explosion) ['time_explosion']
    r_packet = arg(3, name=r_packet)         ['r_packet']
    $6binary_true_divide.2 = nu_line / nu    ['$6binary_true_divide.2', 'nu', 'nu_line']
    nu_r = $6binary_true_divide.2            ['$6binary_true_divide.2', 'nu_r']
    $10load_global.3 = global(C_SPEED_OF_LIGHT: 29979245800.0) ['$10load_global.3']
    $14binary_multiply.5 = $10load_global.3 * time_explosion ['$10load_global.3', '$14binary_multiply.5', 'time_explosion']
    ct = $14binary_multiply.5                ['$14binary_multiply.5', 'ct']
    $20load_attr.7 = getattr(value=r_packet, attr=mu) ['$20load_attr.7', 'r_packet']
    $22unary_negative.8 = unary(fn=<built-in function neg>, value=$20load_attr.7) ['$20load_attr.7', '$22unary_negative.8']
    $26load_attr.10 = getattr(value=r_packet, attr=r) ['$26load_attr.10', 'r_packet']
    $28binary_multiply.11 = $22unary_negative.8 * $26load_attr.10 ['$22unary_negative.8', '$26load_attr.10', '$28binary_multiply.11']
    $36binary_multiply.15 = nu_r * nu_r      ['$36binary_multiply.15', 'nu_r', 'nu_r']
    $38load_global.16 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>) ['$38load_global.16']
    $40load_method.17 = getattr(value=$38load_global.16, attr=sqrt) ['$38load_global.16', '$40load_method.17']
    $46binary_multiply.20 = ct * ct          ['$46binary_multiply.20', 'ct', 'ct']
    $const48.21 = const(int, 1)              ['$const48.21']
    $52load_attr.23 = getattr(value=r_packet, attr=r) ['$52load_attr.23', 'r_packet']
    $56load_attr.25 = getattr(value=r_packet, attr=r) ['$56load_attr.25', 'r_packet']
    $58binary_multiply.26 = $52load_attr.23 * $56load_attr.25 ['$52load_attr.23', '$56load_attr.25', '$58binary_multiply.26']
    $const60.27 = const(int, 1)              ['$const60.27']
    $64load_attr.29 = getattr(value=r_packet, attr=mu) ['$64load_attr.29', 'r_packet']
    $68load_attr.31 = getattr(value=r_packet, attr=mu) ['$68load_attr.31', 'r_packet']
    $70binary_multiply.32 = $64load_attr.29 * $68load_attr.31 ['$64load_attr.29', '$68load_attr.31', '$70binary_multiply.32']
    $72binary_subtract.33 = $const60.27 - $70binary_multiply.32 ['$70binary_multiply.32', '$72binary_subtract.33', '$const60.27']
    $74binary_multiply.34 = $58binary_multiply.26 * $72binary_subtract.33 ['$58binary_multiply.26', '$72binary_subtract.33', '$74binary_multiply.34']
    $const76.35 = const(int, 1)              ['$const76.35']
    $const78.36 = const(float, 1.0)          ['$const78.36']
    $84binary_multiply.39 = nu_r * nu_r      ['$84binary_multiply.39', 'nu_r', 'nu_r']
    $86binary_true_divide.40 = $const78.36 / $84binary_multiply.39 ['$84binary_multiply.39', '$86binary_true_divide.40', '$const78.36']
    $88binary_add.41 = $const76.35 + $86binary_true_divide.40 ['$86binary_true_divide.40', '$88binary_add.41', '$const76.35']
    $90binary_multiply.42 = $74binary_multiply.34 * $88binary_add.41 ['$74binary_multiply.34', '$88binary_add.41', '$90binary_multiply.42']
    $92binary_add.43 = $const48.21 + $90binary_multiply.42 ['$90binary_multiply.42', '$92binary_add.43', '$const48.21']
    $94binary_subtract.44 = $46binary_multiply.20 - $92binary_add.43 ['$46binary_multiply.20', '$92binary_add.43', '$94binary_subtract.44']
    $96call_method.45 = call $40load_method.17($94binary_subtract.44, func=$40load_method.17, args=[Var($94binary_subtract.44, r_packet.py:198)], kws=(), vararg=None) ['$40load_method.17', '$94binary_subtract.44', '$96call_method.45']
    $98binary_multiply.46 = $36binary_multiply.15 * $96call_method.45 ['$36binary_multiply.15', '$96call_method.45', '$98binary_multiply.46']
    $100binary_subtract.47 = ct - $98binary_multiply.46 ['$100binary_subtract.47', '$98binary_multiply.46', 'ct']
    $const102.48 = const(int, 1)             ['$const102.48']
    $108binary_multiply.51 = nu_r * nu_r     ['$108binary_multiply.51', 'nu_r', 'nu_r']
    $110binary_add.52 = $const102.48 + $108binary_multiply.51 ['$108binary_multiply.51', '$110binary_add.52', '$const102.48']
    $112binary_true_divide.53 = $100binary_subtract.47 / $110binary_add.52 ['$100binary_subtract.47', '$110binary_add.52', '$112binary_true_divide.53']
    $114binary_add.54 = $28binary_multiply.11 + $112binary_true_divide.53 ['$112binary_true_divide.53', '$114binary_add.54', '$28binary_multiply.11']
    distance = $114binary_add.54             ['$114binary_add.54', 'distance']
    $120return_value.56 = cast(value=distance) ['$120return_value.56', 'distance']
    return $120return_value.56               ['$120return_value.56']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e434caa90>
DEBUG:numba.core.ssa:on stmt: nu_line = arg(0, name=nu_line)
DEBUG:numba.core.ssa:on stmt: nu = arg(1, name=nu)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(2, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: r_packet = arg(3, name=r_packet)
DEBUG:numba.core.ssa:on stmt: $6binary_true_divide.2 = nu_line / nu
DEBUG:numba.core.ssa:on stmt: nu_r = $6binary_true_divide.2
DEBUG:numba.core.ssa:on stmt: $10load_global.3 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $14binary_multiply.5 = $10load_global.3 * time_explosion
DEBUG:numba.core.ssa:on stmt: ct = $14binary_multiply.5
DEBUG:numba.core.ssa:on stmt: $20load_attr.7 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.8 = unary(fn=<built-in function neg>, value=$20load_attr.7)
DEBUG:numba.core.ssa:on stmt: $26load_attr.10 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $28binary_multiply.11 = $22unary_negative.8 * $26load_attr.10
DEBUG:numba.core.ssa:on stmt: $36binary_multiply.15 = nu_r * nu_r
DEBUG:numba.core.ssa:on stmt: $38load_global.16 = global(math: <module 'math' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/lib-dynload/math.cpython-37m-x86_64-linux-gnu.so'>)
DEBUG:numba.core.ssa:on stmt: $40load_method.17 = getattr(value=$38load_global.16, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $46binary_multiply.20 = ct * ct
DEBUG:numba.core.ssa:on stmt: $const48.21 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $52load_attr.23 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $56load_attr.25 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $58binary_multiply.26 = $52load_attr.23 * $56load_attr.25
DEBUG:numba.core.ssa:on stmt: $const60.27 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $64load_attr.29 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $68load_attr.31 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $70binary_multiply.32 = $64load_attr.29 * $68load_attr.31
DEBUG:numba.core.ssa:on stmt: $72binary_subtract.33 = $const60.27 - $70binary_multiply.32
DEBUG:numba.core.ssa:on stmt: $74binary_multiply.34 = $58binary_multiply.26 * $72binary_subtract.33
DEBUG:numba.core.ssa:on stmt: $const76.35 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const78.36 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $84binary_multiply.39 = nu_r * nu_r
DEBUG:numba.core.ssa:on stmt: $86binary_true_divide.40 = $const78.36 / $84binary_multiply.39
DEBUG:numba.core.ssa:on stmt: $88binary_add.41 = $const76.35 + $86binary_true_divide.40
DEBUG:numba.core.ssa:on stmt: $90binary_multiply.42 = $74binary_multiply.34 * $88binary_add.41
DEBUG:numba.core.ssa:on stmt: $92binary_add.43 = $const48.21 + $90binary_multiply.42
DEBUG:numba.core.ssa:on stmt: $94binary_subtract.44 = $46binary_multiply.20 - $92binary_add.43
DEBUG:numba.core.ssa:on stmt: $96call_method.45 = call $40load_method.17($94binary_subtract.44, func=$40load_method.17, args=[Var($94binary_subtract.44, r_packet.py:198)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $98binary_multiply.46 = $36binary_multiply.15 * $96call_method.45
DEBUG:numba.core.ssa:on stmt: $100binary_subtract.47 = ct - $98binary_multiply.46
DEBUG:numba.core.ssa:on stmt: $const102.48 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $108binary_multiply.51 = nu_r * nu_r
DEBUG:numba.core.ssa:on stmt: $110binary_add.52 = $const102.48 + $108binary_multiply.51
DEBUG:numba.core.ssa:on stmt: $112binary_true_divide.53 = $100binary_subtract.47 / $110binary_add.52
DEBUG:numba.core.ssa:on stmt: $114binary_add.54 = $28binary_multiply.11 + $112binary_true_divide.53
DEBUG:numba.core.ssa:on stmt: distance = $114binary_add.54
DEBUG:numba.core.ssa:on stmt: $120return_value.56 = cast(value=distance)
DEBUG:numba.core.ssa:on stmt: return $120return_value.56
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100binary_subtract.47': [<numba.core.ir.Assign object at 0x7f6e43537d90>],
             '$108binary_multiply.51': [<numba.core.ir.Assign object at 0x7f6e4353b190>],
             '$10load_global.3': [<numba.core.ir.Assign object at 0x7f6e43532bd0>],
             '$110binary_add.52': [<numba.core.ir.Assign object at 0x7f6e4353b290>],
             '$112binary_true_divide.53': [<numba.core.ir.Assign object at 0x7f6e4353b390>],
             '$114binary_add.54': [<numba.core.ir.Assign object at 0x7f6e4353b490>],
             '$120return_value.56': [<numba.core.ir.Assign object at 0x7f6e4353b750>],
             '$14binary_multiply.5': [<numba.core.ir.Assign object at 0x7f6e43532d50>],
             '$20load_attr.7': [<numba.core.ir.Assign object at 0x7f6e43532fd0>],
             '$22unary_negative.8': [<numba.core.ir.Assign object at 0x7f6e43537110>],
             '$26load_attr.10': [<numba.core.ir.Assign object at 0x7f6e435372d0>],
             '$28binary_multiply.11': [<numba.core.ir.Assign object at 0x7f6e435373d0>],
             '$36binary_multiply.15': [<numba.core.ir.Assign object at 0x7f6e43532190>],
             '$38load_global.16': [<numba.core.ir.Assign object at 0x7f6e4352e9d0>],
             '$40load_method.17': [<numba.core.ir.Assign object at 0x7f6e4352eb50>],
             '$46binary_multiply.20': [<numba.core.ir.Assign object at 0x7f6e4351dfd0>],
             '$52load_attr.23': [<numba.core.ir.Assign object at 0x7f6e4351dad0>],
             '$56load_attr.25': [<numba.core.ir.Assign object at 0x7f6e4351d890>],
             '$58binary_multiply.26': [<numba.core.ir.Assign object at 0x7f6e4351d810>],
             '$64load_attr.29': [<numba.core.ir.Assign object at 0x7f6e4351ab10>],
             '$68load_attr.31': [<numba.core.ir.Assign object at 0x7f6e4351aa10>],
             '$6binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f6e43532a10>],
             '$70binary_multiply.32': [<numba.core.ir.Assign object at 0x7f6e4350fd50>],
             '$72binary_subtract.33': [<numba.core.ir.Assign object at 0x7f6e43578890>],
             '$74binary_multiply.34': [<numba.core.ir.Assign object at 0x7f6e43522650>],
             '$84binary_multiply.39': [<numba.core.ir.Assign object at 0x7f6e43537550>],
             '$86binary_true_divide.40': [<numba.core.ir.Assign object at 0x7f6e43537650>],
             '$88binary_add.41': [<numba.core.ir.Assign object at 0x7f6e43537790>],
             '$90binary_multiply.42': [<numba.core.ir.Assign object at 0x7f6e43537890>],
             '$92binary_add.43': [<numba.core.ir.Assign object at 0x7f6e43537990>],
             '$94binary_subtract.44': [<numba.core.ir.Assign object at 0x7f6e43537a90>],
             '$96call_method.45': [<numba.core.ir.Assign object at 0x7f6e43537c10>],
             '$98binary_multiply.46': [<numba.core.ir.Assign object at 0x7f6e43537c90>],
             '$const102.48': [<numba.core.ir.Assign object at 0x7f6e43537e90>],
             '$const48.21': [<numba.core.ir.Assign object at 0x7f6e4351d4d0>],
             '$const60.27': [<numba.core.ir.Assign object at 0x7f6e4351a0d0>],
             '$const76.35': [<numba.core.ir.Assign object at 0x7f6e43522e90>],
             '$const78.36': [<numba.core.ir.Assign object at 0x7f6e43522d50>],
             'ct': [<numba.core.ir.Assign object at 0x7f6e43532e10>],
             'distance': [<numba.core.ir.Assign object at 0x7f6e4353b550>],
             'nu': [<numba.core.ir.Assign object at 0x7f6e435325d0>],
             'nu_line': [<numba.core.ir.Assign object at 0x7f6e43532550>],
             'nu_r': [<numba.core.ir.Assign object at 0x7f6e43532ad0>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e43532750>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e43532690>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=312)
           2	LOAD_GLOBAL(arg=0, lineno=312)
           4	LOAD_ATTR(arg=1, lineno=312)
           6	POP_JUMP_IF_TRUE(arg=22, lineno=312)
           8	LOAD_GLOBAL(arg=2, lineno=313)
          10	LOAD_FAST(arg=1, lineno=313)
          12	LOAD_FAST(arg=3, lineno=313)
          14	LOAD_FAST(arg=4, lineno=313)
          16	CALL_FUNCTION(arg=3, lineno=313)
          18	STORE_FAST(arg=5, lineno=313)
          20	JUMP_FORWARD(arg=8, lineno=313)
>         22	LOAD_GLOBAL(arg=3, lineno=315)
          24	LOAD_FAST(arg=1, lineno=315)
          26	CALL_FUNCTION(arg=1, lineno=315)
          28	STORE_FAST(arg=5, lineno=315)
>         30	LOAD_FAST(arg=0, lineno=317)
          32	LOAD_ATTR(arg=4, lineno=317)
          34	LOAD_FAST(arg=2, lineno=317)
          36	LOAD_FAST(arg=1, lineno=317)
          38	LOAD_ATTR(arg=5, lineno=317)
          40	BUILD_TUPLE(arg=2, lineno=317)
          42	DUP_TOP_TWO(arg=None, lineno=317)
          44	BINARY_SUBSCR(arg=None, lineno=317)
          46	LOAD_FAST(arg=5, lineno=318)
          48	LOAD_FAST(arg=1, lineno=318)
          50	LOAD_ATTR(arg=6, lineno=318)
          52	BINARY_TRUE_DIVIDE(arg=None, lineno=318)
          54	INPLACE_ADD(arg=None, lineno=318)
          56	ROT_THREE(arg=None, lineno=318)
          58	STORE_SUBSCR(arg=None, lineno=318)
          60	LOAD_FAST(arg=0, lineno=320)
          62	LOAD_ATTR(arg=7, lineno=320)
          64	LOAD_FAST(arg=2, lineno=321)
          66	LOAD_FAST(arg=1, lineno=321)
          68	LOAD_ATTR(arg=5, lineno=321)
          70	BUILD_TUPLE(arg=2, lineno=321)
          72	DUP_TOP_TWO(arg=None, lineno=321)
          74	BINARY_SUBSCR(arg=None, lineno=321)
          76	LOAD_FAST(arg=5, lineno=322)
          78	INPLACE_ADD(arg=None, lineno=322)
          80	ROT_THREE(arg=None, lineno=322)
          82	STORE_SUBSCR(arg=None, lineno=322)
          84	LOAD_CONST(arg=1, lineno=322)
          86	RETURN_VALUE(arg=None, lineno=322)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=312)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=312)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=312)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=POP_JUMP_IF_TRUE(arg=22, lineno=312)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=8, stack=(), blockstack=(), npush=0), Edge(pc=22, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=8 nstack_initial=0), State(pc_initial=22 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_GLOBAL(arg=2, lineno=313)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=313)
DEBUG:numba.core.byteflow:stack ['$8load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=3, lineno=313)
DEBUG:numba.core.byteflow:stack ['$8load_global.0', '$r_packet10.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=313)
DEBUG:numba.core.byteflow:stack ['$8load_global.0', '$r_packet10.1', '$distance_trace12.2']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_FUNCTION(arg=3, lineno=313)
DEBUG:numba.core.byteflow:stack ['$8load_global.0', '$r_packet10.1', '$distance_trace12.2', '$time_explosion14.3']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=5, lineno=313)
DEBUG:numba.core.byteflow:stack ['$16call_function.4']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=JUMP_FORWARD(arg=8, lineno=313)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_GLOBAL(arg=3, lineno=315)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=315)
DEBUG:numba.core.byteflow:stack ['$22load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_FUNCTION(arg=1, lineno=315)
DEBUG:numba.core.byteflow:stack ['$22load_global.0', '$r_packet24.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_FAST(arg=5, lineno=315)
DEBUG:numba.core.byteflow:stack ['$26call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=317)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_ATTR(arg=4, lineno=317)
DEBUG:numba.core.byteflow:stack ['$estimators30.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=317)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=1, lineno=317)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1', '$cur_line_id34.2']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_ATTR(arg=5, lineno=317)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1', '$cur_line_id34.2', '$r_packet36.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BUILD_TUPLE(arg=2, lineno=317)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1', '$cur_line_id34.2', '$38load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=DUP_TOP_TWO(arg=None, lineno=317)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1', '$40build_tuple.5']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=317)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1', '$40build_tuple.5', '$42dup_top_two.6', '$42dup_top_two.7']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=5, lineno=318)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1', '$40build_tuple.5', '$44binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=318)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1', '$40build_tuple.5', '$44binary_subscr.8', '$energy46.9']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_ATTR(arg=6, lineno=318)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1', '$40build_tuple.5', '$44binary_subscr.8', '$energy46.9', '$r_packet48.10']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=318)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1', '$40build_tuple.5', '$44binary_subscr.8', '$energy46.9', '$50load_attr.11']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=INPLACE_ADD(arg=None, lineno=318)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1', '$40build_tuple.5', '$44binary_subscr.8', '$52binary_true_divide.12']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=ROT_THREE(arg=None, lineno=318)
DEBUG:numba.core.byteflow:stack ['$32load_attr.1', '$40build_tuple.5', '$54inplace_add.13']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=STORE_SUBSCR(arg=None, lineno=318)
DEBUG:numba.core.byteflow:stack ['$54inplace_add.13', '$32load_attr.1', '$40build_tuple.5']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=0, lineno=320)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=7, lineno=320)
DEBUG:numba.core.byteflow:stack ['$estimators60.14']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=2, lineno=321)
DEBUG:numba.core.byteflow:stack ['$62load_attr.15']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=1, lineno=321)
DEBUG:numba.core.byteflow:stack ['$62load_attr.15', '$cur_line_id64.16']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_ATTR(arg=5, lineno=321)
DEBUG:numba.core.byteflow:stack ['$62load_attr.15', '$cur_line_id64.16', '$r_packet66.17']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=BUILD_TUPLE(arg=2, lineno=321)
DEBUG:numba.core.byteflow:stack ['$62load_attr.15', '$cur_line_id64.16', '$68load_attr.18']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=DUP_TOP_TWO(arg=None, lineno=321)
DEBUG:numba.core.byteflow:stack ['$62load_attr.15', '$70build_tuple.19']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=BINARY_SUBSCR(arg=None, lineno=321)
DEBUG:numba.core.byteflow:stack ['$62load_attr.15', '$70build_tuple.19', '$72dup_top_two.20', '$72dup_top_two.21']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=5, lineno=322)
DEBUG:numba.core.byteflow:stack ['$62load_attr.15', '$70build_tuple.19', '$74binary_subscr.22']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=INPLACE_ADD(arg=None, lineno=322)
DEBUG:numba.core.byteflow:stack ['$62load_attr.15', '$70build_tuple.19', '$74binary_subscr.22', '$energy76.23']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=ROT_THREE(arg=None, lineno=322)
DEBUG:numba.core.byteflow:stack ['$62load_attr.15', '$70build_tuple.19', '$78inplace_add.24']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=STORE_SUBSCR(arg=None, lineno=322)
DEBUG:numba.core.byteflow:stack ['$78inplace_add.24', '$62load_attr.15', '$70build_tuple.19']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=1, lineno=322)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=86, inst=RETURN_VALUE(arg=None, lineno=322)
DEBUG:numba.core.byteflow:stack ['$const84.25']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=8 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'pred': '$4load_attr.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={8: (), 22: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=8 nstack_initial=0):
AdaptBlockInfo(insts=((8, {'res': '$8load_global.0'}), (10, {'res': '$r_packet10.1'}), (12, {'res': '$distance_trace12.2'}), (14, {'res': '$time_explosion14.3'}), (16, {'func': '$8load_global.0', 'args': ['$r_packet10.1', '$distance_trace12.2', '$time_explosion14.3'], 'res': '$16call_function.4'}), (18, {'value': '$16call_function.4'}), (20, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$22load_global.0'}), (24, {'res': '$r_packet24.1'}), (26, {'func': '$22load_global.0', 'args': ['$r_packet24.1'], 'res': '$26call_function.2'}), (28, {'value': '$26call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$estimators30.0'}), (32, {'item': '$estimators30.0', 'res': '$32load_attr.1'}), (34, {'res': '$cur_line_id34.2'}), (36, {'res': '$r_packet36.3'}), (38, {'item': '$r_packet36.3', 'res': '$38load_attr.4'}), (40, {'items': ['$cur_line_id34.2', '$38load_attr.4'], 'res': '$40build_tuple.5'}), (42, {'orig': ['$32load_attr.1', '$40build_tuple.5'], 'duped': ['$42dup_top_two.6', '$42dup_top_two.7']}), (44, {'index': '$42dup_top_two.7', 'target': '$42dup_top_two.6', 'res': '$44binary_subscr.8'}), (46, {'res': '$energy46.9'}), (48, {'res': '$r_packet48.10'}), (50, {'item': '$r_packet48.10', 'res': '$50load_attr.11'}), (52, {'lhs': '$energy46.9', 'rhs': '$50load_attr.11', 'res': '$52binary_true_divide.12'}), (54, {'lhs': '$44binary_subscr.8', 'rhs': '$52binary_true_divide.12', 'res': '$54inplace_add.13'}), (58, {'target': '$32load_attr.1', 'index': '$40build_tuple.5', 'value': '$54inplace_add.13'}), (60, {'res': '$estimators60.14'}), (62, {'item': '$estimators60.14', 'res': '$62load_attr.15'}), (64, {'res': '$cur_line_id64.16'}), (66, {'res': '$r_packet66.17'}), (68, {'item': '$r_packet66.17', 'res': '$68load_attr.18'}), (70, {'items': ['$cur_line_id64.16', '$68load_attr.18'], 'res': '$70build_tuple.19'}), (72, {'orig': ['$62load_attr.15', '$70build_tuple.19'], 'duped': ['$72dup_top_two.20', '$72dup_top_two.21']}), (74, {'index': '$72dup_top_two.21', 'target': '$72dup_top_two.20', 'res': '$74binary_subscr.22'}), (76, {'res': '$energy76.23'}), (78, {'lhs': '$74binary_subscr.22', 'rhs': '$energy76.23', 'res': '$78inplace_add.24'}), (82, {'target': '$62load_attr.15', 'index': '$70build_tuple.19', 'value': '$78inplace_add.24'}), (84, {'res': '$const84.25'}), (86, {'retval': '$const84.25', 'castval': '$86return_value.26'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    estimators = arg(0, name=estimators)     ['estimators']
    r_packet = arg(1, name=r_packet)         ['r_packet']
    cur_line_id = arg(2, name=cur_line_id)   ['cur_line_id']
    distance_trace = arg(3, name=distance_trace) ['distance_trace']
    time_explosion = arg(4, name=time_explosion) ['time_explosion']
    $2load_global.0 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=ENABLE_FULL_RELATIVITY) ['$2load_global.0', '$4load_attr.1']
    bool6 = global(bool: <class 'bool'>)     ['bool6']
    $6pred = call bool6($4load_attr.1, func=bool6, args=(Var($4load_attr.1, r_packet.py:312),), kws=(), vararg=None) ['$4load_attr.1', '$6pred', 'bool6']
    branch $6pred, 22, 8                     ['$6pred']
label 8:
    $8load_global.0 = global(calc_packet_energy: CPUDispatcher(<function calc_packet_energy at 0x7f6e4a0ff0e0>)) ['$8load_global.0']
    $16call_function.4 = call $8load_global.0(r_packet, distance_trace, time_explosion, func=$8load_global.0, args=[Var(r_packet, r_packet.py:312), Var(distance_trace, r_packet.py:312), Var(time_explosion, r_packet.py:312)], kws=(), vararg=None) ['$16call_function.4', '$8load_global.0', 'distance_trace', 'r_packet', 'time_explosion']
    energy = $16call_function.4              ['$16call_function.4', 'energy']
    jump 30                                  []
label 22:
    $22load_global.0 = global(calc_packet_energy_full_relativity: CPUDispatcher(<function calc_packet_energy_full_relativity at 0x7f6e4a0f6dd0>)) ['$22load_global.0']
    $26call_function.2 = call $22load_global.0(r_packet, func=$22load_global.0, args=[Var(r_packet, r_packet.py:312)], kws=(), vararg=None) ['$22load_global.0', '$26call_function.2', 'r_packet']
    energy = $26call_function.2              ['$26call_function.2', 'energy']
    jump 30                                  []
label 30:
    $32load_attr.1 = getattr(value=estimators, attr=j_blue_estimator) ['$32load_attr.1', 'estimators']
    $38load_attr.4 = getattr(value=r_packet, attr=current_shell_id) ['$38load_attr.4', 'r_packet']
    $40build_tuple.5 = build_tuple(items=[Var(cur_line_id, r_packet.py:312), Var($38load_attr.4, r_packet.py:317)]) ['$38load_attr.4', '$40build_tuple.5', 'cur_line_id']
    $44binary_subscr.8 = getitem(value=$32load_attr.1, index=$40build_tuple.5) ['$32load_attr.1', '$40build_tuple.5', '$44binary_subscr.8']
    $50load_attr.11 = getattr(value=r_packet, attr=nu) ['$50load_attr.11', 'r_packet']
    $52binary_true_divide.12 = energy / $50load_attr.11 ['$50load_attr.11', '$52binary_true_divide.12', 'energy']
    $54inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$44binary_subscr.8, rhs=$52binary_true_divide.12, static_lhs=Undefined, static_rhs=Undefined) ['$44binary_subscr.8', '$52binary_true_divide.12', '$54inplace_add.13']
    $32load_attr.1[$40build_tuple.5] = $54inplace_add.13 ['$32load_attr.1', '$40build_tuple.5', '$54inplace_add.13']
    $62load_attr.15 = getattr(value=estimators, attr=Edotlu_estimator) ['$62load_attr.15', 'estimators']
    $68load_attr.18 = getattr(value=r_packet, attr=current_shell_id) ['$68load_attr.18', 'r_packet']
    $70build_tuple.19 = build_tuple(items=[Var(cur_line_id, r_packet.py:312), Var($68load_attr.18, r_packet.py:321)]) ['$68load_attr.18', '$70build_tuple.19', 'cur_line_id']
    $74binary_subscr.22 = getitem(value=$62load_attr.15, index=$70build_tuple.19) ['$62load_attr.15', '$70build_tuple.19', '$74binary_subscr.22']
    $78inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$74binary_subscr.22, rhs=energy, static_lhs=Undefined, static_rhs=Undefined) ['$74binary_subscr.22', '$78inplace_add.24', 'energy']
    $62load_attr.15[$70build_tuple.19] = $78inplace_add.24 ['$62load_attr.15', '$70build_tuple.19', '$78inplace_add.24']
    $const84.25 = const(NoneType, None)      ['$const84.25']
    $86return_value.26 = cast(value=$const84.25) ['$86return_value.26', '$const84.25']
    return $86return_value.26                ['$86return_value.26']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43454890>
DEBUG:numba.core.ssa:on stmt: estimators = arg(0, name=estimators)
DEBUG:numba.core.ssa:on stmt: r_packet = arg(1, name=r_packet)
DEBUG:numba.core.ssa:on stmt: cur_line_id = arg(2, name=cur_line_id)
DEBUG:numba.core.ssa:on stmt: distance_trace = arg(3, name=distance_trace)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(4, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool6 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $6pred = call bool6($4load_attr.1, func=bool6, args=(Var($4load_attr.1, r_packet.py:312),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $6pred, 22, 8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 8
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43454890>
DEBUG:numba.core.ssa:on stmt: $8load_global.0 = global(calc_packet_energy: CPUDispatcher(<function calc_packet_energy at 0x7f6e4a0ff0e0>))
DEBUG:numba.core.ssa:on stmt: $16call_function.4 = call $8load_global.0(r_packet, distance_trace, time_explosion, func=$8load_global.0, args=[Var(r_packet, r_packet.py:312), Var(distance_trace, r_packet.py:312), Var(time_explosion, r_packet.py:312)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: energy = $16call_function.4
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43454890>
DEBUG:numba.core.ssa:on stmt: $22load_global.0 = global(calc_packet_energy_full_relativity: CPUDispatcher(<function calc_packet_energy_full_relativity at 0x7f6e4a0f6dd0>))
DEBUG:numba.core.ssa:on stmt: $26call_function.2 = call $22load_global.0(r_packet, func=$22load_global.0, args=[Var(r_packet, r_packet.py:312)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: energy = $26call_function.2
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43454890>
DEBUG:numba.core.ssa:on stmt: $32load_attr.1 = getattr(value=estimators, attr=j_blue_estimator)
DEBUG:numba.core.ssa:on stmt: $38load_attr.4 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $40build_tuple.5 = build_tuple(items=[Var(cur_line_id, r_packet.py:312), Var($38load_attr.4, r_packet.py:317)])
DEBUG:numba.core.ssa:on stmt: $44binary_subscr.8 = getitem(value=$32load_attr.1, index=$40build_tuple.5)
DEBUG:numba.core.ssa:on stmt: $50load_attr.11 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $52binary_true_divide.12 = energy / $50load_attr.11
DEBUG:numba.core.ssa:on stmt: $54inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$44binary_subscr.8, rhs=$52binary_true_divide.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: $32load_attr.1[$40build_tuple.5] = $54inplace_add.13
DEBUG:numba.core.ssa:on stmt: $62load_attr.15 = getattr(value=estimators, attr=Edotlu_estimator)
DEBUG:numba.core.ssa:on stmt: $68load_attr.18 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $70build_tuple.19 = build_tuple(items=[Var(cur_line_id, r_packet.py:312), Var($68load_attr.18, r_packet.py:321)])
DEBUG:numba.core.ssa:on stmt: $74binary_subscr.22 = getitem(value=$62load_attr.15, index=$70build_tuple.19)
DEBUG:numba.core.ssa:on stmt: $78inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$74binary_subscr.22, rhs=energy, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: $62load_attr.15[$70build_tuple.19] = $78inplace_add.24
DEBUG:numba.core.ssa:on stmt: $const84.25 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $86return_value.26 = cast(value=$const84.25)
DEBUG:numba.core.ssa:on stmt: return $86return_value.26
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16call_function.4': [<numba.core.ir.Assign object at 0x7f6e434dc7d0>],
             '$22load_global.0': [<numba.core.ir.Assign object at 0x7f6e434dc910>],
             '$26call_function.2': [<numba.core.ir.Assign object at 0x7f6e434dcb10>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e434d8e10>],
             '$32load_attr.1': [<numba.core.ir.Assign object at 0x7f6e434dce10>],
             '$38load_attr.4': [<numba.core.ir.Assign object at 0x7f6e434dcfd0>],
             '$40build_tuple.5': [<numba.core.ir.Assign object at 0x7f6e434481d0>],
             '$44binary_subscr.8': [<numba.core.ir.Assign object at 0x7f6e4356e250>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e434d8f50>],
             '$50load_attr.11': [<numba.core.ir.Assign object at 0x7f6e4356e890>],
             '$52binary_true_divide.12': [<numba.core.ir.Assign object at 0x7f6e4350f0d0>],
             '$54inplace_add.13': [<numba.core.ir.Assign object at 0x7f6e43576b50>],
             '$62load_attr.15': [<numba.core.ir.Assign object at 0x7f6e434a4450>],
             '$68load_attr.18': [<numba.core.ir.Assign object at 0x7f6e43522f50>],
             '$6pred': [<numba.core.ir.Assign object at 0x7f6e434dc1d0>],
             '$70build_tuple.19': [<numba.core.ir.Assign object at 0x7f6e434a70d0>],
             '$74binary_subscr.22': [<numba.core.ir.Assign object at 0x7f6e434a7450>],
             '$78inplace_add.24': [<numba.core.ir.Assign object at 0x7f6e434e7750>],
             '$86return_value.26': [<numba.core.ir.Assign object at 0x7f6e434d8750>],
             '$8load_global.0': [<numba.core.ir.Assign object at 0x7f6e434dc2d0>],
             '$const84.25': [<numba.core.ir.Assign object at 0x7f6e434d8810>],
             'bool6': [<numba.core.ir.Assign object at 0x7f6e434dc0d0>],
             'cur_line_id': [<numba.core.ir.Assign object at 0x7f6e434d8350>],
             'distance_trace': [<numba.core.ir.Assign object at 0x7f6e434d8ad0>],
             'energy': [<numba.core.ir.Assign object at 0x7f6e434dc5d0>,
                        <numba.core.ir.Assign object at 0x7f6e434dc750>],
             'estimators': [<numba.core.ir.Assign object at 0x7f6e434d8950>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e434d8c10>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e434d8c90>]})
DEBUG:numba.core.ssa:SSA violators {'energy'}
DEBUG:numba.core.ssa:Fix SSA violator on var energy
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e43576150>
DEBUG:numba.core.ssa:on stmt: estimators = arg(0, name=estimators)
DEBUG:numba.core.ssa:on stmt: r_packet = arg(1, name=r_packet)
DEBUG:numba.core.ssa:on stmt: cur_line_id = arg(2, name=cur_line_id)
DEBUG:numba.core.ssa:on stmt: distance_trace = arg(3, name=distance_trace)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(4, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool6 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $6pred = call bool6($4load_attr.1, func=bool6, args=(Var($4load_attr.1, r_packet.py:312),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $6pred, 22, 8
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 8
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e43576150>
DEBUG:numba.core.ssa:on stmt: $8load_global.0 = global(calc_packet_energy: CPUDispatcher(<function calc_packet_energy at 0x7f6e4a0ff0e0>))
DEBUG:numba.core.ssa:on stmt: $16call_function.4 = call $8load_global.0(r_packet, distance_trace, time_explosion, func=$8load_global.0, args=[Var(r_packet, r_packet.py:312), Var(distance_trace, r_packet.py:312), Var(time_explosion, r_packet.py:312)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: energy = $16call_function.4
DEBUG:numba.core.ssa:first assign: energy
DEBUG:numba.core.ssa:replaced with: energy = $16call_function.4
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e43576150>
DEBUG:numba.core.ssa:on stmt: $22load_global.0 = global(calc_packet_energy_full_relativity: CPUDispatcher(<function calc_packet_energy_full_relativity at 0x7f6e4a0f6dd0>))
DEBUG:numba.core.ssa:on stmt: $26call_function.2 = call $22load_global.0(r_packet, func=$22load_global.0, args=[Var(r_packet, r_packet.py:312)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: energy = $26call_function.2
DEBUG:numba.core.ssa:replaced with: energy.1 = $26call_function.2
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e43576150>
DEBUG:numba.core.ssa:on stmt: $32load_attr.1 = getattr(value=estimators, attr=j_blue_estimator)
DEBUG:numba.core.ssa:on stmt: $38load_attr.4 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $40build_tuple.5 = build_tuple(items=[Var(cur_line_id, r_packet.py:312), Var($38load_attr.4, r_packet.py:317)])
DEBUG:numba.core.ssa:on stmt: $44binary_subscr.8 = getitem(value=$32load_attr.1, index=$40build_tuple.5)
DEBUG:numba.core.ssa:on stmt: $50load_attr.11 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $52binary_true_divide.12 = energy / $50load_attr.11
DEBUG:numba.core.ssa:on stmt: $54inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$44binary_subscr.8, rhs=$52binary_true_divide.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: $32load_attr.1[$40build_tuple.5] = $54inplace_add.13
DEBUG:numba.core.ssa:on stmt: $62load_attr.15 = getattr(value=estimators, attr=Edotlu_estimator)
DEBUG:numba.core.ssa:on stmt: $68load_attr.18 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $70build_tuple.19 = build_tuple(items=[Var(cur_line_id, r_packet.py:312), Var($68load_attr.18, r_packet.py:321)])
DEBUG:numba.core.ssa:on stmt: $74binary_subscr.22 = getitem(value=$62load_attr.15, index=$70build_tuple.19)
DEBUG:numba.core.ssa:on stmt: $78inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$74binary_subscr.22, rhs=energy, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: $62load_attr.15[$70build_tuple.19] = $78inplace_add.24
DEBUG:numba.core.ssa:on stmt: $const84.25 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $86return_value.26 = cast(value=$const84.25)
DEBUG:numba.core.ssa:on stmt: return $86return_value.26
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {8: [<numba.core.ir.Assign object at 0x7f6e434dce90>],
             22: [<numba.core.ir.Assign object at 0x7f6e4356e410>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e434a7110>
DEBUG:numba.core.ssa:on stmt: estimators = arg(0, name=estimators)
DEBUG:numba.core.ssa:on stmt: r_packet = arg(1, name=r_packet)
DEBUG:numba.core.ssa:on stmt: cur_line_id = arg(2, name=cur_line_id)
DEBUG:numba.core.ssa:on stmt: distance_trace = arg(3, name=distance_trace)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(4, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool6 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $6pred = call bool6($4load_attr.1, func=bool6, args=(Var($4load_attr.1, r_packet.py:312),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $6pred, 22, 8
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 8
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e434a7110>
DEBUG:numba.core.ssa:on stmt: $8load_global.0 = global(calc_packet_energy: CPUDispatcher(<function calc_packet_energy at 0x7f6e4a0ff0e0>))
DEBUG:numba.core.ssa:on stmt: $16call_function.4 = call $8load_global.0(r_packet, distance_trace, time_explosion, func=$8load_global.0, args=[Var(r_packet, r_packet.py:312), Var(distance_trace, r_packet.py:312), Var(time_explosion, r_packet.py:312)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: energy = $16call_function.4
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e434a7110>
DEBUG:numba.core.ssa:on stmt: $22load_global.0 = global(calc_packet_energy_full_relativity: CPUDispatcher(<function calc_packet_energy_full_relativity at 0x7f6e4a0f6dd0>))
DEBUG:numba.core.ssa:on stmt: $26call_function.2 = call $22load_global.0(r_packet, func=$22load_global.0, args=[Var(r_packet, r_packet.py:312)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: energy.1 = $26call_function.2
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e434a7110>
DEBUG:numba.core.ssa:on stmt: $32load_attr.1 = getattr(value=estimators, attr=j_blue_estimator)
DEBUG:numba.core.ssa:on stmt: $38load_attr.4 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $40build_tuple.5 = build_tuple(items=[Var(cur_line_id, r_packet.py:312), Var($38load_attr.4, r_packet.py:317)])
DEBUG:numba.core.ssa:on stmt: $44binary_subscr.8 = getitem(value=$32load_attr.1, index=$40build_tuple.5)
DEBUG:numba.core.ssa:on stmt: $50load_attr.11 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $52binary_true_divide.12 = energy / $50load_attr.11
DEBUG:numba.core.ssa:find_def var='energy' stmt=$52binary_true_divide.12 = energy / $50load_attr.11
DEBUG:numba.core.ssa:find_def_from_top label 30
DEBUG:numba.core.ssa:insert phi node energy.2 = phi(incoming_values=[], incoming_blocks=[]) at 30
DEBUG:numba.core.ssa:find_def_from_bottom label 8
DEBUG:numba.core.ssa:incoming_def energy = $16call_function.4
DEBUG:numba.core.ssa:find_def_from_bottom label 22
DEBUG:numba.core.ssa:incoming_def energy.1 = $26call_function.2
DEBUG:numba.core.ssa:replaced with: $52binary_true_divide.12 = energy.2 / $50load_attr.11
DEBUG:numba.core.ssa:on stmt: $54inplace_add.13 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$44binary_subscr.8, rhs=$52binary_true_divide.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: $32load_attr.1[$40build_tuple.5] = $54inplace_add.13
DEBUG:numba.core.ssa:on stmt: $62load_attr.15 = getattr(value=estimators, attr=Edotlu_estimator)
DEBUG:numba.core.ssa:on stmt: $68load_attr.18 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $70build_tuple.19 = build_tuple(items=[Var(cur_line_id, r_packet.py:312), Var($68load_attr.18, r_packet.py:321)])
DEBUG:numba.core.ssa:on stmt: $74binary_subscr.22 = getitem(value=$62load_attr.15, index=$70build_tuple.19)
DEBUG:numba.core.ssa:on stmt: $78inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$74binary_subscr.22, rhs=energy, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='energy' stmt=$78inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$74binary_subscr.22, rhs=energy, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: $78inplace_add.24 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$74binary_subscr.22, rhs=energy.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: $62load_attr.15[$70build_tuple.19] = $78inplace_add.24
DEBUG:numba.core.ssa:on stmt: $const84.25 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $86return_value.26 = cast(value=$const84.25)
DEBUG:numba.core.ssa:on stmt: return $86return_value.26
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=333)
           2	LOAD_CONST(arg=1, lineno=333)
           4	LOAD_FAST(arg=1, lineno=334)
           6	LOAD_FAST(arg=0, lineno=334)
           8	LOAD_ATTR(arg=0, lineno=334)
          10	LOAD_FAST(arg=0, lineno=334)
          12	LOAD_ATTR(arg=1, lineno=334)
          14	BINARY_MULTIPLY(arg=None, lineno=334)
          16	BINARY_ADD(arg=None, lineno=334)
          18	LOAD_FAST(arg=2, lineno=335)
          20	LOAD_GLOBAL(arg=2, lineno=335)
          22	BINARY_MULTIPLY(arg=None, lineno=335)
          24	BINARY_TRUE_DIVIDE(arg=None, lineno=335)
          26	BINARY_SUBTRACT(arg=None, lineno=335)
          28	STORE_FAST(arg=3, lineno=335)
          30	LOAD_FAST(arg=0, lineno=337)
          32	LOAD_ATTR(arg=3, lineno=337)
          34	LOAD_FAST(arg=3, lineno=337)
          36	BINARY_MULTIPLY(arg=None, lineno=337)
          38	STORE_FAST(arg=4, lineno=337)
          40	LOAD_FAST(arg=4, lineno=338)
          42	RETURN_VALUE(arg=None, lineno=338)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=333)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=333)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=334)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=334)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$distance_trace4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=334)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$distance_trace4.1', '$r_packet6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=334)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$distance_trace4.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_ATTR(arg=1, lineno=334)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$distance_trace4.1', '$8load_attr.3', '$r_packet10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_MULTIPLY(arg=None, lineno=334)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$distance_trace4.1', '$8load_attr.3', '$12load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_ADD(arg=None, lineno=334)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$distance_trace4.1', '$14binary_multiply.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=335)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$16binary_add.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=335)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$16binary_add.7', '$time_explosion18.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_MULTIPLY(arg=None, lineno=335)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$16binary_add.7', '$time_explosion18.8', '$20load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=335)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$16binary_add.7', '$22binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=335)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$24binary_true_divide.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_FAST(arg=3, lineno=335)
DEBUG:numba.core.byteflow:stack ['$26binary_subtract.12']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=337)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_ATTR(arg=3, lineno=337)
DEBUG:numba.core.byteflow:stack ['$r_packet30.13']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=3, lineno=337)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_MULTIPLY(arg=None, lineno=337)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$doppler_factor34.15']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=4, lineno=337)
DEBUG:numba.core.byteflow:stack ['$36binary_multiply.16']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=4, lineno=338)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=338)
DEBUG:numba.core.byteflow:stack ['$energy40.17']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'res': '$distance_trace4.1'}), (6, {'res': '$r_packet6.2'}), (8, {'item': '$r_packet6.2', 'res': '$8load_attr.3'}), (10, {'res': '$r_packet10.4'}), (12, {'item': '$r_packet10.4', 'res': '$12load_attr.5'}), (14, {'lhs': '$8load_attr.3', 'rhs': '$12load_attr.5', 'res': '$14binary_multiply.6'}), (16, {'lhs': '$distance_trace4.1', 'rhs': '$14binary_multiply.6', 'res': '$16binary_add.7'}), (18, {'res': '$time_explosion18.8'}), (20, {'res': '$20load_global.9'}), (22, {'lhs': '$time_explosion18.8', 'rhs': '$20load_global.9', 'res': '$22binary_multiply.10'}), (24, {'lhs': '$16binary_add.7', 'rhs': '$22binary_multiply.10', 'res': '$24binary_true_divide.11'}), (26, {'lhs': '$const2.0', 'rhs': '$24binary_true_divide.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$r_packet30.13'}), (32, {'item': '$r_packet30.13', 'res': '$32load_attr.14'}), (34, {'res': '$doppler_factor34.15'}), (36, {'lhs': '$32load_attr.14', 'rhs': '$doppler_factor34.15', 'res': '$36binary_multiply.16'}), (38, {'value': '$36binary_multiply.16'}), (40, {'res': '$energy40.17'}), (42, {'retval': '$energy40.17', 'castval': '$42return_value.18'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    distance_trace = arg(1, name=distance_trace) ['distance_trace']
    time_explosion = arg(2, name=time_explosion) ['time_explosion']
    $const2.0 = const(float, 1.0)            ['$const2.0']
    $8load_attr.3 = getattr(value=r_packet, attr=mu) ['$8load_attr.3', 'r_packet']
    $12load_attr.5 = getattr(value=r_packet, attr=r) ['$12load_attr.5', 'r_packet']
    $14binary_multiply.6 = $8load_attr.3 * $12load_attr.5 ['$12load_attr.5', '$14binary_multiply.6', '$8load_attr.3']
    $16binary_add.7 = distance_trace + $14binary_multiply.6 ['$14binary_multiply.6', '$16binary_add.7', 'distance_trace']
    $20load_global.9 = global(C_SPEED_OF_LIGHT: 29979245800.0) ['$20load_global.9']
    $22binary_multiply.10 = time_explosion * $20load_global.9 ['$20load_global.9', '$22binary_multiply.10', 'time_explosion']
    $24binary_true_divide.11 = $16binary_add.7 / $22binary_multiply.10 ['$16binary_add.7', '$22binary_multiply.10', '$24binary_true_divide.11']
    $26binary_subtract.12 = $const2.0 - $24binary_true_divide.11 ['$24binary_true_divide.11', '$26binary_subtract.12', '$const2.0']
    doppler_factor = $26binary_subtract.12   ['$26binary_subtract.12', 'doppler_factor']
    $32load_attr.14 = getattr(value=r_packet, attr=energy) ['$32load_attr.14', 'r_packet']
    $36binary_multiply.16 = $32load_attr.14 * doppler_factor ['$32load_attr.14', '$36binary_multiply.16', 'doppler_factor']
    energy = $36binary_multiply.16           ['$36binary_multiply.16', 'energy']
    $42return_value.18 = cast(value=energy)  ['$42return_value.18', 'energy']
    return $42return_value.18                ['$42return_value.18']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43468a90>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: distance_trace = arg(1, name=distance_trace)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(2, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $12load_attr.5 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $14binary_multiply.6 = $8load_attr.3 * $12load_attr.5
DEBUG:numba.core.ssa:on stmt: $16binary_add.7 = distance_trace + $14binary_multiply.6
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(C_SPEED_OF_LIGHT: 29979245800.0)
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.10 = time_explosion * $20load_global.9
DEBUG:numba.core.ssa:on stmt: $24binary_true_divide.11 = $16binary_add.7 / $22binary_multiply.10
DEBUG:numba.core.ssa:on stmt: $26binary_subtract.12 = $const2.0 - $24binary_true_divide.11
DEBUG:numba.core.ssa:on stmt: doppler_factor = $26binary_subtract.12
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $36binary_multiply.16 = $32load_attr.14 * doppler_factor
DEBUG:numba.core.ssa:on stmt: energy = $36binary_multiply.16
DEBUG:numba.core.ssa:on stmt: $42return_value.18 = cast(value=energy)
DEBUG:numba.core.ssa:on stmt: return $42return_value.18
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12load_attr.5': [<numba.core.ir.Assign object at 0x7f6e4345c890>],
             '$14binary_multiply.6': [<numba.core.ir.Assign object at 0x7f6e4345c950>],
             '$16binary_add.7': [<numba.core.ir.Assign object at 0x7f6e4345ca90>],
             '$20load_global.9': [<numba.core.ir.Assign object at 0x7f6e4345cc50>],
             '$22binary_multiply.10': [<numba.core.ir.Assign object at 0x7f6e4345cd50>],
             '$24binary_true_divide.11': [<numba.core.ir.Assign object at 0x7f6e4345ce50>],
             '$26binary_subtract.12': [<numba.core.ir.Assign object at 0x7f6e4345cf50>],
             '$32load_attr.14': [<numba.core.ir.Assign object at 0x7f6e4344bc50>],
             '$36binary_multiply.16': [<numba.core.ir.Assign object at 0x7f6e4344bb50>],
             '$42return_value.18': [<numba.core.ir.Assign object at 0x7f6e4344b890>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f6e4345c6d0>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e4345c410>],
             'distance_trace': [<numba.core.ir.Assign object at 0x7f6e4345c210>],
             'doppler_factor': [<numba.core.ir.Assign object at 0x7f6e4345f050>],
             'energy': [<numba.core.ir.Assign object at 0x7f6e4344ba90>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e4345c190>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e4345c2d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=328)
           2	LOAD_FAST(arg=0, lineno=328)
           4	LOAD_ATTR(arg=0, lineno=328)
           6	RETURN_VALUE(arg=None, lineno=328)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=328)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=328)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=328)
DEBUG:numba.core.byteflow:stack ['$r_packet2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=328)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$r_packet2.0'}), (4, {'item': '$r_packet2.0', 'res': '$4load_attr.1'}), (6, {'retval': '$4load_attr.1', 'castval': '$6return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    $4load_attr.1 = getattr(value=r_packet, attr=energy) ['$4load_attr.1', 'r_packet']
    $6return_value.2 = cast(value=$4load_attr.1) ['$4load_attr.1', '$6return_value.2']
    return $6return_value.2                  ['$6return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43409550>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $6return_value.2 = cast(value=$4load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e4347cd50>],
             '$6return_value.2': [<numba.core.ir.Assign object at 0x7f6e4347ce90>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e4347cb10>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=622)
           2	LOAD_GLOBAL(arg=0, lineno=622)
           4	LOAD_FAST(arg=3, lineno=623)
           6	LOAD_ATTR(arg=1, lineno=623)
           8	LOAD_FAST(arg=1, lineno=623)
          10	BINARY_SUBSCR(arg=None, lineno=623)
          12	LOAD_FAST(arg=2, lineno=623)
          14	BINARY_SUBTRACT(arg=None, lineno=623)
          16	CALL_FUNCTION(arg=1, lineno=623)
          18	LOAD_FAST(arg=2, lineno=624)
          20	LOAD_GLOBAL(arg=2, lineno=624)
          22	BINARY_MULTIPLY(arg=None, lineno=624)
          24	COMPARE_OP(arg=0, lineno=624)
          26	LOAD_FAST(arg=0, lineno=624)
          28	STORE_ATTR(arg=3, lineno=624)
          30	LOAD_CONST(arg=0, lineno=624)
          32	RETURN_VALUE(arg=None, lineno=624)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=622)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=622)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=3, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$numba_plasma4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$line_id8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$10binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_SUBTRACT(arg=None, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$10binary_subscr.4', '$nu_line12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=623)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$14binary_subtract.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=624)
DEBUG:numba.core.byteflow:stack ['$16call_function.7']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=624)
DEBUG:numba.core.byteflow:stack ['$16call_function.7', '$nu_line18.8']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_MULTIPLY(arg=None, lineno=624)
DEBUG:numba.core.byteflow:stack ['$16call_function.7', '$nu_line18.8', '$20load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=624)
DEBUG:numba.core.byteflow:stack ['$16call_function.7', '$22binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=624)
DEBUG:numba.core.byteflow:stack ['$24compare_op.11']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_ATTR(arg=3, lineno=624)
DEBUG:numba.core.byteflow:stack ['$24compare_op.11', '$r_packet26.12']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_CONST(arg=0, lineno=624)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=624)
DEBUG:numba.core.byteflow:stack ['$const30.13']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$numba_plasma4.1'}), (6, {'item': '$numba_plasma4.1', 'res': '$6load_attr.2'}), (8, {'res': '$line_id8.3'}), (10, {'index': '$line_id8.3', 'target': '$6load_attr.2', 'res': '$10binary_subscr.4'}), (12, {'res': '$nu_line12.5'}), (14, {'lhs': '$10binary_subscr.4', 'rhs': '$nu_line12.5', 'res': '$14binary_subtract.6'}), (16, {'func': '$2load_global.0', 'args': ['$14binary_subtract.6'], 'res': '$16call_function.7'}), (18, {'res': '$nu_line18.8'}), (20, {'res': '$20load_global.9'}), (22, {'lhs': '$nu_line18.8', 'rhs': '$20load_global.9', 'res': '$22binary_multiply.10'}), (24, {'lhs': '$16call_function.7', 'rhs': '$22binary_multiply.10', 'res': '$24compare_op.11'}), (26, {'res': '$r_packet26.12'}), (28, {'target': '$r_packet26.12', 'value': '$24compare_op.11'}), (30, {'res': '$const30.13'}), (32, {'retval': '$const30.13', 'castval': '$32return_value.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    line_id = arg(1, name=line_id)           ['line_id']
    nu_line = arg(2, name=nu_line)           ['nu_line']
    numba_plasma = arg(3, name=numba_plasma) ['numba_plasma']
    $2load_global.0 = global(abs: <built-in function abs>) ['$2load_global.0']
    $6load_attr.2 = getattr(value=numba_plasma, attr=line_list_nu) ['$6load_attr.2', 'numba_plasma']
    $10binary_subscr.4 = getitem(value=$6load_attr.2, index=line_id) ['$10binary_subscr.4', '$6load_attr.2', 'line_id']
    $14binary_subtract.6 = $10binary_subscr.4 - nu_line ['$10binary_subscr.4', '$14binary_subtract.6', 'nu_line']
    $16call_function.7 = call $2load_global.0($14binary_subtract.6, func=$2load_global.0, args=[Var($14binary_subtract.6, r_packet.py:623)], kws=(), vararg=None) ['$14binary_subtract.6', '$16call_function.7', '$2load_global.0']
    $20load_global.9 = global(CLOSE_LINE_THRESHOLD: 1e-07) ['$20load_global.9']
    $22binary_multiply.10 = nu_line * $20load_global.9 ['$20load_global.9', '$22binary_multiply.10', 'nu_line']
    $24compare_op.11 = $16call_function.7 < $22binary_multiply.10 ['$16call_function.7', '$22binary_multiply.10', '$24compare_op.11']
    (r_packet).is_close_line = $24compare_op.11 ['$24compare_op.11', 'r_packet']
    $const30.13 = const(NoneType, None)      ['$const30.13']
    $32return_value.14 = cast(value=$const30.13) ['$32return_value.14', '$const30.13']
    return $32return_value.14                ['$32return_value.14']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43396c90>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: line_id = arg(1, name=line_id)
DEBUG:numba.core.ssa:on stmt: nu_line = arg(2, name=nu_line)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(abs: <built-in function abs>)
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$6load_attr.2, index=line_id)
DEBUG:numba.core.ssa:on stmt: $14binary_subtract.6 = $10binary_subscr.4 - nu_line
DEBUG:numba.core.ssa:on stmt: $16call_function.7 = call $2load_global.0($14binary_subtract.6, func=$2load_global.0, args=[Var($14binary_subtract.6, r_packet.py:623)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $20load_global.9 = global(CLOSE_LINE_THRESHOLD: 1e-07)
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.10 = nu_line * $20load_global.9
DEBUG:numba.core.ssa:on stmt: $24compare_op.11 = $16call_function.7 < $22binary_multiply.10
DEBUG:numba.core.ssa:on stmt: (r_packet).is_close_line = $24compare_op.11
DEBUG:numba.core.ssa:on stmt: $const30.13 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $32return_value.14 = cast(value=$const30.13)
DEBUG:numba.core.ssa:on stmt: return $32return_value.14
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e4356df10>],
             '$14binary_subtract.6': [<numba.core.ir.Assign object at 0x7f6e4339d0d0>],
             '$16call_function.7': [<numba.core.ir.Assign object at 0x7f6e4339d210>],
             '$20load_global.9': [<numba.core.ir.Assign object at 0x7f6e4339d390>],
             '$22binary_multiply.10': [<numba.core.ir.Assign object at 0x7f6e4339d490>],
             '$24compare_op.11': [<numba.core.ir.Assign object at 0x7f6e4339d5d0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e4356dad0>],
             '$32return_value.14': [<numba.core.ir.Assign object at 0x7f6e4339d9d0>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7f6e4356dd50>],
             '$const30.13': [<numba.core.ir.Assign object at 0x7f6e4339d890>],
             'line_id': [<numba.core.ir.Assign object at 0x7f6e4356d850>],
             'nu_line': [<numba.core.ir.Assign object at 0x7f6e4356d910>],
             'numba_plasma': [<numba.core.ir.Assign object at 0x7f6e4356d9d0>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e4356d7d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=513)
           2	LOAD_GLOBAL(arg=0, lineno=513)
           4	LOAD_FAST(arg=0, lineno=513)
           6	LOAD_ATTR(arg=1, lineno=513)
           8	LOAD_FAST(arg=0, lineno=513)
          10	LOAD_ATTR(arg=2, lineno=513)
          12	LOAD_FAST(arg=2, lineno=513)
          14	CALL_FUNCTION(arg=3, lineno=513)
          16	STORE_FAST(arg=4, lineno=513)
          18	LOAD_FAST(arg=0, lineno=515)
          20	LOAD_ATTR(arg=1, lineno=515)
          22	STORE_FAST(arg=5, lineno=515)
          24	LOAD_FAST(arg=1, lineno=516)
          26	LOAD_CONST(arg=1, lineno=516)
          28	COMPARE_OP(arg=4, lineno=516)
          30	POP_JUMP_IF_FALSE(arg=168, lineno=516)
          32	LOAD_GLOBAL(arg=3, lineno=517)
          34	LOAD_METHOD(arg=4, lineno=517)
          36	LOAD_FAST(arg=5, lineno=518)
          38	LOAD_FAST(arg=5, lineno=518)
          40	BINARY_MULTIPLY(arg=None, lineno=518)
          42	LOAD_FAST(arg=1, lineno=518)
          44	LOAD_FAST(arg=1, lineno=518)
          46	BINARY_MULTIPLY(arg=None, lineno=518)
          48	BINARY_ADD(arg=None, lineno=518)
          50	LOAD_CONST(arg=2, lineno=518)
          52	LOAD_FAST(arg=5, lineno=518)
          54	BINARY_MULTIPLY(arg=None, lineno=518)
          56	LOAD_FAST(arg=1, lineno=518)
          58	BINARY_MULTIPLY(arg=None, lineno=518)
          60	LOAD_FAST(arg=0, lineno=518)
          62	LOAD_ATTR(arg=2, lineno=518)
          64	BINARY_MULTIPLY(arg=None, lineno=518)
          66	BINARY_ADD(arg=None, lineno=518)
          68	CALL_METHOD(arg=1, lineno=518)
          70	STORE_FAST(arg=6, lineno=518)
          72	LOAD_FAST(arg=0, lineno=520)
          74	LOAD_ATTR(arg=2, lineno=520)
          76	LOAD_FAST(arg=5, lineno=520)
          78	BINARY_MULTIPLY(arg=None, lineno=520)
          80	LOAD_FAST(arg=1, lineno=520)
          82	BINARY_ADD(arg=None, lineno=520)
          84	LOAD_FAST(arg=6, lineno=520)
          86	BINARY_TRUE_DIVIDE(arg=None, lineno=520)
          88	LOAD_FAST(arg=0, lineno=520)
          90	STORE_ATTR(arg=2, lineno=520)
          92	LOAD_FAST(arg=6, lineno=521)
          94	LOAD_FAST(arg=0, lineno=521)
          96	STORE_ATTR(arg=1, lineno=521)
          98	LOAD_FAST(arg=0, lineno=523)
         100	LOAD_ATTR(arg=5, lineno=523)
         102	LOAD_FAST(arg=4, lineno=523)
         104	BINARY_MULTIPLY(arg=None, lineno=523)
         106	STORE_FAST(arg=7, lineno=523)
         108	LOAD_FAST(arg=0, lineno=524)
         110	LOAD_ATTR(arg=6, lineno=524)
         112	LOAD_FAST(arg=4, lineno=524)
         114	BINARY_MULTIPLY(arg=None, lineno=524)
         116	STORE_FAST(arg=8, lineno=524)
         118	LOAD_GLOBAL(arg=7, lineno=526)
         120	LOAD_ATTR(arg=8, lineno=526)
         122	POP_JUMP_IF_TRUE(arg=142, lineno=526)
         124	LOAD_GLOBAL(arg=9, lineno=527)
         126	LOAD_FAST(arg=0, lineno=528)
         128	LOAD_FAST(arg=1, lineno=528)
         130	LOAD_FAST(arg=3, lineno=528)
         132	LOAD_FAST(arg=7, lineno=528)
         134	LOAD_FAST(arg=8, lineno=528)
         136	CALL_FUNCTION(arg=5, lineno=528)
         138	POP_TOP(arg=None, lineno=528)
         140	JUMP_FORWARD(arg=26, lineno=528)
>        142	LOAD_FAST(arg=1, lineno=532)
         144	LOAD_FAST(arg=4, lineno=532)
         146	BINARY_MULTIPLY(arg=None, lineno=532)
         148	STORE_FAST(arg=1, lineno=532)
         150	LOAD_GLOBAL(arg=10, lineno=533)
         152	LOAD_FAST(arg=0, lineno=534)
         154	LOAD_FAST(arg=1, lineno=535)
         156	LOAD_FAST(arg=3, lineno=536)
         158	LOAD_FAST(arg=7, lineno=537)
         160	LOAD_FAST(arg=8, lineno=538)
         162	LOAD_FAST(arg=4, lineno=539)
         164	CALL_FUNCTION(arg=6, lineno=539)
         166	POP_TOP(arg=None, lineno=539)
>        168	LOAD_CONST(arg=3, lineno=539)
         170	RETURN_VALUE(arg=None, lineno=539)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=513)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=513)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=513)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=513)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$r_packet4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=513)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=513)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$r_packet8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=513)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$10load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_FUNCTION(arg=3, lineno=513)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$10load_attr.4', '$time_explosion12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=4, lineno=513)
DEBUG:numba.core.byteflow:stack ['$14call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=515)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_ATTR(arg=1, lineno=515)
DEBUG:numba.core.byteflow:stack ['$r_packet18.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=STORE_FAST(arg=5, lineno=515)
DEBUG:numba.core.byteflow:stack ['$20load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=516)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=516)
DEBUG:numba.core.byteflow:stack ['$distance24.9']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=COMPARE_OP(arg=4, lineno=516)
DEBUG:numba.core.byteflow:stack ['$distance24.9', '$const26.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=POP_JUMP_IF_FALSE(arg=168, lineno=516)
DEBUG:numba.core.byteflow:stack ['$28compare_op.11']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=168, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=168 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_GLOBAL(arg=3, lineno=517)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_METHOD(arg=4, lineno=517)
DEBUG:numba.core.byteflow:stack ['$32load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=5, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=5, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$r36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_MULTIPLY(arg=None, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$r36.2', '$r38.3']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$40binary_multiply.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$40binary_multiply.4', '$distance42.5']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_MULTIPLY(arg=None, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$40binary_multiply.4', '$distance42.5', '$distance44.6']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_ADD(arg=None, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$40binary_multiply.4', '$46binary_multiply.7']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=2, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$48binary_add.8']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=5, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$48binary_add.8', '$const50.9']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=BINARY_MULTIPLY(arg=None, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$48binary_add.8', '$const50.9', '$r52.10']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$48binary_add.8', '$54binary_multiply.11']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=BINARY_MULTIPLY(arg=None, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$48binary_add.8', '$54binary_multiply.11', '$distance56.12']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=0, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$48binary_add.8', '$58binary_multiply.13']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=2, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$48binary_add.8', '$58binary_multiply.13', '$r_packet60.14']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=BINARY_MULTIPLY(arg=None, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$48binary_add.8', '$58binary_multiply.13', '$62load_attr.15']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=BINARY_ADD(arg=None, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$48binary_add.8', '$64binary_multiply.16']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=CALL_METHOD(arg=1, lineno=518)
DEBUG:numba.core.byteflow:stack ['$34load_method.1', '$66binary_add.17']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=STORE_FAST(arg=6, lineno=518)
DEBUG:numba.core.byteflow:stack ['$68call_method.18']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=0, lineno=520)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_ATTR(arg=2, lineno=520)
DEBUG:numba.core.byteflow:stack ['$r_packet72.19']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=5, lineno=520)
DEBUG:numba.core.byteflow:stack ['$74load_attr.20']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=BINARY_MULTIPLY(arg=None, lineno=520)
DEBUG:numba.core.byteflow:stack ['$74load_attr.20', '$r76.21']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=520)
DEBUG:numba.core.byteflow:stack ['$78binary_multiply.22']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_ADD(arg=None, lineno=520)
DEBUG:numba.core.byteflow:stack ['$78binary_multiply.22', '$distance80.23']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=6, lineno=520)
DEBUG:numba.core.byteflow:stack ['$82binary_add.24']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=520)
DEBUG:numba.core.byteflow:stack ['$82binary_add.24', '$new_r84.25']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=0, lineno=520)
DEBUG:numba.core.byteflow:stack ['$86binary_true_divide.26']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=STORE_ATTR(arg=2, lineno=520)
DEBUG:numba.core.byteflow:stack ['$86binary_true_divide.26', '$r_packet88.27']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=6, lineno=521)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=521)
DEBUG:numba.core.byteflow:stack ['$new_r92.28']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=STORE_ATTR(arg=1, lineno=521)
DEBUG:numba.core.byteflow:stack ['$new_r92.28', '$r_packet94.29']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=523)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_ATTR(arg=5, lineno=523)
DEBUG:numba.core.byteflow:stack ['$r_packet98.30']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=4, lineno=523)
DEBUG:numba.core.byteflow:stack ['$100load_attr.31']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=BINARY_MULTIPLY(arg=None, lineno=523)
DEBUG:numba.core.byteflow:stack ['$100load_attr.31', '$doppler_factor102.32']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=STORE_FAST(arg=7, lineno=523)
DEBUG:numba.core.byteflow:stack ['$104binary_multiply.33']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=0, lineno=524)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_ATTR(arg=6, lineno=524)
DEBUG:numba.core.byteflow:stack ['$r_packet108.34']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=4, lineno=524)
DEBUG:numba.core.byteflow:stack ['$110load_attr.35']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=BINARY_MULTIPLY(arg=None, lineno=524)
DEBUG:numba.core.byteflow:stack ['$110load_attr.35', '$doppler_factor112.36']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=STORE_FAST(arg=8, lineno=524)
DEBUG:numba.core.byteflow:stack ['$114binary_multiply.37']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_GLOBAL(arg=7, lineno=526)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_ATTR(arg=8, lineno=526)
DEBUG:numba.core.byteflow:stack ['$118load_global.38']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=POP_JUMP_IF_TRUE(arg=142, lineno=526)
DEBUG:numba.core.byteflow:stack ['$120load_attr.39']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=124, stack=(), blockstack=(), npush=0), Edge(pc=142, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=168 nstack_initial=0), State(pc_initial=124 nstack_initial=0), State(pc_initial=142 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=3, lineno=539)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=170, inst=RETURN_VALUE(arg=None, lineno=539)
DEBUG:numba.core.byteflow:stack ['$const168.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=124 nstack_initial=0), State(pc_initial=142 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_GLOBAL(arg=9, lineno=527)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=0, lineno=528)
DEBUG:numba.core.byteflow:stack ['$124load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=1, lineno=528)
DEBUG:numba.core.byteflow:stack ['$124load_global.0', '$r_packet126.1']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=3, lineno=528)
DEBUG:numba.core.byteflow:stack ['$124load_global.0', '$r_packet126.1', '$distance128.2']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_FAST(arg=7, lineno=528)
DEBUG:numba.core.byteflow:stack ['$124load_global.0', '$r_packet126.1', '$distance128.2', '$numba_estimator130.3']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_FAST(arg=8, lineno=528)
DEBUG:numba.core.byteflow:stack ['$124load_global.0', '$r_packet126.1', '$distance128.2', '$numba_estimator130.3', '$comov_nu132.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=CALL_FUNCTION(arg=5, lineno=528)
DEBUG:numba.core.byteflow:stack ['$124load_global.0', '$r_packet126.1', '$distance128.2', '$numba_estimator130.3', '$comov_nu132.4', '$comov_energy134.5']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=POP_TOP(arg=None, lineno=528)
DEBUG:numba.core.byteflow:stack ['$136call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=JUMP_FORWARD(arg=26, lineno=528)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=168, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=142 nstack_initial=0), State(pc_initial=168 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_FAST(arg=1, lineno=532)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=144, inst=LOAD_FAST(arg=4, lineno=532)
DEBUG:numba.core.byteflow:stack ['$distance142.0']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=BINARY_MULTIPLY(arg=None, lineno=532)
DEBUG:numba.core.byteflow:stack ['$distance142.0', '$doppler_factor144.1']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=STORE_FAST(arg=1, lineno=532)
DEBUG:numba.core.byteflow:stack ['$146binary_multiply.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_GLOBAL(arg=10, lineno=533)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=534)
DEBUG:numba.core.byteflow:stack ['$150load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=1, lineno=535)
DEBUG:numba.core.byteflow:stack ['$150load_global.3', '$r_packet152.4']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=3, lineno=536)
DEBUG:numba.core.byteflow:stack ['$150load_global.3', '$r_packet152.4', '$distance154.5']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_FAST(arg=7, lineno=537)
DEBUG:numba.core.byteflow:stack ['$150load_global.3', '$r_packet152.4', '$distance154.5', '$numba_estimator156.6']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_FAST(arg=8, lineno=538)
DEBUG:numba.core.byteflow:stack ['$150load_global.3', '$r_packet152.4', '$distance154.5', '$numba_estimator156.6', '$comov_nu158.7']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=4, lineno=539)
DEBUG:numba.core.byteflow:stack ['$150load_global.3', '$r_packet152.4', '$distance154.5', '$numba_estimator156.6', '$comov_nu158.7', '$comov_energy160.8']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=CALL_FUNCTION(arg=6, lineno=539)
DEBUG:numba.core.byteflow:stack ['$150load_global.3', '$r_packet152.4', '$distance154.5', '$numba_estimator156.6', '$comov_nu158.7', '$comov_energy160.8', '$doppler_factor162.9']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=POP_TOP(arg=None, lineno=539)
DEBUG:numba.core.byteflow:stack ['$164call_function.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=168, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=168 nstack_initial=0), State(pc_initial=168 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=168 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=124 nstack_initial=0): set(),
             State(pc_initial=142 nstack_initial=0): set(),
             State(pc_initial=168 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$r_packet4.1'}), (6, {'item': '$r_packet4.1', 'res': '$6load_attr.2'}), (8, {'res': '$r_packet8.3'}), (10, {'item': '$r_packet8.3', 'res': '$10load_attr.4'}), (12, {'res': '$time_explosion12.5'}), (14, {'func': '$2load_global.0', 'args': ['$6load_attr.2', '$10load_attr.4', '$time_explosion12.5'], 'res': '$14call_function.6'}), (16, {'value': '$14call_function.6'}), (18, {'res': '$r_packet18.7'}), (20, {'item': '$r_packet18.7', 'res': '$20load_attr.8'}), (22, {'value': '$20load_attr.8'}), (24, {'res': '$distance24.9'}), (26, {'res': '$const26.10'}), (28, {'lhs': '$distance24.9', 'rhs': '$const26.10', 'res': '$28compare_op.11'}), (30, {'pred': '$28compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 168: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$32load_global.0'}), (34, {'item': '$32load_global.0', 'res': '$34load_method.1'}), (36, {'res': '$r36.2'}), (38, {'res': '$r38.3'}), (40, {'lhs': '$r36.2', 'rhs': '$r38.3', 'res': '$40binary_multiply.4'}), (42, {'res': '$distance42.5'}), (44, {'res': '$distance44.6'}), (46, {'lhs': '$distance42.5', 'rhs': '$distance44.6', 'res': '$46binary_multiply.7'}), (48, {'lhs': '$40binary_multiply.4', 'rhs': '$46binary_multiply.7', 'res': '$48binary_add.8'}), (50, {'res': '$const50.9'}), (52, {'res': '$r52.10'}), (54, {'lhs': '$const50.9', 'rhs': '$r52.10', 'res': '$54binary_multiply.11'}), (56, {'res': '$distance56.12'}), (58, {'lhs': '$54binary_multiply.11', 'rhs': '$distance56.12', 'res': '$58binary_multiply.13'}), (60, {'res': '$r_packet60.14'}), (62, {'item': '$r_packet60.14', 'res': '$62load_attr.15'}), (64, {'lhs': '$58binary_multiply.13', 'rhs': '$62load_attr.15', 'res': '$64binary_multiply.16'}), (66, {'lhs': '$48binary_add.8', 'rhs': '$64binary_multiply.16', 'res': '$66binary_add.17'}), (68, {'func': '$34load_method.1', 'args': ['$66binary_add.17'], 'res': '$68call_method.18'}), (70, {'value': '$68call_method.18'}), (72, {'res': '$r_packet72.19'}), (74, {'item': '$r_packet72.19', 'res': '$74load_attr.20'}), (76, {'res': '$r76.21'}), (78, {'lhs': '$74load_attr.20', 'rhs': '$r76.21', 'res': '$78binary_multiply.22'}), (80, {'res': '$distance80.23'}), (82, {'lhs': '$78binary_multiply.22', 'rhs': '$distance80.23', 'res': '$82binary_add.24'}), (84, {'res': '$new_r84.25'}), (86, {'lhs': '$82binary_add.24', 'rhs': '$new_r84.25', 'res': '$86binary_true_divide.26'}), (88, {'res': '$r_packet88.27'}), (90, {'target': '$r_packet88.27', 'value': '$86binary_true_divide.26'}), (92, {'res': '$new_r92.28'}), (94, {'res': '$r_packet94.29'}), (96, {'target': '$r_packet94.29', 'value': '$new_r92.28'}), (98, {'res': '$r_packet98.30'}), (100, {'item': '$r_packet98.30', 'res': '$100load_attr.31'}), (102, {'res': '$doppler_factor102.32'}), (104, {'lhs': '$100load_attr.31', 'rhs': '$doppler_factor102.32', 'res': '$104binary_multiply.33'}), (106, {'value': '$104binary_multiply.33'}), (108, {'res': '$r_packet108.34'}), (110, {'item': '$r_packet108.34', 'res': '$110load_attr.35'}), (112, {'res': '$doppler_factor112.36'}), (114, {'lhs': '$110load_attr.35', 'rhs': '$doppler_factor112.36', 'res': '$114binary_multiply.37'}), (116, {'value': '$114binary_multiply.37'}), (118, {'res': '$118load_global.38'}), (120, {'item': '$118load_global.38', 'res': '$120load_attr.39'}), (122, {'pred': '$120load_attr.39'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={124: (), 142: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=124 nstack_initial=0):
AdaptBlockInfo(insts=((124, {'res': '$124load_global.0'}), (126, {'res': '$r_packet126.1'}), (128, {'res': '$distance128.2'}), (130, {'res': '$numba_estimator130.3'}), (132, {'res': '$comov_nu132.4'}), (134, {'res': '$comov_energy134.5'}), (136, {'func': '$124load_global.0', 'args': ['$r_packet126.1', '$distance128.2', '$numba_estimator130.3', '$comov_nu132.4', '$comov_energy134.5'], 'res': '$136call_function.6'}), (140, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={168: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=142 nstack_initial=0):
AdaptBlockInfo(insts=((142, {'res': '$distance142.0'}), (144, {'res': '$doppler_factor144.1'}), (146, {'lhs': '$distance142.0', 'rhs': '$doppler_factor144.1', 'res': '$146binary_multiply.2'}), (148, {'value': '$146binary_multiply.2'}), (150, {'res': '$150load_global.3'}), (152, {'res': '$r_packet152.4'}), (154, {'res': '$distance154.5'}), (156, {'res': '$numba_estimator156.6'}), (158, {'res': '$comov_nu158.7'}), (160, {'res': '$comov_energy160.8'}), (162, {'res': '$doppler_factor162.9'}), (164, {'func': '$150load_global.3', 'args': ['$r_packet152.4', '$distance154.5', '$numba_estimator156.6', '$comov_nu158.7', '$comov_energy160.8', '$doppler_factor162.9'], 'res': '$164call_function.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={168: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=168 nstack_initial=0):
AdaptBlockInfo(insts=((168, {'res': '$const168.0'}), (170, {'retval': '$const168.0', 'castval': '$170return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    distance = arg(1, name=distance)         ['distance']
    time_explosion = arg(2, name=time_explosion) ['time_explosion']
    numba_estimator = arg(3, name=numba_estimator) ['numba_estimator']
    $2load_global.0 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>)) ['$2load_global.0']
    $6load_attr.2 = getattr(value=r_packet, attr=r) ['$6load_attr.2', 'r_packet']
    $10load_attr.4 = getattr(value=r_packet, attr=mu) ['$10load_attr.4', 'r_packet']
    $14call_function.6 = call $2load_global.0($6load_attr.2, $10load_attr.4, time_explosion, func=$2load_global.0, args=[Var($6load_attr.2, r_packet.py:513), Var($10load_attr.4, r_packet.py:513), Var(time_explosion, r_packet.py:513)], kws=(), vararg=None) ['$10load_attr.4', '$14call_function.6', '$2load_global.0', '$6load_attr.2', 'time_explosion']
    doppler_factor = $14call_function.6      ['$14call_function.6', 'doppler_factor']
    $20load_attr.8 = getattr(value=r_packet, attr=r) ['$20load_attr.8', 'r_packet']
    r = $20load_attr.8                       ['$20load_attr.8', 'r']
    $const26.10 = const(float, 0.0)          ['$const26.10']
    $28compare_op.11 = distance > $const26.10 ['$28compare_op.11', '$const26.10', 'distance']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($28compare_op.11, func=bool30, args=(Var($28compare_op.11, r_packet.py:516),), kws=(), vararg=None) ['$28compare_op.11', '$30pred', 'bool30']
    branch $30pred, 32, 168                  ['$30pred']
label 32:
    $32load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$32load_global.0']
    $34load_method.1 = getattr(value=$32load_global.0, attr=sqrt) ['$32load_global.0', '$34load_method.1']
    $40binary_multiply.4 = r * r             ['$40binary_multiply.4', 'r', 'r']
    $46binary_multiply.7 = distance * distance ['$46binary_multiply.7', 'distance', 'distance']
    $48binary_add.8 = $40binary_multiply.4 + $46binary_multiply.7 ['$40binary_multiply.4', '$46binary_multiply.7', '$48binary_add.8']
    $const50.9 = const(float, 2.0)           ['$const50.9']
    $54binary_multiply.11 = $const50.9 * r   ['$54binary_multiply.11', '$const50.9', 'r']
    $58binary_multiply.13 = $54binary_multiply.11 * distance ['$54binary_multiply.11', '$58binary_multiply.13', 'distance']
    $62load_attr.15 = getattr(value=r_packet, attr=mu) ['$62load_attr.15', 'r_packet']
    $64binary_multiply.16 = $58binary_multiply.13 * $62load_attr.15 ['$58binary_multiply.13', '$62load_attr.15', '$64binary_multiply.16']
    $66binary_add.17 = $48binary_add.8 + $64binary_multiply.16 ['$48binary_add.8', '$64binary_multiply.16', '$66binary_add.17']
    $68call_method.18 = call $34load_method.1($66binary_add.17, func=$34load_method.1, args=[Var($66binary_add.17, r_packet.py:518)], kws=(), vararg=None) ['$34load_method.1', '$66binary_add.17', '$68call_method.18']
    new_r = $68call_method.18                ['$68call_method.18', 'new_r']
    $74load_attr.20 = getattr(value=r_packet, attr=mu) ['$74load_attr.20', 'r_packet']
    $78binary_multiply.22 = $74load_attr.20 * r ['$74load_attr.20', '$78binary_multiply.22', 'r']
    $82binary_add.24 = $78binary_multiply.22 + distance ['$78binary_multiply.22', '$82binary_add.24', 'distance']
    $86binary_true_divide.26 = $82binary_add.24 / new_r ['$82binary_add.24', '$86binary_true_divide.26', 'new_r']
    (r_packet).mu = $86binary_true_divide.26 ['$86binary_true_divide.26', 'r_packet']
    (r_packet).r = new_r                     ['new_r', 'r_packet']
    $100load_attr.31 = getattr(value=r_packet, attr=nu) ['$100load_attr.31', 'r_packet']
    $104binary_multiply.33 = $100load_attr.31 * doppler_factor ['$100load_attr.31', '$104binary_multiply.33', 'doppler_factor']
    comov_nu = $104binary_multiply.33        ['$104binary_multiply.33', 'comov_nu']
    $110load_attr.35 = getattr(value=r_packet, attr=energy) ['$110load_attr.35', 'r_packet']
    $114binary_multiply.37 = $110load_attr.35 * doppler_factor ['$110load_attr.35', '$114binary_multiply.37', 'doppler_factor']
    comov_energy = $114binary_multiply.37    ['$114binary_multiply.37', 'comov_energy']
    $118load_global.38 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>) ['$118load_global.38']
    $120load_attr.39 = getattr(value=$118load_global.38, attr=ENABLE_FULL_RELATIVITY) ['$118load_global.38', '$120load_attr.39']
    bool122 = global(bool: <class 'bool'>)   ['bool122']
    $122pred = call bool122($120load_attr.39, func=bool122, args=(Var($120load_attr.39, r_packet.py:526),), kws=(), vararg=None) ['$120load_attr.39', '$122pred', 'bool122']
    branch $122pred, 142, 124                ['$122pred']
label 124:
    $124load_global.0 = global(set_estimators: CPUDispatcher(<function set_estimators at 0x7f6e4a0ff950>)) ['$124load_global.0']
    $136call_function.6 = call $124load_global.0(r_packet, distance, numba_estimator, comov_nu, comov_energy, func=$124load_global.0, args=[Var(r_packet, r_packet.py:513), Var(distance, r_packet.py:513), Var(numba_estimator, r_packet.py:513), Var(comov_nu, r_packet.py:523), Var(comov_energy, r_packet.py:524)], kws=(), vararg=None) ['$124load_global.0', '$136call_function.6', 'comov_energy', 'comov_nu', 'distance', 'numba_estimator', 'r_packet']
    jump 168                                 []
label 142:
    $146binary_multiply.2 = distance * doppler_factor ['$146binary_multiply.2', 'distance', 'doppler_factor']
    distance = $146binary_multiply.2         ['$146binary_multiply.2', 'distance']
    $150load_global.3 = global(set_estimators_full_relativity: CPUDispatcher(<function set_estimators_full_relativity at 0x7f6e4a0ffc20>)) ['$150load_global.3']
    $164call_function.10 = call $150load_global.3(r_packet, distance, numba_estimator, comov_nu, comov_energy, doppler_factor, func=$150load_global.3, args=[Var(r_packet, r_packet.py:513), Var(distance, r_packet.py:513), Var(numba_estimator, r_packet.py:513), Var(comov_nu, r_packet.py:523), Var(comov_energy, r_packet.py:524), Var(doppler_factor, r_packet.py:513)], kws=(), vararg=None) ['$150load_global.3', '$164call_function.10', 'comov_energy', 'comov_nu', 'distance', 'doppler_factor', 'numba_estimator', 'r_packet']
    jump 168                                 []
label 168:
    $const168.0 = const(NoneType, None)      ['$const168.0']
    $170return_value.1 = cast(value=$const168.0) ['$170return_value.1', '$const168.0']
    return $170return_value.1                ['$170return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4665d1d0>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: distance = arg(1, name=distance)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(2, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: numba_estimator = arg(3, name=numba_estimator)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $10load_attr.4 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $14call_function.6 = call $2load_global.0($6load_attr.2, $10load_attr.4, time_explosion, func=$2load_global.0, args=[Var($6load_attr.2, r_packet.py:513), Var($10load_attr.4, r_packet.py:513), Var(time_explosion, r_packet.py:513)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $14call_function.6
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: r = $20load_attr.8
DEBUG:numba.core.ssa:on stmt: $const26.10 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $28compare_op.11 = distance > $const26.10
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($28compare_op.11, func=bool30, args=(Var($28compare_op.11, r_packet.py:516),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 32, 168
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4665d1d0>
DEBUG:numba.core.ssa:on stmt: $32load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $34load_method.1 = getattr(value=$32load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $40binary_multiply.4 = r * r
DEBUG:numba.core.ssa:on stmt: $46binary_multiply.7 = distance * distance
DEBUG:numba.core.ssa:on stmt: $48binary_add.8 = $40binary_multiply.4 + $46binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $const50.9 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $const50.9 * r
DEBUG:numba.core.ssa:on stmt: $58binary_multiply.13 = $54binary_multiply.11 * distance
DEBUG:numba.core.ssa:on stmt: $62load_attr.15 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $64binary_multiply.16 = $58binary_multiply.13 * $62load_attr.15
DEBUG:numba.core.ssa:on stmt: $66binary_add.17 = $48binary_add.8 + $64binary_multiply.16
DEBUG:numba.core.ssa:on stmt: $68call_method.18 = call $34load_method.1($66binary_add.17, func=$34load_method.1, args=[Var($66binary_add.17, r_packet.py:518)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: new_r = $68call_method.18
DEBUG:numba.core.ssa:on stmt: $74load_attr.20 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $78binary_multiply.22 = $74load_attr.20 * r
DEBUG:numba.core.ssa:on stmt: $82binary_add.24 = $78binary_multiply.22 + distance
DEBUG:numba.core.ssa:on stmt: $86binary_true_divide.26 = $82binary_add.24 / new_r
DEBUG:numba.core.ssa:on stmt: (r_packet).mu = $86binary_true_divide.26
DEBUG:numba.core.ssa:on stmt: (r_packet).r = new_r
DEBUG:numba.core.ssa:on stmt: $100load_attr.31 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.33 = $100load_attr.31 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $104binary_multiply.33
DEBUG:numba.core.ssa:on stmt: $110load_attr.35 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $114binary_multiply.37 = $110load_attr.35 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_energy = $114binary_multiply.37
DEBUG:numba.core.ssa:on stmt: $118load_global.38 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $120load_attr.39 = getattr(value=$118load_global.38, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120load_attr.39, func=bool122, args=(Var($120load_attr.39, r_packet.py:526),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 142, 124
DEBUG:numba.core.ssa:==== SSA block analysis pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4665d1d0>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(set_estimators: CPUDispatcher(<function set_estimators at 0x7f6e4a0ff950>))
DEBUG:numba.core.ssa:on stmt: $136call_function.6 = call $124load_global.0(r_packet, distance, numba_estimator, comov_nu, comov_energy, func=$124load_global.0, args=[Var(r_packet, r_packet.py:513), Var(distance, r_packet.py:513), Var(numba_estimator, r_packet.py:513), Var(comov_nu, r_packet.py:523), Var(comov_energy, r_packet.py:524)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 168
DEBUG:numba.core.ssa:==== SSA block analysis pass on 142
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4665d1d0>
DEBUG:numba.core.ssa:on stmt: $146binary_multiply.2 = distance * doppler_factor
DEBUG:numba.core.ssa:on stmt: distance = $146binary_multiply.2
DEBUG:numba.core.ssa:on stmt: $150load_global.3 = global(set_estimators_full_relativity: CPUDispatcher(<function set_estimators_full_relativity at 0x7f6e4a0ffc20>))
DEBUG:numba.core.ssa:on stmt: $164call_function.10 = call $150load_global.3(r_packet, distance, numba_estimator, comov_nu, comov_energy, doppler_factor, func=$150load_global.3, args=[Var(r_packet, r_packet.py:513), Var(distance, r_packet.py:513), Var(numba_estimator, r_packet.py:513), Var(comov_nu, r_packet.py:523), Var(comov_energy, r_packet.py:524), Var(doppler_factor, r_packet.py:513)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 168
DEBUG:numba.core.ssa:==== SSA block analysis pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4665d1d0>
DEBUG:numba.core.ssa:on stmt: $const168.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=$const168.0)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100load_attr.31': [<numba.core.ir.Assign object at 0x7f6e4336c950>],
             '$104binary_multiply.33': [<numba.core.ir.Assign object at 0x7f6e4336cd90>],
             '$10load_attr.4': [<numba.core.ir.Assign object at 0x7f6e435a7450>],
             '$110load_attr.35': [<numba.core.ir.Assign object at 0x7f6e4336c6d0>],
             '$114binary_multiply.37': [<numba.core.ir.Assign object at 0x7f6e4336c7d0>],
             '$118load_global.38': [<numba.core.ir.Assign object at 0x7f6e45f92250>],
             '$120load_attr.39': [<numba.core.ir.Assign object at 0x7f6e45f92350>],
             '$122pred': [<numba.core.ir.Assign object at 0x7f6e45f923d0>],
             '$124load_global.0': [<numba.core.ir.Assign object at 0x7f6e4358ee90>],
             '$136call_function.6': [<numba.core.ir.Assign object at 0x7f6e465ac650>],
             '$146binary_multiply.2': [<numba.core.ir.Assign object at 0x7f6e465ac290>],
             '$14call_function.6': [<numba.core.ir.Assign object at 0x7f6e435a9e50>],
             '$150load_global.3': [<numba.core.ir.Assign object at 0x7f6e465ac4d0>],
             '$164call_function.10': [<numba.core.ir.Assign object at 0x7f6e465ac810>],
             '$170return_value.1': [<numba.core.ir.Assign object at 0x7f6e465ac150>],
             '$20load_attr.8': [<numba.core.ir.Assign object at 0x7f6e43597bd0>],
             '$28compare_op.11': [<numba.core.ir.Assign object at 0x7f6e4361e310>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e43598290>],
             '$30pred': [<numba.core.ir.Assign object at 0x7f6e435b1d90>],
             '$32load_global.0': [<numba.core.ir.Assign object at 0x7f6e435b1a10>],
             '$34load_method.1': [<numba.core.ir.Assign object at 0x7f6e43642a10>],
             '$40binary_multiply.4': [<numba.core.ir.Assign object at 0x7f6e43464d90>],
             '$46binary_multiply.7': [<numba.core.ir.Assign object at 0x7f6e4358f250>],
             '$48binary_add.8': [<numba.core.ir.Assign object at 0x7f6e43359410>],
             '$54binary_multiply.11': [<numba.core.ir.Assign object at 0x7f6e433abb10>],
             '$58binary_multiply.13': [<numba.core.ir.Assign object at 0x7f6e433509d0>],
             '$62load_attr.15': [<numba.core.ir.Assign object at 0x7f6e43350c50>],
             '$64binary_multiply.16': [<numba.core.ir.Assign object at 0x7f6e43356650>],
             '$66binary_add.17': [<numba.core.ir.Assign object at 0x7f6e43356950>],
             '$68call_method.18': [<numba.core.ir.Assign object at 0x7f6e45720b50>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7f6e435a4550>],
             '$74load_attr.20': [<numba.core.ir.Assign object at 0x7f6e43602fd0>],
             '$78binary_multiply.22': [<numba.core.ir.Assign object at 0x7f6e435eb110>],
             '$82binary_add.24': [<numba.core.ir.Assign object at 0x7f6e435eb1d0>],
             '$86binary_true_divide.26': [<numba.core.ir.Assign object at 0x7f6e435eb510>],
             '$const168.0': [<numba.core.ir.Assign object at 0x7f6e465ac210>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f6e4361ec50>],
             '$const50.9': [<numba.core.ir.Assign object at 0x7f6e433ab210>],
             'bool122': [<numba.core.ir.Assign object at 0x7f6e45f92550>],
             'bool30': [<numba.core.ir.Assign object at 0x7f6e45edab10>],
             'comov_energy': [<numba.core.ir.Assign object at 0x7f6e45edda10>],
             'comov_nu': [<numba.core.ir.Assign object at 0x7f6e4336c650>],
             'distance': [<numba.core.ir.Assign object at 0x7f6e436052d0>,
                          <numba.core.ir.Assign object at 0x7f6e433d12d0>],
             'doppler_factor': [<numba.core.ir.Assign object at 0x7f6e435a9d90>],
             'new_r': [<numba.core.ir.Assign object at 0x7f6e4358e410>],
             'numba_estimator': [<numba.core.ir.Assign object at 0x7f6e43605c90>],
             'r': [<numba.core.ir.Assign object at 0x7f6e43597490>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e43605590>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e43605410>]})
DEBUG:numba.core.ssa:SSA violators {'distance'}
DEBUG:numba.core.ssa:Fix SSA violator on var distance
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f293d0>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: distance = arg(1, name=distance)
DEBUG:numba.core.ssa:first assign: distance
DEBUG:numba.core.ssa:replaced with: distance = arg(1, name=distance)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(2, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: numba_estimator = arg(3, name=numba_estimator)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $10load_attr.4 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $14call_function.6 = call $2load_global.0($6load_attr.2, $10load_attr.4, time_explosion, func=$2load_global.0, args=[Var($6load_attr.2, r_packet.py:513), Var($10load_attr.4, r_packet.py:513), Var(time_explosion, r_packet.py:513)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $14call_function.6
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: r = $20load_attr.8
DEBUG:numba.core.ssa:on stmt: $const26.10 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $28compare_op.11 = distance > $const26.10
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($28compare_op.11, func=bool30, args=(Var($28compare_op.11, r_packet.py:516),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 32, 168
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f293d0>
DEBUG:numba.core.ssa:on stmt: $32load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $34load_method.1 = getattr(value=$32load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $40binary_multiply.4 = r * r
DEBUG:numba.core.ssa:on stmt: $46binary_multiply.7 = distance * distance
DEBUG:numba.core.ssa:on stmt: $48binary_add.8 = $40binary_multiply.4 + $46binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $const50.9 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $const50.9 * r
DEBUG:numba.core.ssa:on stmt: $58binary_multiply.13 = $54binary_multiply.11 * distance
DEBUG:numba.core.ssa:on stmt: $62load_attr.15 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $64binary_multiply.16 = $58binary_multiply.13 * $62load_attr.15
DEBUG:numba.core.ssa:on stmt: $66binary_add.17 = $48binary_add.8 + $64binary_multiply.16
DEBUG:numba.core.ssa:on stmt: $68call_method.18 = call $34load_method.1($66binary_add.17, func=$34load_method.1, args=[Var($66binary_add.17, r_packet.py:518)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: new_r = $68call_method.18
DEBUG:numba.core.ssa:on stmt: $74load_attr.20 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $78binary_multiply.22 = $74load_attr.20 * r
DEBUG:numba.core.ssa:on stmt: $82binary_add.24 = $78binary_multiply.22 + distance
DEBUG:numba.core.ssa:on stmt: $86binary_true_divide.26 = $82binary_add.24 / new_r
DEBUG:numba.core.ssa:on stmt: (r_packet).mu = $86binary_true_divide.26
DEBUG:numba.core.ssa:on stmt: (r_packet).r = new_r
DEBUG:numba.core.ssa:on stmt: $100load_attr.31 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.33 = $100load_attr.31 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $104binary_multiply.33
DEBUG:numba.core.ssa:on stmt: $110load_attr.35 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $114binary_multiply.37 = $110load_attr.35 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_energy = $114binary_multiply.37
DEBUG:numba.core.ssa:on stmt: $118load_global.38 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $120load_attr.39 = getattr(value=$118load_global.38, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120load_attr.39, func=bool122, args=(Var($120load_attr.39, r_packet.py:526),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 142, 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f293d0>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(set_estimators: CPUDispatcher(<function set_estimators at 0x7f6e4a0ff950>))
DEBUG:numba.core.ssa:on stmt: $136call_function.6 = call $124load_global.0(r_packet, distance, numba_estimator, comov_nu, comov_energy, func=$124load_global.0, args=[Var(r_packet, r_packet.py:513), Var(distance, r_packet.py:513), Var(numba_estimator, r_packet.py:513), Var(comov_nu, r_packet.py:523), Var(comov_energy, r_packet.py:524)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 168
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 142
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f293d0>
DEBUG:numba.core.ssa:on stmt: $146binary_multiply.2 = distance * doppler_factor
DEBUG:numba.core.ssa:on stmt: distance = $146binary_multiply.2
DEBUG:numba.core.ssa:replaced with: distance.1 = $146binary_multiply.2
DEBUG:numba.core.ssa:on stmt: $150load_global.3 = global(set_estimators_full_relativity: CPUDispatcher(<function set_estimators_full_relativity at 0x7f6e4a0ffc20>))
DEBUG:numba.core.ssa:on stmt: $164call_function.10 = call $150load_global.3(r_packet, distance, numba_estimator, comov_nu, comov_energy, doppler_factor, func=$150load_global.3, args=[Var(r_packet, r_packet.py:513), Var(distance, r_packet.py:513), Var(numba_estimator, r_packet.py:513), Var(comov_nu, r_packet.py:523), Var(comov_energy, r_packet.py:524), Var(doppler_factor, r_packet.py:513)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 168
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45f293d0>
DEBUG:numba.core.ssa:on stmt: $const168.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=$const168.0)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e45f29390>],
             142: [<numba.core.ir.Assign object at 0x7f6e4665d250>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46118190>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: distance = arg(1, name=distance)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(2, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: numba_estimator = arg(3, name=numba_estimator)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $10load_attr.4 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $14call_function.6 = call $2load_global.0($6load_attr.2, $10load_attr.4, time_explosion, func=$2load_global.0, args=[Var($6load_attr.2, r_packet.py:513), Var($10load_attr.4, r_packet.py:513), Var(time_explosion, r_packet.py:513)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: doppler_factor = $14call_function.6
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: r = $20load_attr.8
DEBUG:numba.core.ssa:on stmt: $const26.10 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $28compare_op.11 = distance > $const26.10
DEBUG:numba.core.ssa:find_def var='distance' stmt=$28compare_op.11 = distance > $const26.10
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($28compare_op.11, func=bool30, args=(Var($28compare_op.11, r_packet.py:516),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 32, 168
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46118190>
DEBUG:numba.core.ssa:on stmt: $32load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $34load_method.1 = getattr(value=$32load_global.0, attr=sqrt)
DEBUG:numba.core.ssa:on stmt: $40binary_multiply.4 = r * r
DEBUG:numba.core.ssa:on stmt: $46binary_multiply.7 = distance * distance
DEBUG:numba.core.ssa:find_def var='distance' stmt=$46binary_multiply.7 = distance * distance
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:idom 0 from label 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:on stmt: $48binary_add.8 = $40binary_multiply.4 + $46binary_multiply.7
DEBUG:numba.core.ssa:on stmt: $const50.9 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.11 = $const50.9 * r
DEBUG:numba.core.ssa:on stmt: $58binary_multiply.13 = $54binary_multiply.11 * distance
DEBUG:numba.core.ssa:find_def var='distance' stmt=$58binary_multiply.13 = $54binary_multiply.11 * distance
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:idom 0 from label 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:on stmt: $62load_attr.15 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $64binary_multiply.16 = $58binary_multiply.13 * $62load_attr.15
DEBUG:numba.core.ssa:on stmt: $66binary_add.17 = $48binary_add.8 + $64binary_multiply.16
DEBUG:numba.core.ssa:on stmt: $68call_method.18 = call $34load_method.1($66binary_add.17, func=$34load_method.1, args=[Var($66binary_add.17, r_packet.py:518)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: new_r = $68call_method.18
DEBUG:numba.core.ssa:on stmt: $74load_attr.20 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $78binary_multiply.22 = $74load_attr.20 * r
DEBUG:numba.core.ssa:on stmt: $82binary_add.24 = $78binary_multiply.22 + distance
DEBUG:numba.core.ssa:find_def var='distance' stmt=$82binary_add.24 = $78binary_multiply.22 + distance
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:idom 0 from label 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:on stmt: $86binary_true_divide.26 = $82binary_add.24 / new_r
DEBUG:numba.core.ssa:on stmt: (r_packet).mu = $86binary_true_divide.26
DEBUG:numba.core.ssa:on stmt: (r_packet).r = new_r
DEBUG:numba.core.ssa:on stmt: $100load_attr.31 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $104binary_multiply.33 = $100load_attr.31 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $104binary_multiply.33
DEBUG:numba.core.ssa:on stmt: $110load_attr.35 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $114binary_multiply.37 = $110load_attr.35 * doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_energy = $114binary_multiply.37
DEBUG:numba.core.ssa:on stmt: $118load_global.38 = global(numba_config: <module 'tardis.montecarlo.montecarlo_numba.numba_config' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/numba_config.py'>)
DEBUG:numba.core.ssa:on stmt: $120load_attr.39 = getattr(value=$118load_global.38, attr=ENABLE_FULL_RELATIVITY)
DEBUG:numba.core.ssa:on stmt: bool122 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $122pred = call bool122($120load_attr.39, func=bool122, args=(Var($120load_attr.39, r_packet.py:526),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $122pred, 142, 124
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 124
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46118190>
DEBUG:numba.core.ssa:on stmt: $124load_global.0 = global(set_estimators: CPUDispatcher(<function set_estimators at 0x7f6e4a0ff950>))
DEBUG:numba.core.ssa:on stmt: $136call_function.6 = call $124load_global.0(r_packet, distance, numba_estimator, comov_nu, comov_energy, func=$124load_global.0, args=[Var(r_packet, r_packet.py:513), Var(distance, r_packet.py:513), Var(numba_estimator, r_packet.py:513), Var(comov_nu, r_packet.py:523), Var(comov_energy, r_packet.py:524)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='distance' stmt=$136call_function.6 = call $124load_global.0(r_packet, distance, numba_estimator, comov_nu, comov_energy, func=$124load_global.0, args=[Var(r_packet, r_packet.py:513), Var(distance, r_packet.py:513), Var(numba_estimator, r_packet.py:513), Var(comov_nu, r_packet.py:523), Var(comov_energy, r_packet.py:524)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def_from_top label 124
DEBUG:numba.core.ssa:idom 32 from label 124
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:idom 0 from label 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:on stmt: jump 168
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 142
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46118190>
DEBUG:numba.core.ssa:on stmt: $146binary_multiply.2 = distance * doppler_factor
DEBUG:numba.core.ssa:find_def var='distance' stmt=$146binary_multiply.2 = distance * doppler_factor
DEBUG:numba.core.ssa:find_def_from_top label 142
DEBUG:numba.core.ssa:idom 32 from label 142
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:idom 0 from label 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:on stmt: distance.1 = $146binary_multiply.2
DEBUG:numba.core.ssa:on stmt: $150load_global.3 = global(set_estimators_full_relativity: CPUDispatcher(<function set_estimators_full_relativity at 0x7f6e4a0ffc20>))
DEBUG:numba.core.ssa:on stmt: $164call_function.10 = call $150load_global.3(r_packet, distance, numba_estimator, comov_nu, comov_energy, doppler_factor, func=$150load_global.3, args=[Var(r_packet, r_packet.py:513), Var(distance, r_packet.py:513), Var(numba_estimator, r_packet.py:513), Var(comov_nu, r_packet.py:523), Var(comov_energy, r_packet.py:524), Var(doppler_factor, r_packet.py:513)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='distance' stmt=$164call_function.10 = call $150load_global.3(r_packet, distance, numba_estimator, comov_nu, comov_energy, doppler_factor, func=$150load_global.3, args=[Var(r_packet, r_packet.py:513), Var(distance, r_packet.py:513), Var(numba_estimator, r_packet.py:513), Var(comov_nu, r_packet.py:523), Var(comov_energy, r_packet.py:524), Var(doppler_factor, r_packet.py:513)], kws=(), vararg=None)
DEBUG:numba.core.ssa:replaced with: $164call_function.10 = call $150load_global.3(r_packet, distance.1, numba_estimator, comov_nu, comov_energy, doppler_factor, func=$150load_global.3, args=[Var(r_packet, r_packet.py:513), Var(distance.1, r_packet.py:532), Var(numba_estimator, r_packet.py:513), Var(comov_nu, r_packet.py:523), Var(comov_energy, r_packet.py:524), Var(doppler_factor, r_packet.py:513)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 168
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 168
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46118190>
DEBUG:numba.core.ssa:on stmt: $const168.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $170return_value.1 = cast(value=$const168.0)
DEBUG:numba.core.ssa:on stmt: return $170return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=548)
           2	LOAD_FAST(arg=2, lineno=548)
           4	LOAD_ATTR(arg=0, lineno=548)
           6	LOAD_FAST(arg=0, lineno=548)
           8	LOAD_ATTR(arg=1, lineno=548)
          10	DUP_TOP_TWO(arg=None, lineno=548)
          12	BINARY_SUBSCR(arg=None, lineno=548)
          14	LOAD_FAST(arg=4, lineno=549)
          16	LOAD_FAST(arg=1, lineno=549)
          18	BINARY_MULTIPLY(arg=None, lineno=549)
          20	INPLACE_ADD(arg=None, lineno=549)
          22	ROT_THREE(arg=None, lineno=549)
          24	STORE_SUBSCR(arg=None, lineno=549)
          26	LOAD_FAST(arg=2, lineno=551)
          28	LOAD_ATTR(arg=2, lineno=551)
          30	LOAD_FAST(arg=0, lineno=551)
          32	LOAD_ATTR(arg=1, lineno=551)
          34	DUP_TOP_TWO(arg=None, lineno=551)
          36	BINARY_SUBSCR(arg=None, lineno=551)
          38	LOAD_FAST(arg=4, lineno=552)
          40	LOAD_FAST(arg=1, lineno=552)
          42	BINARY_MULTIPLY(arg=None, lineno=552)
          44	LOAD_FAST(arg=3, lineno=552)
          46	BINARY_MULTIPLY(arg=None, lineno=552)
          48	INPLACE_ADD(arg=None, lineno=552)
          50	ROT_THREE(arg=None, lineno=552)
          52	STORE_SUBSCR(arg=None, lineno=552)
          54	LOAD_CONST(arg=1, lineno=552)
          56	RETURN_VALUE(arg=None, lineno=552)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=548)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=2, lineno=548)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=548)
DEBUG:numba.core.byteflow:stack ['$numba_estimator2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=548)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=548)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$r_packet6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=DUP_TOP_TWO(arg=None, lineno=548)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=548)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$10dup_top_two.4', '$10dup_top_two.5']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=549)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=549)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12binary_subscr.6', '$comov_energy14.7']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=BINARY_MULTIPLY(arg=None, lineno=549)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12binary_subscr.6', '$comov_energy14.7', '$distance16.8']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=INPLACE_ADD(arg=None, lineno=549)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12binary_subscr.6', '$18binary_multiply.9']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=ROT_THREE(arg=None, lineno=549)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$20inplace_add.10']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_SUBSCR(arg=None, lineno=549)
DEBUG:numba.core.byteflow:stack ['$20inplace_add.10', '$4load_attr.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=551)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_ATTR(arg=2, lineno=551)
DEBUG:numba.core.byteflow:stack ['$numba_estimator26.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=551)
DEBUG:numba.core.byteflow:stack ['$28load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_ATTR(arg=1, lineno=551)
DEBUG:numba.core.byteflow:stack ['$28load_attr.12', '$r_packet30.13']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=DUP_TOP_TWO(arg=None, lineno=551)
DEBUG:numba.core.byteflow:stack ['$28load_attr.12', '$32load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_SUBSCR(arg=None, lineno=551)
DEBUG:numba.core.byteflow:stack ['$28load_attr.12', '$32load_attr.14', '$34dup_top_two.15', '$34dup_top_two.16']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=4, lineno=552)
DEBUG:numba.core.byteflow:stack ['$28load_attr.12', '$32load_attr.14', '$36binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=552)
DEBUG:numba.core.byteflow:stack ['$28load_attr.12', '$32load_attr.14', '$36binary_subscr.17', '$comov_energy38.18']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_MULTIPLY(arg=None, lineno=552)
DEBUG:numba.core.byteflow:stack ['$28load_attr.12', '$32load_attr.14', '$36binary_subscr.17', '$comov_energy38.18', '$distance40.19']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=3, lineno=552)
DEBUG:numba.core.byteflow:stack ['$28load_attr.12', '$32load_attr.14', '$36binary_subscr.17', '$42binary_multiply.20']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_MULTIPLY(arg=None, lineno=552)
DEBUG:numba.core.byteflow:stack ['$28load_attr.12', '$32load_attr.14', '$36binary_subscr.17', '$42binary_multiply.20', '$comov_nu44.21']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=INPLACE_ADD(arg=None, lineno=552)
DEBUG:numba.core.byteflow:stack ['$28load_attr.12', '$32load_attr.14', '$36binary_subscr.17', '$46binary_multiply.22']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=ROT_THREE(arg=None, lineno=552)
DEBUG:numba.core.byteflow:stack ['$28load_attr.12', '$32load_attr.14', '$48inplace_add.23']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=STORE_SUBSCR(arg=None, lineno=552)
DEBUG:numba.core.byteflow:stack ['$48inplace_add.23', '$28load_attr.12', '$32load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=552)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=56, inst=RETURN_VALUE(arg=None, lineno=552)
DEBUG:numba.core.byteflow:stack ['$const54.24']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$numba_estimator2.0'}), (4, {'item': '$numba_estimator2.0', 'res': '$4load_attr.1'}), (6, {'res': '$r_packet6.2'}), (8, {'item': '$r_packet6.2', 'res': '$8load_attr.3'}), (10, {'orig': ['$4load_attr.1', '$8load_attr.3'], 'duped': ['$10dup_top_two.4', '$10dup_top_two.5']}), (12, {'index': '$10dup_top_two.5', 'target': '$10dup_top_two.4', 'res': '$12binary_subscr.6'}), (14, {'res': '$comov_energy14.7'}), (16, {'res': '$distance16.8'}), (18, {'lhs': '$comov_energy14.7', 'rhs': '$distance16.8', 'res': '$18binary_multiply.9'}), (20, {'lhs': '$12binary_subscr.6', 'rhs': '$18binary_multiply.9', 'res': '$20inplace_add.10'}), (24, {'target': '$4load_attr.1', 'index': '$8load_attr.3', 'value': '$20inplace_add.10'}), (26, {'res': '$numba_estimator26.11'}), (28, {'item': '$numba_estimator26.11', 'res': '$28load_attr.12'}), (30, {'res': '$r_packet30.13'}), (32, {'item': '$r_packet30.13', 'res': '$32load_attr.14'}), (34, {'orig': ['$28load_attr.12', '$32load_attr.14'], 'duped': ['$34dup_top_two.15', '$34dup_top_two.16']}), (36, {'index': '$34dup_top_two.16', 'target': '$34dup_top_two.15', 'res': '$36binary_subscr.17'}), (38, {'res': '$comov_energy38.18'}), (40, {'res': '$distance40.19'}), (42, {'lhs': '$comov_energy38.18', 'rhs': '$distance40.19', 'res': '$42binary_multiply.20'}), (44, {'res': '$comov_nu44.21'}), (46, {'lhs': '$42binary_multiply.20', 'rhs': '$comov_nu44.21', 'res': '$46binary_multiply.22'}), (48, {'lhs': '$36binary_subscr.17', 'rhs': '$46binary_multiply.22', 'res': '$48inplace_add.23'}), (52, {'target': '$28load_attr.12', 'index': '$32load_attr.14', 'value': '$48inplace_add.23'}), (54, {'res': '$const54.24'}), (56, {'retval': '$const54.24', 'castval': '$56return_value.25'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    distance = arg(1, name=distance)         ['distance']
    numba_estimator = arg(2, name=numba_estimator) ['numba_estimator']
    comov_nu = arg(3, name=comov_nu)         ['comov_nu']
    comov_energy = arg(4, name=comov_energy) ['comov_energy']
    $4load_attr.1 = getattr(value=numba_estimator, attr=j_estimator) ['$4load_attr.1', 'numba_estimator']
    $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id) ['$8load_attr.3', 'r_packet']
    $12binary_subscr.6 = getitem(value=$4load_attr.1, index=$8load_attr.3) ['$12binary_subscr.6', '$4load_attr.1', '$8load_attr.3']
    $18binary_multiply.9 = comov_energy * distance ['$18binary_multiply.9', 'comov_energy', 'distance']
    $20inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$12binary_subscr.6, rhs=$18binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined) ['$12binary_subscr.6', '$18binary_multiply.9', '$20inplace_add.10']
    $4load_attr.1[$8load_attr.3] = $20inplace_add.10 ['$20inplace_add.10', '$4load_attr.1', '$8load_attr.3']
    $28load_attr.12 = getattr(value=numba_estimator, attr=nu_bar_estimator) ['$28load_attr.12', 'numba_estimator']
    $32load_attr.14 = getattr(value=r_packet, attr=current_shell_id) ['$32load_attr.14', 'r_packet']
    $36binary_subscr.17 = getitem(value=$28load_attr.12, index=$32load_attr.14) ['$28load_attr.12', '$32load_attr.14', '$36binary_subscr.17']
    $42binary_multiply.20 = comov_energy * distance ['$42binary_multiply.20', 'comov_energy', 'distance']
    $46binary_multiply.22 = $42binary_multiply.20 * comov_nu ['$42binary_multiply.20', '$46binary_multiply.22', 'comov_nu']
    $48inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$36binary_subscr.17, rhs=$46binary_multiply.22, static_lhs=Undefined, static_rhs=Undefined) ['$36binary_subscr.17', '$46binary_multiply.22', '$48inplace_add.23']
    $28load_attr.12[$32load_attr.14] = $48inplace_add.23 ['$28load_attr.12', '$32load_attr.14', '$48inplace_add.23']
    $const54.24 = const(NoneType, None)      ['$const54.24']
    $56return_value.25 = cast(value=$const54.24) ['$56return_value.25', '$const54.24']
    return $56return_value.25                ['$56return_value.25']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45f92f10>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: distance = arg(1, name=distance)
DEBUG:numba.core.ssa:on stmt: numba_estimator = arg(2, name=numba_estimator)
DEBUG:numba.core.ssa:on stmt: comov_nu = arg(3, name=comov_nu)
DEBUG:numba.core.ssa:on stmt: comov_energy = arg(4, name=comov_energy)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_estimator, attr=j_estimator)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.6 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: $18binary_multiply.9 = comov_energy * distance
DEBUG:numba.core.ssa:on stmt: $20inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$12binary_subscr.6, rhs=$18binary_multiply.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1[$8load_attr.3] = $20inplace_add.10
DEBUG:numba.core.ssa:on stmt: $28load_attr.12 = getattr(value=numba_estimator, attr=nu_bar_estimator)
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $36binary_subscr.17 = getitem(value=$28load_attr.12, index=$32load_attr.14)
DEBUG:numba.core.ssa:on stmt: $42binary_multiply.20 = comov_energy * distance
DEBUG:numba.core.ssa:on stmt: $46binary_multiply.22 = $42binary_multiply.20 * comov_nu
DEBUG:numba.core.ssa:on stmt: $48inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$36binary_subscr.17, rhs=$46binary_multiply.22, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: $28load_attr.12[$32load_attr.14] = $48inplace_add.23
DEBUG:numba.core.ssa:on stmt: $const54.24 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $56return_value.25 = cast(value=$const54.24)
DEBUG:numba.core.ssa:on stmt: return $56return_value.25
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12binary_subscr.6': [<numba.core.ir.Assign object at 0x7f6e45da5950>],
             '$18binary_multiply.9': [<numba.core.ir.Assign object at 0x7f6e45da56d0>],
             '$20inplace_add.10': [<numba.core.ir.Assign object at 0x7f6e43356fd0>],
             '$28load_attr.12': [<numba.core.ir.Assign object at 0x7f6e4583cfd0>],
             '$32load_attr.14': [<numba.core.ir.Assign object at 0x7f6e4583cf90>],
             '$36binary_subscr.17': [<numba.core.ir.Assign object at 0x7f6e4583cc90>],
             '$42binary_multiply.20': [<numba.core.ir.Assign object at 0x7f6e4583cd90>],
             '$46binary_multiply.22': [<numba.core.ir.Assign object at 0x7f6e4583c690>],
             '$48inplace_add.23': [<numba.core.ir.Assign object at 0x7f6e4583c850>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45da5e90>],
             '$56return_value.25': [<numba.core.ir.Assign object at 0x7f6e4583c090>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f6e45da5250>],
             '$const54.24': [<numba.core.ir.Assign object at 0x7f6e4583c8d0>],
             'comov_energy': [<numba.core.ir.Assign object at 0x7f6e460317d0>],
             'comov_nu': [<numba.core.ir.Assign object at 0x7f6e46031310>],
             'distance': [<numba.core.ir.Assign object at 0x7f6e46031150>],
             'numba_estimator': [<numba.core.ir.Assign object at 0x7f6e46031910>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e46031950>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=560)
           2	LOAD_FAST(arg=2, lineno=560)
           4	LOAD_ATTR(arg=0, lineno=560)
           6	LOAD_FAST(arg=0, lineno=560)
           8	LOAD_ATTR(arg=1, lineno=560)
          10	DUP_TOP_TWO(arg=None, lineno=560)
          12	BINARY_SUBSCR(arg=None, lineno=560)
          14	LOAD_FAST(arg=4, lineno=561)
          16	LOAD_FAST(arg=1, lineno=561)
          18	BINARY_MULTIPLY(arg=None, lineno=561)
          20	LOAD_FAST(arg=5, lineno=561)
          22	BINARY_MULTIPLY(arg=None, lineno=561)
          24	INPLACE_ADD(arg=None, lineno=561)
          26	ROT_THREE(arg=None, lineno=561)
          28	STORE_SUBSCR(arg=None, lineno=561)
          30	LOAD_FAST(arg=2, lineno=563)
          32	LOAD_ATTR(arg=2, lineno=563)
          34	LOAD_FAST(arg=0, lineno=563)
          36	LOAD_ATTR(arg=1, lineno=563)
          38	DUP_TOP_TWO(arg=None, lineno=563)
          40	BINARY_SUBSCR(arg=None, lineno=563)
          42	LOAD_FAST(arg=4, lineno=564)
          44	LOAD_FAST(arg=1, lineno=564)
          46	BINARY_MULTIPLY(arg=None, lineno=564)
          48	LOAD_FAST(arg=3, lineno=564)
          50	BINARY_MULTIPLY(arg=None, lineno=564)
          52	LOAD_FAST(arg=5, lineno=564)
          54	BINARY_MULTIPLY(arg=None, lineno=564)
          56	INPLACE_ADD(arg=None, lineno=564)
          58	ROT_THREE(arg=None, lineno=564)
          60	STORE_SUBSCR(arg=None, lineno=564)
          62	LOAD_CONST(arg=0, lineno=564)
          64	RETURN_VALUE(arg=None, lineno=564)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=560)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=2, lineno=560)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=560)
DEBUG:numba.core.byteflow:stack ['$numba_estimator2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=560)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=560)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$r_packet6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=DUP_TOP_TWO(arg=None, lineno=560)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=560)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$10dup_top_two.4', '$10dup_top_two.5']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=561)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=561)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12binary_subscr.6', '$comov_energy14.7']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=BINARY_MULTIPLY(arg=None, lineno=561)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12binary_subscr.6', '$comov_energy14.7', '$distance16.8']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=5, lineno=561)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12binary_subscr.6', '$18binary_multiply.9']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_MULTIPLY(arg=None, lineno=561)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12binary_subscr.6', '$18binary_multiply.9', '$doppler_factor20.10']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=INPLACE_ADD(arg=None, lineno=561)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$12binary_subscr.6', '$22binary_multiply.11']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=ROT_THREE(arg=None, lineno=561)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3', '$24inplace_add.12']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_SUBSCR(arg=None, lineno=561)
DEBUG:numba.core.byteflow:stack ['$24inplace_add.12', '$4load_attr.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=2, lineno=563)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_ATTR(arg=2, lineno=563)
DEBUG:numba.core.byteflow:stack ['$numba_estimator30.13']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=563)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_ATTR(arg=1, lineno=563)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$r_packet34.15']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=DUP_TOP_TWO(arg=None, lineno=563)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$36load_attr.16']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=563)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$36load_attr.16', '$38dup_top_two.17', '$38dup_top_two.18']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=4, lineno=564)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$36load_attr.16', '$40binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=1, lineno=564)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$36load_attr.16', '$40binary_subscr.19', '$comov_energy42.20']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=BINARY_MULTIPLY(arg=None, lineno=564)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$36load_attr.16', '$40binary_subscr.19', '$comov_energy42.20', '$distance44.21']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=3, lineno=564)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$36load_attr.16', '$40binary_subscr.19', '$46binary_multiply.22']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=BINARY_MULTIPLY(arg=None, lineno=564)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$36load_attr.16', '$40binary_subscr.19', '$46binary_multiply.22', '$comov_nu48.23']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=5, lineno=564)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$36load_attr.16', '$40binary_subscr.19', '$50binary_multiply.24']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=BINARY_MULTIPLY(arg=None, lineno=564)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$36load_attr.16', '$40binary_subscr.19', '$50binary_multiply.24', '$doppler_factor52.25']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=INPLACE_ADD(arg=None, lineno=564)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$36load_attr.16', '$40binary_subscr.19', '$54binary_multiply.26']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=ROT_THREE(arg=None, lineno=564)
DEBUG:numba.core.byteflow:stack ['$32load_attr.14', '$36load_attr.16', '$56inplace_add.27']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=STORE_SUBSCR(arg=None, lineno=564)
DEBUG:numba.core.byteflow:stack ['$56inplace_add.27', '$32load_attr.14', '$36load_attr.16']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_CONST(arg=0, lineno=564)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=RETURN_VALUE(arg=None, lineno=564)
DEBUG:numba.core.byteflow:stack ['$const62.28']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$numba_estimator2.0'}), (4, {'item': '$numba_estimator2.0', 'res': '$4load_attr.1'}), (6, {'res': '$r_packet6.2'}), (8, {'item': '$r_packet6.2', 'res': '$8load_attr.3'}), (10, {'orig': ['$4load_attr.1', '$8load_attr.3'], 'duped': ['$10dup_top_two.4', '$10dup_top_two.5']}), (12, {'index': '$10dup_top_two.5', 'target': '$10dup_top_two.4', 'res': '$12binary_subscr.6'}), (14, {'res': '$comov_energy14.7'}), (16, {'res': '$distance16.8'}), (18, {'lhs': '$comov_energy14.7', 'rhs': '$distance16.8', 'res': '$18binary_multiply.9'}), (20, {'res': '$doppler_factor20.10'}), (22, {'lhs': '$18binary_multiply.9', 'rhs': '$doppler_factor20.10', 'res': '$22binary_multiply.11'}), (24, {'lhs': '$12binary_subscr.6', 'rhs': '$22binary_multiply.11', 'res': '$24inplace_add.12'}), (28, {'target': '$4load_attr.1', 'index': '$8load_attr.3', 'value': '$24inplace_add.12'}), (30, {'res': '$numba_estimator30.13'}), (32, {'item': '$numba_estimator30.13', 'res': '$32load_attr.14'}), (34, {'res': '$r_packet34.15'}), (36, {'item': '$r_packet34.15', 'res': '$36load_attr.16'}), (38, {'orig': ['$32load_attr.14', '$36load_attr.16'], 'duped': ['$38dup_top_two.17', '$38dup_top_two.18']}), (40, {'index': '$38dup_top_two.18', 'target': '$38dup_top_two.17', 'res': '$40binary_subscr.19'}), (42, {'res': '$comov_energy42.20'}), (44, {'res': '$distance44.21'}), (46, {'lhs': '$comov_energy42.20', 'rhs': '$distance44.21', 'res': '$46binary_multiply.22'}), (48, {'res': '$comov_nu48.23'}), (50, {'lhs': '$46binary_multiply.22', 'rhs': '$comov_nu48.23', 'res': '$50binary_multiply.24'}), (52, {'res': '$doppler_factor52.25'}), (54, {'lhs': '$50binary_multiply.24', 'rhs': '$doppler_factor52.25', 'res': '$54binary_multiply.26'}), (56, {'lhs': '$40binary_subscr.19', 'rhs': '$54binary_multiply.26', 'res': '$56inplace_add.27'}), (60, {'target': '$32load_attr.14', 'index': '$36load_attr.16', 'value': '$56inplace_add.27'}), (62, {'res': '$const62.28'}), (64, {'retval': '$const62.28', 'castval': '$64return_value.29'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    distance = arg(1, name=distance)         ['distance']
    numba_estimator = arg(2, name=numba_estimator) ['numba_estimator']
    comov_nu = arg(3, name=comov_nu)         ['comov_nu']
    comov_energy = arg(4, name=comov_energy) ['comov_energy']
    doppler_factor = arg(5, name=doppler_factor) ['doppler_factor']
    $4load_attr.1 = getattr(value=numba_estimator, attr=j_estimator) ['$4load_attr.1', 'numba_estimator']
    $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id) ['$8load_attr.3', 'r_packet']
    $12binary_subscr.6 = getitem(value=$4load_attr.1, index=$8load_attr.3) ['$12binary_subscr.6', '$4load_attr.1', '$8load_attr.3']
    $18binary_multiply.9 = comov_energy * distance ['$18binary_multiply.9', 'comov_energy', 'distance']
    $22binary_multiply.11 = $18binary_multiply.9 * doppler_factor ['$18binary_multiply.9', '$22binary_multiply.11', 'doppler_factor']
    $24inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$12binary_subscr.6, rhs=$22binary_multiply.11, static_lhs=Undefined, static_rhs=Undefined) ['$12binary_subscr.6', '$22binary_multiply.11', '$24inplace_add.12']
    $4load_attr.1[$8load_attr.3] = $24inplace_add.12 ['$24inplace_add.12', '$4load_attr.1', '$8load_attr.3']
    $32load_attr.14 = getattr(value=numba_estimator, attr=nu_bar_estimator) ['$32load_attr.14', 'numba_estimator']
    $36load_attr.16 = getattr(value=r_packet, attr=current_shell_id) ['$36load_attr.16', 'r_packet']
    $40binary_subscr.19 = getitem(value=$32load_attr.14, index=$36load_attr.16) ['$32load_attr.14', '$36load_attr.16', '$40binary_subscr.19']
    $46binary_multiply.22 = comov_energy * distance ['$46binary_multiply.22', 'comov_energy', 'distance']
    $50binary_multiply.24 = $46binary_multiply.22 * comov_nu ['$46binary_multiply.22', '$50binary_multiply.24', 'comov_nu']
    $54binary_multiply.26 = $50binary_multiply.24 * doppler_factor ['$50binary_multiply.24', '$54binary_multiply.26', 'doppler_factor']
    $56inplace_add.27 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$40binary_subscr.19, rhs=$54binary_multiply.26, static_lhs=Undefined, static_rhs=Undefined) ['$40binary_subscr.19', '$54binary_multiply.26', '$56inplace_add.27']
    $32load_attr.14[$36load_attr.16] = $56inplace_add.27 ['$32load_attr.14', '$36load_attr.16', '$56inplace_add.27']
    $const62.28 = const(NoneType, None)      ['$const62.28']
    $64return_value.29 = cast(value=$const62.28) ['$64return_value.29', '$const62.28']
    return $64return_value.29                ['$64return_value.29']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d32350>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: distance = arg(1, name=distance)
DEBUG:numba.core.ssa:on stmt: numba_estimator = arg(2, name=numba_estimator)
DEBUG:numba.core.ssa:on stmt: comov_nu = arg(3, name=comov_nu)
DEBUG:numba.core.ssa:on stmt: comov_energy = arg(4, name=comov_energy)
DEBUG:numba.core.ssa:on stmt: doppler_factor = arg(5, name=doppler_factor)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_estimator, attr=j_estimator)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $12binary_subscr.6 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: $18binary_multiply.9 = comov_energy * distance
DEBUG:numba.core.ssa:on stmt: $22binary_multiply.11 = $18binary_multiply.9 * doppler_factor
DEBUG:numba.core.ssa:on stmt: $24inplace_add.12 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$12binary_subscr.6, rhs=$22binary_multiply.11, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1[$8load_attr.3] = $24inplace_add.12
DEBUG:numba.core.ssa:on stmt: $32load_attr.14 = getattr(value=numba_estimator, attr=nu_bar_estimator)
DEBUG:numba.core.ssa:on stmt: $36load_attr.16 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.19 = getitem(value=$32load_attr.14, index=$36load_attr.16)
DEBUG:numba.core.ssa:on stmt: $46binary_multiply.22 = comov_energy * distance
DEBUG:numba.core.ssa:on stmt: $50binary_multiply.24 = $46binary_multiply.22 * comov_nu
DEBUG:numba.core.ssa:on stmt: $54binary_multiply.26 = $50binary_multiply.24 * doppler_factor
DEBUG:numba.core.ssa:on stmt: $56inplace_add.27 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$40binary_subscr.19, rhs=$54binary_multiply.26, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: $32load_attr.14[$36load_attr.16] = $56inplace_add.27
DEBUG:numba.core.ssa:on stmt: $const62.28 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $64return_value.29 = cast(value=$const62.28)
DEBUG:numba.core.ssa:on stmt: return $64return_value.29
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12binary_subscr.6': [<numba.core.ir.Assign object at 0x7f6e46706b10>],
             '$18binary_multiply.9': [<numba.core.ir.Assign object at 0x7f6e45e52ed0>],
             '$22binary_multiply.11': [<numba.core.ir.Assign object at 0x7f6e45e52650>],
             '$24inplace_add.12': [<numba.core.ir.Assign object at 0x7f6e45e523d0>],
             '$32load_attr.14': [<numba.core.ir.Assign object at 0x7f6e45dcb4d0>],
             '$36load_attr.16': [<numba.core.ir.Assign object at 0x7f6e45dcbc10>],
             '$40binary_subscr.19': [<numba.core.ir.Assign object at 0x7f6e46423910>],
             '$46binary_multiply.22': [<numba.core.ir.Assign object at 0x7f6e46423e10>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e46706850>],
             '$50binary_multiply.24': [<numba.core.ir.Assign object at 0x7f6e46423d50>],
             '$54binary_multiply.26': [<numba.core.ir.Assign object at 0x7f6e46423e50>],
             '$56inplace_add.27': [<numba.core.ir.Assign object at 0x7f6e46423050>],
             '$64return_value.29': [<numba.core.ir.Assign object at 0x7f6e46423690>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f6e46706e90>],
             '$const62.28': [<numba.core.ir.Assign object at 0x7f6e46423510>],
             'comov_energy': [<numba.core.ir.Assign object at 0x7f6e46706990>],
             'comov_nu': [<numba.core.ir.Assign object at 0x7f6e467065d0>],
             'distance': [<numba.core.ir.Assign object at 0x7f6e46706ad0>],
             'doppler_factor': [<numba.core.ir.Assign object at 0x7f6e46706750>],
             'numba_estimator': [<numba.core.ir.Assign object at 0x7f6e46706cd0>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e466a1e90>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=586)
           2	LOAD_FAST(arg=0, lineno=586)
           4	LOAD_ATTR(arg=0, lineno=586)
           6	LOAD_FAST(arg=1, lineno=586)
           8	BINARY_ADD(arg=None, lineno=586)
          10	STORE_FAST(arg=3, lineno=586)
          12	LOAD_FAST(arg=3, lineno=588)
          14	LOAD_FAST(arg=2, lineno=588)
          16	COMPARE_OP(arg=5, lineno=588)
          18	POP_JUMP_IF_FALSE(arg=30, lineno=588)
          20	LOAD_GLOBAL(arg=1, lineno=589)
          22	LOAD_ATTR(arg=2, lineno=589)
          24	LOAD_FAST(arg=0, lineno=589)
          26	STORE_ATTR(arg=3, lineno=589)
          28	JUMP_FORWARD(arg=24, lineno=589)
>         30	LOAD_FAST(arg=3, lineno=590)
          32	LOAD_CONST(arg=1, lineno=590)
          34	COMPARE_OP(arg=0, lineno=590)
          36	POP_JUMP_IF_FALSE(arg=48, lineno=590)
          38	LOAD_GLOBAL(arg=1, lineno=591)
          40	LOAD_ATTR(arg=4, lineno=591)
          42	LOAD_FAST(arg=0, lineno=591)
          44	STORE_ATTR(arg=3, lineno=591)
          46	JUMP_FORWARD(arg=6, lineno=591)
>         48	LOAD_FAST(arg=3, lineno=593)
          50	LOAD_FAST(arg=0, lineno=593)
          52	STORE_ATTR(arg=0, lineno=593)
>         54	LOAD_CONST(arg=2, lineno=593)
          56	RETURN_VALUE(arg=None, lineno=593)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=586)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=586)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=586)
DEBUG:numba.core.byteflow:stack ['$packet2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=586)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_ADD(arg=None, lineno=586)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$delta_shell6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=STORE_FAST(arg=3, lineno=586)
DEBUG:numba.core.byteflow:stack ['$8binary_add.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=3, lineno=588)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=588)
DEBUG:numba.core.byteflow:stack ['$next_shell_id12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=COMPARE_OP(arg=5, lineno=588)
DEBUG:numba.core.byteflow:stack ['$next_shell_id12.4', '$no_of_shells14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=POP_JUMP_IF_FALSE(arg=30, lineno=588)
DEBUG:numba.core.byteflow:stack ['$16compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=20, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=589)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=2, lineno=589)
DEBUG:numba.core.byteflow:stack ['$20load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=589)
DEBUG:numba.core.byteflow:stack ['$22load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_ATTR(arg=3, lineno=589)
DEBUG:numba.core.byteflow:stack ['$22load_attr.1', '$packet24.2']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=JUMP_FORWARD(arg=24, lineno=589)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=3, lineno=590)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=590)
DEBUG:numba.core.byteflow:stack ['$next_shell_id30.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=COMPARE_OP(arg=0, lineno=590)
DEBUG:numba.core.byteflow:stack ['$next_shell_id30.0', '$const32.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=POP_JUMP_IF_FALSE(arg=48, lineno=590)
DEBUG:numba.core.byteflow:stack ['$34compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=38, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=38 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=593)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=56, inst=RETURN_VALUE(arg=None, lineno=593)
DEBUG:numba.core.byteflow:stack ['$const54.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=38 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=1, lineno=591)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_ATTR(arg=4, lineno=591)
DEBUG:numba.core.byteflow:stack ['$38load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=591)
DEBUG:numba.core.byteflow:stack ['$40load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_ATTR(arg=3, lineno=591)
DEBUG:numba.core.byteflow:stack ['$40load_attr.1', '$packet42.2']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=JUMP_FORWARD(arg=6, lineno=591)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=3, lineno=593)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=0, lineno=593)
DEBUG:numba.core.byteflow:stack ['$next_shell_id48.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=STORE_ATTR(arg=0, lineno=593)
DEBUG:numba.core.byteflow:stack ['$next_shell_id48.0', '$packet50.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=54 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=54 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$packet2.0'}), (4, {'item': '$packet2.0', 'res': '$4load_attr.1'}), (6, {'res': '$delta_shell6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$delta_shell6.2', 'res': '$8binary_add.3'}), (10, {'value': '$8binary_add.3'}), (12, {'res': '$next_shell_id12.4'}), (14, {'res': '$no_of_shells14.5'}), (16, {'lhs': '$next_shell_id12.4', 'rhs': '$no_of_shells14.5', 'res': '$16compare_op.6'}), (18, {'pred': '$16compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: (), 30: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_attr.1'}), (24, {'res': '$packet24.2'}), (26, {'target': '$packet24.2', 'value': '$22load_attr.1'}), (28, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$next_shell_id30.0'}), (32, {'res': '$const32.1'}), (34, {'lhs': '$next_shell_id30.0', 'rhs': '$const32.1', 'res': '$34compare_op.2'}), (36, {'pred': '$34compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: (), 48: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=38 nstack_initial=0):
AdaptBlockInfo(insts=((38, {'res': '$38load_global.0'}), (40, {'item': '$38load_global.0', 'res': '$40load_attr.1'}), (42, {'res': '$packet42.2'}), (44, {'target': '$packet42.2', 'value': '$40load_attr.1'}), (46, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$next_shell_id48.0'}), (50, {'res': '$packet50.1'}), (52, {'target': '$packet50.1', 'value': '$next_shell_id48.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0'}), (56, {'retval': '$const54.0', 'castval': '$56return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    packet = arg(0, name=packet)             ['packet']
    delta_shell = arg(1, name=delta_shell)   ['delta_shell']
    no_of_shells = arg(2, name=no_of_shells) ['no_of_shells']
    $4load_attr.1 = getattr(value=packet, attr=current_shell_id) ['$4load_attr.1', 'packet']
    $8binary_add.3 = $4load_attr.1 + delta_shell ['$4load_attr.1', '$8binary_add.3', 'delta_shell']
    next_shell_id = $8binary_add.3           ['$8binary_add.3', 'next_shell_id']
    $16compare_op.6 = next_shell_id >= no_of_shells ['$16compare_op.6', 'next_shell_id', 'no_of_shells']
    bool18 = global(bool: <class 'bool'>)    ['bool18']
    $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, r_packet.py:588),), kws=(), vararg=None) ['$16compare_op.6', '$18pred', 'bool18']
    branch $18pred, 20, 30                   ['$18pred']
label 20:
    $20load_global.0 = global(PacketStatus: <enum 'PacketStatus'>) ['$20load_global.0']
    $22load_attr.1 = getattr(value=$20load_global.0, attr=EMITTED) ['$20load_global.0', '$22load_attr.1']
    (packet).status = $22load_attr.1         ['$22load_attr.1', 'packet']
    jump 54                                  []
label 30:
    $const32.1 = const(int, 0)               ['$const32.1']
    $34compare_op.2 = next_shell_id < $const32.1 ['$34compare_op.2', '$const32.1', 'next_shell_id']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($34compare_op.2, func=bool36, args=(Var($34compare_op.2, r_packet.py:590),), kws=(), vararg=None) ['$34compare_op.2', '$36pred', 'bool36']
    branch $36pred, 38, 48                   ['$36pred']
label 38:
    $38load_global.0 = global(PacketStatus: <enum 'PacketStatus'>) ['$38load_global.0']
    $40load_attr.1 = getattr(value=$38load_global.0, attr=REABSORBED) ['$38load_global.0', '$40load_attr.1']
    (packet).status = $40load_attr.1         ['$40load_attr.1', 'packet']
    jump 54                                  []
label 48:
    (packet).current_shell_id = next_shell_id ['next_shell_id', 'packet']
    jump 54                                  []
label 54:
    $const54.0 = const(NoneType, None)       ['$const54.0']
    $56return_value.1 = cast(value=$const54.0) ['$56return_value.1', '$const54.0']
    return $56return_value.1                 ['$56return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e463a42d0>
DEBUG:numba.core.ssa:on stmt: packet = arg(0, name=packet)
DEBUG:numba.core.ssa:on stmt: delta_shell = arg(1, name=delta_shell)
DEBUG:numba.core.ssa:on stmt: no_of_shells = arg(2, name=no_of_shells)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $8binary_add.3 = $4load_attr.1 + delta_shell
DEBUG:numba.core.ssa:on stmt: next_shell_id = $8binary_add.3
DEBUG:numba.core.ssa:on stmt: $16compare_op.6 = next_shell_id >= no_of_shells
DEBUG:numba.core.ssa:on stmt: bool18 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $18pred = call bool18($16compare_op.6, func=bool18, args=(Var($16compare_op.6, r_packet.py:588),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $18pred, 20, 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e463a42d0>
DEBUG:numba.core.ssa:on stmt: $20load_global.0 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.1 = getattr(value=$20load_global.0, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: (packet).status = $22load_attr.1
DEBUG:numba.core.ssa:on stmt: jump 54
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e463a42d0>
DEBUG:numba.core.ssa:on stmt: $const32.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $34compare_op.2 = next_shell_id < $const32.1
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($34compare_op.2, func=bool36, args=(Var($34compare_op.2, r_packet.py:590),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $36pred, 38, 48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 38
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e463a42d0>
DEBUG:numba.core.ssa:on stmt: $38load_global.0 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.1 = getattr(value=$38load_global.0, attr=REABSORBED)
DEBUG:numba.core.ssa:on stmt: (packet).status = $40load_attr.1
DEBUG:numba.core.ssa:on stmt: jump 54
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e463a42d0>
DEBUG:numba.core.ssa:on stmt: (packet).current_shell_id = next_shell_id
DEBUG:numba.core.ssa:on stmt: jump 54
DEBUG:numba.core.ssa:==== SSA block analysis pass on 54
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e463a42d0>
DEBUG:numba.core.ssa:on stmt: $const54.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $56return_value.1 = cast(value=$const54.0)
DEBUG:numba.core.ssa:on stmt: return $56return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16compare_op.6': [<numba.core.ir.Assign object at 0x7f6e45b11e50>],
             '$18pred': [<numba.core.ir.Assign object at 0x7f6e45b11450>],
             '$20load_global.0': [<numba.core.ir.Assign object at 0x7f6e45b112d0>],
             '$22load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45b113d0>],
             '$34compare_op.2': [<numba.core.ir.Assign object at 0x7f6e46090050>],
             '$36pred': [<numba.core.ir.Assign object at 0x7f6e46090e90>],
             '$38load_global.0': [<numba.core.ir.Assign object at 0x7f6e46090750>],
             '$40load_attr.1': [<numba.core.ir.Assign object at 0x7f6e46090a50>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45b11250>],
             '$56return_value.1': [<numba.core.ir.Assign object at 0x7f6e460907d0>],
             '$8binary_add.3': [<numba.core.ir.Assign object at 0x7f6e45b11710>],
             '$const32.1': [<numba.core.ir.Assign object at 0x7f6e46090190>],
             '$const54.0': [<numba.core.ir.Assign object at 0x7f6e46090390>],
             'bool18': [<numba.core.ir.Assign object at 0x7f6e45b11a50>],
             'bool36': [<numba.core.ir.Assign object at 0x7f6e46090110>],
             'delta_shell': [<numba.core.ir.Assign object at 0x7f6e45b0f8d0>],
             'next_shell_id': [<numba.core.ir.Assign object at 0x7f6e45b11b50>],
             'no_of_shells': [<numba.core.ir.Assign object at 0x7f6e45b11550>],
             'packet': [<numba.core.ir.Assign object at 0x7f6e45b0f290>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=66)
           2	LOAD_GLOBAL(arg=0, lineno=66)
           4	LOAD_FAST(arg=0, lineno=67)
           6	LOAD_ATTR(arg=1, lineno=67)
           8	LOAD_FAST(arg=0, lineno=67)
          10	LOAD_ATTR(arg=2, lineno=67)
          12	LOAD_FAST(arg=1, lineno=67)
          14	CALL_FUNCTION(arg=3, lineno=67)
          16	STORE_FAST(arg=4, lineno=67)
          18	LOAD_GLOBAL(arg=3, lineno=69)
          20	CALL_FUNCTION(arg=0, lineno=69)
          22	LOAD_FAST(arg=0, lineno=69)
          24	STORE_ATTR(arg=2, lineno=69)
          26	LOAD_GLOBAL(arg=4, lineno=71)
          28	LOAD_FAST(arg=0, lineno=72)
          30	LOAD_ATTR(arg=1, lineno=72)
          32	LOAD_FAST(arg=0, lineno=72)
          34	LOAD_ATTR(arg=2, lineno=72)
          36	LOAD_FAST(arg=1, lineno=72)
          38	CALL_FUNCTION(arg=3, lineno=72)
          40	STORE_FAST(arg=5, lineno=72)
          42	LOAD_FAST(arg=0, lineno=75)
          44	LOAD_ATTR(arg=5, lineno=75)
          46	LOAD_FAST(arg=4, lineno=75)
          48	BINARY_MULTIPLY(arg=None, lineno=75)
          50	STORE_FAST(arg=6, lineno=75)
          52	LOAD_FAST(arg=6, lineno=76)
          54	LOAD_FAST(arg=5, lineno=76)
          56	BINARY_MULTIPLY(arg=None, lineno=76)
          58	LOAD_FAST(arg=0, lineno=76)
          60	STORE_ATTR(arg=5, lineno=76)
          62	LOAD_FAST(arg=2, lineno=78)
          64	LOAD_GLOBAL(arg=6, lineno=78)
          66	LOAD_ATTR(arg=7, lineno=78)
          68	COMPARE_OP(arg=2, lineno=78)
          70	POP_JUMP_IF_FALSE(arg=90, lineno=78)
          72	LOAD_GLOBAL(arg=8, lineno=79)
          74	LOAD_FAST(arg=0, lineno=80)
          76	LOAD_FAST(arg=0, lineno=80)
          78	LOAD_ATTR(arg=9, lineno=80)
          80	LOAD_FAST(arg=1, lineno=80)
          82	LOAD_FAST(arg=3, lineno=80)
          84	CALL_FUNCTION(arg=4, lineno=80)
          86	POP_TOP(arg=None, lineno=80)
          88	JUMP_FORWARD(arg=24, lineno=80)
>         90	LOAD_GLOBAL(arg=10, lineno=83)
          92	LOAD_FAST(arg=0, lineno=83)
          94	LOAD_FAST(arg=3, lineno=83)
          96	CALL_FUNCTION(arg=2, lineno=83)
          98	STORE_FAST(arg=7, lineno=83)
         100	LOAD_GLOBAL(arg=8, lineno=84)
         102	LOAD_FAST(arg=0, lineno=84)
         104	LOAD_FAST(arg=7, lineno=84)
         106	LOAD_FAST(arg=1, lineno=84)
         108	LOAD_FAST(arg=3, lineno=84)
         110	CALL_FUNCTION(arg=4, lineno=84)
         112	POP_TOP(arg=None, lineno=84)
>        114	LOAD_CONST(arg=1, lineno=84)
         116	RETURN_VALUE(arg=None, lineno=84)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=66)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=66)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=67)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=67)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$r_packet4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=67)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=67)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$r_packet8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=67)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$10load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_FUNCTION(arg=3, lineno=67)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$10load_attr.4', '$time_explosion12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=4, lineno=67)
DEBUG:numba.core.byteflow:stack ['$14call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=69)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_FUNCTION(arg=0, lineno=69)
DEBUG:numba.core.byteflow:stack ['$18load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=69)
DEBUG:numba.core.byteflow:stack ['$20call_function.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_ATTR(arg=2, lineno=69)
DEBUG:numba.core.byteflow:stack ['$20call_function.8', '$r_packet22.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_GLOBAL(arg=4, lineno=71)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack ['$26load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$r_packet28.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_ATTR(arg=2, lineno=72)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12', '$r_packet32.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12', '$34load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=CALL_FUNCTION(arg=3, lineno=72)
DEBUG:numba.core.byteflow:stack ['$26load_global.10', '$30load_attr.12', '$34load_attr.14', '$time_explosion36.15']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_FAST(arg=5, lineno=72)
DEBUG:numba.core.byteflow:stack ['$38call_function.16']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=75)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_ATTR(arg=5, lineno=75)
DEBUG:numba.core.byteflow:stack ['$r_packet42.17']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=4, lineno=75)
DEBUG:numba.core.byteflow:stack ['$44load_attr.18']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_MULTIPLY(arg=None, lineno=75)
DEBUG:numba.core.byteflow:stack ['$44load_attr.18', '$old_doppler_factor46.19']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=STORE_FAST(arg=6, lineno=75)
DEBUG:numba.core.byteflow:stack ['$48binary_multiply.20']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=6, lineno=76)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=5, lineno=76)
DEBUG:numba.core.byteflow:stack ['$comov_energy52.21']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=BINARY_MULTIPLY(arg=None, lineno=76)
DEBUG:numba.core.byteflow:stack ['$comov_energy52.21', '$inverse_new_doppler_factor54.22']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=76)
DEBUG:numba.core.byteflow:stack ['$56binary_multiply.23']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=STORE_ATTR(arg=5, lineno=76)
DEBUG:numba.core.byteflow:stack ['$56binary_multiply.23', '$r_packet58.24']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=78)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_GLOBAL(arg=6, lineno=78)
DEBUG:numba.core.byteflow:stack ['$line_interaction_type62.25']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=7, lineno=78)
DEBUG:numba.core.byteflow:stack ['$line_interaction_type62.25', '$64load_global.26']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=COMPARE_OP(arg=2, lineno=78)
DEBUG:numba.core.byteflow:stack ['$line_interaction_type62.25', '$66load_attr.27']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=POP_JUMP_IF_FALSE(arg=90, lineno=78)
DEBUG:numba.core.byteflow:stack ['$68compare_op.28']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=72, stack=(), blockstack=(), npush=0), Edge(pc=90, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=72 nstack_initial=0), State(pc_initial=90 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_GLOBAL(arg=8, lineno=79)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=0, lineno=80)
DEBUG:numba.core.byteflow:stack ['$72load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=80)
DEBUG:numba.core.byteflow:stack ['$72load_global.0', '$r_packet74.1']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_ATTR(arg=9, lineno=80)
DEBUG:numba.core.byteflow:stack ['$72load_global.0', '$r_packet74.1', '$r_packet76.2']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=80)
DEBUG:numba.core.byteflow:stack ['$72load_global.0', '$r_packet74.1', '$78load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=3, lineno=80)
DEBUG:numba.core.byteflow:stack ['$72load_global.0', '$r_packet74.1', '$78load_attr.3', '$time_explosion80.4']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=CALL_FUNCTION(arg=4, lineno=80)
DEBUG:numba.core.byteflow:stack ['$72load_global.0', '$r_packet74.1', '$78load_attr.3', '$time_explosion80.4', '$numba_plasma82.5']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=POP_TOP(arg=None, lineno=80)
DEBUG:numba.core.byteflow:stack ['$84call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=JUMP_FORWARD(arg=24, lineno=80)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=114 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_GLOBAL(arg=10, lineno=83)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=0, lineno=83)
DEBUG:numba.core.byteflow:stack ['$90load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=3, lineno=83)
DEBUG:numba.core.byteflow:stack ['$90load_global.0', '$r_packet92.1']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=CALL_FUNCTION(arg=2, lineno=83)
DEBUG:numba.core.byteflow:stack ['$90load_global.0', '$r_packet92.1', '$numba_plasma94.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=STORE_FAST(arg=7, lineno=83)
DEBUG:numba.core.byteflow:stack ['$96call_function.3']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_GLOBAL(arg=8, lineno=84)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=84)
DEBUG:numba.core.byteflow:stack ['$100load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=7, lineno=84)
DEBUG:numba.core.byteflow:stack ['$100load_global.4', '$r_packet102.5']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=1, lineno=84)
DEBUG:numba.core.byteflow:stack ['$100load_global.4', '$r_packet102.5', '$emission_line_id104.6']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=3, lineno=84)
DEBUG:numba.core.byteflow:stack ['$100load_global.4', '$r_packet102.5', '$emission_line_id104.6', '$time_explosion106.7']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=CALL_FUNCTION(arg=4, lineno=84)
DEBUG:numba.core.byteflow:stack ['$100load_global.4', '$r_packet102.5', '$emission_line_id104.6', '$time_explosion106.7', '$numba_plasma108.8']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=POP_TOP(arg=None, lineno=84)
DEBUG:numba.core.byteflow:stack ['$110call_function.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=114 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=1, lineno=84)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=116, inst=RETURN_VALUE(arg=None, lineno=84)
DEBUG:numba.core.byteflow:stack ['$const114.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=114 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=72 nstack_initial=0): set(),
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$r_packet4.1'}), (6, {'item': '$r_packet4.1', 'res': '$6load_attr.2'}), (8, {'res': '$r_packet8.3'}), (10, {'item': '$r_packet8.3', 'res': '$10load_attr.4'}), (12, {'res': '$time_explosion12.5'}), (14, {'func': '$2load_global.0', 'args': ['$6load_attr.2', '$10load_attr.4', '$time_explosion12.5'], 'res': '$14call_function.6'}), (16, {'value': '$14call_function.6'}), (18, {'res': '$18load_global.7'}), (20, {'func': '$18load_global.7', 'args': [], 'res': '$20call_function.8'}), (22, {'res': '$r_packet22.9'}), (24, {'target': '$r_packet22.9', 'value': '$20call_function.8'}), (26, {'res': '$26load_global.10'}), (28, {'res': '$r_packet28.11'}), (30, {'item': '$r_packet28.11', 'res': '$30load_attr.12'}), (32, {'res': '$r_packet32.13'}), (34, {'item': '$r_packet32.13', 'res': '$34load_attr.14'}), (36, {'res': '$time_explosion36.15'}), (38, {'func': '$26load_global.10', 'args': ['$30load_attr.12', '$34load_attr.14', '$time_explosion36.15'], 'res': '$38call_function.16'}), (40, {'value': '$38call_function.16'}), (42, {'res': '$r_packet42.17'}), (44, {'item': '$r_packet42.17', 'res': '$44load_attr.18'}), (46, {'res': '$old_doppler_factor46.19'}), (48, {'lhs': '$44load_attr.18', 'rhs': '$old_doppler_factor46.19', 'res': '$48binary_multiply.20'}), (50, {'value': '$48binary_multiply.20'}), (52, {'res': '$comov_energy52.21'}), (54, {'res': '$inverse_new_doppler_factor54.22'}), (56, {'lhs': '$comov_energy52.21', 'rhs': '$inverse_new_doppler_factor54.22', 'res': '$56binary_multiply.23'}), (58, {'res': '$r_packet58.24'}), (60, {'target': '$r_packet58.24', 'value': '$56binary_multiply.23'}), (62, {'res': '$line_interaction_type62.25'}), (64, {'res': '$64load_global.26'}), (66, {'item': '$64load_global.26', 'res': '$66load_attr.27'}), (68, {'lhs': '$line_interaction_type62.25', 'rhs': '$66load_attr.27', 'res': '$68compare_op.28'}), (70, {'pred': '$68compare_op.28'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: (), 90: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=72 nstack_initial=0):
AdaptBlockInfo(insts=((72, {'res': '$72load_global.0'}), (74, {'res': '$r_packet74.1'}), (76, {'res': '$r_packet76.2'}), (78, {'item': '$r_packet76.2', 'res': '$78load_attr.3'}), (80, {'res': '$time_explosion80.4'}), (82, {'res': '$numba_plasma82.5'}), (84, {'func': '$72load_global.0', 'args': ['$r_packet74.1', '$78load_attr.3', '$time_explosion80.4', '$numba_plasma82.5'], 'res': '$84call_function.6'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$90load_global.0'}), (92, {'res': '$r_packet92.1'}), (94, {'res': '$numba_plasma94.2'}), (96, {'func': '$90load_global.0', 'args': ['$r_packet92.1', '$numba_plasma94.2'], 'res': '$96call_function.3'}), (98, {'value': '$96call_function.3'}), (100, {'res': '$100load_global.4'}), (102, {'res': '$r_packet102.5'}), (104, {'res': '$emission_line_id104.6'}), (106, {'res': '$time_explosion106.7'}), (108, {'res': '$numba_plasma108.8'}), (110, {'func': '$100load_global.4', 'args': ['$r_packet102.5', '$emission_line_id104.6', '$time_explosion106.7', '$numba_plasma108.8'], 'res': '$110call_function.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$const114.0'}), (116, {'retval': '$const114.0', 'castval': '$116return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    time_explosion = arg(1, name=time_explosion) ['time_explosion']
    line_interaction_type = arg(2, name=line_interaction_type) ['line_interaction_type']
    numba_plasma = arg(3, name=numba_plasma) ['numba_plasma']
    $2load_global.0 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>)) ['$2load_global.0']
    $6load_attr.2 = getattr(value=r_packet, attr=r) ['$6load_attr.2', 'r_packet']
    $10load_attr.4 = getattr(value=r_packet, attr=mu) ['$10load_attr.4', 'r_packet']
    $14call_function.6 = call $2load_global.0($6load_attr.2, $10load_attr.4, time_explosion, func=$2load_global.0, args=[Var($6load_attr.2, interaction.py:67), Var($10load_attr.4, interaction.py:67), Var(time_explosion, interaction.py:66)], kws=(), vararg=None) ['$10load_attr.4', '$14call_function.6', '$2load_global.0', '$6load_attr.2', 'time_explosion']
    old_doppler_factor = $14call_function.6  ['$14call_function.6', 'old_doppler_factor']
    $18load_global.7 = global(get_random_mu: CPUDispatcher(<function get_random_mu at 0x7f6e4a0f6830>)) ['$18load_global.7']
    $20call_function.8 = call $18load_global.7(func=$18load_global.7, args=[], kws=(), vararg=None) ['$18load_global.7', '$20call_function.8']
    (r_packet).mu = $20call_function.8       ['$20call_function.8', 'r_packet']
    $26load_global.10 = global(get_inverse_doppler_factor: CPUDispatcher(<function get_inverse_doppler_factor at 0x7f6e4a0eff80>)) ['$26load_global.10']
    $30load_attr.12 = getattr(value=r_packet, attr=r) ['$30load_attr.12', 'r_packet']
    $34load_attr.14 = getattr(value=r_packet, attr=mu) ['$34load_attr.14', 'r_packet']
    $38call_function.16 = call $26load_global.10($30load_attr.12, $34load_attr.14, time_explosion, func=$26load_global.10, args=[Var($30load_attr.12, interaction.py:72), Var($34load_attr.14, interaction.py:72), Var(time_explosion, interaction.py:66)], kws=(), vararg=None) ['$26load_global.10', '$30load_attr.12', '$34load_attr.14', '$38call_function.16', 'time_explosion']
    inverse_new_doppler_factor = $38call_function.16 ['$38call_function.16', 'inverse_new_doppler_factor']
    $44load_attr.18 = getattr(value=r_packet, attr=energy) ['$44load_attr.18', 'r_packet']
    $48binary_multiply.20 = $44load_attr.18 * old_doppler_factor ['$44load_attr.18', '$48binary_multiply.20', 'old_doppler_factor']
    comov_energy = $48binary_multiply.20     ['$48binary_multiply.20', 'comov_energy']
    $56binary_multiply.23 = comov_energy * inverse_new_doppler_factor ['$56binary_multiply.23', 'comov_energy', 'inverse_new_doppler_factor']
    (r_packet).energy = $56binary_multiply.23 ['$56binary_multiply.23', 'r_packet']
    $64load_global.26 = global(LineInteractionType: <enum 'LineInteractionType'>) ['$64load_global.26']
    $66load_attr.27 = getattr(value=$64load_global.26, attr=SCATTER) ['$64load_global.26', '$66load_attr.27']
    $68compare_op.28 = line_interaction_type == $66load_attr.27 ['$66load_attr.27', '$68compare_op.28', 'line_interaction_type']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($68compare_op.28, func=bool70, args=(Var($68compare_op.28, interaction.py:78),), kws=(), vararg=None) ['$68compare_op.28', '$70pred', 'bool70']
    branch $70pred, 72, 90                   ['$70pred']
label 72:
    $72load_global.0 = global(line_emission: CPUDispatcher(<function line_emission at 0x7f6e4a0b13b0>)) ['$72load_global.0']
    $78load_attr.3 = getattr(value=r_packet, attr=next_line_id) ['$78load_attr.3', 'r_packet']
    $84call_function.6 = call $72load_global.0(r_packet, $78load_attr.3, time_explosion, numba_plasma, func=$72load_global.0, args=[Var(r_packet, interaction.py:66), Var($78load_attr.3, interaction.py:80), Var(time_explosion, interaction.py:66), Var(numba_plasma, interaction.py:66)], kws=(), vararg=None) ['$72load_global.0', '$78load_attr.3', '$84call_function.6', 'numba_plasma', 'r_packet', 'time_explosion']
    jump 114                                 []
label 90:
    $90load_global.0 = global(macro_atom: CPUDispatcher(<function macro_atom at 0x7f6e4a0b1050>)) ['$90load_global.0']
    $96call_function.3 = call $90load_global.0(r_packet, numba_plasma, func=$90load_global.0, args=[Var(r_packet, interaction.py:66), Var(numba_plasma, interaction.py:66)], kws=(), vararg=None) ['$90load_global.0', '$96call_function.3', 'numba_plasma', 'r_packet']
    emission_line_id = $96call_function.3    ['$96call_function.3', 'emission_line_id']
    $100load_global.4 = global(line_emission: CPUDispatcher(<function line_emission at 0x7f6e4a0b13b0>)) ['$100load_global.4']
    $110call_function.9 = call $100load_global.4(r_packet, emission_line_id, time_explosion, numba_plasma, func=$100load_global.4, args=[Var(r_packet, interaction.py:66), Var(emission_line_id, interaction.py:83), Var(time_explosion, interaction.py:66), Var(numba_plasma, interaction.py:66)], kws=(), vararg=None) ['$100load_global.4', '$110call_function.9', 'emission_line_id', 'numba_plasma', 'r_packet', 'time_explosion']
    jump 114                                 []
label 114:
    $const114.0 = const(NoneType, None)      ['$const114.0']
    $116return_value.1 = cast(value=$const114.0) ['$116return_value.1', '$const114.0']
    return $116return_value.1                ['$116return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45fef850>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(1, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: line_interaction_type = arg(2, name=line_interaction_type)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $10load_attr.4 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $14call_function.6 = call $2load_global.0($6load_attr.2, $10load_attr.4, time_explosion, func=$2load_global.0, args=[Var($6load_attr.2, interaction.py:67), Var($10load_attr.4, interaction.py:67), Var(time_explosion, interaction.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: old_doppler_factor = $14call_function.6
DEBUG:numba.core.ssa:on stmt: $18load_global.7 = global(get_random_mu: CPUDispatcher(<function get_random_mu at 0x7f6e4a0f6830>))
DEBUG:numba.core.ssa:on stmt: $20call_function.8 = call $18load_global.7(func=$18load_global.7, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: (r_packet).mu = $20call_function.8
DEBUG:numba.core.ssa:on stmt: $26load_global.10 = global(get_inverse_doppler_factor: CPUDispatcher(<function get_inverse_doppler_factor at 0x7f6e4a0eff80>))
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $34load_attr.14 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $38call_function.16 = call $26load_global.10($30load_attr.12, $34load_attr.14, time_explosion, func=$26load_global.10, args=[Var($30load_attr.12, interaction.py:72), Var($34load_attr.14, interaction.py:72), Var(time_explosion, interaction.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: inverse_new_doppler_factor = $38call_function.16
DEBUG:numba.core.ssa:on stmt: $44load_attr.18 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $48binary_multiply.20 = $44load_attr.18 * old_doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_energy = $48binary_multiply.20
DEBUG:numba.core.ssa:on stmt: $56binary_multiply.23 = comov_energy * inverse_new_doppler_factor
DEBUG:numba.core.ssa:on stmt: (r_packet).energy = $56binary_multiply.23
DEBUG:numba.core.ssa:on stmt: $64load_global.26 = global(LineInteractionType: <enum 'LineInteractionType'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.27 = getattr(value=$64load_global.26, attr=SCATTER)
DEBUG:numba.core.ssa:on stmt: $68compare_op.28 = line_interaction_type == $66load_attr.27
DEBUG:numba.core.ssa:on stmt: bool70 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $70pred = call bool70($68compare_op.28, func=bool70, args=(Var($68compare_op.28, interaction.py:78),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $70pred, 72, 90
DEBUG:numba.core.ssa:==== SSA block analysis pass on 72
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45fef850>
DEBUG:numba.core.ssa:on stmt: $72load_global.0 = global(line_emission: CPUDispatcher(<function line_emission at 0x7f6e4a0b13b0>))
DEBUG:numba.core.ssa:on stmt: $78load_attr.3 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $84call_function.6 = call $72load_global.0(r_packet, $78load_attr.3, time_explosion, numba_plasma, func=$72load_global.0, args=[Var(r_packet, interaction.py:66), Var($78load_attr.3, interaction.py:80), Var(time_explosion, interaction.py:66), Var(numba_plasma, interaction.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 114
DEBUG:numba.core.ssa:==== SSA block analysis pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45fef850>
DEBUG:numba.core.ssa:on stmt: $90load_global.0 = global(macro_atom: CPUDispatcher(<function macro_atom at 0x7f6e4a0b1050>))
DEBUG:numba.core.ssa:on stmt: $96call_function.3 = call $90load_global.0(r_packet, numba_plasma, func=$90load_global.0, args=[Var(r_packet, interaction.py:66), Var(numba_plasma, interaction.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: emission_line_id = $96call_function.3
DEBUG:numba.core.ssa:on stmt: $100load_global.4 = global(line_emission: CPUDispatcher(<function line_emission at 0x7f6e4a0b13b0>))
DEBUG:numba.core.ssa:on stmt: $110call_function.9 = call $100load_global.4(r_packet, emission_line_id, time_explosion, numba_plasma, func=$100load_global.4, args=[Var(r_packet, interaction.py:66), Var(emission_line_id, interaction.py:83), Var(time_explosion, interaction.py:66), Var(numba_plasma, interaction.py:66)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 114
DEBUG:numba.core.ssa:==== SSA block analysis pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45fef850>
DEBUG:numba.core.ssa:on stmt: $const114.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116return_value.1 = cast(value=$const114.0)
DEBUG:numba.core.ssa:on stmt: return $116return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100load_global.4': [<numba.core.ir.Assign object at 0x7f6e463b8dd0>],
             '$10load_attr.4': [<numba.core.ir.Assign object at 0x7f6e45b5b990>],
             '$110call_function.9': [<numba.core.ir.Assign object at 0x7f6e463b8f50>],
             '$116return_value.1': [<numba.core.ir.Assign object at 0x7f6e45ca3350>],
             '$14call_function.6': [<numba.core.ir.Assign object at 0x7f6e45b5b850>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f6e45b5b310>],
             '$20call_function.8': [<numba.core.ir.Assign object at 0x7f6e45b5b110>],
             '$26load_global.10': [<numba.core.ir.Assign object at 0x7f6e46052790>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e45b5bdd0>],
             '$30load_attr.12': [<numba.core.ir.Assign object at 0x7f6e461cef90>],
             '$34load_attr.14': [<numba.core.ir.Assign object at 0x7f6e461ce590>],
             '$38call_function.16': [<numba.core.ir.Assign object at 0x7f6e461ce350>],
             '$44load_attr.18': [<numba.core.ir.Assign object at 0x7f6e461ce0d0>],
             '$48binary_multiply.20': [<numba.core.ir.Assign object at 0x7f6e461ce9d0>],
             '$56binary_multiply.23': [<numba.core.ir.Assign object at 0x7f6e461cef50>],
             '$64load_global.26': [<numba.core.ir.Assign object at 0x7f6e45d7d950>],
             '$66load_attr.27': [<numba.core.ir.Assign object at 0x7f6e45d7db90>],
             '$68compare_op.28': [<numba.core.ir.Assign object at 0x7f6e463b8750>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45b5ba90>],
             '$70pred': [<numba.core.ir.Assign object at 0x7f6e463b8bd0>],
             '$72load_global.0': [<numba.core.ir.Assign object at 0x7f6e461ce1d0>],
             '$78load_attr.3': [<numba.core.ir.Assign object at 0x7f6e463b8c10>],
             '$84call_function.6': [<numba.core.ir.Assign object at 0x7f6e463b8f10>],
             '$90load_global.0': [<numba.core.ir.Assign object at 0x7f6e463b8450>],
             '$96call_function.3': [<numba.core.ir.Assign object at 0x7f6e463b8b10>],
             '$const114.0': [<numba.core.ir.Assign object at 0x7f6e45ca31d0>],
             'bool70': [<numba.core.ir.Assign object at 0x7f6e463b8510>],
             'comov_energy': [<numba.core.ir.Assign object at 0x7f6e461ce890>],
             'emission_line_id': [<numba.core.ir.Assign object at 0x7f6e463b86d0>],
             'inverse_new_doppler_factor': [<numba.core.ir.Assign object at 0x7f6e461ce390>],
             'line_interaction_type': [<numba.core.ir.Assign object at 0x7f6e461fda50>],
             'numba_plasma': [<numba.core.ir.Assign object at 0x7f6e461fd8d0>],
             'old_doppler_factor': [<numba.core.ir.Assign object at 0x7f6e45b5b6d0>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e45cea6d0>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e45cea950>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=285)
           2	LOAD_CONST(arg=1, lineno=285)
           4	LOAD_GLOBAL(arg=0, lineno=285)
           6	LOAD_ATTR(arg=1, lineno=285)
           8	LOAD_METHOD(arg=1, lineno=285)
          10	CALL_METHOD(arg=0, lineno=285)
          12	BINARY_MULTIPLY(arg=None, lineno=285)
          14	LOAD_CONST(arg=2, lineno=285)
          16	BINARY_SUBTRACT(arg=None, lineno=285)
          18	RETURN_VALUE(arg=None, lineno=285)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=285)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=285)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=285)
DEBUG:numba.core.byteflow:stack ['$const2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=285)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$4load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=285)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$6load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_METHOD(arg=0, lineno=285)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$8load_method.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=BINARY_MULTIPLY(arg=None, lineno=285)
DEBUG:numba.core.byteflow:stack ['$const2.0', '$10call_method.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=285)
DEBUG:numba.core.byteflow:stack ['$12binary_multiply.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBTRACT(arg=None, lineno=285)
DEBUG:numba.core.byteflow:stack ['$12binary_multiply.5', '$const14.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=285)
DEBUG:numba.core.byteflow:stack ['$16binary_subtract.7']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'res': '$4load_global.1'}), (6, {'item': '$4load_global.1', 'res': '$6load_attr.2'}), (8, {'item': '$6load_attr.2', 'res': '$8load_method.3'}), (10, {'func': '$8load_method.3', 'args': [], 'res': '$10call_method.4'}), (12, {'lhs': '$const2.0', 'rhs': '$10call_method.4', 'res': '$12binary_multiply.5'}), (14, {'res': '$const14.6'}), (16, {'lhs': '$12binary_multiply.5', 'rhs': '$const14.6', 'res': '$16binary_subtract.7'}), (18, {'retval': '$16binary_subtract.7', 'castval': '$18return_value.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    $const2.0 = const(float, 2.0)            ['$const2.0']
    $4load_global.1 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$4load_global.1']
    $6load_attr.2 = getattr(value=$4load_global.1, attr=random) ['$4load_global.1', '$6load_attr.2']
    $8load_method.3 = getattr(value=$6load_attr.2, attr=random) ['$6load_attr.2', '$8load_method.3']
    $10call_method.4 = call $8load_method.3(func=$8load_method.3, args=[], kws=(), vararg=None) ['$10call_method.4', '$8load_method.3']
    $12binary_multiply.5 = $const2.0 * $10call_method.4 ['$10call_method.4', '$12binary_multiply.5', '$const2.0']
    $const14.6 = const(float, 1.0)           ['$const14.6']
    $16binary_subtract.7 = $12binary_multiply.5 - $const14.6 ['$12binary_multiply.5', '$16binary_subtract.7', '$const14.6']
    $18return_value.8 = cast(value=$16binary_subtract.7) ['$16binary_subtract.7', '$18return_value.8']
    return $18return_value.8                 ['$18return_value.8']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e464ac690>
DEBUG:numba.core.ssa:on stmt: $const2.0 = const(float, 2.0)
DEBUG:numba.core.ssa:on stmt: $4load_global.1 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=$4load_global.1, attr=random)
DEBUG:numba.core.ssa:on stmt: $8load_method.3 = getattr(value=$6load_attr.2, attr=random)
DEBUG:numba.core.ssa:on stmt: $10call_method.4 = call $8load_method.3(func=$8load_method.3, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $12binary_multiply.5 = $const2.0 * $10call_method.4
DEBUG:numba.core.ssa:on stmt: $const14.6 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $16binary_subtract.7 = $12binary_multiply.5 - $const14.6
DEBUG:numba.core.ssa:on stmt: $18return_value.8 = cast(value=$16binary_subtract.7)
DEBUG:numba.core.ssa:on stmt: return $18return_value.8
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_method.4': [<numba.core.ir.Assign object at 0x7f6e45fef750>],
             '$12binary_multiply.5': [<numba.core.ir.Assign object at 0x7f6e45ef8310>],
             '$16binary_subtract.7': [<numba.core.ir.Assign object at 0x7f6e45b05d10>],
             '$18return_value.8': [<numba.core.ir.Assign object at 0x7f6e45b05910>],
             '$4load_global.1': [<numba.core.ir.Assign object at 0x7f6e45d38d90>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45d38cd0>],
             '$8load_method.3': [<numba.core.ir.Assign object at 0x7f6e45d38790>],
             '$const14.6': [<numba.core.ir.Assign object at 0x7f6e45b058d0>],
             '$const2.0': [<numba.core.ir.Assign object at 0x7f6e460a2c50>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=99)
           2	LOAD_FAST(arg=1, lineno=99)
           4	LOAD_FAST(arg=0, lineno=99)
           6	STORE_ATTR(arg=0, lineno=99)
           8	LOAD_FAST(arg=1, lineno=101)
          10	LOAD_FAST(arg=0, lineno=101)
          12	LOAD_ATTR(arg=1, lineno=101)
          14	COMPARE_OP(arg=3, lineno=101)
          16	POP_JUMP_IF_FALSE(arg=18, lineno=101)
>         18	LOAD_GLOBAL(arg=2, lineno=103)
          20	LOAD_FAST(arg=0, lineno=104)
          22	LOAD_ATTR(arg=3, lineno=104)
          24	LOAD_FAST(arg=0, lineno=104)
          26	LOAD_ATTR(arg=4, lineno=104)
          28	LOAD_FAST(arg=2, lineno=104)
          30	CALL_FUNCTION(arg=3, lineno=104)
          32	STORE_FAST(arg=4, lineno=104)
          34	LOAD_FAST(arg=3, lineno=107)
          36	LOAD_ATTR(arg=5, lineno=107)
          38	LOAD_FAST(arg=1, lineno=107)
          40	BINARY_SUBSCR(arg=None, lineno=107)
          42	LOAD_FAST(arg=4, lineno=107)
          44	BINARY_MULTIPLY(arg=None, lineno=107)
          46	LOAD_FAST(arg=0, lineno=107)
          48	STORE_ATTR(arg=6, lineno=107)
          50	LOAD_FAST(arg=1, lineno=109)
          52	LOAD_CONST(arg=1, lineno=109)
          54	BINARY_ADD(arg=None, lineno=109)
          56	LOAD_FAST(arg=0, lineno=109)
          58	STORE_ATTR(arg=1, lineno=109)
          60	LOAD_FAST(arg=3, lineno=110)
          62	LOAD_ATTR(arg=5, lineno=110)
          64	LOAD_FAST(arg=1, lineno=110)
          66	BINARY_SUBSCR(arg=None, lineno=110)
          68	STORE_FAST(arg=5, lineno=110)
          70	LOAD_FAST(arg=1, lineno=112)
          72	LOAD_GLOBAL(arg=7, lineno=112)
          74	LOAD_FAST(arg=3, lineno=112)
          76	LOAD_ATTR(arg=5, lineno=112)
          78	CALL_FUNCTION(arg=1, lineno=112)
          80	LOAD_CONST(arg=1, lineno=112)
          82	BINARY_SUBTRACT(arg=None, lineno=112)
          84	COMPARE_OP(arg=3, lineno=112)
          86	POP_JUMP_IF_FALSE(arg=106, lineno=112)
          88	LOAD_GLOBAL(arg=8, lineno=113)
          90	LOAD_FAST(arg=0, lineno=114)
          92	LOAD_FAST(arg=1, lineno=114)
          94	LOAD_CONST(arg=1, lineno=114)
          96	BINARY_ADD(arg=None, lineno=114)
          98	LOAD_FAST(arg=5, lineno=114)
         100	LOAD_FAST(arg=3, lineno=114)
         102	CALL_FUNCTION(arg=4, lineno=114)
         104	POP_TOP(arg=None, lineno=114)
>        106	LOAD_GLOBAL(arg=9, lineno=117)
         108	LOAD_ATTR(arg=10, lineno=117)
         110	POP_JUMP_IF_FALSE(arg=128, lineno=117)
         112	LOAD_GLOBAL(arg=11, lineno=118)
         114	LOAD_FAST(arg=0, lineno=119)
         116	LOAD_FAST(arg=2, lineno=119)
         118	LOAD_FAST(arg=0, lineno=119)
         120	LOAD_ATTR(arg=4, lineno=119)
         122	CALL_FUNCTION(arg=3, lineno=119)
         124	LOAD_FAST(arg=0, lineno=119)
         126	STORE_ATTR(arg=4, lineno=119)
>        128	LOAD_CONST(arg=2, lineno=119)
         130	RETURN_VALUE(arg=None, lineno=119)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=99)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=99)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=99)
DEBUG:numba.core.byteflow:stack ['$emission_line_id2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_ATTR(arg=0, lineno=99)
DEBUG:numba.core.byteflow:stack ['$emission_line_id2.0', '$r_packet4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=101)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=101)
DEBUG:numba.core.byteflow:stack ['$emission_line_id8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_ATTR(arg=1, lineno=101)
DEBUG:numba.core.byteflow:stack ['$emission_line_id8.2', '$r_packet10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=COMPARE_OP(arg=3, lineno=101)
DEBUG:numba.core.byteflow:stack ['$emission_line_id8.2', '$12load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=POP_JUMP_IF_FALSE(arg=18, lineno=101)
DEBUG:numba.core.byteflow:stack ['$14compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=18, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=0), State(pc_initial=18 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=103)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=104)
DEBUG:numba.core.byteflow:stack ['$18load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=104)
DEBUG:numba.core.byteflow:stack ['$18load_global.0', '$r_packet20.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=104)
DEBUG:numba.core.byteflow:stack ['$18load_global.0', '$22load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_ATTR(arg=4, lineno=104)
DEBUG:numba.core.byteflow:stack ['$18load_global.0', '$22load_attr.2', '$r_packet24.3']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=2, lineno=104)
DEBUG:numba.core.byteflow:stack ['$18load_global.0', '$22load_attr.2', '$26load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=CALL_FUNCTION(arg=3, lineno=104)
DEBUG:numba.core.byteflow:stack ['$18load_global.0', '$22load_attr.2', '$26load_attr.4', '$time_explosion28.5']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=4, lineno=104)
DEBUG:numba.core.byteflow:stack ['$30call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=3, lineno=107)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_ATTR(arg=5, lineno=107)
DEBUG:numba.core.byteflow:stack ['$numba_plasma34.7']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=107)
DEBUG:numba.core.byteflow:stack ['$36load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=107)
DEBUG:numba.core.byteflow:stack ['$36load_attr.8', '$emission_line_id38.9']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=4, lineno=107)
DEBUG:numba.core.byteflow:stack ['$40binary_subscr.10']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=BINARY_MULTIPLY(arg=None, lineno=107)
DEBUG:numba.core.byteflow:stack ['$40binary_subscr.10', '$inverse_doppler_factor42.11']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=0, lineno=107)
DEBUG:numba.core.byteflow:stack ['$44binary_multiply.12']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=STORE_ATTR(arg=6, lineno=107)
DEBUG:numba.core.byteflow:stack ['$44binary_multiply.12', '$r_packet46.13']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=109)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=109)
DEBUG:numba.core.byteflow:stack ['$emission_line_id50.14']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=BINARY_ADD(arg=None, lineno=109)
DEBUG:numba.core.byteflow:stack ['$emission_line_id50.14', '$const52.15']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=0, lineno=109)
DEBUG:numba.core.byteflow:stack ['$54binary_add.16']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=STORE_ATTR(arg=1, lineno=109)
DEBUG:numba.core.byteflow:stack ['$54binary_add.16', '$r_packet56.17']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=110)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=5, lineno=110)
DEBUG:numba.core.byteflow:stack ['$numba_plasma60.18']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=1, lineno=110)
DEBUG:numba.core.byteflow:stack ['$62load_attr.19']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=110)
DEBUG:numba.core.byteflow:stack ['$62load_attr.19', '$emission_line_id64.20']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=STORE_FAST(arg=5, lineno=110)
DEBUG:numba.core.byteflow:stack ['$66binary_subscr.21']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=1, lineno=112)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_GLOBAL(arg=7, lineno=112)
DEBUG:numba.core.byteflow:stack ['$emission_line_id70.22']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=3, lineno=112)
DEBUG:numba.core.byteflow:stack ['$emission_line_id70.22', '$72load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_ATTR(arg=5, lineno=112)
DEBUG:numba.core.byteflow:stack ['$emission_line_id70.22', '$72load_global.23', '$numba_plasma74.24']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=CALL_FUNCTION(arg=1, lineno=112)
DEBUG:numba.core.byteflow:stack ['$emission_line_id70.22', '$72load_global.23', '$76load_attr.25']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_CONST(arg=1, lineno=112)
DEBUG:numba.core.byteflow:stack ['$emission_line_id70.22', '$78call_function.26']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_SUBTRACT(arg=None, lineno=112)
DEBUG:numba.core.byteflow:stack ['$emission_line_id70.22', '$78call_function.26', '$const80.27']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=COMPARE_OP(arg=3, lineno=112)
DEBUG:numba.core.byteflow:stack ['$emission_line_id70.22', '$82binary_subtract.28']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=106, lineno=112)
DEBUG:numba.core.byteflow:stack ['$84compare_op.29']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=88, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=0), State(pc_initial=88 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=88 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_GLOBAL(arg=8, lineno=113)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=0, lineno=114)
DEBUG:numba.core.byteflow:stack ['$88load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=114)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$r_packet90.1']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=1, lineno=114)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$r_packet90.1', '$emission_line_id92.2']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=BINARY_ADD(arg=None, lineno=114)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$r_packet90.1', '$emission_line_id92.2', '$const94.3']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=5, lineno=114)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$r_packet90.1', '$96binary_add.4']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=3, lineno=114)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$r_packet90.1', '$96binary_add.4', '$nu_line98.5']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=CALL_FUNCTION(arg=4, lineno=114)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$r_packet90.1', '$96binary_add.4', '$nu_line98.5', '$numba_plasma100.6']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=POP_TOP(arg=None, lineno=114)
DEBUG:numba.core.byteflow:stack ['$102call_function.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_GLOBAL(arg=9, lineno=117)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_ATTR(arg=10, lineno=117)
DEBUG:numba.core.byteflow:stack ['$106load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=POP_JUMP_IF_FALSE(arg=128, lineno=117)
DEBUG:numba.core.byteflow:stack ['$108load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0), Edge(pc=128, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_GLOBAL(arg=11, lineno=118)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=0, lineno=119)
DEBUG:numba.core.byteflow:stack ['$112load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_FAST(arg=2, lineno=119)
DEBUG:numba.core.byteflow:stack ['$112load_global.0', '$r_packet114.1']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=119)
DEBUG:numba.core.byteflow:stack ['$112load_global.0', '$r_packet114.1', '$time_explosion116.2']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_ATTR(arg=4, lineno=119)
DEBUG:numba.core.byteflow:stack ['$112load_global.0', '$r_packet114.1', '$time_explosion116.2', '$r_packet118.3']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=CALL_FUNCTION(arg=3, lineno=119)
DEBUG:numba.core.byteflow:stack ['$112load_global.0', '$r_packet114.1', '$time_explosion116.2', '$120load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=0, lineno=119)
DEBUG:numba.core.byteflow:stack ['$122call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=STORE_ATTR(arg=4, lineno=119)
DEBUG:numba.core.byteflow:stack ['$122call_function.5', '$r_packet124.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=128, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=128 nstack_initial=0), State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_CONST(arg=2, lineno=119)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=130, inst=RETURN_VALUE(arg=None, lineno=119)
DEBUG:numba.core.byteflow:stack ['$const128.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=128 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=0): set(),
             State(pc_initial=88 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=128 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$emission_line_id2.0'}), (4, {'res': '$r_packet4.1'}), (6, {'target': '$r_packet4.1', 'value': '$emission_line_id2.0'}), (8, {'res': '$emission_line_id8.2'}), (10, {'res': '$r_packet10.3'}), (12, {'item': '$r_packet10.3', 'res': '$12load_attr.4'}), (14, {'lhs': '$emission_line_id8.2', 'rhs': '$12load_attr.4', 'res': '$14compare_op.5'}), (16, {'pred': '$14compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=0):
AdaptBlockInfo(insts=((18, {'res': '$18load_global.0'}), (20, {'res': '$r_packet20.1'}), (22, {'item': '$r_packet20.1', 'res': '$22load_attr.2'}), (24, {'res': '$r_packet24.3'}), (26, {'item': '$r_packet24.3', 'res': '$26load_attr.4'}), (28, {'res': '$time_explosion28.5'}), (30, {'func': '$18load_global.0', 'args': ['$22load_attr.2', '$26load_attr.4', '$time_explosion28.5'], 'res': '$30call_function.6'}), (32, {'value': '$30call_function.6'}), (34, {'res': '$numba_plasma34.7'}), (36, {'item': '$numba_plasma34.7', 'res': '$36load_attr.8'}), (38, {'res': '$emission_line_id38.9'}), (40, {'index': '$emission_line_id38.9', 'target': '$36load_attr.8', 'res': '$40binary_subscr.10'}), (42, {'res': '$inverse_doppler_factor42.11'}), (44, {'lhs': '$40binary_subscr.10', 'rhs': '$inverse_doppler_factor42.11', 'res': '$44binary_multiply.12'}), (46, {'res': '$r_packet46.13'}), (48, {'target': '$r_packet46.13', 'value': '$44binary_multiply.12'}), (50, {'res': '$emission_line_id50.14'}), (52, {'res': '$const52.15'}), (54, {'lhs': '$emission_line_id50.14', 'rhs': '$const52.15', 'res': '$54binary_add.16'}), (56, {'res': '$r_packet56.17'}), (58, {'target': '$r_packet56.17', 'value': '$54binary_add.16'}), (60, {'res': '$numba_plasma60.18'}), (62, {'item': '$numba_plasma60.18', 'res': '$62load_attr.19'}), (64, {'res': '$emission_line_id64.20'}), (66, {'index': '$emission_line_id64.20', 'target': '$62load_attr.19', 'res': '$66binary_subscr.21'}), (68, {'value': '$66binary_subscr.21'}), (70, {'res': '$emission_line_id70.22'}), (72, {'res': '$72load_global.23'}), (74, {'res': '$numba_plasma74.24'}), (76, {'item': '$numba_plasma74.24', 'res': '$76load_attr.25'}), (78, {'func': '$72load_global.23', 'args': ['$76load_attr.25'], 'res': '$78call_function.26'}), (80, {'res': '$const80.27'}), (82, {'lhs': '$78call_function.26', 'rhs': '$const80.27', 'res': '$82binary_subtract.28'}), (84, {'lhs': '$emission_line_id70.22', 'rhs': '$82binary_subtract.28', 'res': '$84compare_op.29'}), (86, {'pred': '$84compare_op.29'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: (), 106: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$88load_global.0'}), (90, {'res': '$r_packet90.1'}), (92, {'res': '$emission_line_id92.2'}), (94, {'res': '$const94.3'}), (96, {'lhs': '$emission_line_id92.2', 'rhs': '$const94.3', 'res': '$96binary_add.4'}), (98, {'res': '$nu_line98.5'}), (100, {'res': '$numba_plasma100.6'}), (102, {'func': '$88load_global.0', 'args': ['$r_packet90.1', '$96binary_add.4', '$nu_line98.5', '$numba_plasma100.6'], 'res': '$102call_function.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$106load_global.0'}), (108, {'item': '$106load_global.0', 'res': '$108load_attr.1'}), (110, {'pred': '$108load_attr.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: (), 128: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$112load_global.0'}), (114, {'res': '$r_packet114.1'}), (116, {'res': '$time_explosion116.2'}), (118, {'res': '$r_packet118.3'}), (120, {'item': '$r_packet118.3', 'res': '$120load_attr.4'}), (122, {'func': '$112load_global.0', 'args': ['$r_packet114.1', '$time_explosion116.2', '$120load_attr.4'], 'res': '$122call_function.5'}), (124, {'res': '$r_packet124.6'}), (126, {'target': '$r_packet124.6', 'value': '$122call_function.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=128 nstack_initial=0):
AdaptBlockInfo(insts=((128, {'res': '$const128.0'}), (130, {'retval': '$const128.0', 'castval': '$130return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    emission_line_id = arg(1, name=emission_line_id) ['emission_line_id']
    time_explosion = arg(2, name=time_explosion) ['time_explosion']
    numba_plasma = arg(3, name=numba_plasma) ['numba_plasma']
    (r_packet).last_line_interaction_out_id = emission_line_id ['emission_line_id', 'r_packet']
    $12load_attr.4 = getattr(value=r_packet, attr=next_line_id) ['$12load_attr.4', 'r_packet']
    $14compare_op.5 = emission_line_id != $12load_attr.4 ['$12load_attr.4', '$14compare_op.5', 'emission_line_id']
    bool16 = global(bool: <class 'bool'>)    ['bool16']
    $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, interaction.py:101),), kws=(), vararg=None) ['$14compare_op.5', '$16pred', 'bool16']
    branch $16pred, 18, 18                   ['$16pred']
label 18:
    $18load_global.0 = global(get_inverse_doppler_factor: CPUDispatcher(<function get_inverse_doppler_factor at 0x7f6e4a0eff80>)) ['$18load_global.0']
    $22load_attr.2 = getattr(value=r_packet, attr=r) ['$22load_attr.2', 'r_packet']
    $26load_attr.4 = getattr(value=r_packet, attr=mu) ['$26load_attr.4', 'r_packet']
    $30call_function.6 = call $18load_global.0($22load_attr.2, $26load_attr.4, time_explosion, func=$18load_global.0, args=[Var($22load_attr.2, interaction.py:104), Var($26load_attr.4, interaction.py:104), Var(time_explosion, interaction.py:99)], kws=(), vararg=None) ['$18load_global.0', '$22load_attr.2', '$26load_attr.4', '$30call_function.6', 'time_explosion']
    inverse_doppler_factor = $30call_function.6 ['$30call_function.6', 'inverse_doppler_factor']
    $36load_attr.8 = getattr(value=numba_plasma, attr=line_list_nu) ['$36load_attr.8', 'numba_plasma']
    $40binary_subscr.10 = getitem(value=$36load_attr.8, index=emission_line_id) ['$36load_attr.8', '$40binary_subscr.10', 'emission_line_id']
    $44binary_multiply.12 = $40binary_subscr.10 * inverse_doppler_factor ['$40binary_subscr.10', '$44binary_multiply.12', 'inverse_doppler_factor']
    (r_packet).nu = $44binary_multiply.12    ['$44binary_multiply.12', 'r_packet']
    $const52.15 = const(int, 1)              ['$const52.15']
    $54binary_add.16 = emission_line_id + $const52.15 ['$54binary_add.16', '$const52.15', 'emission_line_id']
    (r_packet).next_line_id = $54binary_add.16 ['$54binary_add.16', 'r_packet']
    $62load_attr.19 = getattr(value=numba_plasma, attr=line_list_nu) ['$62load_attr.19', 'numba_plasma']
    $66binary_subscr.21 = getitem(value=$62load_attr.19, index=emission_line_id) ['$62load_attr.19', '$66binary_subscr.21', 'emission_line_id']
    nu_line = $66binary_subscr.21            ['$66binary_subscr.21', 'nu_line']
    $72load_global.23 = global(len: <built-in function len>) ['$72load_global.23']
    $76load_attr.25 = getattr(value=numba_plasma, attr=line_list_nu) ['$76load_attr.25', 'numba_plasma']
    $78call_function.26 = call $72load_global.23($76load_attr.25, func=$72load_global.23, args=[Var($76load_attr.25, interaction.py:112)], kws=(), vararg=None) ['$72load_global.23', '$76load_attr.25', '$78call_function.26']
    $const80.27 = const(int, 1)              ['$const80.27']
    $82binary_subtract.28 = $78call_function.26 - $const80.27 ['$78call_function.26', '$82binary_subtract.28', '$const80.27']
    $84compare_op.29 = emission_line_id != $82binary_subtract.28 ['$82binary_subtract.28', '$84compare_op.29', 'emission_line_id']
    bool86 = global(bool: <class 'bool'>)    ['bool86']
    $86pred = call bool86($84compare_op.29, func=bool86, args=(Var($84compare_op.29, interaction.py:112),), kws=(), vararg=None) ['$84compare_op.29', '$86pred', 'bool86']
    branch $86pred, 88, 106                  ['$86pred']
label 88:
    $88load_global.0 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>)) ['$88load_global.0']
    $const94.3 = const(int, 1)               ['$const94.3']
    $96binary_add.4 = emission_line_id + $const94.3 ['$96binary_add.4', '$const94.3', 'emission_line_id']
    $102call_function.7 = call $88load_global.0(r_packet, $96binary_add.4, nu_line, numba_plasma, func=$88load_global.0, args=[Var(r_packet, interaction.py:99), Var($96binary_add.4, interaction.py:114), Var(nu_line, interaction.py:110), Var(numba_plasma, interaction.py:99)], kws=(), vararg=None) ['$102call_function.7', '$88load_global.0', '$96binary_add.4', 'nu_line', 'numba_plasma', 'r_packet']
    jump 106                                 []
label 106:
    $106load_global.0 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$106load_global.0']
    $108load_attr.1 = getattr(value=$106load_global.0, attr=full_relativity) ['$106load_global.0', '$108load_attr.1']
    bool110 = global(bool: <class 'bool'>)   ['bool110']
    $110pred = call bool110($108load_attr.1, func=bool110, args=(Var($108load_attr.1, interaction.py:117),), kws=(), vararg=None) ['$108load_attr.1', '$110pred', 'bool110']
    branch $110pred, 112, 128                ['$110pred']
label 112:
    $112load_global.0 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>)) ['$112load_global.0']
    $120load_attr.4 = getattr(value=r_packet, attr=mu) ['$120load_attr.4', 'r_packet']
    $122call_function.5 = call $112load_global.0(r_packet, time_explosion, $120load_attr.4, func=$112load_global.0, args=[Var(r_packet, interaction.py:99), Var(time_explosion, interaction.py:99), Var($120load_attr.4, interaction.py:119)], kws=(), vararg=None) ['$112load_global.0', '$120load_attr.4', '$122call_function.5', 'r_packet', 'time_explosion']
    (r_packet).mu = $122call_function.5      ['$122call_function.5', 'r_packet']
    jump 128                                 []
label 128:
    $const128.0 = const(NoneType, None)      ['$const128.0']
    $130return_value.1 = cast(value=$const128.0) ['$130return_value.1', '$const128.0']
    return $130return_value.1                ['$130return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b0fad0>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: emission_line_id = arg(1, name=emission_line_id)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(2, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(3, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: (r_packet).last_line_interaction_out_id = emission_line_id
DEBUG:numba.core.ssa:on stmt: $12load_attr.4 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $14compare_op.5 = emission_line_id != $12load_attr.4
DEBUG:numba.core.ssa:on stmt: bool16 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $16pred = call bool16($14compare_op.5, func=bool16, args=(Var($14compare_op.5, interaction.py:101),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $16pred, 18, 18
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b0fad0>
DEBUG:numba.core.ssa:on stmt: $18load_global.0 = global(get_inverse_doppler_factor: CPUDispatcher(<function get_inverse_doppler_factor at 0x7f6e4a0eff80>))
DEBUG:numba.core.ssa:on stmt: $22load_attr.2 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $26load_attr.4 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $30call_function.6 = call $18load_global.0($22load_attr.2, $26load_attr.4, time_explosion, func=$18load_global.0, args=[Var($22load_attr.2, interaction.py:104), Var($26load_attr.4, interaction.py:104), Var(time_explosion, interaction.py:99)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: inverse_doppler_factor = $30call_function.6
DEBUG:numba.core.ssa:on stmt: $36load_attr.8 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $40binary_subscr.10 = getitem(value=$36load_attr.8, index=emission_line_id)
DEBUG:numba.core.ssa:on stmt: $44binary_multiply.12 = $40binary_subscr.10 * inverse_doppler_factor
DEBUG:numba.core.ssa:on stmt: (r_packet).nu = $44binary_multiply.12
DEBUG:numba.core.ssa:on stmt: $const52.15 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $54binary_add.16 = emission_line_id + $const52.15
DEBUG:numba.core.ssa:on stmt: (r_packet).next_line_id = $54binary_add.16
DEBUG:numba.core.ssa:on stmt: $62load_attr.19 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $66binary_subscr.21 = getitem(value=$62load_attr.19, index=emission_line_id)
DEBUG:numba.core.ssa:on stmt: nu_line = $66binary_subscr.21
DEBUG:numba.core.ssa:on stmt: $72load_global.23 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $76load_attr.25 = getattr(value=numba_plasma, attr=line_list_nu)
DEBUG:numba.core.ssa:on stmt: $78call_function.26 = call $72load_global.23($76load_attr.25, func=$72load_global.23, args=[Var($76load_attr.25, interaction.py:112)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $const80.27 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $82binary_subtract.28 = $78call_function.26 - $const80.27
DEBUG:numba.core.ssa:on stmt: $84compare_op.29 = emission_line_id != $82binary_subtract.28
DEBUG:numba.core.ssa:on stmt: bool86 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $86pred = call bool86($84compare_op.29, func=bool86, args=(Var($84compare_op.29, interaction.py:112),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $86pred, 88, 106
DEBUG:numba.core.ssa:==== SSA block analysis pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b0fad0>
DEBUG:numba.core.ssa:on stmt: $88load_global.0 = global(test_for_close_line: CPUDispatcher(<function test_for_close_line at 0x7f6e4a1077a0>))
DEBUG:numba.core.ssa:on stmt: $const94.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $96binary_add.4 = emission_line_id + $const94.3
DEBUG:numba.core.ssa:on stmt: $102call_function.7 = call $88load_global.0(r_packet, $96binary_add.4, nu_line, numba_plasma, func=$88load_global.0, args=[Var(r_packet, interaction.py:99), Var($96binary_add.4, interaction.py:114), Var(nu_line, interaction.py:110), Var(numba_plasma, interaction.py:99)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 106
DEBUG:numba.core.ssa:==== SSA block analysis pass on 106
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b0fad0>
DEBUG:numba.core.ssa:on stmt: $106load_global.0 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $108load_attr.1 = getattr(value=$106load_global.0, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool110 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $110pred = call bool110($108load_attr.1, func=bool110, args=(Var($108load_attr.1, interaction.py:117),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $110pred, 112, 128
DEBUG:numba.core.ssa:==== SSA block analysis pass on 112
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b0fad0>
DEBUG:numba.core.ssa:on stmt: $112load_global.0 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>))
DEBUG:numba.core.ssa:on stmt: $120load_attr.4 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $122call_function.5 = call $112load_global.0(r_packet, time_explosion, $120load_attr.4, func=$112load_global.0, args=[Var(r_packet, interaction.py:99), Var(time_explosion, interaction.py:99), Var($120load_attr.4, interaction.py:119)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: (r_packet).mu = $122call_function.5
DEBUG:numba.core.ssa:on stmt: jump 128
DEBUG:numba.core.ssa:==== SSA block analysis pass on 128
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45b0fad0>
DEBUG:numba.core.ssa:on stmt: $const128.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $130return_value.1 = cast(value=$const128.0)
DEBUG:numba.core.ssa:on stmt: return $130return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102call_function.7': [<numba.core.ir.Assign object at 0x7f6e45b5a610>],
             '$106load_global.0': [<numba.core.ir.Assign object at 0x7f6e45b5aa50>],
             '$108load_attr.1': [<numba.core.ir.Assign object at 0x7f6e45b5a2d0>],
             '$110pred': [<numba.core.ir.Assign object at 0x7f6e45b5a390>],
             '$112load_global.0': [<numba.core.ir.Assign object at 0x7f6e45cd8450>],
             '$120load_attr.4': [<numba.core.ir.Assign object at 0x7f6e45e22490>],
             '$122call_function.5': [<numba.core.ir.Assign object at 0x7f6e45e225d0>],
             '$12load_attr.4': [<numba.core.ir.Assign object at 0x7f6e4621c9d0>],
             '$130return_value.1': [<numba.core.ir.Assign object at 0x7f6e45e227d0>],
             '$14compare_op.5': [<numba.core.ir.Assign object at 0x7f6e4621c6d0>],
             '$16pred': [<numba.core.ir.Assign object at 0x7f6e4621c550>],
             '$18load_global.0': [<numba.core.ir.Assign object at 0x7f6e45d32090>],
             '$22load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45d326d0>],
             '$26load_attr.4': [<numba.core.ir.Assign object at 0x7f6e45d32110>],
             '$30call_function.6': [<numba.core.ir.Assign object at 0x7f6e45d32810>],
             '$36load_attr.8': [<numba.core.ir.Assign object at 0x7f6e45d32490>],
             '$40binary_subscr.10': [<numba.core.ir.Assign object at 0x7f6e45d327d0>],
             '$44binary_multiply.12': [<numba.core.ir.Assign object at 0x7f6e45d32210>],
             '$54binary_add.16': [<numba.core.ir.Assign object at 0x7f6e45dae350>],
             '$62load_attr.19': [<numba.core.ir.Assign object at 0x7f6e45daea10>],
             '$66binary_subscr.21': [<numba.core.ir.Assign object at 0x7f6e45dae5d0>],
             '$72load_global.23': [<numba.core.ir.Assign object at 0x7f6e45cd5950>],
             '$76load_attr.25': [<numba.core.ir.Assign object at 0x7f6e45e22290>],
             '$78call_function.26': [<numba.core.ir.Assign object at 0x7f6e45e220d0>],
             '$82binary_subtract.28': [<numba.core.ir.Assign object at 0x7f6e45e223d0>],
             '$84compare_op.29': [<numba.core.ir.Assign object at 0x7f6e45e22e50>],
             '$86pred': [<numba.core.ir.Assign object at 0x7f6e45e22610>],
             '$88load_global.0': [<numba.core.ir.Assign object at 0x7f6e45d32f50>],
             '$96binary_add.4': [<numba.core.ir.Assign object at 0x7f6e4621c0d0>],
             '$const128.0': [<numba.core.ir.Assign object at 0x7f6e45e22dd0>],
             '$const52.15': [<numba.core.ir.Assign object at 0x7f6e43359c50>],
             '$const80.27': [<numba.core.ir.Assign object at 0x7f6e45e22d90>],
             '$const94.3': [<numba.core.ir.Assign object at 0x7f6e45e22650>],
             'bool110': [<numba.core.ir.Assign object at 0x7f6e45b5a890>],
             'bool16': [<numba.core.ir.Assign object at 0x7f6e4621cd90>],
             'bool86': [<numba.core.ir.Assign object at 0x7f6e45e22b10>],
             'emission_line_id': [<numba.core.ir.Assign object at 0x7f6e4621cd10>],
             'inverse_doppler_factor': [<numba.core.ir.Assign object at 0x7f6e45d32a90>],
             'nu_line': [<numba.core.ir.Assign object at 0x7f6e45daea50>],
             'numba_plasma': [<numba.core.ir.Assign object at 0x7f6e4621cb50>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e4621c450>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e4621c810>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=32)
           2	LOAD_FAST(arg=1, lineno=32)
           4	LOAD_ATTR(arg=0, lineno=32)
           6	LOAD_FAST(arg=0, lineno=33)
           8	LOAD_ATTR(arg=1, lineno=33)
          10	BINARY_SUBSCR(arg=None, lineno=33)
          12	STORE_FAST(arg=2, lineno=33)
          14	LOAD_CONST(arg=1, lineno=35)
          16	STORE_FAST(arg=3, lineno=35)
          18	SETUP_LOOP(arg=132, lineno=37)
>         20	LOAD_FAST(arg=3, lineno=37)
          22	LOAD_CONST(arg=1, lineno=37)
          24	COMPARE_OP(arg=5, lineno=37)
          26	POP_JUMP_IF_FALSE(arg=150, lineno=37)
          28	LOAD_CONST(arg=2, lineno=38)
          30	STORE_FAST(arg=4, lineno=38)
          32	LOAD_GLOBAL(arg=2, lineno=39)
          34	LOAD_ATTR(arg=3, lineno=39)
          36	LOAD_METHOD(arg=3, lineno=39)
          38	CALL_METHOD(arg=0, lineno=39)
          40	STORE_FAST(arg=5, lineno=39)
          42	LOAD_FAST(arg=1, lineno=41)
          44	LOAD_ATTR(arg=4, lineno=41)
          46	LOAD_FAST(arg=2, lineno=41)
          48	BINARY_SUBSCR(arg=None, lineno=41)
          50	STORE_FAST(arg=6, lineno=41)
          52	LOAD_FAST(arg=1, lineno=42)
          54	LOAD_ATTR(arg=4, lineno=42)
          56	LOAD_FAST(arg=2, lineno=42)
          58	LOAD_CONST(arg=3, lineno=42)
          60	BINARY_ADD(arg=None, lineno=42)
          62	BINARY_SUBSCR(arg=None, lineno=42)
          64	STORE_FAST(arg=7, lineno=42)
          66	SETUP_LOOP(arg=80, lineno=45)
          68	LOAD_GLOBAL(arg=5, lineno=45)
          70	LOAD_FAST(arg=6, lineno=45)
          72	LOAD_FAST(arg=7, lineno=45)
          74	CALL_FUNCTION(arg=2, lineno=45)
          76	GET_ITER(arg=None, lineno=45)
>         78	FOR_ITER(arg=58, lineno=45)
          80	STORE_FAST(arg=8, lineno=45)
          82	LOAD_FAST(arg=1, lineno=47)
          84	LOAD_ATTR(arg=6, lineno=47)
          86	LOAD_FAST(arg=8, lineno=48)
          88	LOAD_FAST(arg=0, lineno=48)
          90	LOAD_ATTR(arg=7, lineno=48)
          92	BUILD_TUPLE(arg=2, lineno=48)
          94	BINARY_SUBSCR(arg=None, lineno=48)
          96	STORE_FAST(arg=9, lineno=48)
          98	LOAD_FAST(arg=4, lineno=51)
         100	LOAD_FAST(arg=9, lineno=51)
         102	INPLACE_ADD(arg=None, lineno=51)
         104	STORE_FAST(arg=4, lineno=51)
         106	LOAD_FAST(arg=4, lineno=53)
         108	LOAD_FAST(arg=5, lineno=53)
         110	COMPARE_OP(arg=4, lineno=53)
         112	POP_JUMP_IF_FALSE(arg=78, lineno=53)
         114	LOAD_FAST(arg=1, lineno=54)
         116	LOAD_ATTR(arg=8, lineno=54)
         118	LOAD_FAST(arg=8, lineno=55)
         120	BINARY_SUBSCR(arg=None, lineno=55)
         122	STORE_FAST(arg=2, lineno=55)
         124	LOAD_FAST(arg=1, lineno=57)
         126	LOAD_ATTR(arg=9, lineno=57)
         128	LOAD_FAST(arg=8, lineno=58)
         130	BINARY_SUBSCR(arg=None, lineno=58)
         132	STORE_FAST(arg=3, lineno=58)
         134	BREAK_LOOP(arg=None, lineno=60)
         136	JUMP_ABSOLUTE(arg=78, lineno=60)
>        138	POP_BLOCK(arg=None, lineno=60)
         140	LOAD_GLOBAL(arg=10, lineno=63)
         142	LOAD_CONST(arg=4, lineno=64)
         144	CALL_FUNCTION(arg=1, lineno=64)
         146	RAISE_VARARGS(arg=1, lineno=64)
>        148	JUMP_ABSOLUTE(arg=20, lineno=64)
>        150	POP_BLOCK(arg=None, lineno=64)
>        152	LOAD_FAST(arg=3, lineno=69)
         154	LOAD_GLOBAL(arg=11, lineno=69)
         156	LOAD_ATTR(arg=12, lineno=69)
         158	COMPARE_OP(arg=2, lineno=69)
         160	POP_JUMP_IF_FALSE(arg=172, lineno=69)
         162	LOAD_FAST(arg=1, lineno=70)
         164	LOAD_ATTR(arg=13, lineno=70)
         166	LOAD_FAST(arg=8, lineno=70)
         168	BINARY_SUBSCR(arg=None, lineno=70)
         170	RETURN_VALUE(arg=None, lineno=70)
>        172	LOAD_GLOBAL(arg=10, lineno=72)
         174	LOAD_CONST(arg=5, lineno=72)
         176	CALL_FUNCTION(arg=1, lineno=72)
         178	RAISE_VARARGS(arg=1, lineno=72)
         180	LOAD_CONST(arg=6, lineno=72)
         182	RETURN_VALUE(arg=None, lineno=72)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=32)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=32)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=32)
DEBUG:numba.core.byteflow:stack ['$numba_plasma2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=33)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=33)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$r_packet6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=33)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1', '$8load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_FAST(arg=2, lineno=33)
DEBUG:numba.core.byteflow:stack ['$10binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=35)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=3, lineno=35)
DEBUG:numba.core.byteflow:stack ['$const14.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=18, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=18 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=SETUP_LOOP(arg=132, lineno=37)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=20, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=3, lineno=37)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=1, lineno=37)
DEBUG:numba.core.byteflow:stack ['$current_transition_type20.0']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=COMPARE_OP(arg=5, lineno=37)
DEBUG:numba.core.byteflow:stack ['$current_transition_type20.0', '$const22.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=POP_JUMP_IF_FALSE(arg=150, lineno=37)
DEBUG:numba.core.byteflow:stack ['$24compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=150, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_CONST(arg=2, lineno=38)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=4, lineno=38)
DEBUG:numba.core.byteflow:stack ['$const28.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_GLOBAL(arg=2, lineno=39)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_ATTR(arg=3, lineno=39)
DEBUG:numba.core.byteflow:stack ['$32load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_METHOD(arg=3, lineno=39)
DEBUG:numba.core.byteflow:stack ['$34load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=CALL_METHOD(arg=0, lineno=39)
DEBUG:numba.core.byteflow:stack ['$36load_method.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_FAST(arg=5, lineno=39)
DEBUG:numba.core.byteflow:stack ['$38call_method.4']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=41)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_ATTR(arg=4, lineno=41)
DEBUG:numba.core.byteflow:stack ['$numba_plasma42.5']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=41)
DEBUG:numba.core.byteflow:stack ['$44load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=41)
DEBUG:numba.core.byteflow:stack ['$44load_attr.6', '$activation_level_id46.7']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=STORE_FAST(arg=6, lineno=41)
DEBUG:numba.core.byteflow:stack ['$48binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=42)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_ATTR(arg=4, lineno=42)
DEBUG:numba.core.byteflow:stack ['$numba_plasma52.9']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=42)
DEBUG:numba.core.byteflow:stack ['$54load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_CONST(arg=3, lineno=42)
DEBUG:numba.core.byteflow:stack ['$54load_attr.10', '$activation_level_id56.11']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=BINARY_ADD(arg=None, lineno=42)
DEBUG:numba.core.byteflow:stack ['$54load_attr.10', '$activation_level_id56.11', '$const58.12']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=42)
DEBUG:numba.core.byteflow:stack ['$54load_attr.10', '$60binary_add.13']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=STORE_FAST(arg=7, lineno=42)
DEBUG:numba.core.byteflow:stack ['$62binary_subscr.14']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=66, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=66 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=150, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=152, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=152 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=SETUP_LOOP(arg=80, lineno=45)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_GLOBAL(arg=5, lineno=45)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=6, lineno=45)
DEBUG:numba.core.byteflow:stack ['$68load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=7, lineno=45)
DEBUG:numba.core.byteflow:stack ['$68load_global.0', '$block_start70.1']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL_FUNCTION(arg=2, lineno=45)
DEBUG:numba.core.byteflow:stack ['$68load_global.0', '$block_start70.1', '$block_end72.2']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=GET_ITER(arg=None, lineno=45)
DEBUG:numba.core.byteflow:stack ['$74call_function.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=78, stack=('$76get_iter.4',), blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 148, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=152 nstack_initial=0), State(pc_initial=78 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=3, lineno=69)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_GLOBAL(arg=11, lineno=69)
DEBUG:numba.core.byteflow:stack ['$current_transition_type152.0']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_ATTR(arg=12, lineno=69)
DEBUG:numba.core.byteflow:stack ['$current_transition_type152.0', '$154load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=COMPARE_OP(arg=2, lineno=69)
DEBUG:numba.core.byteflow:stack ['$current_transition_type152.0', '$156load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=POP_JUMP_IF_FALSE(arg=172, lineno=69)
DEBUG:numba.core.byteflow:stack ['$158compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=162, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=1), State(pc_initial=162 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi78.0']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=FOR_ITER(arg=58, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi78.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=138, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 148, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}), npush=0), Edge(pc=80, stack=('$phi78.0', '$78for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 148, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=162 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=80 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=1, lineno=70)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_ATTR(arg=13, lineno=70)
DEBUG:numba.core.byteflow:stack ['$numba_plasma162.0']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=8, lineno=70)
DEBUG:numba.core.byteflow:stack ['$164load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=BINARY_SUBSCR(arg=None, lineno=70)
DEBUG:numba.core.byteflow:stack ['$164load_attr.1', '$transition_id166.2']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=RETURN_VALUE(arg=None, lineno=70)
DEBUG:numba.core.byteflow:stack ['$168binary_subscr.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=80 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_GLOBAL(arg=10, lineno=72)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_CONST(arg=5, lineno=72)
DEBUG:numba.core.byteflow:stack ['$172load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=CALL_FUNCTION(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$172load_global.0', '$const174.1']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=RAISE_VARARGS(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$176call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=80 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=138, inst=POP_BLOCK(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=140, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=80 nstack_initial=2), State(pc_initial=140 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi80.0', '$phi80.1']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=STORE_FAST(arg=8, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$phi80.1']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=1, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi80.0']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_ATTR(arg=6, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$numba_plasma82.2']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=8, lineno=48)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$84load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=0, lineno=48)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$84load_attr.3', '$transition_id86.4']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_ATTR(arg=7, lineno=48)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$84load_attr.3', '$transition_id86.4', '$r_packet88.5']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=BUILD_TUPLE(arg=2, lineno=48)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$84load_attr.3', '$transition_id86.4', '$90load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=BINARY_SUBSCR(arg=None, lineno=48)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$84load_attr.3', '$92build_tuple.7']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=STORE_FAST(arg=9, lineno=48)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$94binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi80.0']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=9, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$probability98.9']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=INPLACE_ADD(arg=None, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$probability98.9', '$transition_probability100.10']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_FAST(arg=4, lineno=51)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$102inplace_add.11']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi80.0']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=5, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$probability106.12']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$probability106.12', '$probability_event108.13']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=78, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$110compare_op.14']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=114, stack=('$phi80.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 148, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}), npush=0), Edge(pc=78, stack=('$phi80.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 148, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=140 nstack_initial=0), State(pc_initial=114 nstack_initial=1), State(pc_initial=78 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_GLOBAL(arg=10, lineno=63)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_CONST(arg=4, lineno=64)
DEBUG:numba.core.byteflow:stack ['$140load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=CALL_FUNCTION(arg=1, lineno=64)
DEBUG:numba.core.byteflow:stack ['$140load_global.0', '$const142.1']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=RAISE_VARARGS(arg=1, lineno=64)
DEBUG:numba.core.byteflow:stack ['$144call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=114 nstack_initial=1), State(pc_initial=78 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi114.0']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=1, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi114.0']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_ATTR(arg=8, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi114.0', '$numba_plasma114.1']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=8, lineno=55)
DEBUG:numba.core.byteflow:stack ['$phi114.0', '$116load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=BINARY_SUBSCR(arg=None, lineno=55)
DEBUG:numba.core.byteflow:stack ['$phi114.0', '$116load_attr.2', '$transition_id118.3']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=STORE_FAST(arg=2, lineno=55)
DEBUG:numba.core.byteflow:stack ['$phi114.0', '$120binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=57)
DEBUG:numba.core.byteflow:stack ['$phi114.0']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_ATTR(arg=9, lineno=57)
DEBUG:numba.core.byteflow:stack ['$phi114.0', '$numba_plasma124.5']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=8, lineno=58)
DEBUG:numba.core.byteflow:stack ['$phi114.0', '$126load_attr.6']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=BINARY_SUBSCR(arg=None, lineno=58)
DEBUG:numba.core.byteflow:stack ['$phi114.0', '$126load_attr.6', '$transition_id128.7']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=STORE_FAST(arg=3, lineno=58)
DEBUG:numba.core.byteflow:stack ['$phi114.0', '$130binary_subscr.8']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=BREAK_LOOP(arg=None, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi114.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=148, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=1), State(pc_initial=148 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=148 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=148, inst=JUMP_ABSOLUTE(arg=20, lineno=64)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=20, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=20 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=1): {'$phi78.0'},
             State(pc_initial=80 nstack_initial=2): {'$phi80.1'},
             State(pc_initial=114 nstack_initial=1): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=140 nstack_initial=0): set(),
             State(pc_initial=148 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set(),
             State(pc_initial=152 nstack_initial=0): set(),
             State(pc_initial=162 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi78.0': State(pc_initial=66 nstack_initial=0),
 '$phi80.1': State(pc_initial=78 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi114.0': {('$phi80.0', State(pc_initial=80 nstack_initial=2))},
             '$phi78.0': {('$76get_iter.4',
                           State(pc_initial=66 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=2))},
             '$phi80.0': {('$phi78.0', State(pc_initial=78 nstack_initial=1))},
             '$phi80.1': {('$78for_iter.2',
                           State(pc_initial=78 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi114.0': {('$phi78.0', State(pc_initial=78 nstack_initial=1))},
             '$phi78.0': {('$76get_iter.4',
                           State(pc_initial=66 nstack_initial=0)),
                          ('$phi78.0', State(pc_initial=78 nstack_initial=1))},
             '$phi80.0': {('$76get_iter.4',
                           State(pc_initial=66 nstack_initial=0))},
             '$phi80.1': {('$78for_iter.2',
                           State(pc_initial=78 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi114.0': {('$76get_iter.4',
                            State(pc_initial=66 nstack_initial=0))},
             '$phi78.0': {('$76get_iter.4',
                           State(pc_initial=66 nstack_initial=0))},
             '$phi80.0': {('$76get_iter.4',
                           State(pc_initial=66 nstack_initial=0))},
             '$phi80.1': {('$78for_iter.2',
                           State(pc_initial=78 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi114.0': {('$76get_iter.4',
                            State(pc_initial=66 nstack_initial=0))},
             '$phi78.0': {('$76get_iter.4',
                           State(pc_initial=66 nstack_initial=0))},
             '$phi80.0': {('$76get_iter.4',
                           State(pc_initial=66 nstack_initial=0))},
             '$phi80.1': {('$78for_iter.2',
                           State(pc_initial=78 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi78.0': {('$76get_iter.4', State(pc_initial=66 nstack_initial=0))},
 '$phi80.1': {('$78for_iter.2', State(pc_initial=78 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=66 nstack_initial=0): {'$phi78.0': '$76get_iter.4'},
             State(pc_initial=78 nstack_initial=1): {'$phi80.1': '$78for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$numba_plasma2.0'}), (4, {'item': '$numba_plasma2.0', 'res': '$4load_attr.1'}), (6, {'res': '$r_packet6.2'}), (8, {'item': '$r_packet6.2', 'res': '$8load_attr.3'}), (10, {'index': '$8load_attr.3', 'target': '$4load_attr.1', 'res': '$10binary_subscr.4'}), (12, {'value': '$10binary_subscr.4'}), (14, {'res': '$const14.5'}), (16, {'value': '$const14.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=18 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={20: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$current_transition_type20.0'}), (22, {'res': '$const22.1'}), (24, {'lhs': '$current_transition_type20.0', 'rhs': '$const22.1', 'res': '$24compare_op.2'}), (26, {'pred': '$24compare_op.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={28: (), 150: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$const28.0'}), (30, {'value': '$const28.0'}), (32, {'res': '$32load_global.1'}), (34, {'item': '$32load_global.1', 'res': '$34load_attr.2'}), (36, {'item': '$34load_attr.2', 'res': '$36load_method.3'}), (38, {'func': '$36load_method.3', 'args': [], 'res': '$38call_method.4'}), (40, {'value': '$38call_method.4'}), (42, {'res': '$numba_plasma42.5'}), (44, {'item': '$numba_plasma42.5', 'res': '$44load_attr.6'}), (46, {'res': '$activation_level_id46.7'}), (48, {'index': '$activation_level_id46.7', 'target': '$44load_attr.6', 'res': '$48binary_subscr.8'}), (50, {'value': '$48binary_subscr.8'}), (52, {'res': '$numba_plasma52.9'}), (54, {'item': '$numba_plasma52.9', 'res': '$54load_attr.10'}), (56, {'res': '$activation_level_id56.11'}), (58, {'res': '$const58.12'}), (60, {'lhs': '$activation_level_id56.11', 'rhs': '$const58.12', 'res': '$60binary_add.13'}), (62, {'index': '$60binary_add.13', 'target': '$54load_attr.10', 'res': '$62binary_subscr.14'}), (64, {'value': '$62binary_subscr.14'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={66: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$block_start70.1'}), (72, {'res': '$block_end72.2'}), (74, {'func': '$68load_global.0', 'args': ['$block_start70.1', '$block_end72.2'], 'res': '$74call_function.3'}), (76, {'value': '$74call_function.3', 'res': '$76get_iter.4'})), outgoing_phis={'$phi78.0': '$76get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={78: ('$76get_iter.4',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=78 nstack_initial=1):
AdaptBlockInfo(insts=((78, {'iterator': '$phi78.0', 'pair': '$78for_iter.1', 'indval': '$78for_iter.2', 'pred': '$78for_iter.3'}),), outgoing_phis={'$phi80.1': '$78for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 148, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}), active_try_block=None, outgoing_edgepushed={138: (), 80: ('$phi78.0', '$78for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=80 nstack_initial=2):
AdaptBlockInfo(insts=((80, {'value': '$phi80.1'}), (82, {'res': '$numba_plasma82.2'}), (84, {'item': '$numba_plasma82.2', 'res': '$84load_attr.3'}), (86, {'res': '$transition_id86.4'}), (88, {'res': '$r_packet88.5'}), (90, {'item': '$r_packet88.5', 'res': '$90load_attr.6'}), (92, {'items': ['$transition_id86.4', '$90load_attr.6'], 'res': '$92build_tuple.7'}), (94, {'index': '$92build_tuple.7', 'target': '$84load_attr.3', 'res': '$94binary_subscr.8'}), (96, {'value': '$94binary_subscr.8'}), (98, {'res': '$probability98.9'}), (100, {'res': '$transition_probability100.10'}), (102, {'lhs': '$probability98.9', 'rhs': '$transition_probability100.10', 'res': '$102inplace_add.11'}), (104, {'value': '$102inplace_add.11'}), (106, {'res': '$probability106.12'}), (108, {'res': '$probability_event108.13'}), (110, {'lhs': '$probability106.12', 'rhs': '$probability_event108.13', 'res': '$110compare_op.14'}), (112, {'pred': '$110compare_op.14'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 148, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}), active_try_block=None, outgoing_edgepushed={114: ('$phi80.0',), 78: ('$phi80.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=114 nstack_initial=1):
AdaptBlockInfo(insts=((114, {'res': '$numba_plasma114.1'}), (116, {'item': '$numba_plasma114.1', 'res': '$116load_attr.2'}), (118, {'res': '$transition_id118.3'}), (120, {'index': '$transition_id118.3', 'target': '$116load_attr.2', 'res': '$120binary_subscr.4'}), (122, {'value': '$120binary_subscr.4'}), (124, {'res': '$numba_plasma124.5'}), (126, {'item': '$numba_plasma124.5', 'res': '$126load_attr.6'}), (128, {'res': '$transition_id128.7'}), (130, {'index': '$transition_id128.7', 'target': '$126load_attr.6', 'res': '$130binary_subscr.8'}), (132, {'value': '$130binary_subscr.8'}), (134, {'end': 148})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 148, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}), active_try_block=None, outgoing_edgepushed={148: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 148, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}), active_try_block=None, outgoing_edgepushed={140: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=140 nstack_initial=0):
AdaptBlockInfo(insts=((140, {'res': '$140load_global.0'}), (142, {'res': '$const142.1'}), (144, {'func': '$140load_global.0', 'args': ['$const142.1'], 'res': '$144call_function.2'}), (146, {'exc': '$144call_function.2'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=148 nstack_initial=0):
AdaptBlockInfo(insts=((148, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={20: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 152, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={152: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=152 nstack_initial=0):
AdaptBlockInfo(insts=((152, {'res': '$current_transition_type152.0'}), (154, {'res': '$154load_global.1'}), (156, {'item': '$154load_global.1', 'res': '$156load_attr.2'}), (158, {'lhs': '$current_transition_type152.0', 'rhs': '$156load_attr.2', 'res': '$158compare_op.3'}), (160, {'pred': '$158compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={162: (), 172: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=162 nstack_initial=0):
AdaptBlockInfo(insts=((162, {'res': '$numba_plasma162.0'}), (164, {'item': '$numba_plasma162.0', 'res': '$164load_attr.1'}), (166, {'res': '$transition_id166.2'}), (168, {'index': '$transition_id166.2', 'target': '$164load_attr.1', 'res': '$168binary_subscr.3'}), (170, {'retval': '$168binary_subscr.3', 'castval': '$170return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$172load_global.0'}), (174, {'res': '$const174.1'}), (176, {'func': '$172load_global.0', 'args': ['$const174.1'], 'res': '$176call_function.2'}), (178, {'exc': '$176call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    numba_plasma = arg(1, name=numba_plasma) ['numba_plasma']
    $4load_attr.1 = getattr(value=numba_plasma, attr=line2macro_level_upper) ['$4load_attr.1', 'numba_plasma']
    $8load_attr.3 = getattr(value=r_packet, attr=next_line_id) ['$8load_attr.3', 'r_packet']
    $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3) ['$10binary_subscr.4', '$4load_attr.1', '$8load_attr.3']
    activation_level_id = $10binary_subscr.4 ['$10binary_subscr.4', 'activation_level_id']
    $const14.5 = const(int, 0)               ['$const14.5']
    current_transition_type = $const14.5     ['$const14.5', 'current_transition_type']
    jump 18                                  []
label 18:
    jump 20                                  []
label 20:
    $const22.1 = const(int, 0)               ['$const22.1']
    $24compare_op.2 = current_transition_type >= $const22.1 ['$24compare_op.2', '$const22.1', 'current_transition_type']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.2, func=bool26, args=(Var($24compare_op.2, macro_atom.py:37),), kws=(), vararg=None) ['$24compare_op.2', '$26pred', 'bool26']
    branch $26pred, 28, 150                  ['$26pred']
label 28:
    $const28.0 = const(float, 0.0)           ['$const28.0']
    probability = $const28.0                 ['$const28.0', 'probability']
    $32load_global.1 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$32load_global.1']
    $34load_attr.2 = getattr(value=$32load_global.1, attr=random) ['$32load_global.1', '$34load_attr.2']
    $36load_method.3 = getattr(value=$34load_attr.2, attr=random) ['$34load_attr.2', '$36load_method.3']
    $38call_method.4 = call $36load_method.3(func=$36load_method.3, args=[], kws=(), vararg=None) ['$36load_method.3', '$38call_method.4']
    probability_event = $38call_method.4     ['$38call_method.4', 'probability_event']
    $44load_attr.6 = getattr(value=numba_plasma, attr=macro_block_references) ['$44load_attr.6', 'numba_plasma']
    $48binary_subscr.8 = getitem(value=$44load_attr.6, index=activation_level_id) ['$44load_attr.6', '$48binary_subscr.8', 'activation_level_id']
    block_start = $48binary_subscr.8         ['$48binary_subscr.8', 'block_start']
    $54load_attr.10 = getattr(value=numba_plasma, attr=macro_block_references) ['$54load_attr.10', 'numba_plasma']
    $const58.12 = const(int, 1)              ['$const58.12']
    $60binary_add.13 = activation_level_id + $const58.12 ['$60binary_add.13', '$const58.12', 'activation_level_id']
    $62binary_subscr.14 = getitem(value=$54load_attr.10, index=$60binary_add.13) ['$54load_attr.10', '$60binary_add.13', '$62binary_subscr.14']
    block_end = $62binary_subscr.14          ['$62binary_subscr.14', 'block_end']
    jump 66                                  []
label 66:
    $68load_global.0 = global(range: <class 'range'>) ['$68load_global.0']
    $74call_function.3 = call $68load_global.0(block_start, block_end, func=$68load_global.0, args=[Var(block_start, macro_atom.py:41), Var(block_end, macro_atom.py:42)], kws=(), vararg=None) ['$68load_global.0', '$74call_function.3', 'block_end', 'block_start']
    $76get_iter.4 = getiter(value=$74call_function.3) ['$74call_function.3', '$76get_iter.4']
    $phi78.0 = $76get_iter.4                 ['$76get_iter.4', '$phi78.0']
    jump 78                                  []
label 78:
    $78for_iter.1 = iternext(value=$phi78.0) ['$78for_iter.1', '$phi78.0']
    $78for_iter.2 = pair_first(value=$78for_iter.1) ['$78for_iter.1', '$78for_iter.2']
    $78for_iter.3 = pair_second(value=$78for_iter.1) ['$78for_iter.1', '$78for_iter.3']
    $phi80.1 = $78for_iter.2                 ['$78for_iter.2', '$phi80.1']
    branch $78for_iter.3, 80, 138            ['$78for_iter.3']
label 80:
    transition_id = $phi80.1                 ['$phi80.1', 'transition_id']
    $84load_attr.3 = getattr(value=numba_plasma, attr=transition_probabilities) ['$84load_attr.3', 'numba_plasma']
    $90load_attr.6 = getattr(value=r_packet, attr=current_shell_id) ['$90load_attr.6', 'r_packet']
    $92build_tuple.7 = build_tuple(items=[Var(transition_id, macro_atom.py:45), Var($90load_attr.6, macro_atom.py:48)]) ['$90load_attr.6', '$92build_tuple.7', 'transition_id']
    $94binary_subscr.8 = getitem(value=$84load_attr.3, index=$92build_tuple.7) ['$84load_attr.3', '$92build_tuple.7', '$94binary_subscr.8']
    transition_probability = $94binary_subscr.8 ['$94binary_subscr.8', 'transition_probability']
    $102inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=probability, rhs=transition_probability, static_lhs=Undefined, static_rhs=Undefined) ['$102inplace_add.11', 'probability', 'transition_probability']
    probability = $102inplace_add.11         ['$102inplace_add.11', 'probability']
    $110compare_op.14 = probability > probability_event ['$110compare_op.14', 'probability', 'probability_event']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.14, func=bool112, args=(Var($110compare_op.14, macro_atom.py:53),), kws=(), vararg=None) ['$110compare_op.14', '$112pred', 'bool112']
    branch $112pred, 114, 78                 ['$112pred']
label 114:
    $116load_attr.2 = getattr(value=numba_plasma, attr=destination_level_id) ['$116load_attr.2', 'numba_plasma']
    $120binary_subscr.4 = getitem(value=$116load_attr.2, index=transition_id) ['$116load_attr.2', '$120binary_subscr.4', 'transition_id']
    activation_level_id = $120binary_subscr.4 ['$120binary_subscr.4', 'activation_level_id']
    $126load_attr.6 = getattr(value=numba_plasma, attr=transition_type) ['$126load_attr.6', 'numba_plasma']
    $130binary_subscr.8 = getitem(value=$126load_attr.6, index=transition_id) ['$126load_attr.6', '$130binary_subscr.8', 'transition_id']
    current_transition_type = $130binary_subscr.8 ['$130binary_subscr.8', 'current_transition_type']
    jump 148                                 []
label 138:
    jump 140                                 []
label 140:
    $140load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>) ['$140load_global.0']
    $const142.1 = const(str, MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1) ['$const142.1']
    $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, macro_atom.py:64)], kws=(), vararg=None) ['$140load_global.0', '$144call_function.2', '$const142.1']
    raise $144call_function.2                ['$144call_function.2']
label 148:
    jump 20                                  []
label 150:
    jump 152                                 []
label 152:
    $154load_global.1 = global(MacroAtomTransitionType: <enum 'MacroAtomTransitionType'>) ['$154load_global.1']
    $156load_attr.2 = getattr(value=$154load_global.1, attr=BB_EMISSION) ['$154load_global.1', '$156load_attr.2']
    $158compare_op.3 = current_transition_type == $156load_attr.2 ['$156load_attr.2', '$158compare_op.3', 'current_transition_type']
    bool160 = global(bool: <class 'bool'>)   ['bool160']
    $160pred = call bool160($158compare_op.3, func=bool160, args=(Var($158compare_op.3, macro_atom.py:69),), kws=(), vararg=None) ['$158compare_op.3', '$160pred', 'bool160']
    branch $160pred, 162, 172                ['$160pred']
label 162:
    $164load_attr.1 = getattr(value=numba_plasma, attr=transition_line_id) ['$164load_attr.1', 'numba_plasma']
    $168binary_subscr.3 = getitem(value=$164load_attr.1, index=transition_id) ['$164load_attr.1', '$168binary_subscr.3', 'transition_id']
    $170return_value.4 = cast(value=$168binary_subscr.3) ['$168binary_subscr.3', '$170return_value.4']
    return $170return_value.4                ['$170return_value.4']
label 172:
    $172load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>) ['$172load_global.0']
    $const174.1 = const(str, MacroAtom currently only allows BB transitions) ['$const174.1']
    $176call_function.2 = call $172load_global.0($const174.1, func=$172load_global.0, args=[Var($const174.1, macro_atom.py:72)], kws=(), vararg=None) ['$172load_global.0', '$176call_function.2', '$const174.1']
    raise $176call_function.2                ['$176call_function.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(1, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_plasma, attr=line2macro_level_upper)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: activation_level_id = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $const14.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: current_transition_type = $const14.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block analysis pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block analysis pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: $const22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $24compare_op.2 = current_transition_type >= $const22.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($24compare_op.2, func=bool26, args=(Var($24compare_op.2, macro_atom.py:37),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 150
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: $const28.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: probability = $const28.0
DEBUG:numba.core.ssa:on stmt: $32load_global.1 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $34load_attr.2 = getattr(value=$32load_global.1, attr=random)
DEBUG:numba.core.ssa:on stmt: $36load_method.3 = getattr(value=$34load_attr.2, attr=random)
DEBUG:numba.core.ssa:on stmt: $38call_method.4 = call $36load_method.3(func=$36load_method.3, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: probability_event = $38call_method.4
DEBUG:numba.core.ssa:on stmt: $44load_attr.6 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=$44load_attr.6, index=activation_level_id)
DEBUG:numba.core.ssa:on stmt: block_start = $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $54load_attr.10 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $const58.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $60binary_add.13 = activation_level_id + $const58.12
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=$54load_attr.10, index=$60binary_add.13)
DEBUG:numba.core.ssa:on stmt: block_end = $62binary_subscr.14
DEBUG:numba.core.ssa:on stmt: jump 66
DEBUG:numba.core.ssa:==== SSA block analysis pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: $68load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74call_function.3 = call $68load_global.0(block_start, block_end, func=$68load_global.0, args=[Var(block_start, macro_atom.py:41), Var(block_end, macro_atom.py:42)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $76get_iter.4 = getiter(value=$74call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi78.0 = $76get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:==== SSA block analysis pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: $78for_iter.1 = iternext(value=$phi78.0)
DEBUG:numba.core.ssa:on stmt: $78for_iter.2 = pair_first(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $78for_iter.3 = pair_second(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi80.1 = $78for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $78for_iter.3, 80, 138
DEBUG:numba.core.ssa:==== SSA block analysis pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: transition_id = $phi80.1
DEBUG:numba.core.ssa:on stmt: $84load_attr.3 = getattr(value=numba_plasma, attr=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: $90load_attr.6 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $92build_tuple.7 = build_tuple(items=[Var(transition_id, macro_atom.py:45), Var($90load_attr.6, macro_atom.py:48)])
DEBUG:numba.core.ssa:on stmt: $94binary_subscr.8 = getitem(value=$84load_attr.3, index=$92build_tuple.7)
DEBUG:numba.core.ssa:on stmt: transition_probability = $94binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $102inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=probability, rhs=transition_probability, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: probability = $102inplace_add.11
DEBUG:numba.core.ssa:on stmt: $110compare_op.14 = probability > probability_event
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.14, func=bool112, args=(Var($110compare_op.14, macro_atom.py:53),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 78
DEBUG:numba.core.ssa:==== SSA block analysis pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: $116load_attr.2 = getattr(value=numba_plasma, attr=destination_level_id)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.4 = getitem(value=$116load_attr.2, index=transition_id)
DEBUG:numba.core.ssa:on stmt: activation_level_id = $120binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $126load_attr.6 = getattr(value=numba_plasma, attr=transition_type)
DEBUG:numba.core.ssa:on stmt: $130binary_subscr.8 = getitem(value=$126load_attr.6, index=transition_id)
DEBUG:numba.core.ssa:on stmt: current_transition_type = $130binary_subscr.8
DEBUG:numba.core.ssa:on stmt: jump 148
DEBUG:numba.core.ssa:==== SSA block analysis pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block analysis pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, macro_atom.py:64)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block analysis pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: jump 152
DEBUG:numba.core.ssa:==== SSA block analysis pass on 152
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: $154load_global.1 = global(MacroAtomTransitionType: <enum 'MacroAtomTransitionType'>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.2 = getattr(value=$154load_global.1, attr=BB_EMISSION)
DEBUG:numba.core.ssa:on stmt: $158compare_op.3 = current_transition_type == $156load_attr.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.3, func=bool160, args=(Var($158compare_op.3, macro_atom.py:69),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 172
DEBUG:numba.core.ssa:==== SSA block analysis pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: $164load_attr.1 = getattr(value=numba_plasma, attr=transition_line_id)
DEBUG:numba.core.ssa:on stmt: $168binary_subscr.3 = getitem(value=$164load_attr.1, index=transition_id)
DEBUG:numba.core.ssa:on stmt: $170return_value.4 = cast(value=$168binary_subscr.3)
DEBUG:numba.core.ssa:on stmt: return $170return_value.4
DEBUG:numba.core.ssa:==== SSA block analysis pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45d202d0>
DEBUG:numba.core.ssa:on stmt: $172load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(str, MacroAtom currently only allows BB transitions)
DEBUG:numba.core.ssa:on stmt: $176call_function.2 = call $172load_global.0($const174.1, func=$172load_global.0, args=[Var($const174.1, macro_atom.py:72)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom currently only allows BB transitions')
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102inplace_add.11': [<numba.core.ir.Assign object at 0x7f6e461fb1d0>],
             '$10binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e4686c410>],
             '$110compare_op.14': [<numba.core.ir.Assign object at 0x7f6e461fbd10>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f6e461fbed0>],
             '$116load_attr.2': [<numba.core.ir.Assign object at 0x7f6e461fb650>],
             '$120binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e461fb8d0>],
             '$126load_attr.6': [<numba.core.ir.Assign object at 0x7f6e461fb310>],
             '$130binary_subscr.8': [<numba.core.ir.Assign object at 0x7f6e461fb4d0>],
             '$140load_global.0': [<numba.core.ir.Assign object at 0x7f6e45fa3e50>],
             '$144call_function.2': [<numba.core.ir.Assign object at 0x7f6e45fa3b90>],
             '$154load_global.1': [<numba.core.ir.Assign object at 0x7f6e45fa3150>],
             '$156load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45fa3b50>],
             '$158compare_op.3': [<numba.core.ir.Assign object at 0x7f6e45fa3390>],
             '$160pred': [<numba.core.ir.Assign object at 0x7f6e45fa3650>],
             '$164load_attr.1': [<numba.core.ir.Assign object at 0x7f6e46404a90>],
             '$168binary_subscr.3': [<numba.core.ir.Assign object at 0x7f6e464043d0>],
             '$170return_value.4': [<numba.core.ir.Assign object at 0x7f6e45a8e650>],
             '$172load_global.0': [<numba.core.ir.Assign object at 0x7f6e45a8e710>],
             '$176call_function.2': [<numba.core.ir.Assign object at 0x7f6e45a8e390>],
             '$24compare_op.2': [<numba.core.ir.Assign object at 0x7f6e46548c10>],
             '$26pred': [<numba.core.ir.Assign object at 0x7f6e46548190>],
             '$32load_global.1': [<numba.core.ir.Assign object at 0x7f6e46548950>],
             '$34load_attr.2': [<numba.core.ir.Assign object at 0x7f6e46548b90>],
             '$36load_method.3': [<numba.core.ir.Assign object at 0x7f6e46548550>],
             '$38call_method.4': [<numba.core.ir.Assign object at 0x7f6e465483d0>],
             '$44load_attr.6': [<numba.core.ir.Assign object at 0x7f6e4659da90>],
             '$48binary_subscr.8': [<numba.core.ir.Assign object at 0x7f6e4659dd10>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6e46419b50>],
             '$54load_attr.10': [<numba.core.ir.Assign object at 0x7f6e4659d8d0>],
             '$60binary_add.13': [<numba.core.ir.Assign object at 0x7f6e4658a810>],
             '$62binary_subscr.14': [<numba.core.ir.Assign object at 0x7f6e4658a450>],
             '$68load_global.0': [<numba.core.ir.Assign object at 0x7f6e4658a610>],
             '$74call_function.3': [<numba.core.ir.Assign object at 0x7f6e4688cc10>],
             '$76get_iter.4': [<numba.core.ir.Assign object at 0x7f6e4688c5d0>],
             '$78for_iter.1': [<numba.core.ir.Assign object at 0x7f6e46797d90>],
             '$78for_iter.2': [<numba.core.ir.Assign object at 0x7f6e46797ed0>],
             '$78for_iter.3': [<numba.core.ir.Assign object at 0x7f6e46797410>],
             '$84load_attr.3': [<numba.core.ir.Assign object at 0x7f6e46797d10>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f6e46419550>],
             '$90load_attr.6': [<numba.core.ir.Assign object at 0x7f6e46797850>],
             '$92build_tuple.7': [<numba.core.ir.Assign object at 0x7f6e46797210>],
             '$94binary_subscr.8': [<numba.core.ir.Assign object at 0x7f6e46797a90>],
             '$const14.5': [<numba.core.ir.Assign object at 0x7f6e465d48d0>],
             '$const142.1': [<numba.core.ir.Assign object at 0x7f6e45fa3690>],
             '$const174.1': [<numba.core.ir.Assign object at 0x7f6e45a8ee90>],
             '$const22.1': [<numba.core.ir.Assign object at 0x7f6e465d4190>],
             '$const28.0': [<numba.core.ir.Assign object at 0x7f6e46548a50>],
             '$const58.12': [<numba.core.ir.Assign object at 0x7f6e4658af90>],
             '$phi78.0': [<numba.core.ir.Assign object at 0x7f6e4658a490>],
             '$phi80.1': [<numba.core.ir.Assign object at 0x7f6e46797c50>],
             'activation_level_id': [<numba.core.ir.Assign object at 0x7f6e465d4510>,
                                     <numba.core.ir.Assign object at 0x7f6e461fbbd0>],
             'block_end': [<numba.core.ir.Assign object at 0x7f6e4658ad10>],
             'block_start': [<numba.core.ir.Assign object at 0x7f6e4659d7d0>],
             'bool112': [<numba.core.ir.Assign object at 0x7f6e461fb850>],
             'bool160': [<numba.core.ir.Assign object at 0x7f6e45fa3110>],
             'bool26': [<numba.core.ir.Assign object at 0x7f6e46548f50>],
             'current_transition_type': [<numba.core.ir.Assign object at 0x7f6e465d4610>,
                                         <numba.core.ir.Assign object at 0x7f6e461fba90>],
             'numba_plasma': [<numba.core.ir.Assign object at 0x7f6e46419e90>],
             'probability': [<numba.core.ir.Assign object at 0x7f6e46548ed0>,
                             <numba.core.ir.Assign object at 0x7f6e46797710>],
             'probability_event': [<numba.core.ir.Assign object at 0x7f6e46548390>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e464199d0>],
             'transition_id': [<numba.core.ir.Assign object at 0x7f6e46797090>],
             'transition_probability': [<numba.core.ir.Assign object at 0x7f6e46797c10>]})
DEBUG:numba.core.ssa:SSA violators {'current_transition_type', 'activation_level_id', 'probability'}
DEBUG:numba.core.ssa:Fix SSA violator on var current_transition_type
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(1, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_plasma, attr=line2macro_level_upper)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: activation_level_id = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $const14.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: current_transition_type = $const14.5
DEBUG:numba.core.ssa:first assign: current_transition_type
DEBUG:numba.core.ssa:replaced with: current_transition_type = $const14.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: $const22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $24compare_op.2 = current_transition_type >= $const22.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($24compare_op.2, func=bool26, args=(Var($24compare_op.2, macro_atom.py:37),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: $const28.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: probability = $const28.0
DEBUG:numba.core.ssa:on stmt: $32load_global.1 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $34load_attr.2 = getattr(value=$32load_global.1, attr=random)
DEBUG:numba.core.ssa:on stmt: $36load_method.3 = getattr(value=$34load_attr.2, attr=random)
DEBUG:numba.core.ssa:on stmt: $38call_method.4 = call $36load_method.3(func=$36load_method.3, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: probability_event = $38call_method.4
DEBUG:numba.core.ssa:on stmt: $44load_attr.6 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=$44load_attr.6, index=activation_level_id)
DEBUG:numba.core.ssa:on stmt: block_start = $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $54load_attr.10 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $const58.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $60binary_add.13 = activation_level_id + $const58.12
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=$54load_attr.10, index=$60binary_add.13)
DEBUG:numba.core.ssa:on stmt: block_end = $62binary_subscr.14
DEBUG:numba.core.ssa:on stmt: jump 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: $68load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74call_function.3 = call $68load_global.0(block_start, block_end, func=$68load_global.0, args=[Var(block_start, macro_atom.py:41), Var(block_end, macro_atom.py:42)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $76get_iter.4 = getiter(value=$74call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi78.0 = $76get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: $78for_iter.1 = iternext(value=$phi78.0)
DEBUG:numba.core.ssa:on stmt: $78for_iter.2 = pair_first(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $78for_iter.3 = pair_second(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi80.1 = $78for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $78for_iter.3, 80, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: transition_id = $phi80.1
DEBUG:numba.core.ssa:on stmt: $84load_attr.3 = getattr(value=numba_plasma, attr=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: $90load_attr.6 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $92build_tuple.7 = build_tuple(items=[Var(transition_id, macro_atom.py:45), Var($90load_attr.6, macro_atom.py:48)])
DEBUG:numba.core.ssa:on stmt: $94binary_subscr.8 = getitem(value=$84load_attr.3, index=$92build_tuple.7)
DEBUG:numba.core.ssa:on stmt: transition_probability = $94binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $102inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=probability, rhs=transition_probability, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: probability = $102inplace_add.11
DEBUG:numba.core.ssa:on stmt: $110compare_op.14 = probability > probability_event
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.14, func=bool112, args=(Var($110compare_op.14, macro_atom.py:53),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: $116load_attr.2 = getattr(value=numba_plasma, attr=destination_level_id)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.4 = getitem(value=$116load_attr.2, index=transition_id)
DEBUG:numba.core.ssa:on stmt: activation_level_id = $120binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $126load_attr.6 = getattr(value=numba_plasma, attr=transition_type)
DEBUG:numba.core.ssa:on stmt: $130binary_subscr.8 = getitem(value=$126load_attr.6, index=transition_id)
DEBUG:numba.core.ssa:on stmt: current_transition_type = $130binary_subscr.8
DEBUG:numba.core.ssa:replaced with: current_transition_type.1 = $130binary_subscr.8
DEBUG:numba.core.ssa:on stmt: jump 148
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, macro_atom.py:64)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: jump 152
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 152
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: $154load_global.1 = global(MacroAtomTransitionType: <enum 'MacroAtomTransitionType'>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.2 = getattr(value=$154load_global.1, attr=BB_EMISSION)
DEBUG:numba.core.ssa:on stmt: $158compare_op.3 = current_transition_type == $156load_attr.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.3, func=bool160, args=(Var($158compare_op.3, macro_atom.py:69),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: $164load_attr.1 = getattr(value=numba_plasma, attr=transition_line_id)
DEBUG:numba.core.ssa:on stmt: $168binary_subscr.3 = getitem(value=$164load_attr.1, index=transition_id)
DEBUG:numba.core.ssa:on stmt: $170return_value.4 = cast(value=$168binary_subscr.3)
DEBUG:numba.core.ssa:on stmt: return $170return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e45de7a90>
DEBUG:numba.core.ssa:on stmt: $172load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(str, MacroAtom currently only allows BB transitions)
DEBUG:numba.core.ssa:on stmt: $176call_function.2 = call $172load_global.0($const174.1, func=$172load_global.0, args=[Var($const174.1, macro_atom.py:72)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom currently only allows BB transitions')
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e46f368d0>],
             114: [<numba.core.ir.Assign object at 0x7f6e45d20d90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(1, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_plasma, attr=line2macro_level_upper)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: activation_level_id = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $const14.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: current_transition_type = $const14.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: $const22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $24compare_op.2 = current_transition_type >= $const22.1
DEBUG:numba.core.ssa:find_def var='current_transition_type' stmt=$24compare_op.2 = current_transition_type >= $const22.1
DEBUG:numba.core.ssa:find_def_from_top label 20
DEBUG:numba.core.ssa:insert phi node current_transition_type.2 = phi(incoming_values=[], incoming_blocks=[]) at 20
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:find_def_from_top label 18
DEBUG:numba.core.ssa:idom 0 from label 18
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def current_transition_type = $const14.5
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 114 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 114
DEBUG:numba.core.ssa:incoming_def current_transition_type.1 = $130binary_subscr.8
DEBUG:numba.core.ssa:replaced with: $24compare_op.2 = current_transition_type.2 >= $const22.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($24compare_op.2, func=bool26, args=(Var($24compare_op.2, macro_atom.py:37),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: $const28.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: probability = $const28.0
DEBUG:numba.core.ssa:on stmt: $32load_global.1 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $34load_attr.2 = getattr(value=$32load_global.1, attr=random)
DEBUG:numba.core.ssa:on stmt: $36load_method.3 = getattr(value=$34load_attr.2, attr=random)
DEBUG:numba.core.ssa:on stmt: $38call_method.4 = call $36load_method.3(func=$36load_method.3, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: probability_event = $38call_method.4
DEBUG:numba.core.ssa:on stmt: $44load_attr.6 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=$44load_attr.6, index=activation_level_id)
DEBUG:numba.core.ssa:on stmt: block_start = $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $54load_attr.10 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $const58.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $60binary_add.13 = activation_level_id + $const58.12
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=$54load_attr.10, index=$60binary_add.13)
DEBUG:numba.core.ssa:on stmt: block_end = $62binary_subscr.14
DEBUG:numba.core.ssa:on stmt: jump 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: $68load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74call_function.3 = call $68load_global.0(block_start, block_end, func=$68load_global.0, args=[Var(block_start, macro_atom.py:41), Var(block_end, macro_atom.py:42)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $76get_iter.4 = getiter(value=$74call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi78.0 = $76get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: $78for_iter.1 = iternext(value=$phi78.0)
DEBUG:numba.core.ssa:on stmt: $78for_iter.2 = pair_first(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $78for_iter.3 = pair_second(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi80.1 = $78for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $78for_iter.3, 80, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: transition_id = $phi80.1
DEBUG:numba.core.ssa:on stmt: $84load_attr.3 = getattr(value=numba_plasma, attr=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: $90load_attr.6 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $92build_tuple.7 = build_tuple(items=[Var(transition_id, macro_atom.py:45), Var($90load_attr.6, macro_atom.py:48)])
DEBUG:numba.core.ssa:on stmt: $94binary_subscr.8 = getitem(value=$84load_attr.3, index=$92build_tuple.7)
DEBUG:numba.core.ssa:on stmt: transition_probability = $94binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $102inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=probability, rhs=transition_probability, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: probability = $102inplace_add.11
DEBUG:numba.core.ssa:on stmt: $110compare_op.14 = probability > probability_event
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.14, func=bool112, args=(Var($110compare_op.14, macro_atom.py:53),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: $116load_attr.2 = getattr(value=numba_plasma, attr=destination_level_id)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.4 = getitem(value=$116load_attr.2, index=transition_id)
DEBUG:numba.core.ssa:on stmt: activation_level_id = $120binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $126load_attr.6 = getattr(value=numba_plasma, attr=transition_type)
DEBUG:numba.core.ssa:on stmt: $130binary_subscr.8 = getitem(value=$126load_attr.6, index=transition_id)
DEBUG:numba.core.ssa:on stmt: current_transition_type.1 = $130binary_subscr.8
DEBUG:numba.core.ssa:on stmt: jump 148
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, macro_atom.py:64)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: jump 152
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 152
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: $154load_global.1 = global(MacroAtomTransitionType: <enum 'MacroAtomTransitionType'>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.2 = getattr(value=$154load_global.1, attr=BB_EMISSION)
DEBUG:numba.core.ssa:on stmt: $158compare_op.3 = current_transition_type == $156load_attr.2
DEBUG:numba.core.ssa:find_def var='current_transition_type' stmt=$158compare_op.3 = current_transition_type == $156load_attr.2
DEBUG:numba.core.ssa:find_def_from_top label 152
DEBUG:numba.core.ssa:idom 150 from label 152
DEBUG:numba.core.ssa:find_def_from_bottom label 150
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 20 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:replaced with: $158compare_op.3 = current_transition_type.2 == $156load_attr.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.3, func=bool160, args=(Var($158compare_op.3, macro_atom.py:69),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: $164load_attr.1 = getattr(value=numba_plasma, attr=transition_line_id)
DEBUG:numba.core.ssa:on stmt: $168binary_subscr.3 = getitem(value=$164load_attr.1, index=transition_id)
DEBUG:numba.core.ssa:on stmt: $170return_value.4 = cast(value=$168binary_subscr.3)
DEBUG:numba.core.ssa:on stmt: return $170return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e463cdbd0>
DEBUG:numba.core.ssa:on stmt: $172load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(str, MacroAtom currently only allows BB transitions)
DEBUG:numba.core.ssa:on stmt: $176call_function.2 = call $172load_global.0($const174.1, func=$172load_global.0, args=[Var($const174.1, macro_atom.py:72)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom currently only allows BB transitions')
DEBUG:numba.core.ssa:Fix SSA violator on var activation_level_id
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(1, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_plasma, attr=line2macro_level_upper)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: activation_level_id = $10binary_subscr.4
DEBUG:numba.core.ssa:first assign: activation_level_id
DEBUG:numba.core.ssa:replaced with: activation_level_id = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $const14.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: current_transition_type = $const14.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: current_transition_type.2 = phi(incoming_values=[Var(current_transition_type, macro_atom.py:35), Var(current_transition_type.1, macro_atom.py:58)], incoming_blocks=[18, 148])
DEBUG:numba.core.ssa:on stmt: $const22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $24compare_op.2 = current_transition_type.2 >= $const22.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($24compare_op.2, func=bool26, args=(Var($24compare_op.2, macro_atom.py:37),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: $const28.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: probability = $const28.0
DEBUG:numba.core.ssa:on stmt: $32load_global.1 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $34load_attr.2 = getattr(value=$32load_global.1, attr=random)
DEBUG:numba.core.ssa:on stmt: $36load_method.3 = getattr(value=$34load_attr.2, attr=random)
DEBUG:numba.core.ssa:on stmt: $38call_method.4 = call $36load_method.3(func=$36load_method.3, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: probability_event = $38call_method.4
DEBUG:numba.core.ssa:on stmt: $44load_attr.6 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=$44load_attr.6, index=activation_level_id)
DEBUG:numba.core.ssa:on stmt: block_start = $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $54load_attr.10 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $const58.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $60binary_add.13 = activation_level_id + $const58.12
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=$54load_attr.10, index=$60binary_add.13)
DEBUG:numba.core.ssa:on stmt: block_end = $62binary_subscr.14
DEBUG:numba.core.ssa:on stmt: jump 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: $68load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74call_function.3 = call $68load_global.0(block_start, block_end, func=$68load_global.0, args=[Var(block_start, macro_atom.py:41), Var(block_end, macro_atom.py:42)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $76get_iter.4 = getiter(value=$74call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi78.0 = $76get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: $78for_iter.1 = iternext(value=$phi78.0)
DEBUG:numba.core.ssa:on stmt: $78for_iter.2 = pair_first(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $78for_iter.3 = pair_second(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi80.1 = $78for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $78for_iter.3, 80, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: transition_id = $phi80.1
DEBUG:numba.core.ssa:on stmt: $84load_attr.3 = getattr(value=numba_plasma, attr=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: $90load_attr.6 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $92build_tuple.7 = build_tuple(items=[Var(transition_id, macro_atom.py:45), Var($90load_attr.6, macro_atom.py:48)])
DEBUG:numba.core.ssa:on stmt: $94binary_subscr.8 = getitem(value=$84load_attr.3, index=$92build_tuple.7)
DEBUG:numba.core.ssa:on stmt: transition_probability = $94binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $102inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=probability, rhs=transition_probability, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: probability = $102inplace_add.11
DEBUG:numba.core.ssa:on stmt: $110compare_op.14 = probability > probability_event
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.14, func=bool112, args=(Var($110compare_op.14, macro_atom.py:53),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: $116load_attr.2 = getattr(value=numba_plasma, attr=destination_level_id)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.4 = getitem(value=$116load_attr.2, index=transition_id)
DEBUG:numba.core.ssa:on stmt: activation_level_id = $120binary_subscr.4
DEBUG:numba.core.ssa:replaced with: activation_level_id.1 = $120binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $126load_attr.6 = getattr(value=numba_plasma, attr=transition_type)
DEBUG:numba.core.ssa:on stmt: $130binary_subscr.8 = getitem(value=$126load_attr.6, index=transition_id)
DEBUG:numba.core.ssa:on stmt: current_transition_type.1 = $130binary_subscr.8
DEBUG:numba.core.ssa:on stmt: jump 148
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, macro_atom.py:64)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: jump 152
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 152
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: $154load_global.1 = global(MacroAtomTransitionType: <enum 'MacroAtomTransitionType'>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.2 = getattr(value=$154load_global.1, attr=BB_EMISSION)
DEBUG:numba.core.ssa:on stmt: $158compare_op.3 = current_transition_type.2 == $156load_attr.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.3, func=bool160, args=(Var($158compare_op.3, macro_atom.py:69),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: $164load_attr.1 = getattr(value=numba_plasma, attr=transition_line_id)
DEBUG:numba.core.ssa:on stmt: $168binary_subscr.3 = getitem(value=$164load_attr.1, index=transition_id)
DEBUG:numba.core.ssa:on stmt: $170return_value.4 = cast(value=$168binary_subscr.3)
DEBUG:numba.core.ssa:on stmt: return $170return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e461a7990>
DEBUG:numba.core.ssa:on stmt: $172load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(str, MacroAtom currently only allows BB transitions)
DEBUG:numba.core.ssa:on stmt: $176call_function.2 = call $172load_global.0($const174.1, func=$172load_global.0, args=[Var($const174.1, macro_atom.py:72)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom currently only allows BB transitions')
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6e45a8ebd0>],
             114: [<numba.core.ir.Assign object at 0x7f6e46797d50>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(1, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_plasma, attr=line2macro_level_upper)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: activation_level_id = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $const14.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: current_transition_type = $const14.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: current_transition_type.2 = phi(incoming_values=[Var(current_transition_type, macro_atom.py:35), Var(current_transition_type.1, macro_atom.py:58)], incoming_blocks=[18, 148])
DEBUG:numba.core.ssa:on stmt: $const22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $24compare_op.2 = current_transition_type.2 >= $const22.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($24compare_op.2, func=bool26, args=(Var($24compare_op.2, macro_atom.py:37),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: $const28.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: probability = $const28.0
DEBUG:numba.core.ssa:on stmt: $32load_global.1 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $34load_attr.2 = getattr(value=$32load_global.1, attr=random)
DEBUG:numba.core.ssa:on stmt: $36load_method.3 = getattr(value=$34load_attr.2, attr=random)
DEBUG:numba.core.ssa:on stmt: $38call_method.4 = call $36load_method.3(func=$36load_method.3, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: probability_event = $38call_method.4
DEBUG:numba.core.ssa:on stmt: $44load_attr.6 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=$44load_attr.6, index=activation_level_id)
DEBUG:numba.core.ssa:find_def var='activation_level_id' stmt=$48binary_subscr.8 = getitem(value=$44load_attr.6, index=activation_level_id)
DEBUG:numba.core.ssa:find_def_from_top label 28
DEBUG:numba.core.ssa:idom 20 from label 28
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:find_def_from_top label 20
DEBUG:numba.core.ssa:insert phi node activation_level_id.2 = phi(incoming_values=[], incoming_blocks=[]) at 20
DEBUG:numba.core.ssa:find_def_from_bottom label 18
DEBUG:numba.core.ssa:find_def_from_top label 18
DEBUG:numba.core.ssa:idom 0 from label 18
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def activation_level_id = $10binary_subscr.4
DEBUG:numba.core.ssa:find_def_from_bottom label 148
DEBUG:numba.core.ssa:find_def_from_top label 148
DEBUG:numba.core.ssa:idom 114 from label 148
DEBUG:numba.core.ssa:find_def_from_bottom label 114
DEBUG:numba.core.ssa:incoming_def activation_level_id.1 = $120binary_subscr.4
DEBUG:numba.core.ssa:replaced with: $48binary_subscr.8 = getitem(value=$44load_attr.6, index=activation_level_id.2)
DEBUG:numba.core.ssa:on stmt: block_start = $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $54load_attr.10 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $const58.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $60binary_add.13 = activation_level_id + $const58.12
DEBUG:numba.core.ssa:find_def var='activation_level_id' stmt=$60binary_add.13 = activation_level_id + $const58.12
DEBUG:numba.core.ssa:find_def_from_top label 28
DEBUG:numba.core.ssa:idom 20 from label 28
DEBUG:numba.core.ssa:find_def_from_bottom label 20
DEBUG:numba.core.ssa:replaced with: $60binary_add.13 = activation_level_id.2 + $const58.12
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=$54load_attr.10, index=$60binary_add.13)
DEBUG:numba.core.ssa:on stmt: block_end = $62binary_subscr.14
DEBUG:numba.core.ssa:on stmt: jump 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: $68load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74call_function.3 = call $68load_global.0(block_start, block_end, func=$68load_global.0, args=[Var(block_start, macro_atom.py:41), Var(block_end, macro_atom.py:42)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $76get_iter.4 = getiter(value=$74call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi78.0 = $76get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: $78for_iter.1 = iternext(value=$phi78.0)
DEBUG:numba.core.ssa:on stmt: $78for_iter.2 = pair_first(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $78for_iter.3 = pair_second(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi80.1 = $78for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $78for_iter.3, 80, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: transition_id = $phi80.1
DEBUG:numba.core.ssa:on stmt: $84load_attr.3 = getattr(value=numba_plasma, attr=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: $90load_attr.6 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $92build_tuple.7 = build_tuple(items=[Var(transition_id, macro_atom.py:45), Var($90load_attr.6, macro_atom.py:48)])
DEBUG:numba.core.ssa:on stmt: $94binary_subscr.8 = getitem(value=$84load_attr.3, index=$92build_tuple.7)
DEBUG:numba.core.ssa:on stmt: transition_probability = $94binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $102inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=probability, rhs=transition_probability, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: probability = $102inplace_add.11
DEBUG:numba.core.ssa:on stmt: $110compare_op.14 = probability > probability_event
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.14, func=bool112, args=(Var($110compare_op.14, macro_atom.py:53),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: $116load_attr.2 = getattr(value=numba_plasma, attr=destination_level_id)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.4 = getitem(value=$116load_attr.2, index=transition_id)
DEBUG:numba.core.ssa:on stmt: activation_level_id.1 = $120binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $126load_attr.6 = getattr(value=numba_plasma, attr=transition_type)
DEBUG:numba.core.ssa:on stmt: $130binary_subscr.8 = getitem(value=$126load_attr.6, index=transition_id)
DEBUG:numba.core.ssa:on stmt: current_transition_type.1 = $130binary_subscr.8
DEBUG:numba.core.ssa:on stmt: jump 148
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, macro_atom.py:64)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: jump 152
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 152
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: $154load_global.1 = global(MacroAtomTransitionType: <enum 'MacroAtomTransitionType'>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.2 = getattr(value=$154load_global.1, attr=BB_EMISSION)
DEBUG:numba.core.ssa:on stmt: $158compare_op.3 = current_transition_type.2 == $156load_attr.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.3, func=bool160, args=(Var($158compare_op.3, macro_atom.py:69),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: $164load_attr.1 = getattr(value=numba_plasma, attr=transition_line_id)
DEBUG:numba.core.ssa:on stmt: $168binary_subscr.3 = getitem(value=$164load_attr.1, index=transition_id)
DEBUG:numba.core.ssa:on stmt: $170return_value.4 = cast(value=$168binary_subscr.3)
DEBUG:numba.core.ssa:on stmt: return $170return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e45b78f90>
DEBUG:numba.core.ssa:on stmt: $172load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(str, MacroAtom currently only allows BB transitions)
DEBUG:numba.core.ssa:on stmt: $176call_function.2 = call $172load_global.0($const174.1, func=$172load_global.0, args=[Var($const174.1, macro_atom.py:72)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom currently only allows BB transitions')
DEBUG:numba.core.ssa:Fix SSA violator on var probability
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(1, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_plasma, attr=line2macro_level_upper)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: activation_level_id = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $const14.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: current_transition_type = $const14.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: activation_level_id.2 = phi(incoming_values=[Var(activation_level_id, macro_atom.py:33), Var(activation_level_id.1, macro_atom.py:55)], incoming_blocks=[18, 148])
DEBUG:numba.core.ssa:on stmt: current_transition_type.2 = phi(incoming_values=[Var(current_transition_type, macro_atom.py:35), Var(current_transition_type.1, macro_atom.py:58)], incoming_blocks=[18, 148])
DEBUG:numba.core.ssa:on stmt: $const22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $24compare_op.2 = current_transition_type.2 >= $const22.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($24compare_op.2, func=bool26, args=(Var($24compare_op.2, macro_atom.py:37),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: $const28.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: probability = $const28.0
DEBUG:numba.core.ssa:first assign: probability
DEBUG:numba.core.ssa:replaced with: probability = $const28.0
DEBUG:numba.core.ssa:on stmt: $32load_global.1 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $34load_attr.2 = getattr(value=$32load_global.1, attr=random)
DEBUG:numba.core.ssa:on stmt: $36load_method.3 = getattr(value=$34load_attr.2, attr=random)
DEBUG:numba.core.ssa:on stmt: $38call_method.4 = call $36load_method.3(func=$36load_method.3, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: probability_event = $38call_method.4
DEBUG:numba.core.ssa:on stmt: $44load_attr.6 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=$44load_attr.6, index=activation_level_id.2)
DEBUG:numba.core.ssa:on stmt: block_start = $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $54load_attr.10 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $const58.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $60binary_add.13 = activation_level_id.2 + $const58.12
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=$54load_attr.10, index=$60binary_add.13)
DEBUG:numba.core.ssa:on stmt: block_end = $62binary_subscr.14
DEBUG:numba.core.ssa:on stmt: jump 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: $68load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74call_function.3 = call $68load_global.0(block_start, block_end, func=$68load_global.0, args=[Var(block_start, macro_atom.py:41), Var(block_end, macro_atom.py:42)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $76get_iter.4 = getiter(value=$74call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi78.0 = $76get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: $78for_iter.1 = iternext(value=$phi78.0)
DEBUG:numba.core.ssa:on stmt: $78for_iter.2 = pair_first(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $78for_iter.3 = pair_second(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi80.1 = $78for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $78for_iter.3, 80, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: transition_id = $phi80.1
DEBUG:numba.core.ssa:on stmt: $84load_attr.3 = getattr(value=numba_plasma, attr=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: $90load_attr.6 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $92build_tuple.7 = build_tuple(items=[Var(transition_id, macro_atom.py:45), Var($90load_attr.6, macro_atom.py:48)])
DEBUG:numba.core.ssa:on stmt: $94binary_subscr.8 = getitem(value=$84load_attr.3, index=$92build_tuple.7)
DEBUG:numba.core.ssa:on stmt: transition_probability = $94binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $102inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=probability, rhs=transition_probability, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: probability = $102inplace_add.11
DEBUG:numba.core.ssa:replaced with: probability.1 = $102inplace_add.11
DEBUG:numba.core.ssa:on stmt: $110compare_op.14 = probability > probability_event
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.14, func=bool112, args=(Var($110compare_op.14, macro_atom.py:53),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: $116load_attr.2 = getattr(value=numba_plasma, attr=destination_level_id)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.4 = getitem(value=$116load_attr.2, index=transition_id)
DEBUG:numba.core.ssa:on stmt: activation_level_id.1 = $120binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $126load_attr.6 = getattr(value=numba_plasma, attr=transition_type)
DEBUG:numba.core.ssa:on stmt: $130binary_subscr.8 = getitem(value=$126load_attr.6, index=transition_id)
DEBUG:numba.core.ssa:on stmt: current_transition_type.1 = $130binary_subscr.8
DEBUG:numba.core.ssa:on stmt: jump 148
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, macro_atom.py:64)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: jump 152
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 152
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: $154load_global.1 = global(MacroAtomTransitionType: <enum 'MacroAtomTransitionType'>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.2 = getattr(value=$154load_global.1, attr=BB_EMISSION)
DEBUG:numba.core.ssa:on stmt: $158compare_op.3 = current_transition_type.2 == $156load_attr.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.3, func=bool160, args=(Var($158compare_op.3, macro_atom.py:69),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: $164load_attr.1 = getattr(value=numba_plasma, attr=transition_line_id)
DEBUG:numba.core.ssa:on stmt: $168binary_subscr.3 = getitem(value=$164load_attr.1, index=transition_id)
DEBUG:numba.core.ssa:on stmt: $170return_value.4 = cast(value=$168binary_subscr.3)
DEBUG:numba.core.ssa:on stmt: return $170return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e463de190>
DEBUG:numba.core.ssa:on stmt: $172load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(str, MacroAtom currently only allows BB transitions)
DEBUG:numba.core.ssa:on stmt: $176call_function.2 = call $172load_global.0($const174.1, func=$172load_global.0, args=[Var($const174.1, macro_atom.py:72)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom currently only allows BB transitions')
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {28: [<numba.core.ir.Assign object at 0x7f6e467970d0>],
             80: [<numba.core.ir.Assign object at 0x7f6e45d20910>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: numba_plasma = arg(1, name=numba_plasma)
DEBUG:numba.core.ssa:on stmt: $4load_attr.1 = getattr(value=numba_plasma, attr=line2macro_level_upper)
DEBUG:numba.core.ssa:on stmt: $8load_attr.3 = getattr(value=r_packet, attr=next_line_id)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.4 = getitem(value=$4load_attr.1, index=$8load_attr.3)
DEBUG:numba.core.ssa:on stmt: activation_level_id = $10binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $const14.5 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: current_transition_type = $const14.5
DEBUG:numba.core.ssa:on stmt: jump 18
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 18
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 20
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: activation_level_id.2 = phi(incoming_values=[Var(activation_level_id, macro_atom.py:33), Var(activation_level_id.1, macro_atom.py:55)], incoming_blocks=[18, 148])
DEBUG:numba.core.ssa:on stmt: current_transition_type.2 = phi(incoming_values=[Var(current_transition_type, macro_atom.py:35), Var(current_transition_type.1, macro_atom.py:58)], incoming_blocks=[18, 148])
DEBUG:numba.core.ssa:on stmt: $const22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $24compare_op.2 = current_transition_type.2 >= $const22.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($24compare_op.2, func=bool26, args=(Var($24compare_op.2, macro_atom.py:37),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: $const28.0 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: probability = $const28.0
DEBUG:numba.core.ssa:on stmt: $32load_global.1 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $34load_attr.2 = getattr(value=$32load_global.1, attr=random)
DEBUG:numba.core.ssa:on stmt: $36load_method.3 = getattr(value=$34load_attr.2, attr=random)
DEBUG:numba.core.ssa:on stmt: $38call_method.4 = call $36load_method.3(func=$36load_method.3, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: probability_event = $38call_method.4
DEBUG:numba.core.ssa:on stmt: $44load_attr.6 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.8 = getitem(value=$44load_attr.6, index=activation_level_id.2)
DEBUG:numba.core.ssa:on stmt: block_start = $48binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $54load_attr.10 = getattr(value=numba_plasma, attr=macro_block_references)
DEBUG:numba.core.ssa:on stmt: $const58.12 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $60binary_add.13 = activation_level_id.2 + $const58.12
DEBUG:numba.core.ssa:on stmt: $62binary_subscr.14 = getitem(value=$54load_attr.10, index=$60binary_add.13)
DEBUG:numba.core.ssa:on stmt: block_end = $62binary_subscr.14
DEBUG:numba.core.ssa:on stmt: jump 66
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: $68load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $74call_function.3 = call $68load_global.0(block_start, block_end, func=$68load_global.0, args=[Var(block_start, macro_atom.py:41), Var(block_end, macro_atom.py:42)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $76get_iter.4 = getiter(value=$74call_function.3)
DEBUG:numba.core.ssa:on stmt: $phi78.0 = $76get_iter.4
DEBUG:numba.core.ssa:on stmt: jump 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: $78for_iter.1 = iternext(value=$phi78.0)
DEBUG:numba.core.ssa:on stmt: $78for_iter.2 = pair_first(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $78for_iter.3 = pair_second(value=$78for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi80.1 = $78for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $78for_iter.3, 80, 138
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: transition_id = $phi80.1
DEBUG:numba.core.ssa:on stmt: $84load_attr.3 = getattr(value=numba_plasma, attr=transition_probabilities)
DEBUG:numba.core.ssa:on stmt: $90load_attr.6 = getattr(value=r_packet, attr=current_shell_id)
DEBUG:numba.core.ssa:on stmt: $92build_tuple.7 = build_tuple(items=[Var(transition_id, macro_atom.py:45), Var($90load_attr.6, macro_atom.py:48)])
DEBUG:numba.core.ssa:on stmt: $94binary_subscr.8 = getitem(value=$84load_attr.3, index=$92build_tuple.7)
DEBUG:numba.core.ssa:on stmt: transition_probability = $94binary_subscr.8
DEBUG:numba.core.ssa:on stmt: $102inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=probability, rhs=transition_probability, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='probability' stmt=$102inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=probability, rhs=transition_probability, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 80
DEBUG:numba.core.ssa:idom 78 from label 80
DEBUG:numba.core.ssa:find_def_from_bottom label 78
DEBUG:numba.core.ssa:find_def_from_top label 78
DEBUG:numba.core.ssa:insert phi node probability.2 = phi(incoming_values=[], incoming_blocks=[]) at 78
DEBUG:numba.core.ssa:find_def_from_bottom label 80
DEBUG:numba.core.ssa:incoming_def probability.1 = $102inplace_add.11
DEBUG:numba.core.ssa:find_def_from_bottom label 66
DEBUG:numba.core.ssa:find_def_from_top label 66
DEBUG:numba.core.ssa:idom 28 from label 66
DEBUG:numba.core.ssa:find_def_from_bottom label 28
DEBUG:numba.core.ssa:incoming_def probability = $const28.0
DEBUG:numba.core.ssa:replaced with: $102inplace_add.11 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=probability.2, rhs=transition_probability, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: probability.1 = $102inplace_add.11
DEBUG:numba.core.ssa:on stmt: $110compare_op.14 = probability > probability_event
DEBUG:numba.core.ssa:find_def var='probability' stmt=$110compare_op.14 = probability > probability_event
DEBUG:numba.core.ssa:replaced with: $110compare_op.14 = probability.1 > probability_event
DEBUG:numba.core.ssa:on stmt: bool112 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $112pred = call bool112($110compare_op.14, func=bool112, args=(Var($110compare_op.14, macro_atom.py:53),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $112pred, 114, 78
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 114
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: $116load_attr.2 = getattr(value=numba_plasma, attr=destination_level_id)
DEBUG:numba.core.ssa:on stmt: $120binary_subscr.4 = getitem(value=$116load_attr.2, index=transition_id)
DEBUG:numba.core.ssa:on stmt: activation_level_id.1 = $120binary_subscr.4
DEBUG:numba.core.ssa:on stmt: $126load_attr.6 = getattr(value=numba_plasma, attr=transition_type)
DEBUG:numba.core.ssa:on stmt: $130binary_subscr.8 = getitem(value=$126load_attr.6, index=transition_id)
DEBUG:numba.core.ssa:on stmt: current_transition_type.1 = $130binary_subscr.8
DEBUG:numba.core.ssa:on stmt: jump 148
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 138
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: jump 140
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 140
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: $140load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const142.1 = const(str, MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1)
DEBUG:numba.core.ssa:on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, macro_atom.py:64)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom ran out of the block. This should not happen as the sum of probabilities is normalized to 1 and the probability_event should be less than 1')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: jump 20
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: jump 152
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 152
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: $154load_global.1 = global(MacroAtomTransitionType: <enum 'MacroAtomTransitionType'>)
DEBUG:numba.core.ssa:on stmt: $156load_attr.2 = getattr(value=$154load_global.1, attr=BB_EMISSION)
DEBUG:numba.core.ssa:on stmt: $158compare_op.3 = current_transition_type.2 == $156load_attr.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.3, func=bool160, args=(Var($158compare_op.3, macro_atom.py:69),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: $164load_attr.1 = getattr(value=numba_plasma, attr=transition_line_id)
DEBUG:numba.core.ssa:on stmt: $168binary_subscr.3 = getitem(value=$164load_attr.1, index=transition_id)
DEBUG:numba.core.ssa:on stmt: $170return_value.4 = cast(value=$168binary_subscr.3)
DEBUG:numba.core.ssa:on stmt: return $170return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e465489d0>
DEBUG:numba.core.ssa:on stmt: $172load_global.0 = global(MacroAtomError: <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>)
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(str, MacroAtom currently only allows BB transitions)
DEBUG:numba.core.ssa:on stmt: $176call_function.2 = call $172load_global.0($const174.1, func=$172load_global.0, args=[Var($const174.1, macro_atom.py:72)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'tardis.montecarlo.montecarlo_numba.macro_atom.MacroAtomError'>('MacroAtom currently only allows BB transitions')
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=35)
           2	LOAD_GLOBAL(arg=0, lineno=35)
           4	LOAD_FAST(arg=0, lineno=36)
           6	LOAD_ATTR(arg=1, lineno=36)
           8	LOAD_FAST(arg=0, lineno=36)
          10	LOAD_ATTR(arg=2, lineno=36)
          12	LOAD_FAST(arg=1, lineno=36)
          14	CALL_FUNCTION(arg=3, lineno=36)
          16	STORE_FAST(arg=2, lineno=36)
          18	LOAD_FAST(arg=0, lineno=38)
          20	LOAD_ATTR(arg=3, lineno=38)
          22	LOAD_FAST(arg=2, lineno=38)
          24	BINARY_MULTIPLY(arg=None, lineno=38)
          26	STORE_FAST(arg=3, lineno=38)
          28	LOAD_FAST(arg=0, lineno=39)
          30	LOAD_ATTR(arg=4, lineno=39)
          32	LOAD_FAST(arg=2, lineno=39)
          34	BINARY_MULTIPLY(arg=None, lineno=39)
          36	STORE_FAST(arg=4, lineno=39)
          38	LOAD_GLOBAL(arg=5, lineno=40)
          40	CALL_FUNCTION(arg=0, lineno=40)
          42	LOAD_FAST(arg=0, lineno=40)
          44	STORE_ATTR(arg=2, lineno=40)
          46	LOAD_GLOBAL(arg=6, lineno=41)
          48	LOAD_FAST(arg=0, lineno=42)
          50	LOAD_ATTR(arg=1, lineno=42)
          52	LOAD_FAST(arg=0, lineno=42)
          54	LOAD_ATTR(arg=2, lineno=42)
          56	LOAD_FAST(arg=1, lineno=42)
          58	CALL_FUNCTION(arg=3, lineno=42)
          60	STORE_FAST(arg=5, lineno=42)
          62	LOAD_FAST(arg=3, lineno=45)
          64	LOAD_FAST(arg=5, lineno=45)
          66	BINARY_MULTIPLY(arg=None, lineno=45)
          68	LOAD_FAST(arg=0, lineno=45)
          70	STORE_ATTR(arg=3, lineno=45)
          72	LOAD_FAST(arg=4, lineno=46)
          74	LOAD_FAST(arg=5, lineno=46)
          76	BINARY_MULTIPLY(arg=None, lineno=46)
          78	LOAD_FAST(arg=0, lineno=46)
          80	STORE_ATTR(arg=4, lineno=46)
          82	LOAD_GLOBAL(arg=7, lineno=47)
          84	LOAD_ATTR(arg=8, lineno=47)
          86	POP_JUMP_IF_FALSE(arg=104, lineno=47)
          88	LOAD_GLOBAL(arg=9, lineno=48)
          90	LOAD_FAST(arg=0, lineno=49)
          92	LOAD_FAST(arg=1, lineno=49)
          94	LOAD_FAST(arg=0, lineno=49)
          96	LOAD_ATTR(arg=2, lineno=49)
          98	CALL_FUNCTION(arg=3, lineno=49)
         100	LOAD_FAST(arg=0, lineno=49)
         102	STORE_ATTR(arg=2, lineno=49)
>        104	LOAD_CONST(arg=1, lineno=49)
         106	RETURN_VALUE(arg=None, lineno=49)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=35)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=35)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=36)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=1, lineno=36)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$r_packet4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=36)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=36)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$r_packet8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=36)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$10load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_FUNCTION(arg=3, lineno=36)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_attr.2', '$10load_attr.4', '$time_explosion12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=2, lineno=36)
DEBUG:numba.core.byteflow:stack ['$14call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=38)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_ATTR(arg=3, lineno=38)
DEBUG:numba.core.byteflow:stack ['$r_packet18.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=38)
DEBUG:numba.core.byteflow:stack ['$20load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=38)
DEBUG:numba.core.byteflow:stack ['$20load_attr.8', '$old_doppler_factor22.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=3, lineno=38)
DEBUG:numba.core.byteflow:stack ['$24binary_multiply.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=39)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=4, lineno=39)
DEBUG:numba.core.byteflow:stack ['$r_packet28.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=2, lineno=39)
DEBUG:numba.core.byteflow:stack ['$30load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=BINARY_MULTIPLY(arg=None, lineno=39)
DEBUG:numba.core.byteflow:stack ['$30load_attr.12', '$old_doppler_factor32.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=STORE_FAST(arg=4, lineno=39)
DEBUG:numba.core.byteflow:stack ['$34binary_multiply.14']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_GLOBAL(arg=5, lineno=40)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=CALL_FUNCTION(arg=0, lineno=40)
DEBUG:numba.core.byteflow:stack ['$38load_global.15']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=40)
DEBUG:numba.core.byteflow:stack ['$40call_function.16']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_ATTR(arg=2, lineno=40)
DEBUG:numba.core.byteflow:stack ['$40call_function.16', '$r_packet42.17']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_GLOBAL(arg=6, lineno=41)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=42)
DEBUG:numba.core.byteflow:stack ['$46load_global.18']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_ATTR(arg=1, lineno=42)
DEBUG:numba.core.byteflow:stack ['$46load_global.18', '$r_packet48.19']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=42)
DEBUG:numba.core.byteflow:stack ['$46load_global.18', '$50load_attr.20']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_ATTR(arg=2, lineno=42)
DEBUG:numba.core.byteflow:stack ['$46load_global.18', '$50load_attr.20', '$r_packet52.21']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=42)
DEBUG:numba.core.byteflow:stack ['$46load_global.18', '$50load_attr.20', '$54load_attr.22']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=CALL_FUNCTION(arg=3, lineno=42)
DEBUG:numba.core.byteflow:stack ['$46load_global.18', '$50load_attr.20', '$54load_attr.22', '$time_explosion56.23']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=STORE_FAST(arg=5, lineno=42)
DEBUG:numba.core.byteflow:stack ['$58call_function.24']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=5, lineno=45)
DEBUG:numba.core.byteflow:stack ['$comov_nu62.25']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.core.byteflow:stack ['$comov_nu62.25', '$inverse_new_doppler_factor64.26']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=0, lineno=45)
DEBUG:numba.core.byteflow:stack ['$66binary_multiply.27']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=STORE_ATTR(arg=3, lineno=45)
DEBUG:numba.core.byteflow:stack ['$66binary_multiply.27', '$r_packet68.28']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=4, lineno=46)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=5, lineno=46)
DEBUG:numba.core.byteflow:stack ['$comov_energy72.29']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=BINARY_MULTIPLY(arg=None, lineno=46)
DEBUG:numba.core.byteflow:stack ['$comov_energy72.29', '$inverse_new_doppler_factor74.30']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=0, lineno=46)
DEBUG:numba.core.byteflow:stack ['$76binary_multiply.31']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=STORE_ATTR(arg=4, lineno=46)
DEBUG:numba.core.byteflow:stack ['$76binary_multiply.31', '$r_packet78.32']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_GLOBAL(arg=7, lineno=47)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_ATTR(arg=8, lineno=47)
DEBUG:numba.core.byteflow:stack ['$82load_global.33']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=POP_JUMP_IF_FALSE(arg=104, lineno=47)
DEBUG:numba.core.byteflow:stack ['$84load_attr.34']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=88, stack=(), blockstack=(), npush=0), Edge(pc=104, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=88 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_GLOBAL(arg=9, lineno=48)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=0, lineno=49)
DEBUG:numba.core.byteflow:stack ['$88load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=49)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$r_packet90.1']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=49)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$r_packet90.1', '$time_explosion92.2']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_ATTR(arg=2, lineno=49)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$r_packet90.1', '$time_explosion92.2', '$r_packet94.3']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=CALL_FUNCTION(arg=3, lineno=49)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$r_packet90.1', '$time_explosion92.2', '$96load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=0, lineno=49)
DEBUG:numba.core.byteflow:stack ['$98call_function.5']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=STORE_ATTR(arg=2, lineno=49)
DEBUG:numba.core.byteflow:stack ['$98call_function.5', '$r_packet100.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=1, lineno=49)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=49)
DEBUG:numba.core.byteflow:stack ['$const104.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=88 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$r_packet4.1'}), (6, {'item': '$r_packet4.1', 'res': '$6load_attr.2'}), (8, {'res': '$r_packet8.3'}), (10, {'item': '$r_packet8.3', 'res': '$10load_attr.4'}), (12, {'res': '$time_explosion12.5'}), (14, {'func': '$2load_global.0', 'args': ['$6load_attr.2', '$10load_attr.4', '$time_explosion12.5'], 'res': '$14call_function.6'}), (16, {'value': '$14call_function.6'}), (18, {'res': '$r_packet18.7'}), (20, {'item': '$r_packet18.7', 'res': '$20load_attr.8'}), (22, {'res': '$old_doppler_factor22.9'}), (24, {'lhs': '$20load_attr.8', 'rhs': '$old_doppler_factor22.9', 'res': '$24binary_multiply.10'}), (26, {'value': '$24binary_multiply.10'}), (28, {'res': '$r_packet28.11'}), (30, {'item': '$r_packet28.11', 'res': '$30load_attr.12'}), (32, {'res': '$old_doppler_factor32.13'}), (34, {'lhs': '$30load_attr.12', 'rhs': '$old_doppler_factor32.13', 'res': '$34binary_multiply.14'}), (36, {'value': '$34binary_multiply.14'}), (38, {'res': '$38load_global.15'}), (40, {'func': '$38load_global.15', 'args': [], 'res': '$40call_function.16'}), (42, {'res': '$r_packet42.17'}), (44, {'target': '$r_packet42.17', 'value': '$40call_function.16'}), (46, {'res': '$46load_global.18'}), (48, {'res': '$r_packet48.19'}), (50, {'item': '$r_packet48.19', 'res': '$50load_attr.20'}), (52, {'res': '$r_packet52.21'}), (54, {'item': '$r_packet52.21', 'res': '$54load_attr.22'}), (56, {'res': '$time_explosion56.23'}), (58, {'func': '$46load_global.18', 'args': ['$50load_attr.20', '$54load_attr.22', '$time_explosion56.23'], 'res': '$58call_function.24'}), (60, {'value': '$58call_function.24'}), (62, {'res': '$comov_nu62.25'}), (64, {'res': '$inverse_new_doppler_factor64.26'}), (66, {'lhs': '$comov_nu62.25', 'rhs': '$inverse_new_doppler_factor64.26', 'res': '$66binary_multiply.27'}), (68, {'res': '$r_packet68.28'}), (70, {'target': '$r_packet68.28', 'value': '$66binary_multiply.27'}), (72, {'res': '$comov_energy72.29'}), (74, {'res': '$inverse_new_doppler_factor74.30'}), (76, {'lhs': '$comov_energy72.29', 'rhs': '$inverse_new_doppler_factor74.30', 'res': '$76binary_multiply.31'}), (78, {'res': '$r_packet78.32'}), (80, {'target': '$r_packet78.32', 'value': '$76binary_multiply.31'}), (82, {'res': '$82load_global.33'}), (84, {'item': '$82load_global.33', 'res': '$84load_attr.34'}), (86, {'pred': '$84load_attr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={88: (), 104: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$88load_global.0'}), (90, {'res': '$r_packet90.1'}), (92, {'res': '$time_explosion92.2'}), (94, {'res': '$r_packet94.3'}), (96, {'item': '$r_packet94.3', 'res': '$96load_attr.4'}), (98, {'func': '$88load_global.0', 'args': ['$r_packet90.1', '$time_explosion92.2', '$96load_attr.4'], 'res': '$98call_function.5'}), (100, {'res': '$r_packet100.6'}), (102, {'target': '$r_packet100.6', 'value': '$98call_function.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$const104.0'}), (106, {'retval': '$const104.0', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    r_packet = arg(0, name=r_packet)         ['r_packet']
    time_explosion = arg(1, name=time_explosion) ['time_explosion']
    $2load_global.0 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>)) ['$2load_global.0']
    $6load_attr.2 = getattr(value=r_packet, attr=r) ['$6load_attr.2', 'r_packet']
    $10load_attr.4 = getattr(value=r_packet, attr=mu) ['$10load_attr.4', 'r_packet']
    $14call_function.6 = call $2load_global.0($6load_attr.2, $10load_attr.4, time_explosion, func=$2load_global.0, args=[Var($6load_attr.2, interaction.py:36), Var($10load_attr.4, interaction.py:36), Var(time_explosion, interaction.py:35)], kws=(), vararg=None) ['$10load_attr.4', '$14call_function.6', '$2load_global.0', '$6load_attr.2', 'time_explosion']
    old_doppler_factor = $14call_function.6  ['$14call_function.6', 'old_doppler_factor']
    $20load_attr.8 = getattr(value=r_packet, attr=nu) ['$20load_attr.8', 'r_packet']
    $24binary_multiply.10 = $20load_attr.8 * old_doppler_factor ['$20load_attr.8', '$24binary_multiply.10', 'old_doppler_factor']
    comov_nu = $24binary_multiply.10         ['$24binary_multiply.10', 'comov_nu']
    $30load_attr.12 = getattr(value=r_packet, attr=energy) ['$30load_attr.12', 'r_packet']
    $34binary_multiply.14 = $30load_attr.12 * old_doppler_factor ['$30load_attr.12', '$34binary_multiply.14', 'old_doppler_factor']
    comov_energy = $34binary_multiply.14     ['$34binary_multiply.14', 'comov_energy']
    $38load_global.15 = global(get_random_mu: CPUDispatcher(<function get_random_mu at 0x7f6e4a0f6830>)) ['$38load_global.15']
    $40call_function.16 = call $38load_global.15(func=$38load_global.15, args=[], kws=(), vararg=None) ['$38load_global.15', '$40call_function.16']
    (r_packet).mu = $40call_function.16      ['$40call_function.16', 'r_packet']
    $46load_global.18 = global(get_inverse_doppler_factor: CPUDispatcher(<function get_inverse_doppler_factor at 0x7f6e4a0eff80>)) ['$46load_global.18']
    $50load_attr.20 = getattr(value=r_packet, attr=r) ['$50load_attr.20', 'r_packet']
    $54load_attr.22 = getattr(value=r_packet, attr=mu) ['$54load_attr.22', 'r_packet']
    $58call_function.24 = call $46load_global.18($50load_attr.20, $54load_attr.22, time_explosion, func=$46load_global.18, args=[Var($50load_attr.20, interaction.py:42), Var($54load_attr.22, interaction.py:42), Var(time_explosion, interaction.py:35)], kws=(), vararg=None) ['$46load_global.18', '$50load_attr.20', '$54load_attr.22', '$58call_function.24', 'time_explosion']
    inverse_new_doppler_factor = $58call_function.24 ['$58call_function.24', 'inverse_new_doppler_factor']
    $66binary_multiply.27 = comov_nu * inverse_new_doppler_factor ['$66binary_multiply.27', 'comov_nu', 'inverse_new_doppler_factor']
    (r_packet).nu = $66binary_multiply.27    ['$66binary_multiply.27', 'r_packet']
    $76binary_multiply.31 = comov_energy * inverse_new_doppler_factor ['$76binary_multiply.31', 'comov_energy', 'inverse_new_doppler_factor']
    (r_packet).energy = $76binary_multiply.31 ['$76binary_multiply.31', 'r_packet']
    $82load_global.33 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>) ['$82load_global.33']
    $84load_attr.34 = getattr(value=$82load_global.33, attr=full_relativity) ['$82load_global.33', '$84load_attr.34']
    bool86 = global(bool: <class 'bool'>)    ['bool86']
    $86pred = call bool86($84load_attr.34, func=bool86, args=(Var($84load_attr.34, interaction.py:47),), kws=(), vararg=None) ['$84load_attr.34', '$86pred', 'bool86']
    branch $86pred, 88, 104                  ['$86pred']
label 88:
    $88load_global.0 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>)) ['$88load_global.0']
    $96load_attr.4 = getattr(value=r_packet, attr=mu) ['$96load_attr.4', 'r_packet']
    $98call_function.5 = call $88load_global.0(r_packet, time_explosion, $96load_attr.4, func=$88load_global.0, args=[Var(r_packet, interaction.py:35), Var(time_explosion, interaction.py:35), Var($96load_attr.4, interaction.py:49)], kws=(), vararg=None) ['$88load_global.0', '$96load_attr.4', '$98call_function.5', 'r_packet', 'time_explosion']
    (r_packet).mu = $98call_function.5       ['$98call_function.5', 'r_packet']
    jump 104                                 []
label 104:
    $const104.0 = const(NoneType, None)      ['$const104.0']
    $106return_value.1 = cast(value=$const104.0) ['$106return_value.1', '$const104.0']
    return $106return_value.1                ['$106return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43294cd0>
DEBUG:numba.core.ssa:on stmt: r_packet = arg(0, name=r_packet)
DEBUG:numba.core.ssa:on stmt: time_explosion = arg(1, name=time_explosion)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(get_doppler_factor: CPUDispatcher(<function get_doppler_factor at 0x7f6e4a0ef710>))
DEBUG:numba.core.ssa:on stmt: $6load_attr.2 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $10load_attr.4 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $14call_function.6 = call $2load_global.0($6load_attr.2, $10load_attr.4, time_explosion, func=$2load_global.0, args=[Var($6load_attr.2, interaction.py:36), Var($10load_attr.4, interaction.py:36), Var(time_explosion, interaction.py:35)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: old_doppler_factor = $14call_function.6
DEBUG:numba.core.ssa:on stmt: $20load_attr.8 = getattr(value=r_packet, attr=nu)
DEBUG:numba.core.ssa:on stmt: $24binary_multiply.10 = $20load_attr.8 * old_doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_nu = $24binary_multiply.10
DEBUG:numba.core.ssa:on stmt: $30load_attr.12 = getattr(value=r_packet, attr=energy)
DEBUG:numba.core.ssa:on stmt: $34binary_multiply.14 = $30load_attr.12 * old_doppler_factor
DEBUG:numba.core.ssa:on stmt: comov_energy = $34binary_multiply.14
DEBUG:numba.core.ssa:on stmt: $38load_global.15 = global(get_random_mu: CPUDispatcher(<function get_random_mu at 0x7f6e4a0f6830>))
DEBUG:numba.core.ssa:on stmt: $40call_function.16 = call $38load_global.15(func=$38load_global.15, args=[], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: (r_packet).mu = $40call_function.16
DEBUG:numba.core.ssa:on stmt: $46load_global.18 = global(get_inverse_doppler_factor: CPUDispatcher(<function get_inverse_doppler_factor at 0x7f6e4a0eff80>))
DEBUG:numba.core.ssa:on stmt: $50load_attr.20 = getattr(value=r_packet, attr=r)
DEBUG:numba.core.ssa:on stmt: $54load_attr.22 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $58call_function.24 = call $46load_global.18($50load_attr.20, $54load_attr.22, time_explosion, func=$46load_global.18, args=[Var($50load_attr.20, interaction.py:42), Var($54load_attr.22, interaction.py:42), Var(time_explosion, interaction.py:35)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: inverse_new_doppler_factor = $58call_function.24
DEBUG:numba.core.ssa:on stmt: $66binary_multiply.27 = comov_nu * inverse_new_doppler_factor
DEBUG:numba.core.ssa:on stmt: (r_packet).nu = $66binary_multiply.27
DEBUG:numba.core.ssa:on stmt: $76binary_multiply.31 = comov_energy * inverse_new_doppler_factor
DEBUG:numba.core.ssa:on stmt: (r_packet).energy = $76binary_multiply.31
DEBUG:numba.core.ssa:on stmt: $82load_global.33 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $84load_attr.34 = getattr(value=$82load_global.33, attr=full_relativity)
DEBUG:numba.core.ssa:on stmt: bool86 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $86pred = call bool86($84load_attr.34, func=bool86, args=(Var($84load_attr.34, interaction.py:47),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $86pred, 88, 104
DEBUG:numba.core.ssa:==== SSA block analysis pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43294cd0>
DEBUG:numba.core.ssa:on stmt: $88load_global.0 = global(angle_aberration_CMF_to_LF: CPUDispatcher(<function angle_aberration_CMF_to_LF at 0x7f6e4a107200>))
DEBUG:numba.core.ssa:on stmt: $96load_attr.4 = getattr(value=r_packet, attr=mu)
DEBUG:numba.core.ssa:on stmt: $98call_function.5 = call $88load_global.0(r_packet, time_explosion, $96load_attr.4, func=$88load_global.0, args=[Var(r_packet, interaction.py:35), Var(time_explosion, interaction.py:35), Var($96load_attr.4, interaction.py:49)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: (r_packet).mu = $98call_function.5
DEBUG:numba.core.ssa:on stmt: jump 104
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43294cd0>
DEBUG:numba.core.ssa:on stmt: $const104.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $106return_value.1 = cast(value=$const104.0)
DEBUG:numba.core.ssa:on stmt: return $106return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$106return_value.1': [<numba.core.ir.Assign object at 0x7f6e45ec5890>],
             '$10load_attr.4': [<numba.core.ir.Assign object at 0x7f6e45ea7fd0>],
             '$14call_function.6': [<numba.core.ir.Assign object at 0x7f6e45ea21d0>],
             '$20load_attr.8': [<numba.core.ir.Assign object at 0x7f6e45ea23d0>],
             '$24binary_multiply.10': [<numba.core.ir.Assign object at 0x7f6e45ea2590>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e45ea7b50>],
             '$30load_attr.12': [<numba.core.ir.Assign object at 0x7f6e45ea2810>],
             '$34binary_multiply.14': [<numba.core.ir.Assign object at 0x7f6e45ea29d0>],
             '$38load_global.15': [<numba.core.ir.Assign object at 0x7f6e45ea2b90>],
             '$40call_function.16': [<numba.core.ir.Assign object at 0x7f6e45ea2cd0>],
             '$46load_global.18': [<numba.core.ir.Assign object at 0x7f6e45ea2f50>],
             '$50load_attr.20': [<numba.core.ir.Assign object at 0x7f6e4329d150>],
             '$54load_attr.22': [<numba.core.ir.Assign object at 0x7f6e4329d310>],
             '$58call_function.24': [<numba.core.ir.Assign object at 0x7f6e4329d510>],
             '$66binary_multiply.27': [<numba.core.ir.Assign object at 0x7f6e4329d810>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45ea7d90>],
             '$76binary_multiply.31': [<numba.core.ir.Assign object at 0x7f6e45ea7810>],
             '$82load_global.33': [<numba.core.ir.Assign object at 0x7f6e461ced90>],
             '$84load_attr.34': [<numba.core.ir.Assign object at 0x7f6e4648e150>],
             '$86pred': [<numba.core.ir.Assign object at 0x7f6e45afae50>],
             '$88load_global.0': [<numba.core.ir.Assign object at 0x7f6e45ea7710>],
             '$96load_attr.4': [<numba.core.ir.Assign object at 0x7f6e45ec5f50>],
             '$98call_function.5': [<numba.core.ir.Assign object at 0x7f6e45ec5dd0>],
             '$const104.0': [<numba.core.ir.Assign object at 0x7f6e45ec5b50>],
             'bool86': [<numba.core.ir.Assign object at 0x7f6e46299d50>],
             'comov_energy': [<numba.core.ir.Assign object at 0x7f6e45ea2a90>],
             'comov_nu': [<numba.core.ir.Assign object at 0x7f6e45ea2650>],
             'inverse_new_doppler_factor': [<numba.core.ir.Assign object at 0x7f6e4329d590>],
             'old_doppler_factor': [<numba.core.ir.Assign object at 0x7f6e45ea2210>],
             'r_packet': [<numba.core.ir.Assign object at 0x7f6e45ea7550>],
             'time_explosion': [<numba.core.ir.Assign object at 0x7f6e45ea79d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3631)
           2	LOAD_GLOBAL(arg=0, lineno=3631)
           4	LOAD_METHOD(arg=1, lineno=3631)
           6	LOAD_FAST(arg=0, lineno=3631)
           8	LOAD_FAST(arg=1, lineno=3631)
          10	CALL_METHOD(arg=2, lineno=3631)
          12	STORE_FAST(arg=0, lineno=3631)
          14	SETUP_LOOP(arg=28, lineno=3632)
          16	LOAD_GLOBAL(arg=0, lineno=3632)
          18	LOAD_METHOD(arg=2, lineno=3632)
          20	LOAD_FAST(arg=0, lineno=3632)
          22	LOAD_ATTR(arg=3, lineno=3632)
          24	CALL_METHOD(arg=1, lineno=3632)
          26	GET_ITER(arg=None, lineno=3632)
>         28	FOR_ITER(arg=12, lineno=3632)
          30	STORE_FAST(arg=2, lineno=3632)
          32	LOAD_CONST(arg=1, lineno=3633)
          34	LOAD_FAST(arg=0, lineno=3633)
          36	LOAD_FAST(arg=2, lineno=3633)
          38	STORE_SUBSCR(arg=None, lineno=3633)
          40	JUMP_ABSOLUTE(arg=28, lineno=3633)
>         42	POP_BLOCK(arg=None, lineno=3633)
>         44	LOAD_FAST(arg=0, lineno=3634)
          46	RETURN_VALUE(arg=None, lineno=3634)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3631)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3631)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=3631)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=3631)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=3631)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$arr6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=3631)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$arr6.2', '$dtype8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_FAST(arg=0, lineno=3631)
DEBUG:numba.core.byteflow:stack ['$10call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=14, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=SETUP_LOOP(arg=28, lineno=3632)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=0, lineno=3632)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=3632)
DEBUG:numba.core.byteflow:stack ['$16load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=3632)
DEBUG:numba.core.byteflow:stack ['$18load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=3632)
DEBUG:numba.core.byteflow:stack ['$18load_method.1', '$arr20.2']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_METHOD(arg=1, lineno=3632)
DEBUG:numba.core.byteflow:stack ['$18load_method.1', '$22load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=GET_ITER(arg=None, lineno=3632)
DEBUG:numba.core.byteflow:stack ['$24call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=('$26get_iter.5',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi28.0']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=FOR_ITER(arg=12, lineno=3632)
DEBUG:numba.core.byteflow:stack ['$phi28.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=30, stack=('$phi28.0', '$28for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=30 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_BLOCK(arg=None, lineno=3633)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=2), State(pc_initial=44 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi30.0', '$phi30.1']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=2, lineno=3632)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$phi30.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=3633)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=3633)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$const32.2']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=3633)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$const32.2', '$arr34.3']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_SUBSCR(arg=None, lineno=3633)
DEBUG:numba.core.byteflow:stack ['$phi30.0', '$const32.2', '$arr34.3', '$idx36.4']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=JUMP_ABSOLUTE(arg=28, lineno=3633)
DEBUG:numba.core.byteflow:stack ['$phi30.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=('$phi30.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=0, lineno=3634)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=3634)
DEBUG:numba.core.byteflow:stack ['$arr44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=14 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=1): {'$phi28.0'},
             State(pc_initial=30 nstack_initial=2): {'$phi30.1'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi28.0': State(pc_initial=14 nstack_initial=0),
 '$phi30.1': State(pc_initial=28 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=2))},
             '$phi30.0': {('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0)),
                          ('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.5',
                           State(pc_initial=14 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi28.0': {('$26get_iter.5', State(pc_initial=14 nstack_initial=0))},
 '$phi30.1': {('$28for_iter.2', State(pc_initial=28 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=14 nstack_initial=0): {'$phi28.0': '$26get_iter.5'},
             State(pc_initial=28 nstack_initial=1): {'$phi30.1': '$28for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$arr6.2'}), (8, {'res': '$dtype8.3'}), (10, {'func': '$4load_method.1', 'args': ['$arr6.2', '$dtype8.3'], 'res': '$10call_method.4'}), (12, {'value': '$10call_method.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={14: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$16load_global.0'}), (18, {'item': '$16load_global.0', 'res': '$18load_method.1'}), (20, {'res': '$arr20.2'}), (22, {'item': '$arr20.2', 'res': '$22load_attr.3'}), (24, {'func': '$18load_method.1', 'args': ['$22load_attr.3'], 'res': '$24call_method.4'}), (26, {'value': '$24call_method.4', 'res': '$26get_iter.5'})), outgoing_phis={'$phi28.0': '$26get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$26get_iter.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=1):
AdaptBlockInfo(insts=((28, {'iterator': '$phi28.0', 'pair': '$28for_iter.1', 'indval': '$28for_iter.2', 'pred': '$28for_iter.3'}),), outgoing_phis={'$phi30.1': '$28for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={42: (), 30: ('$phi28.0', '$28for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=2):
AdaptBlockInfo(insts=((30, {'value': '$phi30.1'}), (32, {'res': '$const32.2'}), (34, {'res': '$arr34.3'}), (36, {'res': '$idx36.4'}), (38, {'target': '$arr34.3', 'index': '$idx36.4', 'value': '$const32.2'}), (40, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={28: ('$phi30.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={44: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$arr44.0'}), (46, {'retval': '$arr44.0', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    arr = arg(0, name=arr)                   ['arr']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=empty_like) ['$2load_global.0', '$4load_method.1']
    $10call_method.4 = call $4load_method.1(arr, dtype, func=$4load_method.1, args=[Var(arr, arrayobj.py:3631), Var(dtype, arrayobj.py:3631)], kws=(), vararg=None) ['$10call_method.4', '$4load_method.1', 'arr', 'dtype']
    arr.1 = $10call_method.4                 ['$10call_method.4', 'arr.1']
    jump 14                                  []
label 14:
    $16load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$16load_global.0']
    $18load_method.1 = getattr(value=$16load_global.0, attr=ndindex) ['$16load_global.0', '$18load_method.1']
    $22load_attr.3 = getattr(value=arr.1, attr=shape) ['$22load_attr.3', 'arr.1']
    $24call_method.4 = call $18load_method.1($22load_attr.3, func=$18load_method.1, args=[Var($22load_attr.3, arrayobj.py:3632)], kws=(), vararg=None) ['$18load_method.1', '$22load_attr.3', '$24call_method.4']
    $26get_iter.5 = getiter(value=$24call_method.4) ['$24call_method.4', '$26get_iter.5']
    $phi28.0 = $26get_iter.5                 ['$26get_iter.5', '$phi28.0']
    jump 28                                  []
label 28:
    $28for_iter.1 = iternext(value=$phi28.0) ['$28for_iter.1', '$phi28.0']
    $28for_iter.2 = pair_first(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.2']
    $28for_iter.3 = pair_second(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.3']
    $phi30.1 = $28for_iter.2                 ['$28for_iter.2', '$phi30.1']
    branch $28for_iter.3, 30, 42             ['$28for_iter.3']
label 30:
    idx = $phi30.1                           ['$phi30.1', 'idx']
    $const32.2 = const(int, 1)               ['$const32.2']
    arr.1[idx] = $const32.2                  ['$const32.2', 'arr.1', 'idx']
    jump 28                                  []
label 42:
    jump 44                                  []
label 44:
    $46return_value.1 = cast(value=arr.1)    ['$46return_value.1', 'arr.1']
    return $46return_value.1                 ['$46return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4615a810>
DEBUG:numba.core.ssa:on stmt: arr = arg(0, name=arr)
DEBUG:numba.core.ssa:on stmt: dtype = arg(1, name=dtype)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=empty_like)
DEBUG:numba.core.ssa:on stmt: $10call_method.4 = call $4load_method.1(arr, dtype, func=$4load_method.1, args=[Var(arr, arrayobj.py:3631), Var(dtype, arrayobj.py:3631)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: arr.1 = $10call_method.4
DEBUG:numba.core.ssa:on stmt: jump 14
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4615a810>
DEBUG:numba.core.ssa:on stmt: $16load_global.0 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $18load_method.1 = getattr(value=$16load_global.0, attr=ndindex)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=arr.1, attr=shape)
DEBUG:numba.core.ssa:on stmt: $24call_method.4 = call $18load_method.1($22load_attr.3, func=$18load_method.1, args=[Var($22load_attr.3, arrayobj.py:3632)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $26get_iter.5 = getiter(value=$24call_method.4)
DEBUG:numba.core.ssa:on stmt: $phi28.0 = $26get_iter.5
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4615a810>
DEBUG:numba.core.ssa:on stmt: $28for_iter.1 = iternext(value=$phi28.0)
DEBUG:numba.core.ssa:on stmt: $28for_iter.2 = pair_first(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $28for_iter.3 = pair_second(value=$28for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi30.1 = $28for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $28for_iter.3, 30, 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4615a810>
DEBUG:numba.core.ssa:on stmt: idx = $phi30.1
DEBUG:numba.core.ssa:on stmt: $const32.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: arr.1[idx] = $const32.2
DEBUG:numba.core.ssa:on stmt: jump 28
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4615a810>
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4615a810>
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=arr.1)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_method.4': [<numba.core.ir.Assign object at 0x7f6e4600af10>],
             '$16load_global.0': [<numba.core.ir.Assign object at 0x7f6e45a98f90>],
             '$18load_method.1': [<numba.core.ir.Assign object at 0x7f6e45a98e50>],
             '$22load_attr.3': [<numba.core.ir.Assign object at 0x7f6e45a98b10>],
             '$24call_method.4': [<numba.core.ir.Assign object at 0x7f6e45a98b50>],
             '$26get_iter.5': [<numba.core.ir.Assign object at 0x7f6e45a98890>],
             '$28for_iter.1': [<numba.core.ir.Assign object at 0x7f6e45a987d0>],
             '$28for_iter.2': [<numba.core.ir.Assign object at 0x7f6e45a98090>],
             '$28for_iter.3': [<numba.core.ir.Assign object at 0x7f6e45a98610>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f6e4600a750>],
             '$46return_value.1': [<numba.core.ir.Assign object at 0x7f6e45a9ac10>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7f6e4600a350>],
             '$const32.2': [<numba.core.ir.Assign object at 0x7f6e45a98050>],
             '$phi28.0': [<numba.core.ir.Assign object at 0x7f6e45a98990>],
             '$phi30.1': [<numba.core.ir.Assign object at 0x7f6e45a98450>],
             'arr': [<numba.core.ir.Assign object at 0x7f6e4600a9d0>],
             'arr.1': [<numba.core.ir.Assign object at 0x7f6e45a98e90>],
             'dtype': [<numba.core.ir.Assign object at 0x7f6e4600ab10>],
             'idx': [<numba.core.ir.Assign object at 0x7f6e45a98410>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	SETUP_LOOP(arg=40, lineno=2)
           4	LOAD_GLOBAL(arg=0, lineno=2)
           6	LOAD_FAST(arg=0, lineno=2)
           8	LOAD_CONST(arg=1, lineno=2)
          10	BINARY_SUBSCR(arg=None, lineno=2)
          12	LOAD_FAST(arg=0, lineno=2)
          14	LOAD_CONST(arg=2, lineno=2)
          16	BINARY_SUBSCR(arg=None, lineno=2)
          18	LOAD_GLOBAL(arg=1, lineno=2)
          20	LOAD_METHOD(arg=2, lineno=2)
          22	LOAD_CONST(arg=2, lineno=2)
          24	CALL_METHOD(arg=1, lineno=2)
          26	BINARY_ADD(arg=None, lineno=2)
          28	CALL_FUNCTION(arg=2, lineno=2)
          30	GET_ITER(arg=None, lineno=2)
>         32	FOR_ITER(arg=8, lineno=2)
          34	STORE_FAST(arg=3, lineno=2)
          36	LOAD_CONST(arg=1, lineno=3)
          38	STORE_FAST(arg=4, lineno=3)
          40	JUMP_ABSOLUTE(arg=32, lineno=3)
>         42	POP_BLOCK(arg=None, lineno=3)
>         44	LOAD_CONST(arg=0, lineno=4)
          46	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=2, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=2 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=SETUP_LOOP(arg=40, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1', '$const8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4', '$const14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$18load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8', '$const22.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$24call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$26binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$28call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.13',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=8, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_BLOCK(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=44 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=3, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=4, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$const36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=JUMP_ABSOLUTE(arg=32, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=2 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=2 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.13', State(pc_initial=2 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=2 nstack_initial=0): {'$phi32.0': '$30get_iter.13'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={2: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=2 nstack_initial=0):
AdaptBlockInfo(insts=((4, {'res': '$4load_global.0'}), (6, {'res': '$sched6.1'}), (8, {'res': '$const8.2'}), (10, {'index': '$const8.2', 'target': '$sched6.1', 'res': '$10binary_subscr.3'}), (12, {'res': '$sched12.4'}), (14, {'res': '$const14.5'}), (16, {'index': '$const14.5', 'target': '$sched12.4', 'res': '$16binary_subscr.6'}), (18, {'res': '$18load_global.7'}), (20, {'item': '$18load_global.7', 'res': '$20load_method.8'}), (22, {'res': '$const22.9'}), (24, {'func': '$20load_method.8', 'args': ['$const22.9'], 'res': '$24call_method.10'}), (26, {'lhs': '$16binary_subscr.6', 'rhs': '$24call_method.10', 'res': '$26binary_add.11'}), (28, {'func': '$4load_global.0', 'args': ['$10binary_subscr.3', '$26binary_add.11'], 'res': '$28call_function.12'}), (30, {'value': '$28call_function.12', 'res': '$30get_iter.13'})), outgoing_phis={'$phi32.0': '$30get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={42: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$const36.2'}), (38, {'value': '$const36.2'}), (40, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={44: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0'}), (46, {'retval': '$const44.0', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    _28call__function__kw_12 = arg(1, name=_28call__function__kw_12) ['_28call__function__kw_12']
    _last__interaction__types_378 = arg(2, name=_last__interaction__types_378) ['_last__interaction__types_378']
    jump 2                                   []
label 2:
    $4load_global.0 = global(range: <class 'range'>) ['$4load_global.0']
    $const8.2 = const(int, 0)                ['$const8.2']
    $10binary_subscr.3 = getitem(value=sched, index=$const8.2) ['$10binary_subscr.3', '$const8.2', 'sched']
    $const14.5 = const(int, 1)               ['$const14.5']
    $16binary_subscr.6 = getitem(value=sched, index=$const14.5) ['$16binary_subscr.6', '$const14.5', 'sched']
    $18load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$18load_global.7']
    $20load_method.8 = getattr(value=$18load_global.7, attr=uint8) ['$18load_global.7', '$20load_method.8']
    $const22.9 = const(int, 1)               ['$const22.9']
    $24call_method.10 = call $20load_method.8($const22.9, func=$20load_method.8, args=[Var($const22.9, <string>:2)], kws=(), vararg=None) ['$20load_method.8', '$24call_method.10', '$const22.9']
    $26binary_add.11 = $16binary_subscr.6 + $24call_method.10 ['$16binary_subscr.6', '$24call_method.10', '$26binary_add.11']
    $28call_function.12 = call $4load_global.0($10binary_subscr.3, $26binary_add.11, func=$4load_global.0, args=[Var($10binary_subscr.3, <string>:2), Var($26binary_add.11, <string>:2)], kws=(), vararg=None) ['$10binary_subscr.3', '$26binary_add.11', '$28call_function.12', '$4load_global.0']
    $30get_iter.13 = getiter(value=$28call_function.12) ['$28call_function.12', '$30get_iter.13']
    $phi32.0 = $30get_iter.13                ['$30get_iter.13', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 42             ['$32for_iter.3']
label 34:
    parfor__index_333 = $phi34.1             ['$phi34.1', 'parfor__index_333']
    $const36.2 = const(int, 0)               ['$const36.2']
    __sentinel__0 = $const36.2               ['$const36.2', '__sentinel__0']
    jump 32                                  []
label 42:
    jump 44                                  []
label 44:
    $const44.0 = const(NoneType, None)       ['$const44.0']
    $46return_value.1 = cast(value=$const44.0) ['$46return_value.1', '$const44.0']
    return $46return_value.1                 ['$46return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43551fd0>
DEBUG:numba.core.ssa:on stmt: sched.785 = arg(0, name=sched)
DEBUG:numba.core.ssa:on stmt: _28call__function__kw_12 = arg(1, name=_28call__function__kw_12)
DEBUG:numba.core.ssa:on stmt: _last__interaction__types_378 = arg(2, name=_last__interaction__types_378)
DEBUG:numba.core.ssa:on stmt: $arg_out_var.339 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: jump 2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 2
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43551fd0>
DEBUG:numba.core.ssa:on stmt: $4load_global.0.786 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const8.2.787 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.3.788 = getitem(value=sched.785, index=$const8.2.787)
DEBUG:numba.core.ssa:on stmt: $const14.5.789 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $16binary_subscr.6.790 = getitem(value=sched.785, index=$const14.5.789)
DEBUG:numba.core.ssa:on stmt: $18load_global.7.791 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_method.8.792 = getattr(value=$18load_global.7.791, attr=uint8)
DEBUG:numba.core.ssa:on stmt: $const22.9.793 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $24call_method.10.794 = call $20load_method.8.792($const22.9.793, func=$20load_method.8.792, args=[Var($const22.9.793, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $26binary_add.11.795 = $16binary_subscr.6.790 + $24call_method.10.794
DEBUG:numba.core.ssa:on stmt: $28call_function.12.796 = call $4load_global.0.786($10binary_subscr.3.788, $26binary_add.11.795, func=$4load_global.0.786, args=[Var($10binary_subscr.3.788, <string>:2), Var($26binary_add.11.795, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.13.797 = getiter(value=$28call_function.12.796)
DEBUG:numba.core.ssa:on stmt: $phi32.0.798 = $30get_iter.13.797
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43551fd0>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1.799 = iternext(value=$phi32.0.798)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2.800 = pair_first(value=$32for_iter.1.799)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3.801 = pair_second(value=$32for_iter.1.799)
DEBUG:numba.core.ssa:on stmt: $phi34.1.802 = $32for_iter.2.800
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3.801, 34, 750
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43551fd0>
DEBUG:numba.core.ssa:on stmt: parfor__index_333 = $phi34.1.802
DEBUG:numba.core.ssa:on stmt: $const36.2.803 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 750
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43551fd0>
DEBUG:numba.core.ssa:on stmt: jump 751
DEBUG:numba.core.ssa:==== SSA block analysis pass on 751
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43551fd0>
DEBUG:numba.core.ssa:on stmt: $const44.0.804 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1.805 = cast(value=$const44.0.804)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1.805
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43551fd0>
DEBUG:numba.core.ssa:on stmt: $arg_out_var.338 = getitem(value=_28call__function__kw_12, index=parfor__index_333)
DEBUG:numba.core.ssa:on stmt: $expr_out_var.337 = $arg_out_var.338 * $arg_out_var.339
DEBUG:numba.core.ssa:on stmt: _last__interaction__types_378[parfor__index_333] = $expr_out_var.337
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e43551fd0>
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subscr.3.788': [<numba.core.ir.Assign object at 0x7f6e4356bad0>],
             '$16binary_subscr.6.790': [<numba.core.ir.Assign object at 0x7f6e4356bdd0>],
             '$18load_global.7.791': [<numba.core.ir.Assign object at 0x7f6e4356bed0>],
             '$20load_method.8.792': [<numba.core.ir.Assign object at 0x7f6e43184050>],
             '$24call_method.10.794': [<numba.core.ir.Assign object at 0x7f6e43184250>],
             '$26binary_add.11.795': [<numba.core.ir.Assign object at 0x7f6e43184350>],
             '$28call_function.12.796': [<numba.core.ir.Assign object at 0x7f6e43184490>],
             '$30get_iter.13.797': [<numba.core.ir.Assign object at 0x7f6e43184590>],
             '$32for_iter.1.799': [<numba.core.ir.Assign object at 0x7f6e43184790>],
             '$32for_iter.2.800': [<numba.core.ir.Assign object at 0x7f6e43184850>],
             '$32for_iter.3.801': [<numba.core.ir.Assign object at 0x7f6e43184910>],
             '$46return_value.1.805': [<numba.core.ir.Assign object at 0x7f6e4317d0d0>],
             '$4load_global.0.786': [<numba.core.ir.Assign object at 0x7f6e4356b7d0>],
             '$arg_out_var.338': [<numba.core.ir.Assign object at 0x7f6e45d9cb10>],
             '$arg_out_var.339': [<numba.core.ir.Assign object at 0x7f6e45d9cc50>],
             '$const14.5.789': [<numba.core.ir.Assign object at 0x7f6e4356bcd0>],
             '$const22.9.793': [<numba.core.ir.Assign object at 0x7f6e43184110>],
             '$const36.2.803': [<numba.core.ir.Assign object at 0x7f6e43184c50>],
             '$const44.0.804': [<numba.core.ir.Assign object at 0x7f6e43184f90>],
             '$const8.2.787': [<numba.core.ir.Assign object at 0x7f6e4356b9d0>],
             '$expr_out_var.337': [<numba.core.ir.Assign object at 0x7f6e45d9c710>],
             '$phi32.0.798': [<numba.core.ir.Assign object at 0x7f6e4356bb90>],
             '$phi34.1.802': [<numba.core.ir.Assign object at 0x7f6e43184990>],
             '_28call__function__kw_12': [<numba.core.ir.Assign object at 0x7f6e4356b690>],
             '_last__interaction__types_378': [<numba.core.ir.Assign object at 0x7f6e4356b490>],
             'parfor__index_333': [<numba.core.ir.Assign object at 0x7f6e43184b50>],
             'sched.785': [<numba.core.ir.Assign object at 0x7f6e4356b650>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	SETUP_LOOP(arg=40, lineno=2)
           4	LOAD_GLOBAL(arg=0, lineno=2)
           6	LOAD_FAST(arg=0, lineno=2)
           8	LOAD_CONST(arg=1, lineno=2)
          10	BINARY_SUBSCR(arg=None, lineno=2)
          12	LOAD_FAST(arg=0, lineno=2)
          14	LOAD_CONST(arg=2, lineno=2)
          16	BINARY_SUBSCR(arg=None, lineno=2)
          18	LOAD_GLOBAL(arg=1, lineno=2)
          20	LOAD_METHOD(arg=2, lineno=2)
          22	LOAD_CONST(arg=2, lineno=2)
          24	CALL_METHOD(arg=1, lineno=2)
          26	BINARY_ADD(arg=None, lineno=2)
          28	CALL_FUNCTION(arg=2, lineno=2)
          30	GET_ITER(arg=None, lineno=2)
>         32	FOR_ITER(arg=8, lineno=2)
          34	STORE_FAST(arg=3, lineno=2)
          36	LOAD_CONST(arg=1, lineno=3)
          38	STORE_FAST(arg=4, lineno=3)
          40	JUMP_ABSOLUTE(arg=32, lineno=3)
>         42	POP_BLOCK(arg=None, lineno=3)
>         44	LOAD_CONST(arg=0, lineno=4)
          46	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=2, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=2 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=SETUP_LOOP(arg=40, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1', '$const8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4', '$const14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$18load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8', '$const22.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$24call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$26binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$28call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.13',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=8, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_BLOCK(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=44 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=3, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=4, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$const36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=JUMP_ABSOLUTE(arg=32, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=2 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=2 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.13', State(pc_initial=2 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=2 nstack_initial=0): {'$phi32.0': '$30get_iter.13'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={2: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=2 nstack_initial=0):
AdaptBlockInfo(insts=((4, {'res': '$4load_global.0'}), (6, {'res': '$sched6.1'}), (8, {'res': '$const8.2'}), (10, {'index': '$const8.2', 'target': '$sched6.1', 'res': '$10binary_subscr.3'}), (12, {'res': '$sched12.4'}), (14, {'res': '$const14.5'}), (16, {'index': '$const14.5', 'target': '$sched12.4', 'res': '$16binary_subscr.6'}), (18, {'res': '$18load_global.7'}), (20, {'item': '$18load_global.7', 'res': '$20load_method.8'}), (22, {'res': '$const22.9'}), (24, {'func': '$20load_method.8', 'args': ['$const22.9'], 'res': '$24call_method.10'}), (26, {'lhs': '$16binary_subscr.6', 'rhs': '$24call_method.10', 'res': '$26binary_add.11'}), (28, {'func': '$4load_global.0', 'args': ['$10binary_subscr.3', '$26binary_add.11'], 'res': '$28call_function.12'}), (30, {'value': '$28call_function.12', 'res': '$30get_iter.13'})), outgoing_phis={'$phi32.0': '$30get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={42: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$const36.2'}), (38, {'value': '$const36.2'}), (40, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={44: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0'}), (46, {'retval': '$const44.0', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    _74call__function__kw_32 = arg(1, name=_74call__function__kw_32) ['_74call__function__kw_32']
    _last__line__interaction__in__ids_381 = arg(2, name=_last__line__interaction__in__ids_381) ['_last__line__interaction__in__ids_381']
    jump 2                                   []
label 2:
    $4load_global.0 = global(range: <class 'range'>) ['$4load_global.0']
    $const8.2 = const(int, 0)                ['$const8.2']
    $10binary_subscr.3 = getitem(value=sched, index=$const8.2) ['$10binary_subscr.3', '$const8.2', 'sched']
    $const14.5 = const(int, 1)               ['$const14.5']
    $16binary_subscr.6 = getitem(value=sched, index=$const14.5) ['$16binary_subscr.6', '$const14.5', 'sched']
    $18load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$18load_global.7']
    $20load_method.8 = getattr(value=$18load_global.7, attr=uint8) ['$18load_global.7', '$20load_method.8']
    $const22.9 = const(int, 1)               ['$const22.9']
    $24call_method.10 = call $20load_method.8($const22.9, func=$20load_method.8, args=[Var($const22.9, <string>:2)], kws=(), vararg=None) ['$20load_method.8', '$24call_method.10', '$const22.9']
    $26binary_add.11 = $16binary_subscr.6 + $24call_method.10 ['$16binary_subscr.6', '$24call_method.10', '$26binary_add.11']
    $28call_function.12 = call $4load_global.0($10binary_subscr.3, $26binary_add.11, func=$4load_global.0, args=[Var($10binary_subscr.3, <string>:2), Var($26binary_add.11, <string>:2)], kws=(), vararg=None) ['$10binary_subscr.3', '$26binary_add.11', '$28call_function.12', '$4load_global.0']
    $30get_iter.13 = getiter(value=$28call_function.12) ['$28call_function.12', '$30get_iter.13']
    $phi32.0 = $30get_iter.13                ['$30get_iter.13', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 42             ['$32for_iter.3']
label 34:
    parfor__index_340 = $phi34.1             ['$phi34.1', 'parfor__index_340']
    $const36.2 = const(int, 0)               ['$const36.2']
    __sentinel__0 = $const36.2               ['$const36.2', '__sentinel__0']
    jump 32                                  []
label 42:
    jump 44                                  []
label 44:
    $const44.0 = const(NoneType, None)       ['$const44.0']
    $46return_value.1 = cast(value=$const44.0) ['$46return_value.1', '$const44.0']
    return $46return_value.1                 ['$46return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45979690>
DEBUG:numba.core.ssa:on stmt: sched.819 = arg(0, name=sched)
DEBUG:numba.core.ssa:on stmt: _74call__function__kw_32 = arg(1, name=_74call__function__kw_32)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__in__ids_381 = arg(2, name=_last__line__interaction__in__ids_381)
DEBUG:numba.core.ssa:on stmt: $arg_out_var.346 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: jump 2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 2
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45979690>
DEBUG:numba.core.ssa:on stmt: $4load_global.0.820 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const8.2.821 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.3.822 = getitem(value=sched.819, index=$const8.2.821)
DEBUG:numba.core.ssa:on stmt: $const14.5.823 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $16binary_subscr.6.824 = getitem(value=sched.819, index=$const14.5.823)
DEBUG:numba.core.ssa:on stmt: $18load_global.7.825 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_method.8.826 = getattr(value=$18load_global.7.825, attr=uint8)
DEBUG:numba.core.ssa:on stmt: $const22.9.827 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $24call_method.10.828 = call $20load_method.8.826($const22.9.827, func=$20load_method.8.826, args=[Var($const22.9.827, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $26binary_add.11.829 = $16binary_subscr.6.824 + $24call_method.10.828
DEBUG:numba.core.ssa:on stmt: $28call_function.12.830 = call $4load_global.0.820($10binary_subscr.3.822, $26binary_add.11.829, func=$4load_global.0.820, args=[Var($10binary_subscr.3.822, <string>:2), Var($26binary_add.11.829, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.13.831 = getiter(value=$28call_function.12.830)
DEBUG:numba.core.ssa:on stmt: $phi32.0.832 = $30get_iter.13.831
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45979690>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1.833 = iternext(value=$phi32.0.832)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2.834 = pair_first(value=$32for_iter.1.833)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3.835 = pair_second(value=$32for_iter.1.833)
DEBUG:numba.core.ssa:on stmt: $phi34.1.836 = $32for_iter.2.834
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3.835, 34, 751
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45979690>
DEBUG:numba.core.ssa:on stmt: parfor__index_340 = $phi34.1.836
DEBUG:numba.core.ssa:on stmt: $const36.2.837 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 751
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45979690>
DEBUG:numba.core.ssa:on stmt: jump 752
DEBUG:numba.core.ssa:==== SSA block analysis pass on 752
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45979690>
DEBUG:numba.core.ssa:on stmt: $const44.0.838 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1.839 = cast(value=$const44.0.838)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1.839
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45979690>
DEBUG:numba.core.ssa:on stmt: $arg_out_var.345 = getitem(value=_74call__function__kw_32, index=parfor__index_340)
DEBUG:numba.core.ssa:on stmt: $expr_out_var.344 = $arg_out_var.345 * $arg_out_var.346
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__in__ids_381[parfor__index_340] = $expr_out_var.344
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45979690>
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subscr.3.822': [<numba.core.ir.Assign object at 0x7f6e45a19c90>],
             '$16binary_subscr.6.824': [<numba.core.ir.Assign object at 0x7f6e459ebe10>],
             '$18load_global.7.825': [<numba.core.ir.Assign object at 0x7f6e459ebdd0>],
             '$20load_method.8.826': [<numba.core.ir.Assign object at 0x7f6e459f0210>],
             '$24call_method.10.828': [<numba.core.ir.Assign object at 0x7f6e459f0ed0>],
             '$26binary_add.11.829': [<numba.core.ir.Assign object at 0x7f6e46143ad0>],
             '$28call_function.12.830': [<numba.core.ir.Assign object at 0x7f6e45cf67d0>],
             '$30get_iter.13.831': [<numba.core.ir.Assign object at 0x7f6e459a33d0>],
             '$32for_iter.1.833': [<numba.core.ir.Assign object at 0x7f6e459a3d90>],
             '$32for_iter.2.834': [<numba.core.ir.Assign object at 0x7f6e459a3b90>],
             '$32for_iter.3.835': [<numba.core.ir.Assign object at 0x7f6e459961d0>],
             '$46return_value.1.839': [<numba.core.ir.Assign object at 0x7f6e45a21f10>],
             '$4load_global.0.820': [<numba.core.ir.Assign object at 0x7f6e45a19090>],
             '$arg_out_var.345': [<numba.core.ir.Assign object at 0x7f6e45d9cd10>],
             '$arg_out_var.346': [<numba.core.ir.Assign object at 0x7f6e45d9cc10>],
             '$const14.5.823': [<numba.core.ir.Assign object at 0x7f6e459eb4d0>],
             '$const22.9.827': [<numba.core.ir.Assign object at 0x7f6e459f0a50>],
             '$const36.2.837': [<numba.core.ir.Assign object at 0x7f6e45996e50>],
             '$const44.0.838': [<numba.core.ir.Assign object at 0x7f6e45a21fd0>],
             '$const8.2.821': [<numba.core.ir.Assign object at 0x7f6e45a19890>],
             '$expr_out_var.344': [<numba.core.ir.Assign object at 0x7f6e45d9c7d0>],
             '$phi32.0.832': [<numba.core.ir.Assign object at 0x7f6e459eb510>],
             '$phi34.1.836': [<numba.core.ir.Assign object at 0x7f6e45996190>],
             '_74call__function__kw_32': [<numba.core.ir.Assign object at 0x7f6e459f1a50>],
             '_last__line__interaction__in__ids_381': [<numba.core.ir.Assign object at 0x7f6e459f1250>],
             'parfor__index_340': [<numba.core.ir.Assign object at 0x7f6e45996a50>],
             'sched.819': [<numba.core.ir.Assign object at 0x7f6e459f1e90>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	SETUP_LOOP(arg=40, lineno=2)
           4	LOAD_GLOBAL(arg=0, lineno=2)
           6	LOAD_FAST(arg=0, lineno=2)
           8	LOAD_CONST(arg=1, lineno=2)
          10	BINARY_SUBSCR(arg=None, lineno=2)
          12	LOAD_FAST(arg=0, lineno=2)
          14	LOAD_CONST(arg=2, lineno=2)
          16	BINARY_SUBSCR(arg=None, lineno=2)
          18	LOAD_GLOBAL(arg=1, lineno=2)
          20	LOAD_METHOD(arg=2, lineno=2)
          22	LOAD_CONST(arg=2, lineno=2)
          24	CALL_METHOD(arg=1, lineno=2)
          26	BINARY_ADD(arg=None, lineno=2)
          28	CALL_FUNCTION(arg=2, lineno=2)
          30	GET_ITER(arg=None, lineno=2)
>         32	FOR_ITER(arg=8, lineno=2)
          34	STORE_FAST(arg=3, lineno=2)
          36	LOAD_CONST(arg=1, lineno=3)
          38	STORE_FAST(arg=4, lineno=3)
          40	JUMP_ABSOLUTE(arg=32, lineno=3)
>         42	POP_BLOCK(arg=None, lineno=3)
>         44	LOAD_CONST(arg=0, lineno=4)
          46	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=2, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=2 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=SETUP_LOOP(arg=40, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1', '$const8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4', '$const14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$18load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8', '$const22.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$24call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$26binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$28call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.13',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=8, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_BLOCK(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=44 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=3, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=4, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$const36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=JUMP_ABSOLUTE(arg=32, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=2 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=2 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.13', State(pc_initial=2 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=2 nstack_initial=0): {'$phi32.0': '$30get_iter.13'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={2: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=2 nstack_initial=0):
AdaptBlockInfo(insts=((4, {'res': '$4load_global.0'}), (6, {'res': '$sched6.1'}), (8, {'res': '$const8.2'}), (10, {'index': '$const8.2', 'target': '$sched6.1', 'res': '$10binary_subscr.3'}), (12, {'res': '$sched12.4'}), (14, {'res': '$const14.5'}), (16, {'index': '$const14.5', 'target': '$sched12.4', 'res': '$16binary_subscr.6'}), (18, {'res': '$18load_global.7'}), (20, {'item': '$18load_global.7', 'res': '$20load_method.8'}), (22, {'res': '$const22.9'}), (24, {'func': '$20load_method.8', 'args': ['$const22.9'], 'res': '$24call_method.10'}), (26, {'lhs': '$16binary_subscr.6', 'rhs': '$24call_method.10', 'res': '$26binary_add.11'}), (28, {'func': '$4load_global.0', 'args': ['$10binary_subscr.3', '$26binary_add.11'], 'res': '$28call_function.12'}), (30, {'value': '$28call_function.12', 'res': '$30get_iter.13'})), outgoing_phis={'$phi32.0': '$30get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={42: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$const36.2'}), (38, {'value': '$const36.2'}), (40, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={44: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0'}), (46, {'retval': '$const44.0', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    _96call__function__kw_42 = arg(1, name=_96call__function__kw_42) ['_96call__function__kw_42']
    _last__line__interaction__out__ids_382 = arg(2, name=_last__line__interaction__out__ids_382) ['_last__line__interaction__out__ids_382']
    jump 2                                   []
label 2:
    $4load_global.0 = global(range: <class 'range'>) ['$4load_global.0']
    $const8.2 = const(int, 0)                ['$const8.2']
    $10binary_subscr.3 = getitem(value=sched, index=$const8.2) ['$10binary_subscr.3', '$const8.2', 'sched']
    $const14.5 = const(int, 1)               ['$const14.5']
    $16binary_subscr.6 = getitem(value=sched, index=$const14.5) ['$16binary_subscr.6', '$const14.5', 'sched']
    $18load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$18load_global.7']
    $20load_method.8 = getattr(value=$18load_global.7, attr=uint8) ['$18load_global.7', '$20load_method.8']
    $const22.9 = const(int, 1)               ['$const22.9']
    $24call_method.10 = call $20load_method.8($const22.9, func=$20load_method.8, args=[Var($const22.9, <string>:2)], kws=(), vararg=None) ['$20load_method.8', '$24call_method.10', '$const22.9']
    $26binary_add.11 = $16binary_subscr.6 + $24call_method.10 ['$16binary_subscr.6', '$24call_method.10', '$26binary_add.11']
    $28call_function.12 = call $4load_global.0($10binary_subscr.3, $26binary_add.11, func=$4load_global.0, args=[Var($10binary_subscr.3, <string>:2), Var($26binary_add.11, <string>:2)], kws=(), vararg=None) ['$10binary_subscr.3', '$26binary_add.11', '$28call_function.12', '$4load_global.0']
    $30get_iter.13 = getiter(value=$28call_function.12) ['$28call_function.12', '$30get_iter.13']
    $phi32.0 = $30get_iter.13                ['$30get_iter.13', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 42             ['$32for_iter.3']
label 34:
    parfor__index_347 = $phi34.1             ['$phi34.1', 'parfor__index_347']
    $const36.2 = const(int, 0)               ['$const36.2']
    __sentinel__0 = $const36.2               ['$const36.2', '__sentinel__0']
    jump 32                                  []
label 42:
    jump 44                                  []
label 44:
    $const44.0 = const(NoneType, None)       ['$const44.0']
    $46return_value.1 = cast(value=$const44.0) ['$46return_value.1', '$const44.0']
    return $46return_value.1                 ['$46return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4355ba50>
DEBUG:numba.core.ssa:on stmt: sched.853 = arg(0, name=sched)
DEBUG:numba.core.ssa:on stmt: _96call__function__kw_42 = arg(1, name=_96call__function__kw_42)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__out__ids_382 = arg(2, name=_last__line__interaction__out__ids_382)
DEBUG:numba.core.ssa:on stmt: $arg_out_var.353 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: jump 2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 2
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4355ba50>
DEBUG:numba.core.ssa:on stmt: $4load_global.0.854 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const8.2.855 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.3.856 = getitem(value=sched.853, index=$const8.2.855)
DEBUG:numba.core.ssa:on stmt: $const14.5.857 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $16binary_subscr.6.858 = getitem(value=sched.853, index=$const14.5.857)
DEBUG:numba.core.ssa:on stmt: $18load_global.7.859 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_method.8.860 = getattr(value=$18load_global.7.859, attr=uint8)
DEBUG:numba.core.ssa:on stmt: $const22.9.861 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $24call_method.10.862 = call $20load_method.8.860($const22.9.861, func=$20load_method.8.860, args=[Var($const22.9.861, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $26binary_add.11.863 = $16binary_subscr.6.858 + $24call_method.10.862
DEBUG:numba.core.ssa:on stmt: $28call_function.12.864 = call $4load_global.0.854($10binary_subscr.3.856, $26binary_add.11.863, func=$4load_global.0.854, args=[Var($10binary_subscr.3.856, <string>:2), Var($26binary_add.11.863, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.13.865 = getiter(value=$28call_function.12.864)
DEBUG:numba.core.ssa:on stmt: $phi32.0.866 = $30get_iter.13.865
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4355ba50>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1.867 = iternext(value=$phi32.0.866)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2.868 = pair_first(value=$32for_iter.1.867)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3.869 = pair_second(value=$32for_iter.1.867)
DEBUG:numba.core.ssa:on stmt: $phi34.1.870 = $32for_iter.2.868
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3.869, 34, 752
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4355ba50>
DEBUG:numba.core.ssa:on stmt: parfor__index_347 = $phi34.1.870
DEBUG:numba.core.ssa:on stmt: $const36.2.871 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 752
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4355ba50>
DEBUG:numba.core.ssa:on stmt: jump 753
DEBUG:numba.core.ssa:==== SSA block analysis pass on 753
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4355ba50>
DEBUG:numba.core.ssa:on stmt: $const44.0.872 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1.873 = cast(value=$const44.0.872)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1.873
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4355ba50>
DEBUG:numba.core.ssa:on stmt: $arg_out_var.352 = getitem(value=_96call__function__kw_42, index=parfor__index_347)
DEBUG:numba.core.ssa:on stmt: $expr_out_var.351 = $arg_out_var.352 * $arg_out_var.353
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__out__ids_382[parfor__index_347] = $expr_out_var.351
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4355ba50>
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subscr.3.856': [<numba.core.ir.Assign object at 0x7f6e45c6c890>],
             '$16binary_subscr.6.858': [<numba.core.ir.Assign object at 0x7f6e45c6cc10>],
             '$18load_global.7.859': [<numba.core.ir.Assign object at 0x7f6e45c6c190>],
             '$20load_method.8.860': [<numba.core.ir.Assign object at 0x7f6e45c6cc50>],
             '$24call_method.10.862': [<numba.core.ir.Assign object at 0x7f6e4579ff50>],
             '$26binary_add.11.863': [<numba.core.ir.Assign object at 0x7f6e4579ff10>],
             '$28call_function.12.864': [<numba.core.ir.Assign object at 0x7f6e4579fe90>],
             '$30get_iter.13.865': [<numba.core.ir.Assign object at 0x7f6e4579f7d0>],
             '$32for_iter.1.867': [<numba.core.ir.Assign object at 0x7f6e4579fb50>],
             '$32for_iter.2.868': [<numba.core.ir.Assign object at 0x7f6e4579f550>],
             '$32for_iter.3.869': [<numba.core.ir.Assign object at 0x7f6e4579f810>],
             '$46return_value.1.873': [<numba.core.ir.Assign object at 0x7f6e45f9f290>],
             '$4load_global.0.854': [<numba.core.ir.Assign object at 0x7f6e45c6c4d0>],
             '$arg_out_var.352': [<numba.core.ir.Assign object at 0x7f6e45b13f10>],
             '$arg_out_var.353': [<numba.core.ir.Assign object at 0x7f6e45d220d0>],
             '$const14.5.857': [<numba.core.ir.Assign object at 0x7f6e45c6c490>],
             '$const22.9.861': [<numba.core.ir.Assign object at 0x7f6e4579f9d0>],
             '$const36.2.871': [<numba.core.ir.Assign object at 0x7f6e4579fed0>],
             '$const44.0.872': [<numba.core.ir.Assign object at 0x7f6e4579f310>],
             '$const8.2.855': [<numba.core.ir.Assign object at 0x7f6e45c6ce10>],
             '$expr_out_var.351': [<numba.core.ir.Assign object at 0x7f6e45d22a50>],
             '$phi32.0.866': [<numba.core.ir.Assign object at 0x7f6e45c6cf90>],
             '$phi34.1.870': [<numba.core.ir.Assign object at 0x7f6e4579f450>],
             '_96call__function__kw_42': [<numba.core.ir.Assign object at 0x7f6e45c6cad0>],
             '_last__line__interaction__out__ids_382': [<numba.core.ir.Assign object at 0x7f6e45c6cb50>],
             'parfor__index_347': [<numba.core.ir.Assign object at 0x7f6e4579fa90>],
             'sched.853': [<numba.core.ir.Assign object at 0x7f6e45c6c5d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	SETUP_LOOP(arg=40, lineno=2)
           4	LOAD_GLOBAL(arg=0, lineno=2)
           6	LOAD_FAST(arg=0, lineno=2)
           8	LOAD_CONST(arg=1, lineno=2)
          10	BINARY_SUBSCR(arg=None, lineno=2)
          12	LOAD_FAST(arg=0, lineno=2)
          14	LOAD_CONST(arg=2, lineno=2)
          16	BINARY_SUBSCR(arg=None, lineno=2)
          18	LOAD_GLOBAL(arg=1, lineno=2)
          20	LOAD_METHOD(arg=2, lineno=2)
          22	LOAD_CONST(arg=2, lineno=2)
          24	CALL_METHOD(arg=1, lineno=2)
          26	BINARY_ADD(arg=None, lineno=2)
          28	CALL_FUNCTION(arg=2, lineno=2)
          30	GET_ITER(arg=None, lineno=2)
>         32	FOR_ITER(arg=8, lineno=2)
          34	STORE_FAST(arg=22, lineno=2)
          36	LOAD_CONST(arg=1, lineno=3)
          38	STORE_FAST(arg=23, lineno=3)
          40	JUMP_ABSOLUTE(arg=32, lineno=3)
>         42	POP_BLOCK(arg=None, lineno=3)
>         44	LOAD_CONST(arg=0, lineno=4)
          46	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=2, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=2 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=SETUP_LOOP(arg=40, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1', '$const8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4', '$const14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$18load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8', '$const22.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$24call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$26binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$28call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.13',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=8, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_BLOCK(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=44 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=22, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=23, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$const36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=JUMP_ABSOLUTE(arg=32, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=2 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=2 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.13', State(pc_initial=2 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=2 nstack_initial=0): {'$phi32.0': '$30get_iter.13'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={2: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=2 nstack_initial=0):
AdaptBlockInfo(insts=((4, {'res': '$4load_global.0'}), (6, {'res': '$sched6.1'}), (8, {'res': '$const8.2'}), (10, {'index': '$const8.2', 'target': '$sched6.1', 'res': '$10binary_subscr.3'}), (12, {'res': '$sched12.4'}), (14, {'res': '$const14.5'}), (16, {'index': '$const14.5', 'target': '$sched12.4', 'res': '$16binary_subscr.6'}), (18, {'res': '$18load_global.7'}), (20, {'item': '$18load_global.7', 'res': '$20load_method.8'}), (22, {'res': '$const22.9'}), (24, {'func': '$20load_method.8', 'args': ['$const22.9'], 'res': '$24call_method.10'}), (26, {'lhs': '$16binary_subscr.6', 'rhs': '$24call_method.10', 'res': '$26binary_add.11'}), (28, {'func': '$4load_global.0', 'args': ['$10binary_subscr.3', '$26binary_add.11'], 'res': '$28call_function.12'}), (30, {'value': '$28call_function.12', 'res': '$30get_iter.13'})), outgoing_phis={'$phi32.0': '$30get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={42: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$const36.2'}), (38, {'value': '$const36.2'}), (40, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={44: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0'}), (46, {'retval': '$const44.0', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    _delta__nu_384 = arg(1, name=_delta__nu_384) ['_delta__nu_384']
    _v__packets__energy__hist_383 = arg(2, name=_v__packets__energy__hist_383) ['_v__packets__energy__hist_383']
    _virt__packet__energies_386 = arg(3, name=_virt__packet__energies_386) ['_virt__packet__energies_386']
    _virt__packet__last__interaction__in__nu_387 = arg(4, name=_virt__packet__last__interaction__in__nu_387) ['_virt__packet__last__interaction__in__nu_387']
    _virt__packet__last__interaction__type_388 = arg(5, name=_virt__packet__last__interaction__type_388) ['_virt__packet__last__interaction__type_388']
    _virt__packet__last__line__interaction__in__id_389 = arg(6, name=_virt__packet__last__line__interaction__in__id_389) ['_virt__packet__last__line__interaction__in__id_389']
    _virt__packet__last__line__interaction__out__id_390 = arg(7, name=_virt__packet__last__line__interaction__out__id_390) ['_virt__packet__last__line__interaction__out__id_390']
    _virt__packet__nus_385 = arg(8, name=_virt__packet__nus_385) ['_virt__packet__nus_385']
    estimators = arg(9, name=estimators)     ['estimators']
    numba__model = arg(10, name=numba__model) ['numba__model']
    numba__plasma = arg(11, name=numba__plasma) ['numba__plasma']
    number__of__vpackets = arg(12, name=number__of__vpackets) ['number__of__vpackets']
    packet__collection = arg(13, name=packet__collection) ['packet__collection']
    packet__seeds = arg(14, name=packet__seeds) ['packet__seeds']
    spectrum__frequency = arg(15, name=spectrum__frequency) ['spectrum__frequency']
    _last__interaction__in__nus_380 = arg(16, name=_last__interaction__in__nus_380) ['_last__interaction__in__nus_380']
    _last__interaction__types_378 = arg(17, name=_last__interaction__types_378) ['_last__interaction__types_378']
    _last__line__interaction__in__ids_381 = arg(18, name=_last__line__interaction__in__ids_381) ['_last__line__interaction__in__ids_381']
    _last__line__interaction__out__ids_382 = arg(19, name=_last__line__interaction__out__ids_382) ['_last__line__interaction__out__ids_382']
    _output__energies_379 = arg(20, name=_output__energies_379) ['_output__energies_379']
    _output__nus_377 = arg(21, name=_output__nus_377) ['_output__nus_377']
    jump 2                                   []
label 2:
    $4load_global.0 = global(range: <class 'range'>) ['$4load_global.0']
    $const8.2 = const(int, 0)                ['$const8.2']
    $10binary_subscr.3 = getitem(value=sched, index=$const8.2) ['$10binary_subscr.3', '$const8.2', 'sched']
    $const14.5 = const(int, 1)               ['$const14.5']
    $16binary_subscr.6 = getitem(value=sched, index=$const14.5) ['$16binary_subscr.6', '$const14.5', 'sched']
    $18load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$18load_global.7']
    $20load_method.8 = getattr(value=$18load_global.7, attr=uint8) ['$18load_global.7', '$20load_method.8']
    $const22.9 = const(int, 1)               ['$const22.9']
    $24call_method.10 = call $20load_method.8($const22.9, func=$20load_method.8, args=[Var($const22.9, <string>:2)], kws=(), vararg=None) ['$20load_method.8', '$24call_method.10', '$const22.9']
    $26binary_add.11 = $16binary_subscr.6 + $24call_method.10 ['$16binary_subscr.6', '$24call_method.10', '$26binary_add.11']
    $28call_function.12 = call $4load_global.0($10binary_subscr.3, $26binary_add.11, func=$4load_global.0, args=[Var($10binary_subscr.3, <string>:2), Var($26binary_add.11, <string>:2)], kws=(), vararg=None) ['$10binary_subscr.3', '$26binary_add.11', '$28call_function.12', '$4load_global.0']
    $30get_iter.13 = getiter(value=$28call_function.12) ['$28call_function.12', '$30get_iter.13']
    $phi32.0 = $30get_iter.13                ['$30get_iter.13', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 42             ['$32for_iter.3']
label 34:
    parfor__index_367 = $phi34.1             ['$phi34.1', 'parfor__index_367']
    $const36.2 = const(int, 0)               ['$const36.2']
    __sentinel__0 = $const36.2               ['$const36.2', '__sentinel__0']
    jump 32                                  []
label 42:
    jump 44                                  []
label 44:
    $const44.0 = const(NoneType, None)       ['$const44.0']
    $46return_value.1 = cast(value=$const44.0) ['$46return_value.1', '$const44.0']
    return $46return_value.1                 ['$46return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: sched.887 = arg(0, name=sched)
DEBUG:numba.core.ssa:on stmt: _delta__nu_384 = arg(1, name=_delta__nu_384)
DEBUG:numba.core.ssa:on stmt: _v__packets__energy__hist_383 = arg(2, name=_v__packets__energy__hist_383)
DEBUG:numba.core.ssa:on stmt: _virt__packet__energies_386 = arg(3, name=_virt__packet__energies_386)
DEBUG:numba.core.ssa:on stmt: _virt__packet__last__interaction__in__nu_387 = arg(4, name=_virt__packet__last__interaction__in__nu_387)
DEBUG:numba.core.ssa:on stmt: _virt__packet__last__interaction__type_388 = arg(5, name=_virt__packet__last__interaction__type_388)
DEBUG:numba.core.ssa:on stmt: _virt__packet__last__line__interaction__in__id_389 = arg(6, name=_virt__packet__last__line__interaction__in__id_389)
DEBUG:numba.core.ssa:on stmt: _virt__packet__last__line__interaction__out__id_390 = arg(7, name=_virt__packet__last__line__interaction__out__id_390)
DEBUG:numba.core.ssa:on stmt: _virt__packet__nus_385 = arg(8, name=_virt__packet__nus_385)
DEBUG:numba.core.ssa:on stmt: estimators = arg(9, name=estimators)
DEBUG:numba.core.ssa:on stmt: numba__model = arg(10, name=numba__model)
DEBUG:numba.core.ssa:on stmt: numba__plasma = arg(11, name=numba__plasma)
DEBUG:numba.core.ssa:on stmt: number__of__vpackets = arg(12, name=number__of__vpackets)
DEBUG:numba.core.ssa:on stmt: packet__collection = arg(13, name=packet__collection)
DEBUG:numba.core.ssa:on stmt: packet__seeds = arg(14, name=packet__seeds)
DEBUG:numba.core.ssa:on stmt: spectrum__frequency = arg(15, name=spectrum__frequency)
DEBUG:numba.core.ssa:on stmt: _last__interaction__in__nus_380 = arg(16, name=_last__interaction__in__nus_380)
DEBUG:numba.core.ssa:on stmt: _last__interaction__types_378 = arg(17, name=_last__interaction__types_378)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__in__ids_381 = arg(18, name=_last__line__interaction__in__ids_381)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__out__ids_382 = arg(19, name=_last__line__interaction__out__ids_382)
DEBUG:numba.core.ssa:on stmt: _output__energies_379 = arg(20, name=_output__energies_379)
DEBUG:numba.core.ssa:on stmt: _output__nus_377 = arg(21, name=_output__nus_377)
DEBUG:numba.core.ssa:on stmt: $196load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $198load_attr.3 = getattr(value=$196load_global.2, attr=single_packet_seed)
DEBUG:numba.core.ssa:on stmt: $seed.2.755 = static_getitem(value=packet__seeds, index=46, index_var=$198load_attr.3)
DEBUG:numba.core.ssa:on stmt: $204load_global.5 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $582load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $584load_attr.2 = getattr(value=$582load_global.1, attr=VPACKET_LOGGING)
DEBUG:numba.core.ssa:on stmt: bool586 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $238load_global.1 = global(RPacket: <class 'numba.experimental.jitclass.base.RPacket'>)
DEBUG:numba.core.ssa:on stmt: $242load_attr.3 = getattr(value=numba__model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const244.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=packet__collection, attr=packets_input_mu)
DEBUG:numba.core.ssa:on stmt: $258load_attr.11 = getattr(value=packet__collection, attr=packets_input_nu)
DEBUG:numba.core.ssa:on stmt: $266load_attr.15 = getattr(value=packet__collection, attr=packets_input_energy)
DEBUG:numba.core.ssa:on stmt: $const276.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $282load_global.22 = global(VPacketCollection: <class 'numba.experimental.jitclass.base.VPacketCollection'>)
DEBUG:numba.core.ssa:on stmt: $290load_global.26 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $292load_attr.27 = getattr(value=$290load_global.26, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $294load_global.28 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $296load_attr.29 = getattr(value=$294load_global.28, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $300load_global.31 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $302load_attr.32 = getattr(value=$300load_global.31, attr=temporary_v_packet_bins)
DEBUG:numba.core.ssa:on stmt: $308load_global.34 = global(single_packet_loop: CPUDispatcher(<function single_packet_loop at 0x7f6e4a107ef0>))
DEBUG:numba.core.ssa:on stmt: $368load_global.59 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $370load_attr.60 = getattr(value=$368load_global.59, attr=REABSORBED)
DEBUG:numba.core.ssa:on stmt: bool374 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $406load_global.3 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $408load_attr.4 = getattr(value=$406load_global.3, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: bool412 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $446build_slice.6 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.248 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: wrap.251 = global(wrap_index: <intrinsic wrap_index>)
DEBUG:numba.core.ssa:on stmt: $462build_slice.14 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.257 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const476.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $478binary_subscr.22 = static_getitem(value=spectrum__frequency, index=0, index_var=$const476.21)
DEBUG:numba.core.ssa:on stmt: $np_g_var.355 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $empty_attr_attr.356 = getattr(value=$np_g_var.355, attr=empty)
DEBUG:numba.core.ssa:on stmt: $np_typ_var.357 = getattr(value=$np_g_var.355, attr=float64)
DEBUG:numba.core.ssa:on stmt: $490load_global.28 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $492load_attr.29 = getattr(value=$490load_global.28, attr=int64)
DEBUG:numba.core.ssa:on stmt: $500load_global.1 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $const542.6 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $544binary_subscr.7 = static_getitem(value=spectrum__frequency, index=-1, index_var=$const542.6)
DEBUG:numba.core.ssa:on stmt: bool548 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $184load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $186load_attr.3 = getattr(value=$184load_global.2, attr=single_packet_seed)
DEBUG:numba.core.ssa:on stmt: $const188.4 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $190compare_op.5 = $186load_attr.3 != $const188.4
DEBUG:numba.core.ssa:on stmt: bool192 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $590load_method.2 = getattr(value=_virt__packet__nus_385, attr=append)
DEBUG:numba.core.ssa:on stmt: $600load_method.6 = getattr(value=_virt__packet__energies_386, attr=append)
DEBUG:numba.core.ssa:on stmt: $610load_method.10 = getattr(value=_virt__packet__last__interaction__in__nu_387, attr=append)
DEBUG:numba.core.ssa:on stmt: $622build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.273 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $632load_method.21 = getattr(value=_virt__packet__last__interaction__type_388, attr=append)
DEBUG:numba.core.ssa:on stmt: $644build_slice.27 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.282 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $654load_method.32 = getattr(value=_virt__packet__last__line__interaction__in__id_389, attr=append)
DEBUG:numba.core.ssa:on stmt: $666build_slice.38 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.291 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $676load_method.43 = getattr(value=_virt__packet__last__line__interaction__out__id_390, attr=append)
DEBUG:numba.core.ssa:on stmt: $688build_slice.49 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.300 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $const524.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $526binary_subscr.11 = static_getitem(value=spectrum__frequency, index=0, index_var=$const524.10)
DEBUG:numba.core.ssa:on stmt: bool530 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: jump 2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 2
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $4load_global.0.888 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const8.2.889 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.3.890 = getitem(value=sched.887, index=$const8.2.889)
DEBUG:numba.core.ssa:on stmt: $const14.5.891 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $16binary_subscr.6.892 = getitem(value=sched.887, index=$const14.5.891)
DEBUG:numba.core.ssa:on stmt: $18load_global.7.893 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_method.8.894 = getattr(value=$18load_global.7.893, attr=uint8)
DEBUG:numba.core.ssa:on stmt: $const22.9.895 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $24call_method.10.896 = call $20load_method.8.894($const22.9.895, func=$20load_method.8.894, args=[Var($const22.9.895, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $26binary_add.11.897 = $16binary_subscr.6.892 + $24call_method.10.896
DEBUG:numba.core.ssa:on stmt: $28call_function.12.898 = call $4load_global.0.888($10binary_subscr.3.890, $26binary_add.11.897, func=$4load_global.0.888, args=[Var($10binary_subscr.3.890, <string>:2), Var($26binary_add.11.897, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.13.899 = getiter(value=$28call_function.12.898)
DEBUG:numba.core.ssa:on stmt: $phi32.0.900 = $30get_iter.13.899
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1.901 = iternext(value=$phi32.0.900)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2.902 = pair_first(value=$32for_iter.1.901)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3.903 = pair_second(value=$32for_iter.1.901)
DEBUG:numba.core.ssa:on stmt: $phi34.1.904 = $32for_iter.2.902
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3.903, 34, 746
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: parfor__index_367 = $phi34.1.904
DEBUG:numba.core.ssa:on stmt: $const36.2.905 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 746
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: jump 747
DEBUG:numba.core.ssa:==== SSA block analysis pass on 747
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $const44.0.906 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1.907 = cast(value=$const44.0.906)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1.907
DEBUG:numba.core.ssa:==== SSA block analysis pass on 423
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $418load_attr.2 = getattr(value=$r_packet.391, attr=energy)
DEBUG:numba.core.ssa:on stmt: _output__energies_379[parfor__index_367] = $418load_attr.2
DEBUG:numba.core.ssa:on stmt: $428load_attr.6 = getattr(value=$r_packet.391, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: _last__interaction__types_378[parfor__index_367] = $428load_attr.6
DEBUG:numba.core.ssa:on stmt: jump 447
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: seed.2 = $seed.2.755
DEBUG:numba.core.ssa:on stmt: $206load_attr.6 = getattr(value=$204load_global.5, attr=random)
DEBUG:numba.core.ssa:on stmt: $208load_method.7 = getattr(value=$206load_attr.6, attr=seed)
DEBUG:numba.core.ssa:on stmt: $212call_method.9 = call $208load_method.7($seed.2.755, func=$208load_method.7, args=[Var($seed.2.755, base.py:155)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 239
DEBUG:numba.core.ssa:==== SSA block analysis pass on 597
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: jump 461
DEBUG:numba.core.ssa:==== SSA block analysis pass on 555
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: jump 597
DEBUG:numba.core.ssa:==== SSA block analysis pass on 601
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $586pred = call bool586($584load_attr.2, func=bool586, args=(Var($584load_attr.2, base.py:211),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $586pred, 625, 633
DEBUG:numba.core.ssa:==== SSA block analysis pass on 579
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.6 = getitem(value=_v__packets__energy__hist_383, index=$idx.398)
DEBUG:numba.core.ssa:on stmt: $568binary_subscr.9 = getitem(value=$vpackets_energy.397, index=$j.395)
DEBUG:numba.core.ssa:on stmt: $570inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$562binary_subscr.6, rhs=$568binary_subscr.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: _v__packets__energy__hist_383[$idx.398] = $570inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 597
DEBUG:numba.core.ssa:==== SSA block analysis pass on 239
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $246binary_subscr.5 = static_getitem(value=$242load_attr.3, index=0, index_var=$const244.4)
DEBUG:numba.core.ssa:on stmt: $254binary_subscr.9 = getitem(value=$250load_attr.7, index=parfor__index_367)
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.13 = getitem(value=$258load_attr.11, index=parfor__index_367)
DEBUG:numba.core.ssa:on stmt: $270binary_subscr.17 = getitem(value=$266load_attr.15, index=parfor__index_367)
DEBUG:numba.core.ssa:on stmt: $r_packet.391 = call $238load_global.1($246binary_subscr.5, $254binary_subscr.9, $262binary_subscr.13, $270binary_subscr.17, seed.2, i, $const276.20, func=$238load_global.1, args=[Var($246binary_subscr.5, base.py:161), Var($254binary_subscr.9, base.py:162), Var($262binary_subscr.13, base.py:163), Var($270binary_subscr.17, base.py:164), Var(seed.2, base.py:160), Var(i, base.py:153), Var($const276.20, base.py:167)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $286load_attr.24 = getattr(value=$r_packet.391, attr=index)
DEBUG:numba.core.ssa:on stmt: $vpacket_collection.392 = call $282load_global.22($286load_attr.24, spectrum__frequency, $292load_attr.27, $296load_attr.29, number__of__vpackets, $302load_attr.32, func=$282load_global.22, args=[Var($286load_attr.24, base.py:170), Var(spectrum__frequency, base.py:128), Var($292load_attr.27, base.py:172), Var($296load_attr.29, base.py:173), Var(number__of__vpackets, base.py:128), Var($302load_attr.32, base.py:175)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $loop.393 = call $308load_global.34($r_packet.391, numba__model, numba__plasma, estimators, $vpacket_collection.392, func=$308load_global.34, args=[Var($r_packet.391, base.py:167), Var(numba__model, base.py:128), Var(numba__plasma, base.py:128), Var(estimators, base.py:128), Var($vpacket_collection.392, base.py:175)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $326load_attr.42 = getattr(value=$r_packet.391, attr=nu)
DEBUG:numba.core.ssa:on stmt: _output__nus_377[parfor__index_367] = $326load_attr.42
DEBUG:numba.core.ssa:on stmt: $336load_attr.46 = getattr(value=$r_packet.391, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: _last__interaction__in__nus_380[parfor__index_367] = $336load_attr.46
DEBUG:numba.core.ssa:on stmt: $346load_attr.50 = getattr(value=$r_packet.391, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__in__ids_381[parfor__index_367] = $346load_attr.50
DEBUG:numba.core.ssa:on stmt: $356load_attr.54 = getattr(value=$r_packet.391, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__out__ids_382[parfor__index_367] = $356load_attr.54
DEBUG:numba.core.ssa:on stmt: $366load_attr.58 = getattr(value=$r_packet.391, attr=status)
DEBUG:numba.core.ssa:on stmt: $372compare_op.61 = $366load_attr.58 == $370load_attr.60
DEBUG:numba.core.ssa:on stmt: $374pred = call bool374($372compare_op.61, func=bool374, args=(Var($372compare_op.61, base.py:188),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $374pred, 263, 283
DEBUG:numba.core.ssa:==== SSA block analysis pass on 263
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $380load_attr.2 = getattr(value=$r_packet.391, attr=energy)
DEBUG:numba.core.ssa:on stmt: $382unary_negative.3 = unary(fn=<built-in function neg>, value=$380load_attr.2)
DEBUG:numba.core.ssa:on stmt: _output__energies_379[parfor__index_367] = $382unary_negative.3
DEBUG:numba.core.ssa:on stmt: $392load_attr.7 = getattr(value=$r_packet.391, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: _last__interaction__types_378[parfor__index_367] = $392load_attr.7
DEBUG:numba.core.ssa:on stmt: jump 447
DEBUG:numba.core.ssa:==== SSA block analysis pass on 283
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $404load_attr.2 = getattr(value=$r_packet.391, attr=status)
DEBUG:numba.core.ssa:on stmt: $410compare_op.5 = $404load_attr.2 == $408load_attr.4
DEBUG:numba.core.ssa:on stmt: $412pred = call bool412($410compare_op.5, func=bool412, args=(Var($410compare_op.5, base.py:191),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $412pred, 423, 447
DEBUG:numba.core.ssa:==== SSA block analysis pass on 447
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $438load_attr.2 = getattr(value=$vpacket_collection.392, attr=nus)
DEBUG:numba.core.ssa:on stmt: $438load_attr.2_shape.246 = getattr(value=$438load_attr.2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $438load_attr.2_size0.247 = static_getitem(value=$438load_attr.2_shape.246, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $444load_attr.5 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.249 = call $446build_slice.6(zero.248, $444load_attr.5, func=$446build_slice.6, args=(Var(zero.248, base.py:195), Var($444load_attr.5, base.py:195)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: var.252 = call wrap.251($444load_attr.5, $438load_attr.2_size0.247, func=wrap.251, args=[Var($444load_attr.5, base.py:195), Var($438load_attr.2_size0.247, base.py:195)], kws={}, vararg=None)
DEBUG:numba.core.ssa:on stmt: $vpackets_nu.396 = getitem(value=$438load_attr.2, index=replacement_slice.249)
DEBUG:numba.core.ssa:on stmt: $454load_attr.10 = getattr(value=$vpacket_collection.392, attr=energies)
DEBUG:numba.core.ssa:on stmt: $460load_attr.13 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.258 = call $462build_slice.14(zero.257, $460load_attr.13, func=$462build_slice.14, args=(Var(zero.257, base.py:196), Var($460load_attr.13, base.py:196)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $vpackets_energy.397 = getitem(value=$454load_attr.10, index=replacement_slice.258)
DEBUG:numba.core.ssa:on stmt: $468load_global.17 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: id=7[LoopNest(index_variable = parfor_index.354, range = (0, var.252, 1))]{753: <ir.Block at /home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/base.py (199)>}Var(parfor_index.354, base.py:199)
DEBUG:numba.core.ssa:on stmt: $488load_method.27 = getattr(value=$486call_method.26, attr=astype)
DEBUG:numba.core.ssa:on stmt: $v_packets_idx.399 = call $488load_method.27($492load_attr.29, func=$488load_method.27, args=[Var($492load_attr.29, base.py:200)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $504call_function.3 = call $500load_global.1($v_packets_idx.399, func=$500load_global.1, args=[Var($v_packets_idx.399, base.py:200)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $506get_iter.4 = getiter(value=$504call_function.3)
DEBUG:numba.core.ssa:on stmt: jump 461
DEBUG:numba.core.ssa:==== SSA block analysis pass on 553
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $538binary_subscr.4 = getitem(value=$vpackets_nu.396, index=$j.395)
DEBUG:numba.core.ssa:on stmt: $546compare_op.8 = $538binary_subscr.4 > $544binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $548pred = call bool548($546compare_op.8, func=bool548, args=(Var($546compare_op.8, base.py:206),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $548pred, 555, 579
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: i = parfor__index_367
DEBUG:numba.core.ssa:on stmt: $192pred = call bool192($190compare_op.5, func=bool192, args=(Var($190compare_op.5, base.py:154),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $192pred, 44, 227
DEBUG:numba.core.ssa:==== SSA block analysis pass on 625
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $594call_method.4 = call $590load_method.2($vpackets_nu.396, func=$590load_method.2, args=[Var($vpackets_nu.396, base.py:195)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $604call_method.8 = call $600load_method.6($vpackets_energy.397, func=$600load_method.6, args=[Var($vpackets_energy.397, base.py:196)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $614load_attr.12 = getattr(value=$vpacket_collection.392, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $620load_attr.15 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.274 = call $622build_slice.16(zero.273, $620load_attr.15, func=$622build_slice.16, args=(Var(zero.273, base.py:216), Var($620load_attr.15, base.py:216)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $624binary_subscr.18 = getitem(value=$614load_attr.12, index=replacement_slice.274)
DEBUG:numba.core.ssa:on stmt: $626call_method.19 = call $610load_method.10($624binary_subscr.18, func=$610load_method.10, args=[Var($624binary_subscr.18, base.py:216)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $636load_attr.23 = getattr(value=$vpacket_collection.392, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $642load_attr.26 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.283 = call $644build_slice.27(zero.282, $642load_attr.26, func=$644build_slice.27, args=(Var(zero.282, base.py:221), Var($642load_attr.26, base.py:221)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $646binary_subscr.29 = getitem(value=$636load_attr.23, index=replacement_slice.283)
DEBUG:numba.core.ssa:on stmt: $648call_method.30 = call $632load_method.21($646binary_subscr.29, func=$632load_method.21, args=[Var($646binary_subscr.29, base.py:221)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $658load_attr.34 = getattr(value=$vpacket_collection.392, attr=last_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $664load_attr.37 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.292 = call $666build_slice.38(zero.291, $664load_attr.37, func=$666build_slice.38, args=(Var(zero.291, base.py:226), Var($664load_attr.37, base.py:226)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $668binary_subscr.40 = getitem(value=$658load_attr.34, index=replacement_slice.292)
DEBUG:numba.core.ssa:on stmt: $670call_method.41 = call $654load_method.32($668binary_subscr.40, func=$654load_method.32, args=[Var($668binary_subscr.40, base.py:226)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $680load_attr.45 = getattr(value=$vpacket_collection.392, attr=last_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $686load_attr.48 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.301 = call $688build_slice.49(zero.300, $686load_attr.48, func=$688build_slice.49, args=(Var(zero.300, base.py:231), Var($686load_attr.48, base.py:231)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $690binary_subscr.51 = getitem(value=$680load_attr.45, index=replacement_slice.301)
DEBUG:numba.core.ssa:on stmt: $692call_method.52 = call $676load_method.43($690binary_subscr.51, func=$676load_method.43, args=[Var($690binary_subscr.51, base.py:231)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 633
DEBUG:numba.core.ssa:==== SSA block analysis pass on 227
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $seed.2.756 = getitem(value=packet__seeds, index=parfor__index_367)
DEBUG:numba.core.ssa:on stmt: seed.2 = $seed.2.756
DEBUG:numba.core.ssa:on stmt: $228load_attr.5 = getattr(value=$226load_global.4, attr=random)
DEBUG:numba.core.ssa:on stmt: $230load_method.6 = getattr(value=$228load_attr.5, attr=seed)
DEBUG:numba.core.ssa:on stmt: $234call_method.8 = call $230load_method.6($seed.2.756, func=$230load_method.6, args=[Var($seed.2.756, base.py:158)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 239
DEBUG:numba.core.ssa:==== SSA block analysis pass on 461
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $508for_iter.2 = iternext(value=$506get_iter.4)
DEBUG:numba.core.ssa:on stmt: $508for_iter.3 = pair_first(value=$508for_iter.2)
DEBUG:numba.core.ssa:on stmt: $508for_iter.4 = pair_second(value=$508for_iter.2)
DEBUG:numba.core.ssa:on stmt: branch $508for_iter.4, 481, 601
DEBUG:numba.core.ssa:==== SSA block analysis pass on 633
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: jump 743
DEBUG:numba.core.ssa:==== SSA block analysis pass on 481
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: $510unpack_sequence.5 = exhaust_iter(value=$508for_iter.3, count=2)
DEBUG:numba.core.ssa:on stmt: $j.395 = static_getitem(value=$510unpack_sequence.5, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $idx.398 = static_getitem(value=$510unpack_sequence.5, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: $520binary_subscr.8 = getitem(value=$vpackets_nu.396, index=$j.395)
DEBUG:numba.core.ssa:on stmt: $528compare_op.12 = $520binary_subscr.8 < $526binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $530pred = call bool530($528compare_op.12, func=bool530, args=(Var($528compare_op.12, base.py:205),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $530pred, 597, 553
DEBUG:numba.core.ssa:==== SSA block analysis pass on 743
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e45ab8990>
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subscr.3.890': [<numba.core.ir.Assign object at 0x7f6e45c8c650>],
             '$16binary_subscr.6.892': [<numba.core.ir.Assign object at 0x7f6e45c8ce10>],
             '$184load_global.2': [<numba.core.ir.Assign object at 0x7f6e46299090>],
             '$186load_attr.3': [<numba.core.ir.Assign object at 0x7f6e462995d0>],
             '$18load_global.7.893': [<numba.core.ir.Assign object at 0x7f6e45c8c050>],
             '$190compare_op.5': [<numba.core.ir.Assign object at 0x7f6e46286310>],
             '$192pred': [<numba.core.ir.Assign object at 0x7f6e46286b50>],
             '$196load_global.2': [<numba.core.ir.Assign object at 0x7f6e46286650>],
             '$198load_attr.3': [<numba.core.ir.Assign object at 0x7f6e46286550>],
             '$204load_global.5': [<numba.core.ir.Assign object at 0x7f6e46286590>],
             '$206load_attr.6': [<numba.core.ir.Assign object at 0x7f6e46286c10>],
             '$208load_method.7': [<numba.core.ir.Assign object at 0x7f6e46286f90>],
             '$20load_method.8.894': [<numba.core.ir.Assign object at 0x7f6e45c8cc90>],
             '$212call_method.9': [<numba.core.ir.Assign object at 0x7f6e46286110>],
             '$226load_global.4': [<numba.core.ir.Assign object at 0x7f6e461def50>],
             '$228load_attr.5': [<numba.core.ir.Assign object at 0x7f6e461deed0>],
             '$230load_method.6': [<numba.core.ir.Assign object at 0x7f6e461dea10>],
             '$234call_method.8': [<numba.core.ir.Assign object at 0x7f6e45e64710>],
             '$238load_global.1': [<numba.core.ir.Assign object at 0x7f6e461de390>],
             '$242load_attr.3': [<numba.core.ir.Assign object at 0x7f6e461de810>],
             '$246binary_subscr.5': [<numba.core.ir.Assign object at 0x7f6e45ca2150>],
             '$24call_method.10.896': [<numba.core.ir.Assign object at 0x7f6e460e2610>],
             '$250load_attr.7': [<numba.core.ir.Assign object at 0x7f6e461ded90>],
             '$254binary_subscr.9': [<numba.core.ir.Assign object at 0x7f6e45b6ced0>],
             '$258load_attr.11': [<numba.core.ir.Assign object at 0x7f6e45e976d0>],
             '$262binary_subscr.13': [<numba.core.ir.Assign object at 0x7f6e45e97210>],
             '$266load_attr.15': [<numba.core.ir.Assign object at 0x7f6e45e97890>],
             '$26binary_add.11.897': [<numba.core.ir.Assign object at 0x7f6e460e2390>],
             '$270binary_subscr.17': [<numba.core.ir.Assign object at 0x7f6e45e97fd0>],
             '$282load_global.22': [<numba.core.ir.Assign object at 0x7f6e45e16fd0>],
             '$286load_attr.24': [<numba.core.ir.Assign object at 0x7f6e45e16e50>],
             '$28call_function.12.898': [<numba.core.ir.Assign object at 0x7f6e460e2490>],
             '$290load_global.26': [<numba.core.ir.Assign object at 0x7f6e45e16b90>],
             '$292load_attr.27': [<numba.core.ir.Assign object at 0x7f6e45e16e90>],
             '$294load_global.28': [<numba.core.ir.Assign object at 0x7f6e45e16950>],
             '$296load_attr.29': [<numba.core.ir.Assign object at 0x7f6e45e16250>],
             '$300load_global.31': [<numba.core.ir.Assign object at 0x7f6e45e16310>],
             '$302load_attr.32': [<numba.core.ir.Assign object at 0x7f6e45e16850>],
             '$308load_global.34': [<numba.core.ir.Assign object at 0x7f6e46088e10>],
             '$30get_iter.13.899': [<numba.core.ir.Assign object at 0x7f6e460e2310>],
             '$326load_attr.42': [<numba.core.ir.Assign object at 0x7f6e45ea0290>],
             '$32for_iter.1.901': [<numba.core.ir.Assign object at 0x7f6e460e27d0>],
             '$32for_iter.2.902': [<numba.core.ir.Assign object at 0x7f6e460e24d0>],
             '$32for_iter.3.903': [<numba.core.ir.Assign object at 0x7f6e460e2dd0>],
             '$336load_attr.46': [<numba.core.ir.Assign object at 0x7f6e45ea0710>],
             '$346load_attr.50': [<numba.core.ir.Assign object at 0x7f6e45ea0dd0>],
             '$356load_attr.54': [<numba.core.ir.Assign object at 0x7f6e45ea0750>],
             '$366load_attr.58': [<numba.core.ir.Assign object at 0x7f6e45eb77d0>],
             '$368load_global.59': [<numba.core.ir.Assign object at 0x7f6e45eb7890>],
             '$370load_attr.60': [<numba.core.ir.Assign object at 0x7f6e45eb7290>],
             '$372compare_op.61': [<numba.core.ir.Assign object at 0x7f6e45eb7d90>],
             '$374pred': [<numba.core.ir.Assign object at 0x7f6e45eb7110>],
             '$380load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45e162d0>],
             '$382unary_negative.3': [<numba.core.ir.Assign object at 0x7f6e46088810>],
             '$392load_attr.7': [<numba.core.ir.Assign object at 0x7f6e45eb7690>],
             '$404load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45eb7cd0>],
             '$406load_global.3': [<numba.core.ir.Assign object at 0x7f6e45eb7410>],
             '$408load_attr.4': [<numba.core.ir.Assign object at 0x7f6e45eb7f90>],
             '$410compare_op.5': [<numba.core.ir.Assign object at 0x7f6e45eb7c50>],
             '$412pred': [<numba.core.ir.Assign object at 0x7f6e45e196d0>],
             '$418load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45e19850>],
             '$428load_attr.6': [<numba.core.ir.Assign object at 0x7f6e45e19510>],
             '$438load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45e19350>],
             '$438load_attr.2_shape.246': [<numba.core.ir.Assign object at 0x7f6e45a1cc90>],
             '$438load_attr.2_size0.247': [<numba.core.ir.Assign object at 0x7f6e45a1cb90>],
             '$444load_attr.5': [<numba.core.ir.Assign object at 0x7f6e45e19a10>],
             '$446build_slice.6': [<numba.core.ir.Assign object at 0x7f6e45e194d0>],
             '$454load_attr.10': [<numba.core.ir.Assign object at 0x7f6e45e2ca50>],
             '$460load_attr.13': [<numba.core.ir.Assign object at 0x7f6e45e2cf50>],
             '$462build_slice.14': [<numba.core.ir.Assign object at 0x7f6e45e2ce50>],
             '$468load_global.17': [<numba.core.ir.Assign object at 0x7f6e45e2cc10>],
             '$46return_value.1.907': [<numba.core.ir.Assign object at 0x7f6e45e64090>],
             '$478binary_subscr.22': [<numba.core.ir.Assign object at 0x7f6e45ca20d0>],
             '$488load_method.27': [<numba.core.ir.Assign object at 0x7f6e460829d0>],
             '$490load_global.28': [<numba.core.ir.Assign object at 0x7f6e46082590>],
             '$492load_attr.29': [<numba.core.ir.Assign object at 0x7f6e46082410>],
             '$4load_global.0.888': [<numba.core.ir.Assign object at 0x7f6e45c8ce50>],
             '$500load_global.1': [<numba.core.ir.Assign object at 0x7f6e46082f50>],
             '$504call_function.3': [<numba.core.ir.Assign object at 0x7f6e46082ad0>],
             '$506get_iter.4': [<numba.core.ir.Assign object at 0x7f6e46082790>],
             '$508for_iter.2': [<numba.core.ir.Assign object at 0x7f6e46082550>],
             '$508for_iter.3': [<numba.core.ir.Assign object at 0x7f6e46082f90>],
             '$508for_iter.4': [<numba.core.ir.Assign object at 0x7f6e46082090>],
             '$510unpack_sequence.5': [<numba.core.ir.Assign object at 0x7f6e45c46050>],
             '$520binary_subscr.8': [<numba.core.ir.Assign object at 0x7f6e45d99fd0>],
             '$526binary_subscr.11': [<numba.core.ir.Assign object at 0x7f6e45c3ed90>],
             '$528compare_op.12': [<numba.core.ir.Assign object at 0x7f6e45d99750>],
             '$530pred': [<numba.core.ir.Assign object at 0x7f6e45d99850>],
             '$538binary_subscr.4': [<numba.core.ir.Assign object at 0x7f6e45c9ce10>],
             '$544binary_subscr.7': [<numba.core.ir.Assign object at 0x7f6e45e334d0>],
             '$546compare_op.8': [<numba.core.ir.Assign object at 0x7f6e45b5a690>],
             '$548pred': [<numba.core.ir.Assign object at 0x7f6e45d8e6d0>],
             '$562binary_subscr.6': [<numba.core.ir.Assign object at 0x7f6e45d8e1d0>],
             '$568binary_subscr.9': [<numba.core.ir.Assign object at 0x7f6e45d8e3d0>],
             '$570inplace_add.10': [<numba.core.ir.Assign object at 0x7f6e45d8e690>],
             '$582load_global.1': [<numba.core.ir.Assign object at 0x7f6e45d8ec10>],
             '$584load_attr.2': [<numba.core.ir.Assign object at 0x7f6e45d8ef50>],
             '$586pred': [<numba.core.ir.Assign object at 0x7f6e45c76290>],
             '$590load_method.2': [<numba.core.ir.Assign object at 0x7f6e45c76790>],
             '$594call_method.4': [<numba.core.ir.Assign object at 0x7f6e45c76190>],
             '$600load_method.6': [<numba.core.ir.Assign object at 0x7f6e45c76d10>],
             '$604call_method.8': [<numba.core.ir.Assign object at 0x7f6e45c76e10>],
             '$610load_method.10': [<numba.core.ir.Assign object at 0x7f6e45c769d0>],
             '$614load_attr.12': [<numba.core.ir.Assign object at 0x7f6e45c765d0>],
             '$620load_attr.15': [<numba.core.ir.Assign object at 0x7f6e45b90410>],
             '$622build_slice.16': [<numba.core.ir.Assign object at 0x7f6e45b90150>],
             '$624binary_subscr.18': [<numba.core.ir.Assign object at 0x7f6e45b90350>],
             '$626call_method.19': [<numba.core.ir.Assign object at 0x7f6e45b90250>],
             '$632load_method.21': [<numba.core.ir.Assign object at 0x7f6e45b90d90>],
             '$636load_attr.23': [<numba.core.ir.Assign object at 0x7f6e45b46950>],
             '$642load_attr.26': [<numba.core.ir.Assign object at 0x7f6e45e3bdd0>],
             '$644build_slice.27': [<numba.core.ir.Assign object at 0x7f6e45e3b410>],
             '$646binary_subscr.29': [<numba.core.ir.Assign object at 0x7f6e45e3b6d0>],
             '$648call_method.30': [<numba.core.ir.Assign object at 0x7f6e45e3b710>],
             '$654load_method.32': [<numba.core.ir.Assign object at 0x7f6e45e3b050>],
             '$658load_attr.34': [<numba.core.ir.Assign object at 0x7f6e45e3b550>],
             '$664load_attr.37': [<numba.core.ir.Assign object at 0x7f6e45e3b590>],
             '$666build_slice.38': [<numba.core.ir.Assign object at 0x7f6e45e3b1d0>],
             '$668binary_subscr.40': [<numba.core.ir.Assign object at 0x7f6e45e3b150>],
             '$670call_method.41': [<numba.core.ir.Assign object at 0x7f6e45c49310>],
             '$676load_method.43': [<numba.core.ir.Assign object at 0x7f6e45c498d0>],
             '$680load_attr.45': [<numba.core.ir.Assign object at 0x7f6e45de32d0>],
             '$686load_attr.48': [<numba.core.ir.Assign object at 0x7f6e45d88590>],
             '$688build_slice.49': [<numba.core.ir.Assign object at 0x7f6e45d881d0>],
             '$690binary_subscr.51': [<numba.core.ir.Assign object at 0x7f6e45d88650>],
             '$692call_method.52': [<numba.core.ir.Assign object at 0x7f6e45d88090>],
             '$const14.5.891': [<numba.core.ir.Assign object at 0x7f6e45c8c490>],
             '$const188.4': [<numba.core.ir.Assign object at 0x7f6e46286d10>],
             '$const22.9.895': [<numba.core.ir.Assign object at 0x7f6e45c8cd90>],
             '$const244.4': [<numba.core.ir.Assign object at 0x7f6e461de610>],
             '$const276.20': [<numba.core.ir.Assign object at 0x7f6e45e97190>],
             '$const36.2.905': [<numba.core.ir.Assign object at 0x7f6e460e2f90>],
             '$const44.0.906': [<numba.core.ir.Assign object at 0x7f6e460e20d0>],
             '$const476.21': [<numba.core.ir.Assign object at 0x7f6e45e2c950>],
             '$const524.10': [<numba.core.ir.Assign object at 0x7f6e45d992d0>],
             '$const542.6': [<numba.core.ir.Assign object at 0x7f6e45c9c750>],
             '$const8.2.889': [<numba.core.ir.Assign object at 0x7f6e45c8c2d0>],
             '$empty_attr_attr.356': [<numba.core.ir.Assign object at 0x7f6e45c59d50>],
             '$idx.398': [<numba.core.ir.Assign object at 0x7f6e45d99950>],
             '$j.395': [<numba.core.ir.Assign object at 0x7f6e45d99290>],
             '$loop.393': [<numba.core.ir.Assign object at 0x7f6e46088850>],
             '$np_g_var.355': [<numba.core.ir.Assign object at 0x7f6e45c595d0>],
             '$np_typ_var.357': [<numba.core.ir.Assign object at 0x7f6e45c59090>],
             '$phi32.0.900': [<numba.core.ir.Assign object at 0x7f6e45c8c4d0>],
             '$phi34.1.904': [<numba.core.ir.Assign object at 0x7f6e460e2810>],
             '$r_packet.391': [<numba.core.ir.Assign object at 0x7f6e45e16910>],
             '$seed.2.755': [<numba.core.ir.Assign object at 0x7f6e45e33ad0>],
             '$seed.2.756': [<numba.core.ir.Assign object at 0x7f6e461dec10>],
             '$v_packets_idx.399': [<numba.core.ir.Assign object at 0x7f6e46082690>],
             '$vpacket_collection.392': [<numba.core.ir.Assign object at 0x7f6e46088910>],
             '$vpackets_energy.397': [<numba.core.ir.Assign object at 0x7f6e45e2c2d0>],
             '$vpackets_nu.396': [<numba.core.ir.Assign object at 0x7f6e45e2cd50>],
             '_delta__nu_384': [<numba.core.ir.Assign object at 0x7f6e45acbf10>],
             '_last__interaction__in__nus_380': [<numba.core.ir.Assign object at 0x7f6e45c8c510>],
             '_last__interaction__types_378': [<numba.core.ir.Assign object at 0x7f6e45c8c590>],
             '_last__line__interaction__in__ids_381': [<numba.core.ir.Assign object at 0x7f6e45c8c9d0>],
             '_last__line__interaction__out__ids_382': [<numba.core.ir.Assign object at 0x7f6e45c8c5d0>],
             '_output__energies_379': [<numba.core.ir.Assign object at 0x7f6e45c8c290>],
             '_output__nus_377': [<numba.core.ir.Assign object at 0x7f6e45c8ca10>],
             '_v__packets__energy__hist_383': [<numba.core.ir.Assign object at 0x7f6e45acbfd0>],
             '_virt__packet__energies_386': [<numba.core.ir.Assign object at 0x7f6e45acbd90>],
             '_virt__packet__last__interaction__in__nu_387': [<numba.core.ir.Assign object at 0x7f6e45acbd50>],
             '_virt__packet__last__interaction__type_388': [<numba.core.ir.Assign object at 0x7f6e45acb2d0>],
             '_virt__packet__last__line__interaction__in__id_389': [<numba.core.ir.Assign object at 0x7f6e45acb650>],
             '_virt__packet__last__line__interaction__out__id_390': [<numba.core.ir.Assign object at 0x7f6e45acb610>],
             '_virt__packet__nus_385': [<numba.core.ir.Assign object at 0x7f6e45acb690>],
             'bool192': [<numba.core.ir.Assign object at 0x7f6e46286bd0>],
             'bool374': [<numba.core.ir.Assign object at 0x7f6e45eb7d10>],
             'bool412': [<numba.core.ir.Assign object at 0x7f6e45e19a50>],
             'bool530': [<numba.core.ir.Assign object at 0x7f6e45d997d0>],
             'bool548': [<numba.core.ir.Assign object at 0x7f6e45b5a710>],
             'bool586': [<numba.core.ir.Assign object at 0x7f6e45c76110>],
             'estimators': [<numba.core.ir.Assign object at 0x7f6e45acb9d0>],
             'i': [<numba.core.ir.Assign object at 0x7f6e46299550>],
             'numba__model': [<numba.core.ir.Assign object at 0x7f6e45acba50>],
             'numba__plasma': [<numba.core.ir.Assign object at 0x7f6e45acb450>],
             'number__of__vpackets': [<numba.core.ir.Assign object at 0x7f6e45acbb10>],
             'packet__collection': [<numba.core.ir.Assign object at 0x7f6e45acb6d0>],
             'packet__seeds': [<numba.core.ir.Assign object at 0x7f6e45acba90>],
             'parfor__index_367': [<numba.core.ir.Assign object at 0x7f6e460e2250>],
             'replacement_slice.249': [<numba.core.ir.Assign object at 0x7f6e45a025d0>],
             'replacement_slice.258': [<numba.core.ir.Assign object at 0x7f6e457b0790>],
             'replacement_slice.274': [<numba.core.ir.Assign object at 0x7f6e45a086d0>],
             'replacement_slice.283': [<numba.core.ir.Assign object at 0x7f6e45a08790>],
             'replacement_slice.292': [<numba.core.ir.Assign object at 0x7f6e4598a710>],
             'replacement_slice.301': [<numba.core.ir.Assign object at 0x7f6e45990d90>],
             'sched.887': [<numba.core.ir.Assign object at 0x7f6e45b36750>],
             'seed.2': [<numba.core.ir.Assign object at 0x7f6e45cf6a50>,
                        <numba.core.ir.Assign object at 0x7f6e45cf6d90>],
             'spectrum__frequency': [<numba.core.ir.Assign object at 0x7f6e45acb510>],
             'var.252': [<numba.core.ir.Assign object at 0x7f6e4599e9d0>],
             'wrap.251': [<numba.core.ir.Assign object at 0x7f6e4599e850>],
             'zero.248': [<numba.core.ir.Assign object at 0x7f6e45a02310>],
             'zero.257': [<numba.core.ir.Assign object at 0x7f6e459ef250>],
             'zero.273': [<numba.core.ir.Assign object at 0x7f6e45a08290>],
             'zero.282': [<numba.core.ir.Assign object at 0x7f6e43165b50>],
             'zero.291': [<numba.core.ir.Assign object at 0x7f6e4598a210>],
             'zero.300': [<numba.core.ir.Assign object at 0x7f6e45990890>]})
DEBUG:numba.core.ssa:SSA violators {'seed.2'}
DEBUG:numba.core.ssa:Fix SSA violator on var seed.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: sched.887 = arg(0, name=sched)
DEBUG:numba.core.ssa:on stmt: _delta__nu_384 = arg(1, name=_delta__nu_384)
DEBUG:numba.core.ssa:on stmt: _v__packets__energy__hist_383 = arg(2, name=_v__packets__energy__hist_383)
DEBUG:numba.core.ssa:on stmt: _virt__packet__energies_386 = arg(3, name=_virt__packet__energies_386)
DEBUG:numba.core.ssa:on stmt: _virt__packet__last__interaction__in__nu_387 = arg(4, name=_virt__packet__last__interaction__in__nu_387)
DEBUG:numba.core.ssa:on stmt: _virt__packet__last__interaction__type_388 = arg(5, name=_virt__packet__last__interaction__type_388)
DEBUG:numba.core.ssa:on stmt: _virt__packet__last__line__interaction__in__id_389 = arg(6, name=_virt__packet__last__line__interaction__in__id_389)
DEBUG:numba.core.ssa:on stmt: _virt__packet__last__line__interaction__out__id_390 = arg(7, name=_virt__packet__last__line__interaction__out__id_390)
DEBUG:numba.core.ssa:on stmt: _virt__packet__nus_385 = arg(8, name=_virt__packet__nus_385)
DEBUG:numba.core.ssa:on stmt: estimators = arg(9, name=estimators)
DEBUG:numba.core.ssa:on stmt: numba__model = arg(10, name=numba__model)
DEBUG:numba.core.ssa:on stmt: numba__plasma = arg(11, name=numba__plasma)
DEBUG:numba.core.ssa:on stmt: number__of__vpackets = arg(12, name=number__of__vpackets)
DEBUG:numba.core.ssa:on stmt: packet__collection = arg(13, name=packet__collection)
DEBUG:numba.core.ssa:on stmt: packet__seeds = arg(14, name=packet__seeds)
DEBUG:numba.core.ssa:on stmt: spectrum__frequency = arg(15, name=spectrum__frequency)
DEBUG:numba.core.ssa:on stmt: _last__interaction__in__nus_380 = arg(16, name=_last__interaction__in__nus_380)
DEBUG:numba.core.ssa:on stmt: _last__interaction__types_378 = arg(17, name=_last__interaction__types_378)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__in__ids_381 = arg(18, name=_last__line__interaction__in__ids_381)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__out__ids_382 = arg(19, name=_last__line__interaction__out__ids_382)
DEBUG:numba.core.ssa:on stmt: _output__energies_379 = arg(20, name=_output__energies_379)
DEBUG:numba.core.ssa:on stmt: _output__nus_377 = arg(21, name=_output__nus_377)
DEBUG:numba.core.ssa:on stmt: $196load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $198load_attr.3 = getattr(value=$196load_global.2, attr=single_packet_seed)
DEBUG:numba.core.ssa:on stmt: $seed.2.755 = static_getitem(value=packet__seeds, index=46, index_var=$198load_attr.3)
DEBUG:numba.core.ssa:on stmt: $204load_global.5 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $582load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $584load_attr.2 = getattr(value=$582load_global.1, attr=VPACKET_LOGGING)
DEBUG:numba.core.ssa:on stmt: bool586 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $238load_global.1 = global(RPacket: <class 'numba.experimental.jitclass.base.RPacket'>)
DEBUG:numba.core.ssa:on stmt: $242load_attr.3 = getattr(value=numba__model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const244.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=packet__collection, attr=packets_input_mu)
DEBUG:numba.core.ssa:on stmt: $258load_attr.11 = getattr(value=packet__collection, attr=packets_input_nu)
DEBUG:numba.core.ssa:on stmt: $266load_attr.15 = getattr(value=packet__collection, attr=packets_input_energy)
DEBUG:numba.core.ssa:on stmt: $const276.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $282load_global.22 = global(VPacketCollection: <class 'numba.experimental.jitclass.base.VPacketCollection'>)
DEBUG:numba.core.ssa:on stmt: $290load_global.26 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $292load_attr.27 = getattr(value=$290load_global.26, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $294load_global.28 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $296load_attr.29 = getattr(value=$294load_global.28, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $300load_global.31 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $302load_attr.32 = getattr(value=$300load_global.31, attr=temporary_v_packet_bins)
DEBUG:numba.core.ssa:on stmt: $308load_global.34 = global(single_packet_loop: CPUDispatcher(<function single_packet_loop at 0x7f6e4a107ef0>))
DEBUG:numba.core.ssa:on stmt: $368load_global.59 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $370load_attr.60 = getattr(value=$368load_global.59, attr=REABSORBED)
DEBUG:numba.core.ssa:on stmt: bool374 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $406load_global.3 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $408load_attr.4 = getattr(value=$406load_global.3, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: bool412 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $446build_slice.6 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.248 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: wrap.251 = global(wrap_index: <intrinsic wrap_index>)
DEBUG:numba.core.ssa:on stmt: $462build_slice.14 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.257 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const476.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $478binary_subscr.22 = static_getitem(value=spectrum__frequency, index=0, index_var=$const476.21)
DEBUG:numba.core.ssa:on stmt: $np_g_var.355 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $empty_attr_attr.356 = getattr(value=$np_g_var.355, attr=empty)
DEBUG:numba.core.ssa:on stmt: $np_typ_var.357 = getattr(value=$np_g_var.355, attr=float64)
DEBUG:numba.core.ssa:on stmt: $490load_global.28 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $492load_attr.29 = getattr(value=$490load_global.28, attr=int64)
DEBUG:numba.core.ssa:on stmt: $500load_global.1 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $const542.6 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $544binary_subscr.7 = static_getitem(value=spectrum__frequency, index=-1, index_var=$const542.6)
DEBUG:numba.core.ssa:on stmt: bool548 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $184load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $186load_attr.3 = getattr(value=$184load_global.2, attr=single_packet_seed)
DEBUG:numba.core.ssa:on stmt: $const188.4 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $190compare_op.5 = $186load_attr.3 != $const188.4
DEBUG:numba.core.ssa:on stmt: bool192 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $590load_method.2 = getattr(value=_virt__packet__nus_385, attr=append)
DEBUG:numba.core.ssa:on stmt: $600load_method.6 = getattr(value=_virt__packet__energies_386, attr=append)
DEBUG:numba.core.ssa:on stmt: $610load_method.10 = getattr(value=_virt__packet__last__interaction__in__nu_387, attr=append)
DEBUG:numba.core.ssa:on stmt: $622build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.273 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $632load_method.21 = getattr(value=_virt__packet__last__interaction__type_388, attr=append)
DEBUG:numba.core.ssa:on stmt: $644build_slice.27 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.282 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $654load_method.32 = getattr(value=_virt__packet__last__line__interaction__in__id_389, attr=append)
DEBUG:numba.core.ssa:on stmt: $666build_slice.38 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.291 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $676load_method.43 = getattr(value=_virt__packet__last__line__interaction__out__id_390, attr=append)
DEBUG:numba.core.ssa:on stmt: $688build_slice.49 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.300 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $const524.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $526binary_subscr.11 = static_getitem(value=spectrum__frequency, index=0, index_var=$const524.10)
DEBUG:numba.core.ssa:on stmt: bool530 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: jump 2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 2
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $4load_global.0.888 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const8.2.889 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.3.890 = getitem(value=sched.887, index=$const8.2.889)
DEBUG:numba.core.ssa:on stmt: $const14.5.891 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $16binary_subscr.6.892 = getitem(value=sched.887, index=$const14.5.891)
DEBUG:numba.core.ssa:on stmt: $18load_global.7.893 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_method.8.894 = getattr(value=$18load_global.7.893, attr=uint8)
DEBUG:numba.core.ssa:on stmt: $const22.9.895 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $24call_method.10.896 = call $20load_method.8.894($const22.9.895, func=$20load_method.8.894, args=[Var($const22.9.895, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $26binary_add.11.897 = $16binary_subscr.6.892 + $24call_method.10.896
DEBUG:numba.core.ssa:on stmt: $28call_function.12.898 = call $4load_global.0.888($10binary_subscr.3.890, $26binary_add.11.897, func=$4load_global.0.888, args=[Var($10binary_subscr.3.890, <string>:2), Var($26binary_add.11.897, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.13.899 = getiter(value=$28call_function.12.898)
DEBUG:numba.core.ssa:on stmt: $phi32.0.900 = $30get_iter.13.899
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1.901 = iternext(value=$phi32.0.900)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2.902 = pair_first(value=$32for_iter.1.901)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3.903 = pair_second(value=$32for_iter.1.901)
DEBUG:numba.core.ssa:on stmt: $phi34.1.904 = $32for_iter.2.902
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3.903, 34, 746
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: parfor__index_367 = $phi34.1.904
DEBUG:numba.core.ssa:on stmt: $const36.2.905 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 746
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: jump 747
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 747
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $const44.0.906 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1.907 = cast(value=$const44.0.906)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1.907
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 423
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $418load_attr.2 = getattr(value=$r_packet.391, attr=energy)
DEBUG:numba.core.ssa:on stmt: _output__energies_379[parfor__index_367] = $418load_attr.2
DEBUG:numba.core.ssa:on stmt: $428load_attr.6 = getattr(value=$r_packet.391, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: _last__interaction__types_378[parfor__index_367] = $428load_attr.6
DEBUG:numba.core.ssa:on stmt: jump 447
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: seed.2 = $seed.2.755
DEBUG:numba.core.ssa:first assign: seed.2
DEBUG:numba.core.ssa:replaced with: seed.2 = $seed.2.755
DEBUG:numba.core.ssa:on stmt: $206load_attr.6 = getattr(value=$204load_global.5, attr=random)
DEBUG:numba.core.ssa:on stmt: $208load_method.7 = getattr(value=$206load_attr.6, attr=seed)
DEBUG:numba.core.ssa:on stmt: $212call_method.9 = call $208load_method.7($seed.2.755, func=$208load_method.7, args=[Var($seed.2.755, base.py:155)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 239
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 597
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: jump 461
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 555
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: jump 597
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 601
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $586pred = call bool586($584load_attr.2, func=bool586, args=(Var($584load_attr.2, base.py:211),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $586pred, 625, 633
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 579
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.6 = getitem(value=_v__packets__energy__hist_383, index=$idx.398)
DEBUG:numba.core.ssa:on stmt: $568binary_subscr.9 = getitem(value=$vpackets_energy.397, index=$j.395)
DEBUG:numba.core.ssa:on stmt: $570inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$562binary_subscr.6, rhs=$568binary_subscr.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: _v__packets__energy__hist_383[$idx.398] = $570inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 597
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 239
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $246binary_subscr.5 = static_getitem(value=$242load_attr.3, index=0, index_var=$const244.4)
DEBUG:numba.core.ssa:on stmt: $254binary_subscr.9 = getitem(value=$250load_attr.7, index=parfor__index_367)
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.13 = getitem(value=$258load_attr.11, index=parfor__index_367)
DEBUG:numba.core.ssa:on stmt: $270binary_subscr.17 = getitem(value=$266load_attr.15, index=parfor__index_367)
DEBUG:numba.core.ssa:on stmt: $r_packet.391 = call $238load_global.1($246binary_subscr.5, $254binary_subscr.9, $262binary_subscr.13, $270binary_subscr.17, seed.2, i, $const276.20, func=$238load_global.1, args=[Var($246binary_subscr.5, base.py:161), Var($254binary_subscr.9, base.py:162), Var($262binary_subscr.13, base.py:163), Var($270binary_subscr.17, base.py:164), Var(seed.2, base.py:160), Var(i, base.py:153), Var($const276.20, base.py:167)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $286load_attr.24 = getattr(value=$r_packet.391, attr=index)
DEBUG:numba.core.ssa:on stmt: $vpacket_collection.392 = call $282load_global.22($286load_attr.24, spectrum__frequency, $292load_attr.27, $296load_attr.29, number__of__vpackets, $302load_attr.32, func=$282load_global.22, args=[Var($286load_attr.24, base.py:170), Var(spectrum__frequency, base.py:128), Var($292load_attr.27, base.py:172), Var($296load_attr.29, base.py:173), Var(number__of__vpackets, base.py:128), Var($302load_attr.32, base.py:175)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $loop.393 = call $308load_global.34($r_packet.391, numba__model, numba__plasma, estimators, $vpacket_collection.392, func=$308load_global.34, args=[Var($r_packet.391, base.py:167), Var(numba__model, base.py:128), Var(numba__plasma, base.py:128), Var(estimators, base.py:128), Var($vpacket_collection.392, base.py:175)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $326load_attr.42 = getattr(value=$r_packet.391, attr=nu)
DEBUG:numba.core.ssa:on stmt: _output__nus_377[parfor__index_367] = $326load_attr.42
DEBUG:numba.core.ssa:on stmt: $336load_attr.46 = getattr(value=$r_packet.391, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: _last__interaction__in__nus_380[parfor__index_367] = $336load_attr.46
DEBUG:numba.core.ssa:on stmt: $346load_attr.50 = getattr(value=$r_packet.391, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__in__ids_381[parfor__index_367] = $346load_attr.50
DEBUG:numba.core.ssa:on stmt: $356load_attr.54 = getattr(value=$r_packet.391, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__out__ids_382[parfor__index_367] = $356load_attr.54
DEBUG:numba.core.ssa:on stmt: $366load_attr.58 = getattr(value=$r_packet.391, attr=status)
DEBUG:numba.core.ssa:on stmt: $372compare_op.61 = $366load_attr.58 == $370load_attr.60
DEBUG:numba.core.ssa:on stmt: $374pred = call bool374($372compare_op.61, func=bool374, args=(Var($372compare_op.61, base.py:188),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $374pred, 263, 283
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 263
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $380load_attr.2 = getattr(value=$r_packet.391, attr=energy)
DEBUG:numba.core.ssa:on stmt: $382unary_negative.3 = unary(fn=<built-in function neg>, value=$380load_attr.2)
DEBUG:numba.core.ssa:on stmt: _output__energies_379[parfor__index_367] = $382unary_negative.3
DEBUG:numba.core.ssa:on stmt: $392load_attr.7 = getattr(value=$r_packet.391, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: _last__interaction__types_378[parfor__index_367] = $392load_attr.7
DEBUG:numba.core.ssa:on stmt: jump 447
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 283
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $404load_attr.2 = getattr(value=$r_packet.391, attr=status)
DEBUG:numba.core.ssa:on stmt: $410compare_op.5 = $404load_attr.2 == $408load_attr.4
DEBUG:numba.core.ssa:on stmt: $412pred = call bool412($410compare_op.5, func=bool412, args=(Var($410compare_op.5, base.py:191),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $412pred, 423, 447
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 447
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $438load_attr.2 = getattr(value=$vpacket_collection.392, attr=nus)
DEBUG:numba.core.ssa:on stmt: $438load_attr.2_shape.246 = getattr(value=$438load_attr.2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $438load_attr.2_size0.247 = static_getitem(value=$438load_attr.2_shape.246, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $444load_attr.5 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.249 = call $446build_slice.6(zero.248, $444load_attr.5, func=$446build_slice.6, args=(Var(zero.248, base.py:195), Var($444load_attr.5, base.py:195)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: var.252 = call wrap.251($444load_attr.5, $438load_attr.2_size0.247, func=wrap.251, args=[Var($444load_attr.5, base.py:195), Var($438load_attr.2_size0.247, base.py:195)], kws={}, vararg=None)
DEBUG:numba.core.ssa:on stmt: $vpackets_nu.396 = getitem(value=$438load_attr.2, index=replacement_slice.249)
DEBUG:numba.core.ssa:on stmt: $454load_attr.10 = getattr(value=$vpacket_collection.392, attr=energies)
DEBUG:numba.core.ssa:on stmt: $460load_attr.13 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.258 = call $462build_slice.14(zero.257, $460load_attr.13, func=$462build_slice.14, args=(Var(zero.257, base.py:196), Var($460load_attr.13, base.py:196)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $vpackets_energy.397 = getitem(value=$454load_attr.10, index=replacement_slice.258)
DEBUG:numba.core.ssa:on stmt: $468load_global.17 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: id=7[LoopNest(index_variable = parfor_index.354, range = (0, var.252, 1))]{753: <ir.Block at /home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/base.py (199)>}Var(parfor_index.354, base.py:199)
DEBUG:numba.core.ssa:on stmt: $488load_method.27 = getattr(value=$486call_method.26, attr=astype)
DEBUG:numba.core.ssa:on stmt: $v_packets_idx.399 = call $488load_method.27($492load_attr.29, func=$488load_method.27, args=[Var($492load_attr.29, base.py:200)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $504call_function.3 = call $500load_global.1($v_packets_idx.399, func=$500load_global.1, args=[Var($v_packets_idx.399, base.py:200)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $506get_iter.4 = getiter(value=$504call_function.3)
DEBUG:numba.core.ssa:on stmt: jump 461
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 553
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $538binary_subscr.4 = getitem(value=$vpackets_nu.396, index=$j.395)
DEBUG:numba.core.ssa:on stmt: $546compare_op.8 = $538binary_subscr.4 > $544binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $548pred = call bool548($546compare_op.8, func=bool548, args=(Var($546compare_op.8, base.py:206),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $548pred, 555, 579
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: i = parfor__index_367
DEBUG:numba.core.ssa:on stmt: $192pred = call bool192($190compare_op.5, func=bool192, args=(Var($190compare_op.5, base.py:154),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $192pred, 44, 227
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 625
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $594call_method.4 = call $590load_method.2($vpackets_nu.396, func=$590load_method.2, args=[Var($vpackets_nu.396, base.py:195)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $604call_method.8 = call $600load_method.6($vpackets_energy.397, func=$600load_method.6, args=[Var($vpackets_energy.397, base.py:196)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $614load_attr.12 = getattr(value=$vpacket_collection.392, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $620load_attr.15 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.274 = call $622build_slice.16(zero.273, $620load_attr.15, func=$622build_slice.16, args=(Var(zero.273, base.py:216), Var($620load_attr.15, base.py:216)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $624binary_subscr.18 = getitem(value=$614load_attr.12, index=replacement_slice.274)
DEBUG:numba.core.ssa:on stmt: $626call_method.19 = call $610load_method.10($624binary_subscr.18, func=$610load_method.10, args=[Var($624binary_subscr.18, base.py:216)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $636load_attr.23 = getattr(value=$vpacket_collection.392, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $642load_attr.26 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.283 = call $644build_slice.27(zero.282, $642load_attr.26, func=$644build_slice.27, args=(Var(zero.282, base.py:221), Var($642load_attr.26, base.py:221)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $646binary_subscr.29 = getitem(value=$636load_attr.23, index=replacement_slice.283)
DEBUG:numba.core.ssa:on stmt: $648call_method.30 = call $632load_method.21($646binary_subscr.29, func=$632load_method.21, args=[Var($646binary_subscr.29, base.py:221)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $658load_attr.34 = getattr(value=$vpacket_collection.392, attr=last_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $664load_attr.37 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.292 = call $666build_slice.38(zero.291, $664load_attr.37, func=$666build_slice.38, args=(Var(zero.291, base.py:226), Var($664load_attr.37, base.py:226)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $668binary_subscr.40 = getitem(value=$658load_attr.34, index=replacement_slice.292)
DEBUG:numba.core.ssa:on stmt: $670call_method.41 = call $654load_method.32($668binary_subscr.40, func=$654load_method.32, args=[Var($668binary_subscr.40, base.py:226)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $680load_attr.45 = getattr(value=$vpacket_collection.392, attr=last_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $686load_attr.48 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.301 = call $688build_slice.49(zero.300, $686load_attr.48, func=$688build_slice.49, args=(Var(zero.300, base.py:231), Var($686load_attr.48, base.py:231)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $690binary_subscr.51 = getitem(value=$680load_attr.45, index=replacement_slice.301)
DEBUG:numba.core.ssa:on stmt: $692call_method.52 = call $676load_method.43($690binary_subscr.51, func=$676load_method.43, args=[Var($690binary_subscr.51, base.py:231)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 633
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 227
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $seed.2.756 = getitem(value=packet__seeds, index=parfor__index_367)
DEBUG:numba.core.ssa:on stmt: seed.2 = $seed.2.756
DEBUG:numba.core.ssa:replaced with: seed.2 = $seed.2.756
DEBUG:numba.core.ssa:on stmt: $228load_attr.5 = getattr(value=$226load_global.4, attr=random)
DEBUG:numba.core.ssa:on stmt: $230load_method.6 = getattr(value=$228load_attr.5, attr=seed)
DEBUG:numba.core.ssa:on stmt: $234call_method.8 = call $230load_method.6($seed.2.756, func=$230load_method.6, args=[Var($seed.2.756, base.py:158)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 239
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 461
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $508for_iter.2 = iternext(value=$506get_iter.4)
DEBUG:numba.core.ssa:on stmt: $508for_iter.3 = pair_first(value=$508for_iter.2)
DEBUG:numba.core.ssa:on stmt: $508for_iter.4 = pair_second(value=$508for_iter.2)
DEBUG:numba.core.ssa:on stmt: branch $508for_iter.4, 481, 601
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 633
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: jump 743
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 481
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: $510unpack_sequence.5 = exhaust_iter(value=$508for_iter.3, count=2)
DEBUG:numba.core.ssa:on stmt: $j.395 = static_getitem(value=$510unpack_sequence.5, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $idx.398 = static_getitem(value=$510unpack_sequence.5, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: $520binary_subscr.8 = getitem(value=$vpackets_nu.396, index=$j.395)
DEBUG:numba.core.ssa:on stmt: $528compare_op.12 = $520binary_subscr.8 < $526binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $530pred = call bool530($528compare_op.12, func=bool530, args=(Var($528compare_op.12, base.py:205),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $530pred, 597, 553
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 743
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7f6e46eb6550>
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {44: [<numba.core.ir.Assign object at 0x7f6e466483d0>],
             227: [<numba.core.ir.Assign object at 0x7f6e45ab84d0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: sched.887 = arg(0, name=sched)
DEBUG:numba.core.ssa:on stmt: _delta__nu_384 = arg(1, name=_delta__nu_384)
DEBUG:numba.core.ssa:on stmt: _v__packets__energy__hist_383 = arg(2, name=_v__packets__energy__hist_383)
DEBUG:numba.core.ssa:on stmt: _virt__packet__energies_386 = arg(3, name=_virt__packet__energies_386)
DEBUG:numba.core.ssa:on stmt: _virt__packet__last__interaction__in__nu_387 = arg(4, name=_virt__packet__last__interaction__in__nu_387)
DEBUG:numba.core.ssa:on stmt: _virt__packet__last__interaction__type_388 = arg(5, name=_virt__packet__last__interaction__type_388)
DEBUG:numba.core.ssa:on stmt: _virt__packet__last__line__interaction__in__id_389 = arg(6, name=_virt__packet__last__line__interaction__in__id_389)
DEBUG:numba.core.ssa:on stmt: _virt__packet__last__line__interaction__out__id_390 = arg(7, name=_virt__packet__last__line__interaction__out__id_390)
DEBUG:numba.core.ssa:on stmt: _virt__packet__nus_385 = arg(8, name=_virt__packet__nus_385)
DEBUG:numba.core.ssa:on stmt: estimators = arg(9, name=estimators)
DEBUG:numba.core.ssa:on stmt: numba__model = arg(10, name=numba__model)
DEBUG:numba.core.ssa:on stmt: numba__plasma = arg(11, name=numba__plasma)
DEBUG:numba.core.ssa:on stmt: number__of__vpackets = arg(12, name=number__of__vpackets)
DEBUG:numba.core.ssa:on stmt: packet__collection = arg(13, name=packet__collection)
DEBUG:numba.core.ssa:on stmt: packet__seeds = arg(14, name=packet__seeds)
DEBUG:numba.core.ssa:on stmt: spectrum__frequency = arg(15, name=spectrum__frequency)
DEBUG:numba.core.ssa:on stmt: _last__interaction__in__nus_380 = arg(16, name=_last__interaction__in__nus_380)
DEBUG:numba.core.ssa:on stmt: _last__interaction__types_378 = arg(17, name=_last__interaction__types_378)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__in__ids_381 = arg(18, name=_last__line__interaction__in__ids_381)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__out__ids_382 = arg(19, name=_last__line__interaction__out__ids_382)
DEBUG:numba.core.ssa:on stmt: _output__energies_379 = arg(20, name=_output__energies_379)
DEBUG:numba.core.ssa:on stmt: _output__nus_377 = arg(21, name=_output__nus_377)
DEBUG:numba.core.ssa:on stmt: $196load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $198load_attr.3 = getattr(value=$196load_global.2, attr=single_packet_seed)
DEBUG:numba.core.ssa:on stmt: $seed.2.755 = static_getitem(value=packet__seeds, index=46, index_var=$198load_attr.3)
DEBUG:numba.core.ssa:on stmt: $204load_global.5 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $582load_global.1 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $584load_attr.2 = getattr(value=$582load_global.1, attr=VPACKET_LOGGING)
DEBUG:numba.core.ssa:on stmt: bool586 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $238load_global.1 = global(RPacket: <class 'numba.experimental.jitclass.base.RPacket'>)
DEBUG:numba.core.ssa:on stmt: $242load_attr.3 = getattr(value=numba__model, attr=r_inner)
DEBUG:numba.core.ssa:on stmt: $const244.4 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=packet__collection, attr=packets_input_mu)
DEBUG:numba.core.ssa:on stmt: $258load_attr.11 = getattr(value=packet__collection, attr=packets_input_nu)
DEBUG:numba.core.ssa:on stmt: $266load_attr.15 = getattr(value=packet__collection, attr=packets_input_energy)
DEBUG:numba.core.ssa:on stmt: $const276.20 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $282load_global.22 = global(VPacketCollection: <class 'numba.experimental.jitclass.base.VPacketCollection'>)
DEBUG:numba.core.ssa:on stmt: $290load_global.26 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $292load_attr.27 = getattr(value=$290load_global.26, attr=v_packet_spawn_start_frequency)
DEBUG:numba.core.ssa:on stmt: $294load_global.28 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $296load_attr.29 = getattr(value=$294load_global.28, attr=v_packet_spawn_end_frequency)
DEBUG:numba.core.ssa:on stmt: $300load_global.31 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $302load_attr.32 = getattr(value=$300load_global.31, attr=temporary_v_packet_bins)
DEBUG:numba.core.ssa:on stmt: $308load_global.34 = global(single_packet_loop: CPUDispatcher(<function single_packet_loop at 0x7f6e4a107ef0>))
DEBUG:numba.core.ssa:on stmt: $368load_global.59 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $370load_attr.60 = getattr(value=$368load_global.59, attr=REABSORBED)
DEBUG:numba.core.ssa:on stmt: bool374 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $406load_global.3 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $408load_attr.4 = getattr(value=$406load_global.3, attr=EMITTED)
DEBUG:numba.core.ssa:on stmt: bool412 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $446build_slice.6 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.248 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: wrap.251 = global(wrap_index: <intrinsic wrap_index>)
DEBUG:numba.core.ssa:on stmt: $462build_slice.14 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.257 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const476.21 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $478binary_subscr.22 = static_getitem(value=spectrum__frequency, index=0, index_var=$const476.21)
DEBUG:numba.core.ssa:on stmt: $np_g_var.355 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $empty_attr_attr.356 = getattr(value=$np_g_var.355, attr=empty)
DEBUG:numba.core.ssa:on stmt: $np_typ_var.357 = getattr(value=$np_g_var.355, attr=float64)
DEBUG:numba.core.ssa:on stmt: $490load_global.28 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $492load_attr.29 = getattr(value=$490load_global.28, attr=int64)
DEBUG:numba.core.ssa:on stmt: $500load_global.1 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $const542.6 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $544binary_subscr.7 = static_getitem(value=spectrum__frequency, index=-1, index_var=$const542.6)
DEBUG:numba.core.ssa:on stmt: bool548 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $184load_global.2 = global(montecarlo_configuration: <module 'tardis.montecarlo.montecarlo_configuration' from '/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_configuration.py'>)
DEBUG:numba.core.ssa:on stmt: $186load_attr.3 = getattr(value=$184load_global.2, attr=single_packet_seed)
DEBUG:numba.core.ssa:on stmt: $const188.4 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $190compare_op.5 = $186load_attr.3 != $const188.4
DEBUG:numba.core.ssa:on stmt: bool192 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $590load_method.2 = getattr(value=_virt__packet__nus_385, attr=append)
DEBUG:numba.core.ssa:on stmt: $600load_method.6 = getattr(value=_virt__packet__energies_386, attr=append)
DEBUG:numba.core.ssa:on stmt: $610load_method.10 = getattr(value=_virt__packet__last__interaction__in__nu_387, attr=append)
DEBUG:numba.core.ssa:on stmt: $622build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.273 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $632load_method.21 = getattr(value=_virt__packet__last__interaction__type_388, attr=append)
DEBUG:numba.core.ssa:on stmt: $644build_slice.27 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.282 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $654load_method.32 = getattr(value=_virt__packet__last__line__interaction__in__id_389, attr=append)
DEBUG:numba.core.ssa:on stmt: $666build_slice.38 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.291 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $676load_method.43 = getattr(value=_virt__packet__last__line__interaction__out__id_390, attr=append)
DEBUG:numba.core.ssa:on stmt: $688build_slice.49 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: zero.300 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $const524.10 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $526binary_subscr.11 = static_getitem(value=spectrum__frequency, index=0, index_var=$const524.10)
DEBUG:numba.core.ssa:on stmt: bool530 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: jump 2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 2
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $4load_global.0.888 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const8.2.889 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.3.890 = getitem(value=sched.887, index=$const8.2.889)
DEBUG:numba.core.ssa:on stmt: $const14.5.891 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $16binary_subscr.6.892 = getitem(value=sched.887, index=$const14.5.891)
DEBUG:numba.core.ssa:on stmt: $18load_global.7.893 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_method.8.894 = getattr(value=$18load_global.7.893, attr=uint8)
DEBUG:numba.core.ssa:on stmt: $const22.9.895 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $24call_method.10.896 = call $20load_method.8.894($const22.9.895, func=$20load_method.8.894, args=[Var($const22.9.895, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $26binary_add.11.897 = $16binary_subscr.6.892 + $24call_method.10.896
DEBUG:numba.core.ssa:on stmt: $28call_function.12.898 = call $4load_global.0.888($10binary_subscr.3.890, $26binary_add.11.897, func=$4load_global.0.888, args=[Var($10binary_subscr.3.890, <string>:2), Var($26binary_add.11.897, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.13.899 = getiter(value=$28call_function.12.898)
DEBUG:numba.core.ssa:on stmt: $phi32.0.900 = $30get_iter.13.899
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1.901 = iternext(value=$phi32.0.900)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2.902 = pair_first(value=$32for_iter.1.901)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3.903 = pair_second(value=$32for_iter.1.901)
DEBUG:numba.core.ssa:on stmt: $phi34.1.904 = $32for_iter.2.902
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3.903, 34, 746
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: parfor__index_367 = $phi34.1.904
DEBUG:numba.core.ssa:on stmt: $const36.2.905 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 746
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: jump 747
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 747
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $const44.0.906 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1.907 = cast(value=$const44.0.906)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1.907
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 423
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $418load_attr.2 = getattr(value=$r_packet.391, attr=energy)
DEBUG:numba.core.ssa:on stmt: _output__energies_379[parfor__index_367] = $418load_attr.2
DEBUG:numba.core.ssa:on stmt: $428load_attr.6 = getattr(value=$r_packet.391, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: _last__interaction__types_378[parfor__index_367] = $428load_attr.6
DEBUG:numba.core.ssa:on stmt: jump 447
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: seed.2 = $seed.2.755
DEBUG:numba.core.ssa:on stmt: $206load_attr.6 = getattr(value=$204load_global.5, attr=random)
DEBUG:numba.core.ssa:on stmt: $208load_method.7 = getattr(value=$206load_attr.6, attr=seed)
DEBUG:numba.core.ssa:on stmt: $212call_method.9 = call $208load_method.7($seed.2.755, func=$208load_method.7, args=[Var($seed.2.755, base.py:155)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 239
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 597
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: jump 461
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 555
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: jump 597
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 601
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $586pred = call bool586($584load_attr.2, func=bool586, args=(Var($584load_attr.2, base.py:211),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $586pred, 625, 633
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 579
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $562binary_subscr.6 = getitem(value=_v__packets__energy__hist_383, index=$idx.398)
DEBUG:numba.core.ssa:on stmt: $568binary_subscr.9 = getitem(value=$vpackets_energy.397, index=$j.395)
DEBUG:numba.core.ssa:on stmt: $570inplace_add.10 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$562binary_subscr.6, rhs=$568binary_subscr.9, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: _v__packets__energy__hist_383[$idx.398] = $570inplace_add.10
DEBUG:numba.core.ssa:on stmt: jump 597
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 239
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $246binary_subscr.5 = static_getitem(value=$242load_attr.3, index=0, index_var=$const244.4)
DEBUG:numba.core.ssa:on stmt: $254binary_subscr.9 = getitem(value=$250load_attr.7, index=parfor__index_367)
DEBUG:numba.core.ssa:on stmt: $262binary_subscr.13 = getitem(value=$258load_attr.11, index=parfor__index_367)
DEBUG:numba.core.ssa:on stmt: $270binary_subscr.17 = getitem(value=$266load_attr.15, index=parfor__index_367)
DEBUG:numba.core.ssa:on stmt: $r_packet.391 = call $238load_global.1($246binary_subscr.5, $254binary_subscr.9, $262binary_subscr.13, $270binary_subscr.17, seed.2, i, $const276.20, func=$238load_global.1, args=[Var($246binary_subscr.5, base.py:161), Var($254binary_subscr.9, base.py:162), Var($262binary_subscr.13, base.py:163), Var($270binary_subscr.17, base.py:164), Var(seed.2, base.py:160), Var(i, base.py:153), Var($const276.20, base.py:167)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def var='seed.2' stmt=$r_packet.391 = call $238load_global.1($246binary_subscr.5, $254binary_subscr.9, $262binary_subscr.13, $270binary_subscr.17, seed.2, i, $const276.20, func=$238load_global.1, args=[Var($246binary_subscr.5, base.py:161), Var($254binary_subscr.9, base.py:162), Var($262binary_subscr.13, base.py:163), Var($270binary_subscr.17, base.py:164), Var(seed.2, base.py:160), Var(i, base.py:153), Var($const276.20, base.py:167)], kws=(), vararg=None)
DEBUG:numba.core.ssa:find_def_from_top label 239
DEBUG:numba.core.ssa:insert phi node seed.2.1 = phi(incoming_values=[], incoming_blocks=[]) at 239
DEBUG:numba.core.ssa:find_def_from_bottom label 227
DEBUG:numba.core.ssa:incoming_def seed.2 = $seed.2.756
DEBUG:numba.core.ssa:find_def_from_bottom label 44
DEBUG:numba.core.ssa:incoming_def seed.2 = $seed.2.755
DEBUG:numba.core.ssa:replaced with: $r_packet.391 = call $238load_global.1($246binary_subscr.5, $254binary_subscr.9, $262binary_subscr.13, $270binary_subscr.17, seed.2.1, i, $const276.20, func=$238load_global.1, args=[Var($246binary_subscr.5, base.py:161), Var($254binary_subscr.9, base.py:162), Var($262binary_subscr.13, base.py:163), Var($270binary_subscr.17, base.py:164), Var(seed.2.1, base.py:160), Var(i, base.py:153), Var($const276.20, base.py:167)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $286load_attr.24 = getattr(value=$r_packet.391, attr=index)
DEBUG:numba.core.ssa:on stmt: $vpacket_collection.392 = call $282load_global.22($286load_attr.24, spectrum__frequency, $292load_attr.27, $296load_attr.29, number__of__vpackets, $302load_attr.32, func=$282load_global.22, args=[Var($286load_attr.24, base.py:170), Var(spectrum__frequency, base.py:128), Var($292load_attr.27, base.py:172), Var($296load_attr.29, base.py:173), Var(number__of__vpackets, base.py:128), Var($302load_attr.32, base.py:175)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $loop.393 = call $308load_global.34($r_packet.391, numba__model, numba__plasma, estimators, $vpacket_collection.392, func=$308load_global.34, args=[Var($r_packet.391, base.py:167), Var(numba__model, base.py:128), Var(numba__plasma, base.py:128), Var(estimators, base.py:128), Var($vpacket_collection.392, base.py:175)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $326load_attr.42 = getattr(value=$r_packet.391, attr=nu)
DEBUG:numba.core.ssa:on stmt: _output__nus_377[parfor__index_367] = $326load_attr.42
DEBUG:numba.core.ssa:on stmt: $336load_attr.46 = getattr(value=$r_packet.391, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: _last__interaction__in__nus_380[parfor__index_367] = $336load_attr.46
DEBUG:numba.core.ssa:on stmt: $346load_attr.50 = getattr(value=$r_packet.391, attr=last_line_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__in__ids_381[parfor__index_367] = $346load_attr.50
DEBUG:numba.core.ssa:on stmt: $356load_attr.54 = getattr(value=$r_packet.391, attr=last_line_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: _last__line__interaction__out__ids_382[parfor__index_367] = $356load_attr.54
DEBUG:numba.core.ssa:on stmt: $366load_attr.58 = getattr(value=$r_packet.391, attr=status)
DEBUG:numba.core.ssa:on stmt: $372compare_op.61 = $366load_attr.58 == $370load_attr.60
DEBUG:numba.core.ssa:on stmt: $374pred = call bool374($372compare_op.61, func=bool374, args=(Var($372compare_op.61, base.py:188),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $374pred, 263, 283
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 263
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $380load_attr.2 = getattr(value=$r_packet.391, attr=energy)
DEBUG:numba.core.ssa:on stmt: $382unary_negative.3 = unary(fn=<built-in function neg>, value=$380load_attr.2)
DEBUG:numba.core.ssa:on stmt: _output__energies_379[parfor__index_367] = $382unary_negative.3
DEBUG:numba.core.ssa:on stmt: $392load_attr.7 = getattr(value=$r_packet.391, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: _last__interaction__types_378[parfor__index_367] = $392load_attr.7
DEBUG:numba.core.ssa:on stmt: jump 447
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 283
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $404load_attr.2 = getattr(value=$r_packet.391, attr=status)
DEBUG:numba.core.ssa:on stmt: $410compare_op.5 = $404load_attr.2 == $408load_attr.4
DEBUG:numba.core.ssa:on stmt: $412pred = call bool412($410compare_op.5, func=bool412, args=(Var($410compare_op.5, base.py:191),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $412pred, 423, 447
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 447
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $438load_attr.2 = getattr(value=$vpacket_collection.392, attr=nus)
DEBUG:numba.core.ssa:on stmt: $438load_attr.2_shape.246 = getattr(value=$438load_attr.2, attr=shape)
DEBUG:numba.core.ssa:on stmt: $438load_attr.2_size0.247 = static_getitem(value=$438load_attr.2_shape.246, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $444load_attr.5 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.249 = call $446build_slice.6(zero.248, $444load_attr.5, func=$446build_slice.6, args=(Var(zero.248, base.py:195), Var($444load_attr.5, base.py:195)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: var.252 = call wrap.251($444load_attr.5, $438load_attr.2_size0.247, func=wrap.251, args=[Var($444load_attr.5, base.py:195), Var($438load_attr.2_size0.247, base.py:195)], kws={}, vararg=None)
DEBUG:numba.core.ssa:on stmt: $vpackets_nu.396 = getitem(value=$438load_attr.2, index=replacement_slice.249)
DEBUG:numba.core.ssa:on stmt: $454load_attr.10 = getattr(value=$vpacket_collection.392, attr=energies)
DEBUG:numba.core.ssa:on stmt: $460load_attr.13 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.258 = call $462build_slice.14(zero.257, $460load_attr.13, func=$462build_slice.14, args=(Var(zero.257, base.py:196), Var($460load_attr.13, base.py:196)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $vpackets_energy.397 = getitem(value=$454load_attr.10, index=replacement_slice.258)
DEBUG:numba.core.ssa:on stmt: $468load_global.17 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: id=7[LoopNest(index_variable = parfor_index.354, range = (0, var.252, 1))]{753: <ir.Block at /home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/base.py (199)>}Var(parfor_index.354, base.py:199)
DEBUG:numba.core.ssa:on stmt: $488load_method.27 = getattr(value=$486call_method.26, attr=astype)
DEBUG:numba.core.ssa:on stmt: $v_packets_idx.399 = call $488load_method.27($492load_attr.29, func=$488load_method.27, args=[Var($492load_attr.29, base.py:200)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $504call_function.3 = call $500load_global.1($v_packets_idx.399, func=$500load_global.1, args=[Var($v_packets_idx.399, base.py:200)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $506get_iter.4 = getiter(value=$504call_function.3)
DEBUG:numba.core.ssa:on stmt: jump 461
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 553
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $538binary_subscr.4 = getitem(value=$vpackets_nu.396, index=$j.395)
DEBUG:numba.core.ssa:on stmt: $546compare_op.8 = $538binary_subscr.4 > $544binary_subscr.7
DEBUG:numba.core.ssa:on stmt: $548pred = call bool548($546compare_op.8, func=bool548, args=(Var($546compare_op.8, base.py:206),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $548pred, 555, 579
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: i = parfor__index_367
DEBUG:numba.core.ssa:on stmt: $192pred = call bool192($190compare_op.5, func=bool192, args=(Var($190compare_op.5, base.py:154),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $192pred, 44, 227
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 625
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $594call_method.4 = call $590load_method.2($vpackets_nu.396, func=$590load_method.2, args=[Var($vpackets_nu.396, base.py:195)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $604call_method.8 = call $600load_method.6($vpackets_energy.397, func=$600load_method.6, args=[Var($vpackets_energy.397, base.py:196)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $614load_attr.12 = getattr(value=$vpacket_collection.392, attr=last_interaction_in_nu)
DEBUG:numba.core.ssa:on stmt: $620load_attr.15 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.274 = call $622build_slice.16(zero.273, $620load_attr.15, func=$622build_slice.16, args=(Var(zero.273, base.py:216), Var($620load_attr.15, base.py:216)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $624binary_subscr.18 = getitem(value=$614load_attr.12, index=replacement_slice.274)
DEBUG:numba.core.ssa:on stmt: $626call_method.19 = call $610load_method.10($624binary_subscr.18, func=$610load_method.10, args=[Var($624binary_subscr.18, base.py:216)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $636load_attr.23 = getattr(value=$vpacket_collection.392, attr=last_interaction_type)
DEBUG:numba.core.ssa:on stmt: $642load_attr.26 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.283 = call $644build_slice.27(zero.282, $642load_attr.26, func=$644build_slice.27, args=(Var(zero.282, base.py:221), Var($642load_attr.26, base.py:221)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $646binary_subscr.29 = getitem(value=$636load_attr.23, index=replacement_slice.283)
DEBUG:numba.core.ssa:on stmt: $648call_method.30 = call $632load_method.21($646binary_subscr.29, func=$632load_method.21, args=[Var($646binary_subscr.29, base.py:221)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $658load_attr.34 = getattr(value=$vpacket_collection.392, attr=last_interaction_in_id)
DEBUG:numba.core.ssa:on stmt: $664load_attr.37 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.292 = call $666build_slice.38(zero.291, $664load_attr.37, func=$666build_slice.38, args=(Var(zero.291, base.py:226), Var($664load_attr.37, base.py:226)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $668binary_subscr.40 = getitem(value=$658load_attr.34, index=replacement_slice.292)
DEBUG:numba.core.ssa:on stmt: $670call_method.41 = call $654load_method.32($668binary_subscr.40, func=$654load_method.32, args=[Var($668binary_subscr.40, base.py:226)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $680load_attr.45 = getattr(value=$vpacket_collection.392, attr=last_interaction_out_id)
DEBUG:numba.core.ssa:on stmt: $686load_attr.48 = getattr(value=$vpacket_collection.392, attr=idx)
DEBUG:numba.core.ssa:on stmt: replacement_slice.301 = call $688build_slice.49(zero.300, $686load_attr.48, func=$688build_slice.49, args=(Var(zero.300, base.py:231), Var($686load_attr.48, base.py:231)), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $690binary_subscr.51 = getitem(value=$680load_attr.45, index=replacement_slice.301)
DEBUG:numba.core.ssa:on stmt: $692call_method.52 = call $676load_method.43($690binary_subscr.51, func=$676load_method.43, args=[Var($690binary_subscr.51, base.py:231)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 633
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 227
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $seed.2.756 = getitem(value=packet__seeds, index=parfor__index_367)
DEBUG:numba.core.ssa:on stmt: seed.2 = $seed.2.756
DEBUG:numba.core.ssa:on stmt: $228load_attr.5 = getattr(value=$226load_global.4, attr=random)
DEBUG:numba.core.ssa:on stmt: $230load_method.6 = getattr(value=$228load_attr.5, attr=seed)
DEBUG:numba.core.ssa:on stmt: $234call_method.8 = call $230load_method.6($seed.2.756, func=$230load_method.6, args=[Var($seed.2.756, base.py:158)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: jump 239
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 461
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $508for_iter.2 = iternext(value=$506get_iter.4)
DEBUG:numba.core.ssa:on stmt: $508for_iter.3 = pair_first(value=$508for_iter.2)
DEBUG:numba.core.ssa:on stmt: $508for_iter.4 = pair_second(value=$508for_iter.2)
DEBUG:numba.core.ssa:on stmt: branch $508for_iter.4, 481, 601
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 633
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: jump 743
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 481
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: $510unpack_sequence.5 = exhaust_iter(value=$508for_iter.3, count=2)
DEBUG:numba.core.ssa:on stmt: $j.395 = static_getitem(value=$510unpack_sequence.5, index=0, index_var=None)
DEBUG:numba.core.ssa:on stmt: $idx.398 = static_getitem(value=$510unpack_sequence.5, index=1, index_var=None)
DEBUG:numba.core.ssa:on stmt: $520binary_subscr.8 = getitem(value=$vpackets_nu.396, index=$j.395)
DEBUG:numba.core.ssa:on stmt: $528compare_op.12 = $520binary_subscr.8 < $526binary_subscr.11
DEBUG:numba.core.ssa:on stmt: $530pred = call bool530($528compare_op.12, func=bool530, args=(Var($528compare_op.12, base.py:205),), kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: branch $530pred, 597, 553
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 743
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7f6e46456a50>
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=57)
           2	LOAD_FAST(arg=1, lineno=57)
           4	LOAD_FAST(arg=0, lineno=57)
           6	STORE_ATTR(arg=0, lineno=57)
           8	LOAD_FAST(arg=2, lineno=58)
          10	LOAD_FAST(arg=0, lineno=58)
          12	STORE_ATTR(arg=1, lineno=58)
          14	LOAD_FAST(arg=3, lineno=59)
          16	LOAD_FAST(arg=0, lineno=59)
          18	STORE_ATTR(arg=2, lineno=59)
          20	LOAD_FAST(arg=4, lineno=60)
          22	LOAD_FAST(arg=0, lineno=60)
          24	STORE_ATTR(arg=3, lineno=60)
          26	LOAD_CONST(arg=1, lineno=61)
          28	LOAD_FAST(arg=0, lineno=61)
          30	STORE_ATTR(arg=4, lineno=61)
          32	LOAD_GLOBAL(arg=5, lineno=62)
          34	LOAD_ATTR(arg=6, lineno=62)
          36	LOAD_FAST(arg=0, lineno=62)
          38	STORE_ATTR(arg=7, lineno=62)
          40	LOAD_FAST(arg=5, lineno=63)
          42	LOAD_FAST(arg=0, lineno=63)
          44	STORE_ATTR(arg=8, lineno=63)
          46	LOAD_FAST(arg=6, lineno=64)
          48	LOAD_FAST(arg=0, lineno=64)
          50	STORE_ATTR(arg=9, lineno=64)
          52	LOAD_FAST(arg=7, lineno=65)
          54	LOAD_FAST(arg=0, lineno=65)
          56	STORE_ATTR(arg=10, lineno=65)
          58	LOAD_CONST(arg=2, lineno=66)
          60	LOAD_FAST(arg=0, lineno=66)
          62	STORE_ATTR(arg=11, lineno=66)
          64	LOAD_CONST(arg=3, lineno=67)
          66	LOAD_FAST(arg=0, lineno=67)
          68	STORE_ATTR(arg=12, lineno=67)
          70	LOAD_CONST(arg=2, lineno=68)
          72	LOAD_FAST(arg=0, lineno=68)
          74	STORE_ATTR(arg=13, lineno=68)
          76	LOAD_CONST(arg=2, lineno=69)
          78	LOAD_FAST(arg=0, lineno=69)
          80	STORE_ATTR(arg=14, lineno=69)
          82	LOAD_CONST(arg=0, lineno=69)
          84	RETURN_VALUE(arg=None, lineno=69)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=57)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=57)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=57)
DEBUG:numba.core.byteflow:stack ['$r2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_ATTR(arg=0, lineno=57)
DEBUG:numba.core.byteflow:stack ['$r2.0', '$self4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=58)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=58)
DEBUG:numba.core.byteflow:stack ['$mu8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=STORE_ATTR(arg=1, lineno=58)
DEBUG:numba.core.byteflow:stack ['$mu8.2', '$self10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=59)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=59)
DEBUG:numba.core.byteflow:stack ['$nu14.4']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_ATTR(arg=2, lineno=59)
DEBUG:numba.core.byteflow:stack ['$nu14.4', '$self16.5']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=4, lineno=60)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=60)
DEBUG:numba.core.byteflow:stack ['$energy20.6']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=STORE_ATTR(arg=3, lineno=60)
DEBUG:numba.core.byteflow:stack ['$energy20.6', '$self22.7']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=61)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=61)
DEBUG:numba.core.byteflow:stack ['$const26.8']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_ATTR(arg=4, lineno=61)
DEBUG:numba.core.byteflow:stack ['$const26.8', '$self28.9']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_GLOBAL(arg=5, lineno=62)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_ATTR(arg=6, lineno=62)
DEBUG:numba.core.byteflow:stack ['$32load_global.10']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=62)
DEBUG:numba.core.byteflow:stack ['$34load_attr.11']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_ATTR(arg=7, lineno=62)
DEBUG:numba.core.byteflow:stack ['$34load_attr.11', '$self36.12']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=5, lineno=63)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=63)
DEBUG:numba.core.byteflow:stack ['$seed40.13']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_ATTR(arg=8, lineno=63)
DEBUG:numba.core.byteflow:stack ['$seed40.13', '$self42.14']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=6, lineno=64)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=64)
DEBUG:numba.core.byteflow:stack ['$index46.15']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=STORE_ATTR(arg=9, lineno=64)
DEBUG:numba.core.byteflow:stack ['$index46.15', '$self48.16']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=7, lineno=65)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=65)
DEBUG:numba.core.byteflow:stack ['$is_close_line52.17']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=STORE_ATTR(arg=10, lineno=65)
DEBUG:numba.core.byteflow:stack ['$is_close_line52.17', '$self54.18']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_CONST(arg=2, lineno=66)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=0, lineno=66)
DEBUG:numba.core.byteflow:stack ['$const58.19']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_ATTR(arg=11, lineno=66)
DEBUG:numba.core.byteflow:stack ['$const58.19', '$self60.20']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=3, lineno=67)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=67)
DEBUG:numba.core.byteflow:stack ['$const64.21']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=STORE_ATTR(arg=12, lineno=67)
DEBUG:numba.core.byteflow:stack ['$const64.21', '$self66.22']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_CONST(arg=2, lineno=68)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=0, lineno=68)
DEBUG:numba.core.byteflow:stack ['$const70.23']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_ATTR(arg=13, lineno=68)
DEBUG:numba.core.byteflow:stack ['$const70.23', '$self72.24']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_CONST(arg=2, lineno=69)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=0, lineno=69)
DEBUG:numba.core.byteflow:stack ['$const76.25']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=STORE_ATTR(arg=14, lineno=69)
DEBUG:numba.core.byteflow:stack ['$const76.25', '$self78.26']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_CONST(arg=0, lineno=69)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RETURN_VALUE(arg=None, lineno=69)
DEBUG:numba.core.byteflow:stack ['$const82.27']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$r2.0'}), (4, {'res': '$self4.1'}), (6, {'target': '$self4.1', 'value': '$r2.0'}), (8, {'res': '$mu8.2'}), (10, {'res': '$self10.3'}), (12, {'target': '$self10.3', 'value': '$mu8.2'}), (14, {'res': '$nu14.4'}), (16, {'res': '$self16.5'}), (18, {'target': '$self16.5', 'value': '$nu14.4'}), (20, {'res': '$energy20.6'}), (22, {'res': '$self22.7'}), (24, {'target': '$self22.7', 'value': '$energy20.6'}), (26, {'res': '$const26.8'}), (28, {'res': '$self28.9'}), (30, {'target': '$self28.9', 'value': '$const26.8'}), (32, {'res': '$32load_global.10'}), (34, {'item': '$32load_global.10', 'res': '$34load_attr.11'}), (36, {'res': '$self36.12'}), (38, {'target': '$self36.12', 'value': '$34load_attr.11'}), (40, {'res': '$seed40.13'}), (42, {'res': '$self42.14'}), (44, {'target': '$self42.14', 'value': '$seed40.13'}), (46, {'res': '$index46.15'}), (48, {'res': '$self48.16'}), (50, {'target': '$self48.16', 'value': '$index46.15'}), (52, {'res': '$is_close_line52.17'}), (54, {'res': '$self54.18'}), (56, {'target': '$self54.18', 'value': '$is_close_line52.17'}), (58, {'res': '$const58.19'}), (60, {'res': '$self60.20'}), (62, {'target': '$self60.20', 'value': '$const58.19'}), (64, {'res': '$const64.21'}), (66, {'res': '$self66.22'}), (68, {'target': '$self66.22', 'value': '$const64.21'}), (70, {'res': '$const70.23'}), (72, {'res': '$self72.24'}), (74, {'target': '$self72.24', 'value': '$const70.23'}), (76, {'res': '$const76.25'}), (78, {'res': '$self78.26'}), (80, {'target': '$self78.26', 'value': '$const76.25'}), (82, {'res': '$const82.27'}), (84, {'retval': '$const82.27', 'castval': '$84return_value.28'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    self = arg(0, name=self)                 ['self']
    r = arg(1, name=r)                       ['r']
    mu = arg(2, name=mu)                     ['mu']
    nu = arg(3, name=nu)                     ['nu']
    energy = arg(4, name=energy)             ['energy']
    seed = arg(5, name=seed)                 ['seed']
    index = arg(6, name=index)               ['index']
    is_close_line = arg(7, name=is_close_line) ['is_close_line']
    (self).r = r                             ['r', 'self']
    (self).mu = mu                           ['mu', 'self']
    (self).nu = nu                           ['nu', 'self']
    (self).energy = energy                   ['energy', 'self']
    $const26.8 = const(int, 0)               ['$const26.8']
    (self).current_shell_id = $const26.8     ['$const26.8', 'self']
    $32load_global.10 = global(PacketStatus: <enum 'PacketStatus'>) ['$32load_global.10']
    $34load_attr.11 = getattr(value=$32load_global.10, attr=IN_PROCESS) ['$32load_global.10', '$34load_attr.11']
    (self).status = $34load_attr.11          ['$34load_attr.11', 'self']
    (self).seed = seed                       ['seed', 'self']
    (self).index = index                     ['index', 'self']
    (self).is_close_line = is_close_line     ['is_close_line', 'self']
    $const58.19 = const(int, -1)             ['$const58.19']
    (self).last_interaction_type = $const58.19 ['$const58.19', 'self']
    $const64.21 = const(float, 0.0)          ['$const64.21']
    (self).last_interaction_in_nu = $const64.21 ['$const64.21', 'self']
    $const70.23 = const(int, -1)             ['$const70.23']
    (self).last_line_interaction_in_id = $const70.23 ['$const70.23', 'self']
    $const76.25 = const(int, -1)             ['$const76.25']
    (self).last_line_interaction_out_id = $const76.25 ['$const76.25', 'self']
    $const82.27 = const(NoneType, None)      ['$const82.27']
    $84return_value.28 = cast(value=$const82.27) ['$84return_value.28', '$const82.27']
    return $84return_value.28                ['$84return_value.28']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e4667f190>
DEBUG:numba.core.ssa:on stmt: self = arg(0, name=self)
DEBUG:numba.core.ssa:on stmt: r = arg(1, name=r)
DEBUG:numba.core.ssa:on stmt: mu = arg(2, name=mu)
DEBUG:numba.core.ssa:on stmt: nu = arg(3, name=nu)
DEBUG:numba.core.ssa:on stmt: energy = arg(4, name=energy)
DEBUG:numba.core.ssa:on stmt: seed = arg(5, name=seed)
DEBUG:numba.core.ssa:on stmt: index = arg(6, name=index)
DEBUG:numba.core.ssa:on stmt: is_close_line = arg(7, name=is_close_line)
DEBUG:numba.core.ssa:on stmt: (self).r = r
DEBUG:numba.core.ssa:on stmt: (self).mu = mu
DEBUG:numba.core.ssa:on stmt: (self).nu = nu
DEBUG:numba.core.ssa:on stmt: (self).energy = energy
DEBUG:numba.core.ssa:on stmt: $const26.8 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: (self).current_shell_id = $const26.8
DEBUG:numba.core.ssa:on stmt: $32load_global.10 = global(PacketStatus: <enum 'PacketStatus'>)
DEBUG:numba.core.ssa:on stmt: $34load_attr.11 = getattr(value=$32load_global.10, attr=IN_PROCESS)
DEBUG:numba.core.ssa:on stmt: (self).status = $34load_attr.11
DEBUG:numba.core.ssa:on stmt: (self).seed = seed
DEBUG:numba.core.ssa:on stmt: (self).index = index
DEBUG:numba.core.ssa:on stmt: (self).is_close_line = is_close_line
DEBUG:numba.core.ssa:on stmt: $const58.19 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: (self).last_interaction_type = $const58.19
DEBUG:numba.core.ssa:on stmt: $const64.21 = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: (self).last_interaction_in_nu = $const64.21
DEBUG:numba.core.ssa:on stmt: $const70.23 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: (self).last_line_interaction_in_id = $const70.23
DEBUG:numba.core.ssa:on stmt: $const76.25 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: (self).last_line_interaction_out_id = $const76.25
DEBUG:numba.core.ssa:on stmt: $const82.27 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $84return_value.28 = cast(value=$const82.27)
DEBUG:numba.core.ssa:on stmt: return $84return_value.28
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$32load_global.10': [<numba.core.ir.Assign object at 0x7f6e46685650>],
             '$34load_attr.11': [<numba.core.ir.Assign object at 0x7f6e46685510>],
             '$84return_value.28': [<numba.core.ir.Assign object at 0x7f6e465f7b50>],
             '$const26.8': [<numba.core.ir.Assign object at 0x7f6e46685fd0>],
             '$const58.19': [<numba.core.ir.Assign object at 0x7f6e465f7f90>],
             '$const64.21': [<numba.core.ir.Assign object at 0x7f6e465f7750>],
             '$const70.23': [<numba.core.ir.Assign object at 0x7f6e465f7890>],
             '$const76.25': [<numba.core.ir.Assign object at 0x7f6e465f7510>],
             '$const82.27': [<numba.core.ir.Assign object at 0x7f6e465f7310>],
             'energy': [<numba.core.ir.Assign object at 0x7f6e46392b10>],
             'index': [<numba.core.ir.Assign object at 0x7f6e46392f90>],
             'is_close_line': [<numba.core.ir.Assign object at 0x7f6e46392890>],
             'mu': [<numba.core.ir.Assign object at 0x7f6e463929d0>],
             'nu': [<numba.core.ir.Assign object at 0x7f6e46392210>],
             'r': [<numba.core.ir.Assign object at 0x7f6e46392050>],
             'seed': [<numba.core.ir.Assign object at 0x7f6e463921d0>],
             'self': [<numba.core.ir.Assign object at 0x7f6e46392350>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	SETUP_LOOP(arg=40, lineno=2)
           4	LOAD_GLOBAL(arg=0, lineno=2)
           6	LOAD_FAST(arg=0, lineno=2)
           8	LOAD_CONST(arg=1, lineno=2)
          10	BINARY_SUBSCR(arg=None, lineno=2)
          12	LOAD_FAST(arg=0, lineno=2)
          14	LOAD_CONST(arg=2, lineno=2)
          16	BINARY_SUBSCR(arg=None, lineno=2)
          18	LOAD_GLOBAL(arg=1, lineno=2)
          20	LOAD_METHOD(arg=2, lineno=2)
          22	LOAD_CONST(arg=2, lineno=2)
          24	CALL_METHOD(arg=1, lineno=2)
          26	BINARY_ADD(arg=None, lineno=2)
          28	CALL_FUNCTION(arg=2, lineno=2)
          30	GET_ITER(arg=None, lineno=2)
>         32	FOR_ITER(arg=8, lineno=2)
          34	STORE_FAST(arg=3, lineno=2)
          36	LOAD_CONST(arg=1, lineno=3)
          38	STORE_FAST(arg=4, lineno=3)
          40	JUMP_ABSOLUTE(arg=32, lineno=3)
>         42	POP_BLOCK(arg=None, lineno=3)
>         44	LOAD_CONST(arg=0, lineno=4)
          46	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=2, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=2 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=SETUP_LOOP(arg=40, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1', '$const8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4', '$const14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$18load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8', '$const22.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$24call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$26binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$28call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.13',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=8, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_BLOCK(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=44 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=3, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=4, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$const36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=JUMP_ABSOLUTE(arg=32, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=2 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=2 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.13', State(pc_initial=2 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=2 nstack_initial=0): {'$phi32.0': '$30get_iter.13'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={2: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=2 nstack_initial=0):
AdaptBlockInfo(insts=((4, {'res': '$4load_global.0'}), (6, {'res': '$sched6.1'}), (8, {'res': '$const8.2'}), (10, {'index': '$const8.2', 'target': '$sched6.1', 'res': '$10binary_subscr.3'}), (12, {'res': '$sched12.4'}), (14, {'res': '$const14.5'}), (16, {'index': '$const14.5', 'target': '$sched12.4', 'res': '$16binary_subscr.6'}), (18, {'res': '$18load_global.7'}), (20, {'item': '$18load_global.7', 'res': '$20load_method.8'}), (22, {'res': '$const22.9'}), (24, {'func': '$20load_method.8', 'args': ['$const22.9'], 'res': '$24call_method.10'}), (26, {'lhs': '$16binary_subscr.6', 'rhs': '$24call_method.10', 'res': '$26binary_add.11'}), (28, {'func': '$4load_global.0', 'args': ['$10binary_subscr.3', '$26binary_add.11'], 'res': '$28call_function.12'}), (30, {'value': '$28call_function.12', 'res': '$30get_iter.13'})), outgoing_phis={'$phi32.0': '$30get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={42: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$const36.2'}), (38, {'value': '$const36.2'}), (40, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={44: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0'}), (46, {'retval': '$const44.0', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    _708binary__subscr_5 = arg(1, name=_708binary__subscr_5) ['_708binary__subscr_5']
    _subarr_327 = arg(2, name=_subarr_327)   ['_subarr_327']
    jump 2                                   []
label 2:
    $4load_global.0 = global(range: <class 'range'>) ['$4load_global.0']
    $const8.2 = const(int, 0)                ['$const8.2']
    $10binary_subscr.3 = getitem(value=sched, index=$const8.2) ['$10binary_subscr.3', '$const8.2', 'sched']
    $const14.5 = const(int, 1)               ['$const14.5']
    $16binary_subscr.6 = getitem(value=sched, index=$const14.5) ['$16binary_subscr.6', '$const14.5', 'sched']
    $18load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$18load_global.7']
    $20load_method.8 = getattr(value=$18load_global.7, attr=uint8) ['$18load_global.7', '$20load_method.8']
    $const22.9 = const(int, 1)               ['$const22.9']
    $24call_method.10 = call $20load_method.8($const22.9, func=$20load_method.8, args=[Var($const22.9, <string>:2)], kws=(), vararg=None) ['$20load_method.8', '$24call_method.10', '$const22.9']
    $26binary_add.11 = $16binary_subscr.6 + $24call_method.10 ['$16binary_subscr.6', '$24call_method.10', '$26binary_add.11']
    $28call_function.12 = call $4load_global.0($10binary_subscr.3, $26binary_add.11, func=$4load_global.0, args=[Var($10binary_subscr.3, <string>:2), Var($26binary_add.11, <string>:2)], kws=(), vararg=None) ['$10binary_subscr.3', '$26binary_add.11', '$28call_function.12', '$4load_global.0']
    $30get_iter.13 = getiter(value=$28call_function.12) ['$28call_function.12', '$30get_iter.13']
    $phi32.0 = $30get_iter.13                ['$30get_iter.13', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 42             ['$32for_iter.3']
label 34:
    parfor__index_328 = $phi34.1             ['$phi34.1', 'parfor__index_328']
    $const36.2 = const(int, 0)               ['$const36.2']
    __sentinel__0 = $const36.2               ['$const36.2', '__sentinel__0']
    jump 32                                  []
label 42:
    jump 44                                  []
label 44:
    $const44.0 = const(NoneType, None)       ['$const44.0']
    $46return_value.1 = cast(value=$const44.0) ['$46return_value.1', '$const44.0']
    return $46return_value.1                 ['$46return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e428cfd50>
DEBUG:numba.core.ssa:on stmt: sched.1148 = arg(0, name=sched)
DEBUG:numba.core.ssa:on stmt: _708binary__subscr_5 = arg(1, name=_708binary__subscr_5)
DEBUG:numba.core.ssa:on stmt: _subarr_327 = arg(2, name=_subarr_327)
DEBUG:numba.core.ssa:on stmt: jump 2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 2
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e428cfd50>
DEBUG:numba.core.ssa:on stmt: $4load_global.0.1149 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const8.2.1150 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.3.1151 = getitem(value=sched.1148, index=$const8.2.1150)
DEBUG:numba.core.ssa:on stmt: $const14.5.1152 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $16binary_subscr.6.1153 = getitem(value=sched.1148, index=$const14.5.1152)
DEBUG:numba.core.ssa:on stmt: $18load_global.7.1154 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_method.8.1155 = getattr(value=$18load_global.7.1154, attr=uint8)
DEBUG:numba.core.ssa:on stmt: $const22.9.1156 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $24call_method.10.1157 = call $20load_method.8.1155($const22.9.1156, func=$20load_method.8.1155, args=[Var($const22.9.1156, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $26binary_add.11.1158 = $16binary_subscr.6.1153 + $24call_method.10.1157
DEBUG:numba.core.ssa:on stmt: $28call_function.12.1159 = call $4load_global.0.1149($10binary_subscr.3.1151, $26binary_add.11.1158, func=$4load_global.0.1149, args=[Var($10binary_subscr.3.1151, <string>:2), Var($26binary_add.11.1158, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.13.1160 = getiter(value=$28call_function.12.1159)
DEBUG:numba.core.ssa:on stmt: $phi32.0.1161 = $30get_iter.13.1160
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e428cfd50>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1.1162 = iternext(value=$phi32.0.1161)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2.1163 = pair_first(value=$32for_iter.1.1162)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3.1164 = pair_second(value=$32for_iter.1.1162)
DEBUG:numba.core.ssa:on stmt: $phi34.1.1165 = $32for_iter.2.1163
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3.1164, 34, 748
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e428cfd50>
DEBUG:numba.core.ssa:on stmt: parfor__index_328 = $phi34.1.1165
DEBUG:numba.core.ssa:on stmt: $const36.2.1166 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 748
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e428cfd50>
DEBUG:numba.core.ssa:on stmt: jump 749
DEBUG:numba.core.ssa:==== SSA block analysis pass on 749
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e428cfd50>
DEBUG:numba.core.ssa:on stmt: $const44.0.1167 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1.1168 = cast(value=$const44.0.1167)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1.1168
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e428cfd50>
DEBUG:numba.core.ssa:on stmt: $value_var.329 = getitem(value=_708binary__subscr_5, index=parfor__index_328)
DEBUG:numba.core.ssa:on stmt: _subarr_327[parfor__index_328] = $value_var.329
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e428cfd50>
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subscr.3.1151': [<numba.core.ir.Assign object at 0x7f6e428c6b10>],
             '$16binary_subscr.6.1153': [<numba.core.ir.Assign object at 0x7f6e428c6e10>],
             '$18load_global.7.1154': [<numba.core.ir.Assign object at 0x7f6e428c6f10>],
             '$20load_method.8.1155': [<numba.core.ir.Assign object at 0x7f6e428cc090>],
             '$24call_method.10.1157': [<numba.core.ir.Assign object at 0x7f6e428cc290>],
             '$26binary_add.11.1158': [<numba.core.ir.Assign object at 0x7f6e428cc390>],
             '$28call_function.12.1159': [<numba.core.ir.Assign object at 0x7f6e428cc4d0>],
             '$30get_iter.13.1160': [<numba.core.ir.Assign object at 0x7f6e428cc5d0>],
             '$32for_iter.1.1162': [<numba.core.ir.Assign object at 0x7f6e428cc7d0>],
             '$32for_iter.2.1163': [<numba.core.ir.Assign object at 0x7f6e428cc890>],
             '$32for_iter.3.1164': [<numba.core.ir.Assign object at 0x7f6e428cc950>],
             '$46return_value.1.1168': [<numba.core.ir.Assign object at 0x7f6e428cf190>],
             '$4load_global.0.1149': [<numba.core.ir.Assign object at 0x7f6e428c6810>],
             '$const14.5.1152': [<numba.core.ir.Assign object at 0x7f6e428c6d10>],
             '$const22.9.1156': [<numba.core.ir.Assign object at 0x7f6e428cc150>],
             '$const36.2.1166': [<numba.core.ir.Assign object at 0x7f6e428cccd0>],
             '$const44.0.1167': [<numba.core.ir.Assign object at 0x7f6e428cf050>],
             '$const8.2.1150': [<numba.core.ir.Assign object at 0x7f6e428c6a10>],
             '$phi32.0.1161': [<numba.core.ir.Assign object at 0x7f6e428c6bd0>],
             '$phi34.1.1165': [<numba.core.ir.Assign object at 0x7f6e428cc9d0>],
             '$value_var.329': [<numba.core.ir.Assign object at 0x7f6e45d22690>],
             '_708binary__subscr_5': [<numba.core.ir.Assign object at 0x7f6e428c6690>],
             '_subarr_327': [<numba.core.ir.Assign object at 0x7f6e428c6490>],
             'parfor__index_328': [<numba.core.ir.Assign object at 0x7f6e428ccbd0>],
             'sched.1148': [<numba.core.ir.Assign object at 0x7f6e428c6650>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2)
           2	SETUP_LOOP(arg=40, lineno=2)
           4	LOAD_GLOBAL(arg=0, lineno=2)
           6	LOAD_FAST(arg=0, lineno=2)
           8	LOAD_CONST(arg=1, lineno=2)
          10	BINARY_SUBSCR(arg=None, lineno=2)
          12	LOAD_FAST(arg=0, lineno=2)
          14	LOAD_CONST(arg=2, lineno=2)
          16	BINARY_SUBSCR(arg=None, lineno=2)
          18	LOAD_GLOBAL(arg=1, lineno=2)
          20	LOAD_METHOD(arg=2, lineno=2)
          22	LOAD_CONST(arg=2, lineno=2)
          24	CALL_METHOD(arg=1, lineno=2)
          26	BINARY_ADD(arg=None, lineno=2)
          28	CALL_FUNCTION(arg=2, lineno=2)
          30	GET_ITER(arg=None, lineno=2)
>         32	FOR_ITER(arg=8, lineno=2)
          34	STORE_FAST(arg=3, lineno=2)
          36	LOAD_CONST(arg=1, lineno=3)
          38	STORE_FAST(arg=4, lineno=3)
          40	JUMP_ABSOLUTE(arg=32, lineno=3)
>         42	POP_BLOCK(arg=None, lineno=3)
>         44	LOAD_CONST(arg=0, lineno=4)
          46	RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=2, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=2 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=SETUP_LOOP(arg=40, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$sched6.1', '$const8.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=BINARY_SUBSCR(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$sched12.4', '$const14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_METHOD(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$18load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_METHOD(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$20load_method.8', '$const22.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=BINARY_ADD(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$16binary_subscr.6', '$24call_method.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=2)
DEBUG:numba.core.byteflow:stack ['$4load_global.0', '$10binary_subscr.3', '$26binary_add.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=GET_ITER(arg=None, lineno=2)
DEBUG:numba.core.byteflow:stack ['$28call_function.12']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$30get_iter.13',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi32.0']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=FOR_ITER(arg=8, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi32.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=34, stack=('$phi32.0', '$32for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=34 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_BLOCK(arg=None, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=2), State(pc_initial=44 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=3, lineno=2)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$phi34.1']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=4, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0', '$const36.2']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=JUMP_ABSOLUTE(arg=32, lineno=3)
DEBUG:numba.core.byteflow:stack ['$phi34.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=('$phi34.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=2 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): {'$phi32.0'},
             State(pc_initial=34 nstack_initial=2): {'$phi34.1'},
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi32.0': State(pc_initial=2 nstack_initial=0),
 '$phi34.1': State(pc_initial=32 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=2))},
             '$phi34.0': {('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=1))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi32.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.0': {('$30get_iter.13',
                           State(pc_initial=2 nstack_initial=0))},
             '$phi34.1': {('$32for_iter.2',
                           State(pc_initial=32 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi32.0': {('$30get_iter.13', State(pc_initial=2 nstack_initial=0))},
 '$phi34.1': {('$32for_iter.2', State(pc_initial=32 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=2 nstack_initial=0): {'$phi32.0': '$30get_iter.13'},
             State(pc_initial=32 nstack_initial=1): {'$phi34.1': '$32for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={2: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=2 nstack_initial=0):
AdaptBlockInfo(insts=((4, {'res': '$4load_global.0'}), (6, {'res': '$sched6.1'}), (8, {'res': '$const8.2'}), (10, {'index': '$const8.2', 'target': '$sched6.1', 'res': '$10binary_subscr.3'}), (12, {'res': '$sched12.4'}), (14, {'res': '$const14.5'}), (16, {'index': '$const14.5', 'target': '$sched12.4', 'res': '$16binary_subscr.6'}), (18, {'res': '$18load_global.7'}), (20, {'item': '$18load_global.7', 'res': '$20load_method.8'}), (22, {'res': '$const22.9'}), (24, {'func': '$20load_method.8', 'args': ['$const22.9'], 'res': '$24call_method.10'}), (26, {'lhs': '$16binary_subscr.6', 'rhs': '$24call_method.10', 'res': '$26binary_add.11'}), (28, {'func': '$4load_global.0', 'args': ['$10binary_subscr.3', '$26binary_add.11'], 'res': '$28call_function.12'}), (30, {'value': '$28call_function.12', 'res': '$30get_iter.13'})), outgoing_phis={'$phi32.0': '$30get_iter.13'}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ('$30get_iter.13',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((32, {'iterator': '$phi32.0', 'pair': '$32for_iter.1', 'indval': '$32for_iter.2', 'pred': '$32for_iter.3'}),), outgoing_phis={'$phi34.1': '$32for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={42: (), 34: ('$phi32.0', '$32for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=2):
AdaptBlockInfo(insts=((34, {'value': '$phi34.1'}), (36, {'res': '$const36.2'}), (38, {'value': '$const36.2'}), (40, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={32: ('$phi34.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 44, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={44: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0'}), (46, {'retval': '$const44.0', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    sched = arg(0, name=sched)               ['sched']
    _730binary__subscr_17 = arg(1, name=_730binary__subscr_17) ['_730binary__subscr_17']
    _subarr_330 = arg(2, name=_subarr_330)   ['_subarr_330']
    jump 2                                   []
label 2:
    $4load_global.0 = global(range: <class 'range'>) ['$4load_global.0']
    $const8.2 = const(int, 0)                ['$const8.2']
    $10binary_subscr.3 = getitem(value=sched, index=$const8.2) ['$10binary_subscr.3', '$const8.2', 'sched']
    $const14.5 = const(int, 1)               ['$const14.5']
    $16binary_subscr.6 = getitem(value=sched, index=$const14.5) ['$16binary_subscr.6', '$const14.5', 'sched']
    $18load_global.7 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>) ['$18load_global.7']
    $20load_method.8 = getattr(value=$18load_global.7, attr=uint8) ['$18load_global.7', '$20load_method.8']
    $const22.9 = const(int, 1)               ['$const22.9']
    $24call_method.10 = call $20load_method.8($const22.9, func=$20load_method.8, args=[Var($const22.9, <string>:2)], kws=(), vararg=None) ['$20load_method.8', '$24call_method.10', '$const22.9']
    $26binary_add.11 = $16binary_subscr.6 + $24call_method.10 ['$16binary_subscr.6', '$24call_method.10', '$26binary_add.11']
    $28call_function.12 = call $4load_global.0($10binary_subscr.3, $26binary_add.11, func=$4load_global.0, args=[Var($10binary_subscr.3, <string>:2), Var($26binary_add.11, <string>:2)], kws=(), vararg=None) ['$10binary_subscr.3', '$26binary_add.11', '$28call_function.12', '$4load_global.0']
    $30get_iter.13 = getiter(value=$28call_function.12) ['$28call_function.12', '$30get_iter.13']
    $phi32.0 = $30get_iter.13                ['$30get_iter.13', '$phi32.0']
    jump 32                                  []
label 32:
    $32for_iter.1 = iternext(value=$phi32.0) ['$32for_iter.1', '$phi32.0']
    $32for_iter.2 = pair_first(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.2']
    $32for_iter.3 = pair_second(value=$32for_iter.1) ['$32for_iter.1', '$32for_iter.3']
    $phi34.1 = $32for_iter.2                 ['$32for_iter.2', '$phi34.1']
    branch $32for_iter.3, 34, 42             ['$32for_iter.3']
label 34:
    parfor__index_331 = $phi34.1             ['$phi34.1', 'parfor__index_331']
    $const36.2 = const(int, 0)               ['$const36.2']
    __sentinel__0 = $const36.2               ['$const36.2', '__sentinel__0']
    jump 32                                  []
label 42:
    jump 44                                  []
label 44:
    $const44.0 = const(NoneType, None)       ['$const44.0']
    $46return_value.1 = cast(value=$const44.0) ['$46return_value.1', '$const44.0']
    return $46return_value.1                 ['$46return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e427e0ad0>
DEBUG:numba.core.ssa:on stmt: sched.1182 = arg(0, name=sched)
DEBUG:numba.core.ssa:on stmt: _730binary__subscr_17 = arg(1, name=_730binary__subscr_17)
DEBUG:numba.core.ssa:on stmt: _subarr_330 = arg(2, name=_subarr_330)
DEBUG:numba.core.ssa:on stmt: jump 2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 2
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e427e0ad0>
DEBUG:numba.core.ssa:on stmt: $4load_global.0.1183 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $const8.2.1184 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.3.1185 = getitem(value=sched.1182, index=$const8.2.1184)
DEBUG:numba.core.ssa:on stmt: $const14.5.1186 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $16binary_subscr.6.1187 = getitem(value=sched.1182, index=$const14.5.1186)
DEBUG:numba.core.ssa:on stmt: $18load_global.7.1188 = global(np: <module 'numpy' from '/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $20load_method.8.1189 = getattr(value=$18load_global.7.1188, attr=uint8)
DEBUG:numba.core.ssa:on stmt: $const22.9.1190 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $24call_method.10.1191 = call $20load_method.8.1189($const22.9.1190, func=$20load_method.8.1189, args=[Var($const22.9.1190, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $26binary_add.11.1192 = $16binary_subscr.6.1187 + $24call_method.10.1191
DEBUG:numba.core.ssa:on stmt: $28call_function.12.1193 = call $4load_global.0.1183($10binary_subscr.3.1185, $26binary_add.11.1192, func=$4load_global.0.1183, args=[Var($10binary_subscr.3.1185, <string>:2), Var($26binary_add.11.1192, <string>:2)], kws=(), vararg=None)
DEBUG:numba.core.ssa:on stmt: $30get_iter.13.1194 = getiter(value=$28call_function.12.1193)
DEBUG:numba.core.ssa:on stmt: $phi32.0.1195 = $30get_iter.13.1194
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e427e0ad0>
DEBUG:numba.core.ssa:on stmt: $32for_iter.1.1196 = iternext(value=$phi32.0.1195)
DEBUG:numba.core.ssa:on stmt: $32for_iter.2.1197 = pair_first(value=$32for_iter.1.1196)
DEBUG:numba.core.ssa:on stmt: $32for_iter.3.1198 = pair_second(value=$32for_iter.1.1196)
DEBUG:numba.core.ssa:on stmt: $phi34.1.1199 = $32for_iter.2.1197
DEBUG:numba.core.ssa:on stmt: branch $32for_iter.3.1198, 34, 749
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e427e0ad0>
DEBUG:numba.core.ssa:on stmt: parfor__index_331 = $phi34.1.1199
DEBUG:numba.core.ssa:on stmt: $const36.2.1200 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 749
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e427e0ad0>
DEBUG:numba.core.ssa:on stmt: jump 750
DEBUG:numba.core.ssa:==== SSA block analysis pass on 750
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e427e0ad0>
DEBUG:numba.core.ssa:on stmt: $const44.0.1201 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.1.1202 = cast(value=$const44.0.1201)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1.1202
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e427e0ad0>
DEBUG:numba.core.ssa:on stmt: $value_var.332 = getitem(value=_730binary__subscr_17, index=parfor__index_331)
DEBUG:numba.core.ssa:on stmt: _subarr_330[parfor__index_331] = $value_var.332
DEBUG:numba.core.ssa:on stmt: jump 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7f6e427e0ad0>
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subscr.3.1185': [<numba.core.ir.Assign object at 0x7f6e4276d950>],
             '$16binary_subscr.6.1187': [<numba.core.ir.Assign object at 0x7f6e4276d610>],
             '$18load_global.7.1188': [<numba.core.ir.Assign object at 0x7f6e4276d390>],
             '$20load_method.8.1189': [<numba.core.ir.Assign object at 0x7f6e4276d550>],
             '$24call_method.10.1191': [<numba.core.ir.Assign object at 0x7f6e427a4210>],
             '$26binary_add.11.1192': [<numba.core.ir.Assign object at 0x7f6e42787fd0>],
             '$28call_function.12.1193': [<numba.core.ir.Assign object at 0x7f6e42787690>],
             '$30get_iter.13.1194': [<numba.core.ir.Assign object at 0x7f6e42787e10>],
             '$32for_iter.1.1196': [<numba.core.ir.Assign object at 0x7f6e42787610>],
             '$32for_iter.2.1197': [<numba.core.ir.Assign object at 0x7f6e427875d0>],
             '$32for_iter.3.1198': [<numba.core.ir.Assign object at 0x7f6e42787810>],
             '$46return_value.1.1202': [<numba.core.ir.Assign object at 0x7f6e42787310>],
             '$4load_global.0.1183': [<numba.core.ir.Assign object at 0x7f6e4276fa50>],
             '$const14.5.1186': [<numba.core.ir.Assign object at 0x7f6e4276d810>],
             '$const22.9.1190': [<numba.core.ir.Assign object at 0x7f6e4273e4d0>],
             '$const36.2.1200': [<numba.core.ir.Assign object at 0x7f6e42787710>],
             '$const44.0.1201': [<numba.core.ir.Assign object at 0x7f6e42787090>],
             '$const8.2.1184': [<numba.core.ir.Assign object at 0x7f6e4276db10>],
             '$phi32.0.1195': [<numba.core.ir.Assign object at 0x7f6e4276da90>],
             '$phi34.1.1199': [<numba.core.ir.Assign object at 0x7f6e42787890>],
             '$value_var.332': [<numba.core.ir.Assign object at 0x7f6e45d9c790>],
             '_730binary__subscr_17': [<numba.core.ir.Assign object at 0x7f6e4276fc50>],
             '_subarr_330': [<numba.core.ir.Assign object at 0x7f6e4276fd10>],
             'parfor__index_331': [<numba.core.ir.Assign object at 0x7f6e42787ad0>],
             'sched.1182': [<numba.core.ir.Assign object at 0x7f6e4276ff90>]})
DEBUG:numba.core.ssa:SSA violators set()
[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 9.21977e+42 erg / s Luminosity absorbed = 1.40534e+42 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	             t_rad    next_t_rad         w    next_w
	Shell                                               
	0      9926.501965  10500.798787  0.400392  0.433893
	5      9852.611678  10666.848625  0.211205  0.215347
	10     9779.813302  10374.866967  0.142695  0.117295
	15     9708.082813   9867.125385  0.104556  0.096324


[1;37mINFO[0m:tardis.simulation.base:t_inner 9933.952 K -- next t_inner 10647.965 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 2/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 1.33969e+43 erg / s Luminosity absorbed = 8.14553e+41 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      10500.798787  10666.854884  0.433893  0.477003
	5      10666.848625  10887.847865  0.215347  0.215804
	10     10374.866967  10769.946916  0.117295  0.140334
	15      9867.125385  10395.629238  0.096324  0.112724


[1;37mINFO[0m:tardis.simulation.base:t_inner 10647.965 K -- next t_inner 9468.247 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 3/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 7.89594e+42 erg / s Luminosity absorbed = 9.26159e+41 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      10666.854884  10263.925686  0.477003  0.400519
	5      10887.847865  10528.983797  0.215804  0.180280
	10     10769.946916   9785.190562  0.140334  0.129644
	15     10395.629238   9513.898076  0.112724  0.096851


[1;37mINFO[0m:tardis.simulation.base:t_inner 9468.247 K -- next t_inner 10966.610 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 4/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 1.08978e+43 erg / s Luminosity absorbed = 4.89791e+42 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      10263.925686  11018.884782  0.400519  0.393458
	5      10528.983797  11446.171047  0.180280  0.130026
	10      9785.190562  11631.101470  0.129644  0.081390
	15      9513.898076  10754.904853  0.096851  0.078005


[1;37mINFO[0m:tardis.simulation.base:t_inner 10966.610 K -- next t_inner 10812.033 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 5/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 1.35598e+43 erg / s Luminosity absorbed = 1.49977e+42 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      11018.884782  11396.209601  0.393458  0.432683
	5      11446.171047  11466.016710  0.130026  0.166216
	10     11631.101470  11148.086682  0.081390  0.121388
	15     10754.904853  11408.285203  0.078005  0.078985


[1;37mINFO[0m:tardis.simulation.base:t_inner 10812.033 K -- next t_inner 9556.217 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 6/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 8.48427e+42 erg / s Luminosity absorbed = 7.90614e+41 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      11396.209601  10384.612414  0.432683  0.256514
	5      11466.016710  10676.513618  0.166216  0.126339
	10     11148.086682  10666.514261  0.121388  0.084495
	15     11408.285203  10428.788224  0.078985  0.066836


[1;37mINFO[0m:tardis.simulation.base:t_inner 9556.217 K -- next t_inner 10677.839 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 7/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 1.24080e+43 erg / s Luminosity absorbed = 1.43856e+42 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      10384.612414  11363.260109  0.256514  0.391984
	5      10676.513618  11586.190031  0.126339  0.160123
	10     10666.514261  11874.892988  0.084495  0.095650
	15     10428.788224  10199.623943  0.066836  0.363601


[1;37mINFO[0m:tardis.simulation.base:t_inner 10677.839 K -- next t_inner 9865.929 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 8/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 9.43634e+42 erg / s Luminosity absorbed = 9.26940e+41 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      11363.260109  10519.308192  0.391984  0.443705
	5      11586.190031  12029.082122  0.160123  0.109008
	10     11874.892988  11510.159788  0.095650  0.091551
	15     10199.623943  10533.973425  0.363601  0.079289


[1;37mINFO[0m:tardis.simulation.base:t_inner 9865.929 K -- next t_inner 10452.996 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 9/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 1.13482e+43 erg / s Luminosity absorbed = 1.75797e+42 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      10519.308192  10863.787560  0.443705  0.401298
	5      12029.082122  11081.035610  0.109008  0.167543
	10     11510.159788  10454.998390  0.091551  0.135311
	15     10533.973425  10335.950564  0.079289  0.101952


[1;37mINFO[0m:tardis.simulation.base:t_inner 10452.996 K -- next t_inner 10099.087 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 10/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 1.07615e+43 erg / s Luminosity absorbed = 6.31415e+41 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      10863.787560  10188.656661  0.401298  0.431717
	5      11081.035610  11098.110504  0.167543  0.201465
	10     10454.998390  11139.666213  0.135311  0.109767
	15     10335.950564  10346.330786  0.101952  0.098234


[1;37mINFO[0m:tardis.simulation.base:t_inner 10099.087 K -- next t_inner 10019.586 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 11/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 3.04884e+42 erg / s Luminosity absorbed = 7.32427e+42 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      10188.656661   9186.736457  0.431717  1.608503
	5      11098.110504   9978.939457  0.201465  1.246709
	10     11139.666213   9867.712943  0.109767  0.112645
	15     10346.330786  10387.115419  0.098234  0.034940


[1;37mINFO[0m:tardis.simulation.base:t_inner 10019.586 K -- next t_inner 18676.150 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 12/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 3.37343e+43 erg / s Luminosity absorbed = 9.50000e+43 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0       9186.736457  16276.484259  1.608503  1.304050
	5       9978.939457  11911.922963  1.246709  0.641407
	10      9867.712943  11960.499075  0.112645  0.270682
	15     10387.115419  12489.130388  0.034940  0.162349


[1;37mINFO[0m:tardis.simulation.base:t_inner 18676.150 K -- next t_inner 10465.403 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 13/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 1.13670e+43 erg / s Luminosity absorbed = 1.31572e+42 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      16276.484259  11389.527742  1.304050  0.324753
	5      11911.922963  11775.857859  0.641407  0.144263
	10     11960.499075  11753.055565  0.270682  0.095835
	15     12489.130388  11962.593430  0.162349  0.061696


[1;37mINFO[0m:tardis.simulation.base:t_inner 10465.403 K -- next t_inner 10102.727 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 14/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 1.01345e+43 erg / s Luminosity absorbed = 1.37012e+42 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      11389.527742  10851.665845  0.324753  0.360601
	5      11775.857859  10490.897759  0.144263  0.177527
	10     11753.055565  10045.412384  0.095835  0.133354
	15     11962.593430   9588.667039  0.061696  0.111832


[1;37mINFO[0m:tardis.simulation.base:t_inner 10102.727 K -- next t_inner 10328.599 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 15/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 1.18213e+43 erg / s Luminosity absorbed = 7.56420e+41 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      10851.665845  10755.986474  0.360601  0.397986
	5      10490.897759  10828.353521  0.177527  0.192711
	10     10045.412384  10671.488441  0.133354  0.125247
	15      9588.667039  10382.178242  0.111832  0.097951


[1;37mINFO[0m:tardis.simulation.base:t_inner 10328.599 K -- next t_inner 9777.176 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 16/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 8.75765e+42 erg / s Luminosity absorbed = 1.21194e+42 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      10755.986474  10217.448570  0.397986  0.715994
	5      10828.353521   9942.575669  0.192711  0.226009
	10     10671.488441   9643.117623  0.125247  0.152975
	15     10382.178242   9520.816207  0.097951  0.109228


[1;37mINFO[0m:tardis.simulation.base:t_inner 9777.176 K -- next t_inner 10752.866 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 17/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 1.32035e+42 erg / s Luminosity absorbed = 1.25304e+43 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      10217.448570  10610.015932  0.715994  0.697603
	5       9942.575669  10805.152704  0.226009  0.312110
	10      9643.117623  14042.003869  0.152975  0.005529
	15      9520.816207  12229.240533  0.109228  0.005833


[1;37mINFO[0m:tardis.simulation.base:t_inner 10752.866 K -- next t_inner 30456.838 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 18/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 5.98519e+44 erg / s Luminosity absorbed = 3.27652e+44 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad    next_t_rad         w    next_w
	Shell                                                
	0      10610.015932  24117.317859  0.697603  1.291157
	5      10805.152704  17580.823537  0.312110  1.884792
	10     14042.003869  18872.832770  0.005529  0.928280
	15     12229.240533  18140.764941  0.005833  0.711424


[1;37mINFO[0m:tardis.simulation.base:t_inner 30456.838 K -- next t_inner 4051.824 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 19/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 2.81819e+41 erg / s Luminosity absorbed = 1.54467e+39 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Plasma stratification:
	              t_rad   next_t_rad         w    next_w
	Shell                                               
	0      24117.317859  4427.172409  1.291157  0.295295
	5      17580.823537  4418.131460  1.884792  0.149656
	10     18872.832770  3953.173994  0.928280  0.819148
	15     18140.764941  4115.770390  0.711424  0.169885


[1;37mINFO[0m:tardis.simulation.base:t_inner 4051.824 K -- next t_inner 24841.038 K
[1;37mINFO[0m:tardis.simulation.base:Starting iteration 20/20
[1;33mWARNING[0m:py.warnings:/home/dhruvs/anaconda3/envs/tardis-2/lib/python3.7/site-packages/astropy/units/equivalencies.py:124: RuntimeWarning: divide by zero encountered in double_scalars
  (si.m, si.Hz, lambda x: _si.c.value / x),

[1;33mWARNING[0m:py.warnings:/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/base.py:84: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  np.array(virt_packet_nus)

[1;33mWARNING[0m:py.warnings:/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/base.py:87: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  np.array(virt_packet_energies)

[1;33mWARNING[0m:py.warnings:/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/base.py:90: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  np.array(virt_packet_last_interaction_in_nu)

[1;33mWARNING[0m:py.warnings:/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/base.py:93: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  np.array(virt_packet_last_interaction_type)

[1;33mWARNING[0m:py.warnings:/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/base.py:96: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  np.array(virt_packet_last_line_interaction_in_id)

[1;33mWARNING[0m:py.warnings:/home/dhruvs/Repositories/tardis/tardis/montecarlo/montecarlo_numba/base.py:99: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  np.array(virt_packet_last_line_interaction_out_id)

[1;37mINFO[0m:tardis.simulation.base:Luminosity emitted = 3.14578e+44 erg / s Luminosity absorbed = 9.61355e+43 erg / s Luminosity requested = 1.05928e+43 erg / s
[1;37mINFO[0m:tardis.simulation.base:Simulation finished in 20 iterations and took 91.25 s
