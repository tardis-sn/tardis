name: stardis-tests

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}
 
env:
  CACHE_NUMBER: 0  # increase to reset cache manually

jobs:
  build:
    strategy:
      matrix:
        label: [linux-64]
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/stardis

    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    if: ${{ !github.event.pull_request.draft }}
    steps:     
      - uses: actions/checkout@v4
        with:
          repository: tardis-sn/stardis

      - name: Download Lock File
        run:  wget -q https://raw.githubusercontent.com/tardis-sn/stardis/main/conda-${{ matrix.label }}.lock
        shell: bash

      - name: Generate Cache Key
        run: | 
          file_hash=$(cat conda-${{ matrix.label }}.lock | shasum -a 256 | cut -d' ' -f1)
          echo "file_hash=$file_hash" >> "${GITHUB_OUTPUT}"
        id: cache-environment-key
        shell: bash
        
      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: conda-${{ matrix.label }}.lock
          cache-environment-key: ${{ steps.cache-environment-key.outputs.file_hash }}
          cache-downloads-key: ${{ steps.cache-environment-key.outputs.file_hash }}
          environment-name: stardis
          cache-environment: true
          cache-downloads: true
        
      - name: Install tardis
        id: install-tardis
        run: |
          pip install git+https://github.com/tardis-sn/tardis.git@${{ github.sha }}
          
      - name: Install stardis
        id: install-stardis
        run: |
          pip install -e .[test]

      - name: Run stardis tests  
        run: pytest