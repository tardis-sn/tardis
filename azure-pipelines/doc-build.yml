# Specify which branches you want to trigger for continous deployment and/or applicable for pull requests.
# Otherwise it triggers all of them.
trigger:
- master

pr:
- master

# Variable we can reference later.
variables:
  system.debug: 'true'
  tardis.build.dir: $(Build.Repository.LocalPath)


jobs:

- job: 'Build_Docuemntation'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
# When setting up pipeline 1st time, first generate ssh key locally 
# and add the generated public key to github as a deploy key to forked_repo_home/settings/deploy_key.
# Use steps at: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/install-ssh-key?view=azure-devops#example-setup-using-github.

# Secure files stored in the azure server are encryped and again decrypted by the azure task that uses the file.
# Download a secure file to a temporary location on the build or release agent.
  - task: DownloadSecureFile@1
    inputs: 
      secureFile: 'id_azure_rsa'
# Make sure you've added the generated private key file (named 'id_azure_rsa' here) to library & authorize it for all pipelines.
# by using: https://docs.microsoft.com/en-us/azure/devops/pipelines/library/secure-files?view=azure-devops#how-do-i-authorize-a-secure-file-for-use-in-all-pipelines

# Install an SSH key prior to a build or release.
# This is needed to give azure access to deploy to github.
# hostName is the line that was added to ~/.ssh/known_hosts when you added the RSA host key. (Output of ssh-keyscan, should look something like [1]As3..=ssh-rsa ..).
# sshPublicKey should be a string value of what is inside your .pub file (i.e: rsa-key Axddd... username@server).
# sshKeySecureFile is the download secure file you generated.
  - task: InstallSSHKey@0
    inputs:
     hostName: $(gh_host)
     sshPublicKey: $(public_key)
     #sshPassphrase: $(Agent.TempDirectory)  # Optional - if it was left empty while generating the key.
     sshKeySecureFile: 'id_azure_rsa'
# You can mask hostName & sshPublicKey values under secret variables (i.e. gh_host & public_key here) in your azure pipeline page.
# Use steps at: https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#secret-variables

  - bash: |
          echo "##vso[task.prependpath]$CONDA/bin"        
    displayName: Add conda to PATH
  - bash: |
      sudo chown -R $USER $CONDA
      conda update -y conda    
    displayName: updating conda and activating
  - bash: |
        sh ci-helpers/install_tardis_env.sh     
    displayName: 'Install TARDIS env'
  - bash: |
        source activate tardis
        bash deploy_docs.sh
    displayName: 'TARDIS build and deployment to gh-pages'
# See github.com/Youssef15015/tardis for docuemntation of these shell files.

#  - task: PublishTestResults@2
#    condition: succeededOrFailed()
#    inputs:
#      testResultsFiles: '**/test-*.xml'
#      testRunTitle: 'Test results for TARDIS on $(vm_Image)'

#  - task: PublishCodeCoverageResults@1
#    inputs:
#      codeCoverageTool: Cobertura
#      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
#      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'