# For more information on how to use this pipeline please refer to:
# http://tardis-sn.github.io/tardis/development/continuous_integration.html

trigger: none
pr: none

schedules:
  - cron: '0 0 * * 0'
    displayName: 'Weekly release'
    branches:
      include:
        - master
    always: false

variables:
  system.debug: false

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: release
    displayName: 'TARDIS release'

    steps:
      - template: templates/default.yml
        parameters:
          fetchRefdata: true
          useMamba: true

      - bash: |
          cd $(tardis.dir)
          source activate tardis
          pytest tardis --tardis-refdata=$(refdata.dir)
        displayName: 'Run tests'

      - bash: |
          cd $(tardis.dir)
          source activate tardis
          echo "##vso[task.setvariable variable=version]$(python -c 'import tardis; print(tardis.__version__)')"
        displayName: 'Get TARDIS version'

      - task: GitHubRelease@1
        inputs:
          gitHubConnection: 'tardis-bot'
          repositoryName: '$(Build.Repository.Name)'
          action: 'create'
          target: '$(Build.SourceVersion)'
          tagSource: 'userSpecifiedTag'
          tag: 'v$(version)'
          title: 'TARDIS v$(version)'
          isPreRelease: true
          addChangeLog: true
          changeLogCompareToRelease: 'lastNonDraftRelease'
          changeLogType: 'commitBased'
        displayName: 'Create GitHub Release'
