# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  system.debug: "true"
  ref.data.home: "$(Agent.BuildDirectory)/tardis-refdata"
  ref.data.github.url: "https://github.com/tardis-sn/tardis-refdata.git"
  tardis.build.dir: $(Build.Repository.LocalPath)

jobs:
  - job: report
    pool:
      vmImage: "ubuntu-latest"

    steps:
      - bash: |
          echo "##vso[task.prependpath]$CONDA/bin"
          sudo chown -R $USER $CONDA
        displayName: "Add CONDA to path"

      - bash: |
          sh ci-helpers/install_tardis_env.sh
        displayName: "Install TARDIS env"

      - bash: |
          source activate tardis
          conda install bokeh -c conda-forge --no-update-deps --yes
        displayName: "Install Bokeh"

      - bash: |
          source activate tardis
          git clone https://github.com/tardis-sn/tardis-refdata.git $(ref.data.home)
        displayName: "Fetch ALL reference data"

      - bash: |
          source activate tardis
          python setup.py build_ext --inplace
        displayName: "Build & install TARDIS"

      - bash: |
          source activate tardis
          python setup.py test --args="--tardis-refdata=$(ref.data.home) --generate-reference"
        displayName: "Generate new reference data"

      - bash: |
          source activate tardis
          cd $(ref.data.home)
          git remote add upstream https://github.com/tardis-sn/tardis-refdata.git
          git fetch upstream
          git fetch upstream "+refs/pull/*/head:refs/remotes/upstream/pr/*"
          cd notebooks
          jupyter nbconvert ref_data_compare.ipynb --to html --execute --allow-errors --ExecutePreprocessor.timeout=6000
        displayName: "Generating report"

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: "$(ref.data.home)/notebooks/ref_data_compare.html"
          artifact: "report"
          publishLocation: "pipeline"

      - bash: |
          ls -lR /tmp
          echo
        condition: succeededOrFailed()
        displayName: "Check files in /tmp"

# Keep this line, is useful for testing without changing the notebook.
# sed -i "s/ref2_hash='upstream\/pr\/24'/ref1_hash='c998f44', ref2_hash='master'/g" ref_data_compare.ipynb