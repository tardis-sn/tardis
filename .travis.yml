os:
  - linux
language: python

python:
    - 2.7

virtualenv:
  system_site_packages: true

addons:
  apt:
    packages:
    - clang
    - gdb

sudo: true

env:
    global:
        - COMPILER=gcc
        - ASTROPY_USE_SYSTEM_PYTEST=1
        - SETUP_CMD='test'
        - TEST_MODE='normal'
        - REF_DATA_HOME=$HOME/tardis-refdata
        - REF_DATA_GITHUBURL='https://github.com/tardis-sn/tardis-refdata.git'
        - MINICONDA_URL='http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh'
        - SAVE_COVERAGE=false
        - GIT_LFS_SKIP_SMUDGE=1

# cache:
#   apt: true
#   directories:
#     - $HOME/miniconda
#     #- $REF_DATA_HOME


before_install:
    # We do this to make sure we get the dependencies so pip works below
    - source ci-helpers/install_miniconda.sh
    - source ci-helpers/install_tardis_env.sh
    - echo git clone $REF_DATA_GITHUBURL $REF_DATA_HOME
    #- if [[ $TEST_MODE == 'spectrum' ]]; then conda install -c conda-forge git-lfs=2.2.1 -y; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs install --skip-smudge; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git clone $REF_DATA_GITHUBURL $REF_DATA_HOME; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then cd $REF_DATA_HOME; fi
# Use the following to get the ref-data from the master;
    - if [[ $TEST_MODE == 'spectrum' ]]; then git fetch origin; fi
    # - if [[ $TEST_MODE == 'spectrum' ]]; then git checkout origin/master; fi
    # workaround to avoid refdata mixup introduced by PR 15
    - if [[ $TEST_MODE == 'spectrum' ]]; then git checkout ea89b9266d56de05fa84bc3d4bad62c09ce31486; fi
    # Use the following to get the ref-data from a specific pull request; 
    - if [[ $TEST_MODE == 'spectrum' ]]; then git fetch origin pull/17/head:update-ref; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git checkout update-ref; fi

    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs pull --include="atom_data/kurucz_cd23_chianti_H_He.h5" origin; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs pull --include="atom_data/chianti_He.h5" origin; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs pull --include="unit_test_data.h5" origin; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then echo MD5 `md5sum unit_test_data.h5`; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then cd $TRAVIS_BUILD_DIR; fi
    - if [[ $TEST_MODE == 'integration' ]]; then git lfs install --skip-smudge; fi
    - if [[ $TEST_MODE == 'integration' ]]; then git clone $REF_DATA_GITHUBURL $REF_DATA_HOME; fi
    - if [[ $TEST_MODE == 'integration' ]]; then cd $REF_DATA_HOME; fi
    - if [[ $TEST_MODE == 'integration' ]]; then git fetch origin pull/16/head:update-ref; fi
    - if [[ $TEST_MODE == 'integration' ]]; then git checkout update-ref; fi
    - if [[ $TEST_MODE == 'integration' ]]; then git lfs pull --include="atom_data/kurucz_cd23_chianti_H_He.h5" origin; fi
    - if [[ $TEST_MODE == 'integration' ]]; then git lfs pull --include="atom_data/kurucz_atom_chianti_many.h5" origin; fi
    - if [[ $TEST_MODE == 'integration' ]]; then git lfs pull --include="integration/reference_lesspackets/at.h5" origin; fi
    - if [[ $TEST_MODE == 'integration' ]]; then git lfs pull --include="integration/reference_lesspackets/paper1_downbranch.h5" origin; fi
    - if [[ $TEST_MODE == 'integration' ]]; then git lfs pull --include="integration/reference_lesspackets/paper1_macroatom.h5" origin; fi
    - if [[ $TEST_MODE == 'integration' ]]; then git lfs pull --include="integration/reference_lesspackets/paper1_scatter.h5" origin; fi
    - if [[ $TEST_MODE == 'integration' ]]; then git lfs pull --include="integration/reference_lesspackets/w7.h5" origin; fi
    - if [[ $TEST_MODE == 'integration' ]]; then echo PWD $PWD; fi
    - if [[ $TEST_MODE == 'integration' ]]; then echo REF_DATA_HOME $REF_DATA_HOME; fi
    - if [[ $TEST_MODE == 'integration' ]]; then echo TRAVIS_BUILD_DIR $TRAVIS_BUILD_DIR; fi
    - if [[ $TEST_MODE == 'integration' ]]; then echo `find * `; fi
    - if [[ $TEST_MODE == 'integration' ]]; then cd $TRAVIS_BUILD_DIR; fi

#- source ci-helpers/fetch_reference_data.sh

install:
   - source ci-helpers/install_tardis_env.sh

script:
    - echo PWD=$PWD
    - echo CC=$COMPILER python setup.py $SETUP_CMD
    - echo `ls /home/travis/tardis-refdata/integration/integration_lesspackets_travis.yml`
    - CC=$COMPILER python setup.py $SETUP_CMD

after_success:
    - if [[ "$SAVE_COVERAGE" = true ]]; then codecov -t a876d307-9ed5-4f5d-a6c4-e58291ac4111; fi


after_failure:
    - cat /home/travis/.pip/pip.log

stages:
  - test
  - integration

jobs:
  include:
    - stage: test
      if: type = cron
      python: 2.7
      env:
        - COMPILER=gcc
        - SETUP_CMD='test --coverage --args="--tardis-refdata=$REF_DATA_HOME"'
        - TEST_MODE='spectrum'
        - SAVE_COVERAGE=true
    - stage: test
      if: type = cron
      python: 2.7
      env:
        - COMPILER=clang
        - SETUP_CMD='test --args="--tardis-refdata=$REF_DATA_HOME"'
        - TEST_MODE='spectrum'
    - stage: test
      if: type = cron
      os: osx
      language: generic
      env:
        - COMPILER=clang
        - SETUP_CMD='test --args="--tardis-refdata=$REF_DATA_HOME"'
        - TEST_MODE='spectrum'
        - MINICONDA_URL='http://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh'
    - stage: integration
#      if: type = cron
      python: 2.7
      env:
        - SETUP_CMD='test --args="--integration=$REF_DATA_HOME/integration/integration_lesspackets_travis.yml -m integration --less-packets"'
#        - SETUP_CMD='test --args="--integration-tests=/home/travis/tardis-refdata/integration/integration_lesspackets_travis.yml --less-packets"'
        - TEST_MODE='integration'
#      script:
#        - echo $TEST_MODE
#        - echo $COMPILER
#        - echo TRAVIS_EVENT_TYPE=$TRAVIS_EVENT_TYPE
