os:
  - linux

language: python

python:
    - 2.7
    - 3.5

cache:
  apt: true

sudo: false

env:
    global:
        - ATOM_DATA_URL='http://www.mpa-garching.mpg.de/~michi/tardis/data/kurucz_cd23_chianti_H_He.zip'
        - MINICONDA_URL='http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh'
    matrix:
        - TEST_MODE='normal';
        - TEST_MODE='spectrum'; CC='gcc'
        - TEST_MODE='spectrum'; CC='clang'


matrix:
    include:
        - os: osx
          language: generic
          env:
            - MINICONDA_URL='http://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh'
            - TEST_MODE='spectrum'; CC='clang'

addons:
  apt:
    packages:
    - clang




before_install:
    # We do this to make sure we get the dependencies so pip works below
    - export PYTHONIOENCODING=UTF8
    - wget $MINICONDA_URL -O miniconda.sh
    - chmod +x miniconda.sh
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH=$HOME/miniconda/bin:$PATH
    - hash -r
    - conda update --yes conda
    - if [[ $TEST_MODE == 'spectrum' ]]; then
      wget $ATOM_DATA_URL;
      unzip kurucz_cd23_chianti_H_He.zip;
      mv kurucz_cd23_chianti_H_He.h5 $HOME/;
      fi

install:
    - if [[ $TRAVIS_PYTHON_VERSION == '2.7' ]]; then
      ENV_FILE='./tardis_env27.yml';
      elif [[ $TRAVIS_PYTHON_VERSION == '3.5' ]]; then
      ENV_FILE='./tardis_env35.yml';
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      ENV_FILE='./tardis_env27.yml';
      else
      env;
      echo "TRAVIS_PYTHON_VERSION=$TRAVIS_PYTHON_VERSION is unknown. Please fix .travis.yml \nExiting now.";
      exit 1;
      fi
    - conda env create -f $ENV_FILE
    - source activate tardis

script:
    - echo $CC
    - python -V
    - if [[ $TEST_MODE == 'spectrum' ]]; then python setup.py test --args="--atomic-dataset=$HOME/kurucz_cd23_chianti_H_He.h5"; fi
    - if [[ $TEST_MODE == 'normal' ]]; then python setup.py test --coverage; fi
      #- echo CC=$COMPILER python setup.py $SETUP_CMD
      #- CC=$COMPILER python setup.py $SETUP_CMD

after_success:
    - if [[ $TEST_MODE == 'normal' ]]; then coveralls; fi

after_failure:
    - cat /home/travis/.pip/pip.log
