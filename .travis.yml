os:
  - linux
language: python

python:
    - 2.7

virtualenv:
  system_site_packages: true

cache:
  apt: true

sudo: true

env:
    global:
        - COMPILER=gcc
        - PANDAS_VERSION=0.16
        - ASTROPY_USE_SYSTEM_PYTEST=1
        - SETUP_CMD='test'
        - TEST_MODE='normal'
        - TARDIS_REF_DATA_URL='https://github.com/tardis-sn/tardis-refdata.git'
        - MINICONDA_URL='http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh'
        - SAVE_COVERAGE=false

matrix:
    include:
        - python: 2.7
          env:
            - COMPILER=gcc
            - SETUP_CMD='test --coverage --args="--tardis-refdata=$HOME/tardis-refdata/"'
            - TEST_MODE='spectrum'
            - SAVE_COVERAGE=true

        - python: 2.7
          env:
            - COMPILER=clang
            - SETUP_CMD='test --args="--tardis-refdata=$HOME/tardis-refdata/"'
            - TEST_MODE='spectrum'

#trouble with osx building due to segfault at cython (https://github.com/cython/cython/issues/2199)
        - os: osx
          language: generic
          env:
            - COMPILER=clang
            - SETUP_CMD='test --args="--tardis-refdata=$HOME/tardis-refdata/"'
            - TEST_MODE='spectrum'
            - MINICONDA_URL='http://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh'


        - python: 2.7
          env: SETUP_CMD='test'

addons:
  apt:
    packages:
    - clang
    - gdb




before_install:
    # We do this to make sure we get the dependencies so pip works below
    - export PYTHONIOENCODING=UTF8
    - wget $MINICONDA_URL -O miniconda.sh
    - chmod +x miniconda.sh
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH=$HOME/miniconda/bin:$PATH
    - hash -r
    - conda update --yes conda
    - if [[ $TEST_MODE == 'spectrum' ]]; then conda install -c conda-forge git-lfs=2.2.1 -y; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs install --skip-smudge; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git clone $TARDIS_REF_DATA_URL $HOME/tardis-refdata; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then cd $HOME/tardis-refdata; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git fetch origin pull/3/head:carsus-ref; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git checkout carsus-ref; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs pull --include="atom_data/kurucz_cd23_chianti_H_He.h5" origin; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs pull --include="atom_data/chianti_He.h5" origin; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs pull --include="plasma_reference/" origin; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs pull --include="unit_test_data.h5" origin; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then cd $TRAVIS_BUILD_DIR; fi


install:
   - cd $TRAVIS_BUILD_DIR
   - conda env create -f tardis_env27.yml
   - source activate tardis
   #trouble with building due to segfault at cython (https://github.com/cython/cython/issues/2199)
   #remove if we can get normal cython through conda
   - git clone https://github.com/cython/cython
   - cd cython
   - git checkout c485b1b77264c3c75d090a3c526de24966830d42
   - CFLAGS="$CFLAGS -D CYTHON_CLINE_IN_TRACEBACK=0" python setup.py install
   - cd ..

script:
    - echo CC=$COMPILER python setup.py $SETUP_CMD
    - CC=$COMPILER python setup.py $SETUP_CMD

after_success:
    - if [[ "$SAVE_COVERAGE" = true ]]; then coveralls; fi

after_failure:
    - cat /home/travis/.pip/pip.log
