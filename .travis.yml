os:
  - linux
language: python

python:
    - 2.7

virtualenv:
  system_site_packages: true

addons:
  apt:
    packages:
    - clang
    - gdb

sudo: true

env:
    global:
        - COMPILER=gcc
        - PANDAS_VERSION=0.16
        - ASTROPY_USE_SYSTEM_PYTEST=1
        - SETUP_CMD='test'
        - TEST_MODE='normal'
        - REF_DATA_HOME=$HOME/tardis-refdata
        - REF_DATA_GITHUBURL='https://github.com/tardis-sn/tardis-refdata.git'
        - MINICONDA_URL='http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh'
        - SAVE_COVERAGE=false
        - GIT_LFS_SKIP_SMUDGE=1

matrix:
    include:
        - python: 2.7
          env:
            - COMPILER=gcc
            - SETUP_CMD='test --coverage --args="--tardis-refdata=$REF_DATA_HOME"'
            - TEST_MODE='spectrum'
            - SAVE_COVERAGE=true

        - python: 2.7
          env:
            - COMPILER=clang
            - SETUP_CMD='test --args="--tardis-refdata=$REF_DATA_HOME"'
            - TEST_MODE='spectrum'

#trouble with osx building due to segfault at cython (https://github.com/cython/cython/issues/2199)
        - os: osx
          language: generic
          env:
            - COMPILER=clang
            - SETUP_CMD='test --args="--tardis-refdata=$REF_DATA_HOME"'
            - TEST_MODE='spectrum'
            - MINICONDA_URL='http://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh'



              #cache:
              #  apt: true
              #  directories:
              #    - $HOME/miniconda
              #    #- $REF_DATA_HOME


before_install:
    # We do this to make sure we get the dependencies so pip works below
    - source ci-helpers/install_miniconda.sh
    #- if [[ $TEST_MODE == 'spectrum' ]]; then conda install -c conda-forge git-lfs=2.2.1 -y; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs install --skip-smudge; fi
    - echo git clone $REF_DATA_GITHUBURL $REF_DATA_HOME
    - if [[ $TEST_MODE == 'spectrum' ]]; then git clone $REF_DATA_GITHUBURL $REF_DATA_HOME; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then cd $REF_DATA_HOME; fi
# Use the following to get the ref-data from the master;
    - if [[ $TEST_MODE == 'spectrum' ]]; then git fetch origin; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git checkout origin/master; fi
    # Use the following to get the ref-data from a specific pull request; 
    # - if [[ $TEST_MODE == 'spectrum' ]]; then git fetch origin pull/14/head:update-ref; fi
    # - if [[ $TEST_MODE == 'spectrum' ]]; then git checkout update-ref; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs pull --include="atom_data/kurucz_cd23_chianti_H_He.h5" origin; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs pull --include="atom_data/chianti_He.h5" origin; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then git lfs pull --include="unit_test_data.h5" origin; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then echo MD5 `md5sum unit_test_data.h5`; fi
    - if [[ $TEST_MODE == 'spectrum' ]]; then cd $TRAVIS_BUILD_DIR; fi

#- source ci-helpers/fetch_reference_data.sh


install:
   - source ci-helpers/install_tardis_env.sh

script:
    - echo CC=$COMPILER python setup.py $SETUP_CMD
    - CC=$COMPILER python setup.py $SETUP_CMD

after_success:
    - if [[ "$SAVE_COVERAGE" = true ]]; then codecov -t a876d307-9ed5-4f5d-a6c4-e58291ac4111; fi


after_failure:
    - cat /home/travis/.pip/pip.log


stages:
  - test
  - integration

jobs:
  include:
    - stage: test
      python: 2.7
      env:
        - COMPILER=gcc
        - SETUP_CMD='test --coverage --args="--tardis-refdata=$REF_DATA_HOME"'
        - TEST_MODE='spectrum'
        - SAVE_COVERAGE=true
      script:
        - echo COMPILER=$COMPILER
        - echo PANDAS_VERSION=$PANDAS_VERSION
        - echo ASTROPY_USE_SYSTEM_PYTEST=$ASTROPY_USE_SYSTEM_PYTEST
        - echo SETUP_CMD=$SETUP_CMD
        - echo TEST_MODE=$TEST_MODE
        - echo REF_DATA_HOME=$REF_DATA_HOME
        - echo REF_DATA_GITHUBURL=$REF_DATA_GITHUBURL
        - echo SAVE_COVERAGE=$SAVE_COVERAGE
        - echo MINICONDA_URL=$MINICONDA_URL
        - echo GIT_LFS_SKIP_SMUDGE=$GIT_LFS_SKIP_SMUDGE
    - stage: test
      python: 2.7
      env:
        - COMPILER=clang
        - SETUP_CMD='test --args="--tardis-refdata=$REF_DATA_HOME"'
        - TEST_MODE='spectrum'
      script:
        - echo COMPILER=$COMPILER
        - echo PANDAS_VERSION=$PANDAS_VERSION
        - echo ASTROPY_USE_SYSTEM_PYTEST=$ASTROPY_USE_SYSTEM_PYTEST
        - echo SETUP_CMD=$SETUP_CMD
        - echo TEST_MODE=$TEST_MODE
        - echo REF_DATA_HOME=$REF_DATA_HOME
        - echo REF_DATA_GITHUBURL=$REF_DATA_GITHUBURL
        - echo MINICONDA_URL=$MINICONDA_URL
        - echo GIT_LFS_SKIP_SMUDGE=$GIT_LFS_SKIP_SMUDGE
    - stage: test
      os: osx
      language: generic
      env:
        - COMPILER=clang
        - SETUP_CMD='test --args="--tardis-refdata=$REF_DATA_HOME"'
        - TEST_MODE='spectrum'
        - MINICONDA_URL='http://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh'
      script:
        - echo COMPILER=$COMPILER
        - echo PANDAS_VERSION=$PANDAS_VERSION
        - echo ASTROPY_USE_SYSTEM_PYTEST=$ASTROPY_USE_SYSTEM_PYTEST
        - echo SETUP_CMD=$SETUP_CMD
        - echo TEST_MODE=$TEST_MODE
        - echo REF_DATA_HOME=$REF_DATA_HOME
        - echo REF_DATA_GITHUBURL=$REF_DATA_GITHUBURL
        - echo MINICONDA_URL=$MINICONDA_URL
        - echo GIT_LFS_SKIP_SMUDGE=$GIT_LFS_SKIP_SMUDGE
    - stage: integration
      script:
        - echo $COMPILER
