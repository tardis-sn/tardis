FROM condaforge/miniforge3:latest

# Create arguments for the paths.
ARG CODE_PATH="/app/code"

# Install packages in Ubuntu.
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Mexico_City
RUN apt-get --yes update && apt-get --yes install nginx git-lfs

# Redirect the html path to our web page generated by ASV.
RUN rm --force --recursive /var/www/html; \
    ln --symbolic "${CODE_PATH}/.asv/html" /var/www

# Clone the GitHub repositories which contains data.
WORKDIR /app
RUN git clone https://github.com/tardis-sn/tardis-refdata.git
RUN git clone https://github.com/tardis-sn/tardis-regression-data.git
WORKDIR /app/tardis-refdata
RUN git lfs ls-files --size
RUN git lfs pull

# Create user and group.
# This user should be the same as the owner of the files in this directory (`tardis`).
ARG UID
ARG GID
ARG USER_NAME
ARG GROUP_NAME
RUN groupadd --gid "${GID}" --non-unique "${GROUP_NAME}"
RUN useradd --uid "${UID}" --non-unique --gid "${GID}" --create-home --shell /bin/bash "${USER_NAME}"

## Set up mamba.
USER "${UID}:${GID}"
ARG MAMBA_ENV_NAME="benchmark"
RUN mamba create --yes --name "${MAMBA_ENV_NAME}" python asv mamba
RUN mamba init
RUN echo "conda deactivate; mamba activate ${MAMBA_ENV_NAME}" >> "${HOME}/.bashrc";

# Create TARDIS environment in Conda with Mamba.
WORKDIR "${CODE_PATH}"
ARG CONDA_ENV_NAME="tardis"
COPY --chown="${UID}:${GID}" conda-linux-64.lock ./
RUN mamba create --yes --name "${CONDA_ENV_NAME}" --file conda-linux-64.lock

# Execute the Nginx web service.
EXPOSE 80/tcp
USER root
CMD ["-g", "daemon off;"]
ENTRYPOINT ["/usr/sbin/nginx"]
