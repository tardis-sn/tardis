# For more information on how to use this template please refer to:
# https://tardis-sn.github.io/tardis/contributing/development/continuous_integration.html

parameters:
  - name: useMamba
    type: boolean
    default: false

  - name: fetchRefdata
    type: boolean
    default: false

  - name: refdataRepo
    type: string
    default: azure
    values:
      - azure
      - github

  - name: fetchDepth
    type: number
    default: 0

  - name: tardisEnv
    type: boolean
    default: true

steps:
  - bash: echo "##vso[task.setvariable variable=shellopts]errexit"
    displayName: 'Force BASH exit on error'
    condition: eq(variables['Agent.OS'], 'Linux')

  - bash: |
      echo "##vso[task.setvariable variable=tardis.dir]$(Build.SourcesDirectory)/tardis"
      echo "##vso[task.setvariable variable=refdata.dir]$(Build.SourcesDirectory)/tardis-refdata"
    displayName: 'Set environment variables'

  - ${{ if eq(parameters.useMamba, false) }}:
    - bash: |
        echo "##vso[task.setvariable variable=package.manager]conda"
      displayName: 'Set package manager'

  - ${{ if eq(parameters.useMamba, true) }}:
    - bash: |
        echo "##vso[task.setvariable variable=package.manager]mamba"
      displayName: 'Set package manager'
 
  - checkout: self
    path: s/tardis
    fetchDepth: ${{ parameters.fetchDepth }}

  - ${{ if and(eq(parameters.fetchRefdata, true), eq(parameters.refdataRepo, 'azure')) }}:
      # Azure Repos requires token auth for public repositories containing LFS objects (bug).
      # Fetch reference data from Azure with a PAT until a fix arrives.
      - bash: |
          MY_PAT=$(refdata_token)
          B64_PAT=$(printf ":$MY_PAT" | base64)
          git -c http.extraHeader="Authorization: Basic ${B64_PAT}" clone https://tardis-sn@dev.azure.com/tardis-sn/TARDIS/_git/tardis-refdata $(refdata.dir)
          cd $(refdata.dir); git -c http.extraHeader="Authorization: Basic ${B64_PAT}" lfs fetch --all
        displayName: 'Fetch reference data repository'

  - ${{ if and(eq(parameters.fetchRefdata, true), eq(parameters.refdataRepo, 'github')) }}:
    - bash: |
        git clone https://github.com/tardis-sn/tardis-refdata.git $(refdata.dir)
        cd $(refdata.dir); git lfs fetch
      displayName: 'Fetch reference data (GitHub)'

  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: 'Add conda to PATH'

  - bash: sudo chown -R $USER $CONDA
    displayName: 'Take ownership of conda installation'
    condition: eq(variables['Agent.OS'], 'Darwin')

  - ${{ if eq(parameters.useMamba, true) }}:
    - bash: conda install mamba -c conda-forge -y
      displayName: 'Install Mamba'

  - ${{ if eq(parameters.tardisEnv, true) }}:
    - bash: |
        cd $(tardis.dir)
        $(package.manager) env create -f tardis_env3.yml
      displayName: 'Setup environment'

  - ${{ if eq(parameters.tardisEnv, true) }}:
    - bash: |
        cd $(tardis.dir)
        source activate tardis
        python setup.py install
      displayName: 'Install package'
